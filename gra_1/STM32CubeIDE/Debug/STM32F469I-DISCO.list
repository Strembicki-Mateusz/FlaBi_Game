
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001c3c4  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000036b4  0801c584  0801c584  0002c584  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000018  0801fc38  0801fc38  0002fc38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0801fc50  0801fc50  007be2e4  2**0
                  CONTENTS
  5 .ARM          00000008  0801fc50  0801fc50  0002fc50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0801fc58  0801fc58  007be2e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0801fc58  0801fc58  0002fc58  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  0801fc70  0801fc70  0002fc70  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  0801fc78  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000a590  20000140  0801fdb8  00030140  2**2
                  ALLOC
 11 ._user_heap_stack 00002000  2000a6d0  0801fdb8  0003a6d0  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  007be2e4  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 0077c3c0  90000000  90000000  00040000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 00001ee0  9077c3c0  9077c3c0  007bc3c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000044  9077e2a0  9077e2a0  007be2a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   0004f7c7  00000000  00000000  007be314  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   000af8a4  00000000  00000000  0080dadb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00015eb4  00000000  00000000  008bd37f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002b10  00000000  00000000  008d3238  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0012ad5c  00000000  00000000  008d5d48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 000049c0  00000000  00000000  00a00aa8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    00025a4b  00000000  00000000  00a05468  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  00038d46  00000000  00000000  00a2aeb3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000cf  00000000  00000000  00a63bf9  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00007f18  00000000  00000000  00a63cc8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0801c56c 	.word	0x0801c56c

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	0801c56c 	.word	0x0801c56c

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b974 	b.w	80005a0 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468e      	mov	lr, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d14d      	bne.n	800037a <__udivmoddi4+0xaa>
 80002de:	428a      	cmp	r2, r1
 80002e0:	4694      	mov	ip, r2
 80002e2:	d969      	bls.n	80003b8 <__udivmoddi4+0xe8>
 80002e4:	fab2 f282 	clz	r2, r2
 80002e8:	b152      	cbz	r2, 8000300 <__udivmoddi4+0x30>
 80002ea:	fa01 f302 	lsl.w	r3, r1, r2
 80002ee:	f1c2 0120 	rsb	r1, r2, #32
 80002f2:	fa20 f101 	lsr.w	r1, r0, r1
 80002f6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002fa:	ea41 0e03 	orr.w	lr, r1, r3
 80002fe:	4094      	lsls	r4, r2
 8000300:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000304:	0c21      	lsrs	r1, r4, #16
 8000306:	fbbe f6f8 	udiv	r6, lr, r8
 800030a:	fa1f f78c 	uxth.w	r7, ip
 800030e:	fb08 e316 	mls	r3, r8, r6, lr
 8000312:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000316:	fb06 f107 	mul.w	r1, r6, r7
 800031a:	4299      	cmp	r1, r3
 800031c:	d90a      	bls.n	8000334 <__udivmoddi4+0x64>
 800031e:	eb1c 0303 	adds.w	r3, ip, r3
 8000322:	f106 30ff 	add.w	r0, r6, #4294967295
 8000326:	f080 811f 	bcs.w	8000568 <__udivmoddi4+0x298>
 800032a:	4299      	cmp	r1, r3
 800032c:	f240 811c 	bls.w	8000568 <__udivmoddi4+0x298>
 8000330:	3e02      	subs	r6, #2
 8000332:	4463      	add	r3, ip
 8000334:	1a5b      	subs	r3, r3, r1
 8000336:	b2a4      	uxth	r4, r4
 8000338:	fbb3 f0f8 	udiv	r0, r3, r8
 800033c:	fb08 3310 	mls	r3, r8, r0, r3
 8000340:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000344:	fb00 f707 	mul.w	r7, r0, r7
 8000348:	42a7      	cmp	r7, r4
 800034a:	d90a      	bls.n	8000362 <__udivmoddi4+0x92>
 800034c:	eb1c 0404 	adds.w	r4, ip, r4
 8000350:	f100 33ff 	add.w	r3, r0, #4294967295
 8000354:	f080 810a 	bcs.w	800056c <__udivmoddi4+0x29c>
 8000358:	42a7      	cmp	r7, r4
 800035a:	f240 8107 	bls.w	800056c <__udivmoddi4+0x29c>
 800035e:	4464      	add	r4, ip
 8000360:	3802      	subs	r0, #2
 8000362:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000366:	1be4      	subs	r4, r4, r7
 8000368:	2600      	movs	r6, #0
 800036a:	b11d      	cbz	r5, 8000374 <__udivmoddi4+0xa4>
 800036c:	40d4      	lsrs	r4, r2
 800036e:	2300      	movs	r3, #0
 8000370:	e9c5 4300 	strd	r4, r3, [r5]
 8000374:	4631      	mov	r1, r6
 8000376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037a:	428b      	cmp	r3, r1
 800037c:	d909      	bls.n	8000392 <__udivmoddi4+0xc2>
 800037e:	2d00      	cmp	r5, #0
 8000380:	f000 80ef 	beq.w	8000562 <__udivmoddi4+0x292>
 8000384:	2600      	movs	r6, #0
 8000386:	e9c5 0100 	strd	r0, r1, [r5]
 800038a:	4630      	mov	r0, r6
 800038c:	4631      	mov	r1, r6
 800038e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000392:	fab3 f683 	clz	r6, r3
 8000396:	2e00      	cmp	r6, #0
 8000398:	d14a      	bne.n	8000430 <__udivmoddi4+0x160>
 800039a:	428b      	cmp	r3, r1
 800039c:	d302      	bcc.n	80003a4 <__udivmoddi4+0xd4>
 800039e:	4282      	cmp	r2, r0
 80003a0:	f200 80f9 	bhi.w	8000596 <__udivmoddi4+0x2c6>
 80003a4:	1a84      	subs	r4, r0, r2
 80003a6:	eb61 0303 	sbc.w	r3, r1, r3
 80003aa:	2001      	movs	r0, #1
 80003ac:	469e      	mov	lr, r3
 80003ae:	2d00      	cmp	r5, #0
 80003b0:	d0e0      	beq.n	8000374 <__udivmoddi4+0xa4>
 80003b2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003b6:	e7dd      	b.n	8000374 <__udivmoddi4+0xa4>
 80003b8:	b902      	cbnz	r2, 80003bc <__udivmoddi4+0xec>
 80003ba:	deff      	udf	#255	; 0xff
 80003bc:	fab2 f282 	clz	r2, r2
 80003c0:	2a00      	cmp	r2, #0
 80003c2:	f040 8092 	bne.w	80004ea <__udivmoddi4+0x21a>
 80003c6:	eba1 010c 	sub.w	r1, r1, ip
 80003ca:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ce:	fa1f fe8c 	uxth.w	lr, ip
 80003d2:	2601      	movs	r6, #1
 80003d4:	0c20      	lsrs	r0, r4, #16
 80003d6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003da:	fb07 1113 	mls	r1, r7, r3, r1
 80003de:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003e2:	fb0e f003 	mul.w	r0, lr, r3
 80003e6:	4288      	cmp	r0, r1
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x12c>
 80003ea:	eb1c 0101 	adds.w	r1, ip, r1
 80003ee:	f103 38ff 	add.w	r8, r3, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x12a>
 80003f4:	4288      	cmp	r0, r1
 80003f6:	f200 80cb 	bhi.w	8000590 <__udivmoddi4+0x2c0>
 80003fa:	4643      	mov	r3, r8
 80003fc:	1a09      	subs	r1, r1, r0
 80003fe:	b2a4      	uxth	r4, r4
 8000400:	fbb1 f0f7 	udiv	r0, r1, r7
 8000404:	fb07 1110 	mls	r1, r7, r0, r1
 8000408:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800040c:	fb0e fe00 	mul.w	lr, lr, r0
 8000410:	45a6      	cmp	lr, r4
 8000412:	d908      	bls.n	8000426 <__udivmoddi4+0x156>
 8000414:	eb1c 0404 	adds.w	r4, ip, r4
 8000418:	f100 31ff 	add.w	r1, r0, #4294967295
 800041c:	d202      	bcs.n	8000424 <__udivmoddi4+0x154>
 800041e:	45a6      	cmp	lr, r4
 8000420:	f200 80bb 	bhi.w	800059a <__udivmoddi4+0x2ca>
 8000424:	4608      	mov	r0, r1
 8000426:	eba4 040e 	sub.w	r4, r4, lr
 800042a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800042e:	e79c      	b.n	800036a <__udivmoddi4+0x9a>
 8000430:	f1c6 0720 	rsb	r7, r6, #32
 8000434:	40b3      	lsls	r3, r6
 8000436:	fa22 fc07 	lsr.w	ip, r2, r7
 800043a:	ea4c 0c03 	orr.w	ip, ip, r3
 800043e:	fa20 f407 	lsr.w	r4, r0, r7
 8000442:	fa01 f306 	lsl.w	r3, r1, r6
 8000446:	431c      	orrs	r4, r3
 8000448:	40f9      	lsrs	r1, r7
 800044a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800044e:	fa00 f306 	lsl.w	r3, r0, r6
 8000452:	fbb1 f8f9 	udiv	r8, r1, r9
 8000456:	0c20      	lsrs	r0, r4, #16
 8000458:	fa1f fe8c 	uxth.w	lr, ip
 800045c:	fb09 1118 	mls	r1, r9, r8, r1
 8000460:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000464:	fb08 f00e 	mul.w	r0, r8, lr
 8000468:	4288      	cmp	r0, r1
 800046a:	fa02 f206 	lsl.w	r2, r2, r6
 800046e:	d90b      	bls.n	8000488 <__udivmoddi4+0x1b8>
 8000470:	eb1c 0101 	adds.w	r1, ip, r1
 8000474:	f108 3aff 	add.w	sl, r8, #4294967295
 8000478:	f080 8088 	bcs.w	800058c <__udivmoddi4+0x2bc>
 800047c:	4288      	cmp	r0, r1
 800047e:	f240 8085 	bls.w	800058c <__udivmoddi4+0x2bc>
 8000482:	f1a8 0802 	sub.w	r8, r8, #2
 8000486:	4461      	add	r1, ip
 8000488:	1a09      	subs	r1, r1, r0
 800048a:	b2a4      	uxth	r4, r4
 800048c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000490:	fb09 1110 	mls	r1, r9, r0, r1
 8000494:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000498:	fb00 fe0e 	mul.w	lr, r0, lr
 800049c:	458e      	cmp	lr, r1
 800049e:	d908      	bls.n	80004b2 <__udivmoddi4+0x1e2>
 80004a0:	eb1c 0101 	adds.w	r1, ip, r1
 80004a4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004a8:	d26c      	bcs.n	8000584 <__udivmoddi4+0x2b4>
 80004aa:	458e      	cmp	lr, r1
 80004ac:	d96a      	bls.n	8000584 <__udivmoddi4+0x2b4>
 80004ae:	3802      	subs	r0, #2
 80004b0:	4461      	add	r1, ip
 80004b2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004b6:	fba0 9402 	umull	r9, r4, r0, r2
 80004ba:	eba1 010e 	sub.w	r1, r1, lr
 80004be:	42a1      	cmp	r1, r4
 80004c0:	46c8      	mov	r8, r9
 80004c2:	46a6      	mov	lr, r4
 80004c4:	d356      	bcc.n	8000574 <__udivmoddi4+0x2a4>
 80004c6:	d053      	beq.n	8000570 <__udivmoddi4+0x2a0>
 80004c8:	b15d      	cbz	r5, 80004e2 <__udivmoddi4+0x212>
 80004ca:	ebb3 0208 	subs.w	r2, r3, r8
 80004ce:	eb61 010e 	sbc.w	r1, r1, lr
 80004d2:	fa01 f707 	lsl.w	r7, r1, r7
 80004d6:	fa22 f306 	lsr.w	r3, r2, r6
 80004da:	40f1      	lsrs	r1, r6
 80004dc:	431f      	orrs	r7, r3
 80004de:	e9c5 7100 	strd	r7, r1, [r5]
 80004e2:	2600      	movs	r6, #0
 80004e4:	4631      	mov	r1, r6
 80004e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004ea:	f1c2 0320 	rsb	r3, r2, #32
 80004ee:	40d8      	lsrs	r0, r3
 80004f0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f4:	fa21 f303 	lsr.w	r3, r1, r3
 80004f8:	4091      	lsls	r1, r2
 80004fa:	4301      	orrs	r1, r0
 80004fc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000500:	fa1f fe8c 	uxth.w	lr, ip
 8000504:	fbb3 f0f7 	udiv	r0, r3, r7
 8000508:	fb07 3610 	mls	r6, r7, r0, r3
 800050c:	0c0b      	lsrs	r3, r1, #16
 800050e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000512:	fb00 f60e 	mul.w	r6, r0, lr
 8000516:	429e      	cmp	r6, r3
 8000518:	fa04 f402 	lsl.w	r4, r4, r2
 800051c:	d908      	bls.n	8000530 <__udivmoddi4+0x260>
 800051e:	eb1c 0303 	adds.w	r3, ip, r3
 8000522:	f100 38ff 	add.w	r8, r0, #4294967295
 8000526:	d22f      	bcs.n	8000588 <__udivmoddi4+0x2b8>
 8000528:	429e      	cmp	r6, r3
 800052a:	d92d      	bls.n	8000588 <__udivmoddi4+0x2b8>
 800052c:	3802      	subs	r0, #2
 800052e:	4463      	add	r3, ip
 8000530:	1b9b      	subs	r3, r3, r6
 8000532:	b289      	uxth	r1, r1
 8000534:	fbb3 f6f7 	udiv	r6, r3, r7
 8000538:	fb07 3316 	mls	r3, r7, r6, r3
 800053c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000540:	fb06 f30e 	mul.w	r3, r6, lr
 8000544:	428b      	cmp	r3, r1
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x28a>
 8000548:	eb1c 0101 	adds.w	r1, ip, r1
 800054c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000550:	d216      	bcs.n	8000580 <__udivmoddi4+0x2b0>
 8000552:	428b      	cmp	r3, r1
 8000554:	d914      	bls.n	8000580 <__udivmoddi4+0x2b0>
 8000556:	3e02      	subs	r6, #2
 8000558:	4461      	add	r1, ip
 800055a:	1ac9      	subs	r1, r1, r3
 800055c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000560:	e738      	b.n	80003d4 <__udivmoddi4+0x104>
 8000562:	462e      	mov	r6, r5
 8000564:	4628      	mov	r0, r5
 8000566:	e705      	b.n	8000374 <__udivmoddi4+0xa4>
 8000568:	4606      	mov	r6, r0
 800056a:	e6e3      	b.n	8000334 <__udivmoddi4+0x64>
 800056c:	4618      	mov	r0, r3
 800056e:	e6f8      	b.n	8000362 <__udivmoddi4+0x92>
 8000570:	454b      	cmp	r3, r9
 8000572:	d2a9      	bcs.n	80004c8 <__udivmoddi4+0x1f8>
 8000574:	ebb9 0802 	subs.w	r8, r9, r2
 8000578:	eb64 0e0c 	sbc.w	lr, r4, ip
 800057c:	3801      	subs	r0, #1
 800057e:	e7a3      	b.n	80004c8 <__udivmoddi4+0x1f8>
 8000580:	4646      	mov	r6, r8
 8000582:	e7ea      	b.n	800055a <__udivmoddi4+0x28a>
 8000584:	4620      	mov	r0, r4
 8000586:	e794      	b.n	80004b2 <__udivmoddi4+0x1e2>
 8000588:	4640      	mov	r0, r8
 800058a:	e7d1      	b.n	8000530 <__udivmoddi4+0x260>
 800058c:	46d0      	mov	r8, sl
 800058e:	e77b      	b.n	8000488 <__udivmoddi4+0x1b8>
 8000590:	3b02      	subs	r3, #2
 8000592:	4461      	add	r1, ip
 8000594:	e732      	b.n	80003fc <__udivmoddi4+0x12c>
 8000596:	4630      	mov	r0, r6
 8000598:	e709      	b.n	80003ae <__udivmoddi4+0xde>
 800059a:	4464      	add	r4, ip
 800059c:	3802      	subs	r0, #2
 800059e:	e742      	b.n	8000426 <__udivmoddi4+0x156>

080005a0 <__aeabi_idiv0>:
 80005a0:	4770      	bx	lr
 80005a2:	bf00      	nop

080005a4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 80005a4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005dc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80005a8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80005aa:	e003      	b.n	80005b4 <LoopCopyDataInit>

080005ac <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005ac:	4b0c      	ldr	r3, [pc, #48]	; (80005e0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005ae:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005b0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005b2:	3104      	adds	r1, #4

080005b4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005b4:	480b      	ldr	r0, [pc, #44]	; (80005e4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005b6:	4b0c      	ldr	r3, [pc, #48]	; (80005e8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005b8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005bc:	d3f6      	bcc.n	80005ac <CopyDataInit>
  ldr  r2, =_sbss
 80005be:	4a0b      	ldr	r2, [pc, #44]	; (80005ec <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005c0:	e002      	b.n	80005c8 <LoopFillZerobss>

080005c2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005c2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005c4:	f842 3b04 	str.w	r3, [r2], #4

080005c8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005c8:	4b09      	ldr	r3, [pc, #36]	; (80005f0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ca:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005cc:	d3f9      	bcc.n	80005c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005ce:	f003 fd8b 	bl	80040e8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005d2:	f01a ff65 	bl	801b4a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005d6:	f000 ff81 	bl	80014dc <main>
  bx  lr    
 80005da:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005dc:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005e0:	0801fc78 	.word	0x0801fc78
  ldr  r0, =_sdata
 80005e4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005e8:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 80005ec:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 80005f0:	2000a6d0 	.word	0x2000a6d0

080005f4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005f4:	e7fe      	b.n	80005f4 <ADC_IRQHandler>

080005f6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 80005f6:	f000 bdf3 	b.w	80011e0 <touchgfx_init>

080005fa <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 80005fa:	f000 be61 	b.w	80012c0 <touchgfx_taskEntry>

080005fe <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005fe:	2100      	movs	r1, #0
 8000600:	4608      	mov	r0, r1
 8000602:	f003 b8d9 	b.w	80037b8 <BSP_PB_Init>

08000606 <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 8000606:	2000      	movs	r0, #0
 8000608:	f003 b910 	b.w	800382c <BSP_PB_GetState>

0800060c <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 800060c:	6840      	ldr	r0, [r0, #4]
    }
 800060e:	4770      	bx	lr

08000610 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000610:	6041      	str	r1, [r0, #4]
    }
 8000612:	4770      	bx	lr

08000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000614:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8000618:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 800061c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000620:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000624:	f5a2 4250 	sub.w	r2, r2, #53248	; 0xd000
 8000628:	6813      	ldr	r3, [r2, #0]
 800062a:	f043 0301 	orr.w	r3, r3, #1
 800062e:	6013      	str	r3, [r2, #0]
}
 8000630:	4770      	bx	lr

08000632 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000632:	1a51      	subs	r1, r2, r1
 8000634:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000638:	fbb1 f0f3 	udiv	r0, r1, r3
 800063c:	4770      	bx	lr
	...

08000640 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000640:	4b01      	ldr	r3, [pc, #4]	; (8000648 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000642:	6858      	ldr	r0, [r3, #4]
}
 8000644:	4770      	bx	lr
 8000646:	bf00      	nop
 8000648:	e0001000 	.word	0xe0001000

0800064c <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 800064c:	4770      	bx	lr

0800064e <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 800064e:	b510      	push	{r4, lr}
 8000650:	210c      	movs	r1, #12
 8000652:	4604      	mov	r4, r0
 8000654:	f01a feac 	bl	801b3b0 <_ZdlPvj>
 8000658:	4620      	mov	r0, r4
 800065a:	bd10      	pop	{r4, pc}

0800065c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065c:	6803      	ldr	r3, [r0, #0]
{
 800065e:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000660:	691b      	ldr	r3, [r3, #16]
{
 8000662:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000664:	b131      	cbz	r1, 8000674 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000666:	4798      	blx	r3
 8000668:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800066a:	6863      	ldr	r3, [r4, #4]
 800066c:	1a9b      	subs	r3, r3, r2
 800066e:	4418      	add	r0, r3
 8000670:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000672:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000674:	4798      	blx	r3
 8000676:	60a0      	str	r0, [r4, #8]
}
 8000678:	e7fb      	b.n	8000672 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800067a <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800067a:	4770      	bx	lr

0800067c <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 800067c:	4770      	bx	lr
	...

08000680 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000680:	b508      	push	{r3, lr}
    Buttons::init();
 8000682:	f7ff ffbc 	bl	80005fe <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 8000686:	4b02      	ldr	r3, [pc, #8]	; (8000690 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 8000688:	2200      	movs	r2, #0
 800068a:	601a      	str	r2, [r3, #0]
}
 800068c:	bd08      	pop	{r3, pc}
 800068e:	bf00      	nop
 8000690:	2000015c 	.word	0x2000015c

08000694 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000694:	b570      	push	{r4, r5, r6, lr}
 8000696:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 8000698:	f7ff ffb5 	bl	8000606 <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 800069c:	4a0b      	ldr	r2, [pc, #44]	; (80006cc <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 800069e:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 80006a0:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 80006a2:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 80006a4:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 80006a6:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a8:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006ac:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006ae:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006b0:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006b2:	d00a      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006b4:	f016 0001 	ands.w	r0, r6, #1
 80006b8:	d007      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ba:	f011 0001 	ands.w	r0, r1, #1
 80006be:	d004      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006c0:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006c2:	bf5a      	itte	pl
 80006c4:	2001      	movpl	r0, #1
 80006c6:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006c8:	2000      	movmi	r0, #0
}
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	2000015c 	.word	0x2000015c

080006d0 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006d0:	b510      	push	{r4, lr}
 80006d2:	2104      	movs	r1, #4
 80006d4:	4604      	mov	r4, r0
 80006d6:	f01a fe6b 	bl	801b3b0 <_ZdlPvj>
 80006da:	4620      	mov	r0, r4
 80006dc:	bd10      	pop	{r4, pc}

080006de <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006de:	4770      	bx	lr

080006e0 <_ZN20STM32TouchControllerD0Ev>:
 80006e0:	b510      	push	{r4, lr}
 80006e2:	2104      	movs	r1, #4
 80006e4:	4604      	mov	r4, r0
 80006e6:	f01a fe63 	bl	801b3b0 <_ZdlPvj>
 80006ea:	4620      	mov	r0, r4
 80006ec:	bd10      	pop	{r4, pc}
	...

080006f0 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006f0:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006f2:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006f6:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006fa:	f003 fc47 	bl	8003f8c <BSP_TS_Init>
 80006fe:	4b07      	ldr	r3, [pc, #28]	; (800071c <_ZN20STM32TouchController4initEv+0x2c>)
 8000700:	b910      	cbnz	r0, 8000708 <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 8000702:	2201      	movs	r2, #1
 8000704:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 8000706:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 8000708:	781b      	ldrb	r3, [r3, #0]
 800070a:	2b00      	cmp	r3, #0
 800070c:	d1fb      	bne.n	8000706 <_ZN20STM32TouchController4initEv+0x16>
 800070e:	4b04      	ldr	r3, [pc, #16]	; (8000720 <_ZN20STM32TouchController4initEv+0x30>)
 8000710:	4a04      	ldr	r2, [pc, #16]	; (8000724 <_ZN20STM32TouchController4initEv+0x34>)
 8000712:	4805      	ldr	r0, [pc, #20]	; (8000728 <_ZN20STM32TouchController4initEv+0x38>)
 8000714:	2124      	movs	r1, #36	; 0x24
 8000716:	f01a fe79 	bl	801b40c <__assert_func>
 800071a:	bf00      	nop
 800071c:	20000160 	.word	0x20000160
 8000720:	0801c610 	.word	0x0801c610
 8000724:	0801c623 	.word	0x0801c623
 8000728:	0801c64d 	.word	0x0801c64d

0800072c <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800072c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 800072e:	4b0b      	ldr	r3, [pc, #44]	; (800075c <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000730:	781c      	ldrb	r4, [r3, #0]
{
 8000732:	460e      	mov	r6, r1
 8000734:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 8000736:	b15c      	cbz	r4, 8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 8000738:	a801      	add	r0, sp, #4
 800073a:	f003 fc5f 	bl	8003ffc <BSP_TS_GetState>
        if (state.touchDetected)
 800073e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000742:	b143      	cbz	r3, 8000756 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000744:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000748:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800074a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800074e:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000750:	4620      	mov	r0, r4
 8000752:	b004      	add	sp, #16
 8000754:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 8000756:	461c      	mov	r4, r3
 8000758:	e7fa      	b.n	8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800075a:	bf00      	nop
 800075c:	20000160 	.word	0x20000160

08000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000760:	b110      	cbz	r0, 8000768 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8000762:	2801      	cmp	r0, #1
 8000764:	d009      	beq.n	800077a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000766:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000768:	4b08      	ldr	r3, [pc, #32]	; (800078c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800076a:	4809      	ldr	r0, [pc, #36]	; (8000790 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 800076c:	681a      	ldr	r2, [r3, #0]
 800076e:	fab2 f282 	clz	r2, r2
 8000772:	0952      	lsrs	r2, r2, #5
 8000774:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000776:	f004 bded 	b.w	8005354 <HAL_GPIO_WritePin>
 800077a:	4b04      	ldr	r3, [pc, #16]	; (800078c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800077c:	4805      	ldr	r0, [pc, #20]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
 800077e:	685a      	ldr	r2, [r3, #4]
 8000780:	fab2 f282 	clz	r2, r2
 8000784:	0952      	lsrs	r2, r2, #5
 8000786:	2110      	movs	r1, #16
 8000788:	e7f5      	b.n	8000776 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
 800078a:	bf00      	nop
 800078c:	20000164 	.word	0x20000164
 8000790:	40021800 	.word	0x40021800
 8000794:	40020c00 	.word	0x40020c00

08000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000798:	b110      	cbz	r0, 80007a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800079a:	2801      	cmp	r0, #1
 800079c:	d009      	beq.n	80007b2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 800079e:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007a0:	4b08      	ldr	r3, [pc, #32]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007a2:	4809      	ldr	r0, [pc, #36]	; (80007c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 80007a4:	681a      	ldr	r2, [r3, #0]
 80007a6:	3a00      	subs	r2, #0
 80007a8:	bf18      	it	ne
 80007aa:	2201      	movne	r2, #1
 80007ac:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007ae:	f004 bdd1 	b.w	8005354 <HAL_GPIO_WritePin>
 80007b2:	4b04      	ldr	r3, [pc, #16]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007b4:	4805      	ldr	r0, [pc, #20]	; (80007cc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
 80007b6:	685a      	ldr	r2, [r3, #4]
 80007b8:	3a00      	subs	r2, #0
 80007ba:	bf18      	it	ne
 80007bc:	2201      	movne	r2, #1
 80007be:	2110      	movs	r1, #16
 80007c0:	e7f5      	b.n	80007ae <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
 80007c2:	bf00      	nop
 80007c4:	20000164 	.word	0x20000164
 80007c8:	40021800 	.word	0x40021800
 80007cc:	40020c00 	.word	0x40020c00

080007d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007d0:	b110      	cbz	r0, 80007d8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007d2:	2801      	cmp	r0, #1
 80007d4:	d004      	beq.n	80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007d6:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007d8:	4803      	ldr	r0, [pc, #12]	; (80007e8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 80007da:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007dc:	f004 bdbf 	b.w	800535e <HAL_GPIO_TogglePin>
 80007e0:	4802      	ldr	r0, [pc, #8]	; (80007ec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>)
 80007e2:	2110      	movs	r1, #16
 80007e4:	e7fa      	b.n	80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
 80007e6:	bf00      	nop
 80007e8:	40021800 	.word	0x40021800
 80007ec:	40020c00 	.word	0x40020c00

080007f0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007f0:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007f2:	b130      	cbz	r0, 8000802 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007f4:	2801      	cmp	r0, #1
 80007f6:	d009      	beq.n	800080c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007f8:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007fa:	1e43      	subs	r3, r0, #1
 80007fc:	4258      	negs	r0, r3
 80007fe:	4158      	adcs	r0, r3
 8000800:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000802:	4804      	ldr	r0, [pc, #16]	; (8000814 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x24>)
 8000804:	2140      	movs	r1, #64	; 0x40
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000806:	f004 fd9f 	bl	8005348 <HAL_GPIO_ReadPin>
        break;
 800080a:	e7f6      	b.n	80007fa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800080c:	4802      	ldr	r0, [pc, #8]	; (8000818 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>)
 800080e:	2110      	movs	r1, #16
 8000810:	e7f9      	b.n	8000806 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000812:	bf00      	nop
 8000814:	40021800 	.word	0x40021800
 8000818:	40020c00 	.word	0x40020c00

0800081c <_ZN8touchgfx4GPIO4initEv>:
{
 800081c:	b570      	push	{r4, r5, r6, lr}
 800081e:	4d08      	ldr	r5, [pc, #32]	; (8000840 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000820:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000822:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000824:	b2e0      	uxtb	r0, r4
 8000826:	f7ff ffe3 	bl	80007f0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800082a:	b118      	cbz	r0, 8000834 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 800082c:	682b      	ldr	r3, [r5, #0]
 800082e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000830:	bf18      	it	ne
 8000832:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000834:	3401      	adds	r4, #1
 8000836:	2c05      	cmp	r4, #5
 8000838:	f105 0504 	add.w	r5, r5, #4
 800083c:	d1f2      	bne.n	8000824 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800083e:	bd70      	pop	{r4, r5, r6, pc}
 8000840:	20000164 	.word	0x20000164

08000844 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000844:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000846:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800084a:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 800084e:	4770      	bx	lr

08000850 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000850:	2000      	movs	r0, #0
 8000852:	4770      	bx	lr

08000854 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000854:	2000      	movs	r0, #0
 8000856:	4770      	bx	lr

08000858 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000858:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800085a:	b10b      	cbz	r3, 8000860 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800085c:	4608      	mov	r0, r1
 800085e:	4718      	bx	r3
        }
    }
 8000860:	4770      	bx	lr

08000862 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000862:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000866:	4770      	bx	lr

08000868 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000868:	6840      	ldr	r0, [r0, #4]
 800086a:	6803      	ldr	r3, [r0, #0]
 800086c:	699b      	ldr	r3, [r3, #24]
 800086e:	4718      	bx	r3

08000870 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {

    }
 8000870:	4770      	bx	lr

08000872 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {

    }
 8000872:	4770      	bx	lr

08000874 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 8000874:	4b01      	ldr	r3, [pc, #4]	; (800087c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 8000876:	6818      	ldr	r0, [r3, #0]
 8000878:	4770      	bx	lr
 800087a:	bf00      	nop
 800087c:	20000174 	.word	0x20000174

08000880 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000880:	4770      	bx	lr
	...

08000884 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 8000884:	6803      	ldr	r3, [r0, #0]
{
 8000886:	4604      	mov	r4, r0
 8000888:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 800088a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800088c:	4798      	blx	r3
    enableInterrupts();
 800088e:	6823      	ldr	r3, [r4, #0]
 8000890:	4620      	mov	r0, r4
 8000892:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8000894:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8000896:	f000 fa35 	bl	8000d04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800089a:	6823      	ldr	r3, [r4, #0]
 800089c:	4620      	mov	r0, r4
 800089e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80008a0:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 80008a2:	2100      	movs	r1, #0
 80008a4:	4806      	ldr	r0, [pc, #24]	; (80008c0 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 80008a6:	9100      	str	r1, [sp, #0]
 80008a8:	2329      	movs	r3, #41	; 0x29
 80008aa:	2215      	movs	r2, #21
 80008ac:	f004 fb39 	bl	8004f22 <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 80008b0:	f000 fa28 	bl	8000d04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008b4:	6823      	ldr	r3, [r4, #0]
 80008b6:	4620      	mov	r0, r4
 80008b8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80008ba:	4798      	blx	r3
    for (;;)
 80008bc:	e7f8      	b.n	80008b0 <_ZN11TouchGFXHAL9taskEntryEv+0x2c>
 80008be:	bf00      	nop
 80008c0:	20001248 	.word	0x20001248

080008c4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008c4:	b510      	push	{r4, lr}
 80008c6:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008c8:	f009 fdf6 	bl	800a4b8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008cc:	6823      	ldr	r3, [r4, #0]
 80008ce:	4620      	mov	r0, r4
 80008d0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 80008d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80008d8:	4718      	bx	r3

080008da <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80008da:	f000 bd72 	b.w	80013c2 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080008de <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80008de:	f000 bd71 	b.w	80013c4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080008e2 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 80008e2:	f009 b990 	b.w	8009c06 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080008e6 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80008e6:	f000 bd5b 	b.w	80013a0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080008ea <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80008ea:	f000 bd61 	b.w	80013b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080008ee <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80008ee:	f000 bd6b 	b.w	80013c8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

080008f4 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 80008f4:	4b02      	ldr	r3, [pc, #8]	; (8000900 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 80008f6:	2200      	movs	r2, #0
 80008f8:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 80008fa:	f009 b86f 	b.w	80099dc <_ZN8touchgfx3HAL10beginFrameEv>
 80008fe:	bf00      	nop
 8000900:	20000014 	.word	0x20000014

08000904 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 8000904:	b510      	push	{r4, lr}
 8000906:	4604      	mov	r4, r0
    HAL::endFrame();
 8000908:	f009 f874 	bl	80099f4 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 800090c:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8000910:	b113      	cbz	r3, 8000918 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 8000912:	4b02      	ldr	r3, [pc, #8]	; (800091c <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 8000914:	2201      	movs	r2, #1
 8000916:	701a      	strb	r2, [r3, #0]
    }
}
 8000918:	bd10      	pop	{r4, pc}
 800091a:	bf00      	nop
 800091c:	20000014 	.word	0x20000014

08000920 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000920:	f009 b844 	b.w	80099ac <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000924 <_ZN11TouchGFXHALD0Ev>:
 8000924:	b510      	push	{r4, lr}
 8000926:	217c      	movs	r1, #124	; 0x7c
 8000928:	4604      	mov	r4, r0
 800092a:	f01a fd41 	bl	801b3b0 <_ZdlPvj>
 800092e:	4620      	mov	r0, r4
 8000930:	bd10      	pop	{r4, pc}

08000932 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8000932:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 8000936:	b11b      	cbz	r3, 8000940 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000938:	6840      	ldr	r0, [r0, #4]
 800093a:	6803      	ldr	r3, [r0, #0]
 800093c:	681b      	ldr	r3, [r3, #0]
 800093e:	4718      	bx	r3
    }
 8000940:	4618      	mov	r0, r3
 8000942:	4770      	bx	lr

08000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000944:	b530      	push	{r4, r5, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000946:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 800094a:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 800094e:	4b10      	ldr	r3, [pc, #64]	; (8000990 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000950:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000952:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000954:	d00d      	beq.n	8000972 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
            if (DISPLAY_ROTATION == rotate0)
 8000956:	b95a      	cbnz	r2, 8000970 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000958:	4a0e      	ldr	r2, [pc, #56]	; (8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 800095a:	490f      	ldr	r1, [pc, #60]	; (8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800095c:	480f      	ldr	r0, [pc, #60]	; (800099c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800095e:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000960:	4d0f      	ldr	r5, [pc, #60]	; (80009a0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000962:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000964:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 8000966:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000968:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 800096a:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 800096c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800096e:	701a      	strb	r2, [r3, #0]
    }
 8000970:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000972:	2a00      	cmp	r2, #0
 8000974:	d0fc      	beq.n	8000970 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 8000976:	4809      	ldr	r0, [pc, #36]	; (800099c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 8000978:	4a07      	ldr	r2, [pc, #28]	; (8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 800097a:	8801      	ldrh	r1, [r0, #0]
 800097c:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 800097e:	4a05      	ldr	r2, [pc, #20]	; (8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 8000980:	4d07      	ldr	r5, [pc, #28]	; (80009a0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 8000982:	8814      	ldrh	r4, [r2, #0]
 8000984:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 8000986:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 8000988:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 800098a:	2200      	movs	r2, #0
 800098c:	e7ef      	b.n	800096e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 800098e:	bf00      	nop
 8000990:	2000a424 	.word	0x2000a424
 8000994:	2000a420 	.word	0x2000a420
 8000998:	2000a426 	.word	0x2000a426
 800099c:	2000a422 	.word	0x2000a422
 80009a0:	2000a428 	.word	0x2000a428

080009a4 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 80009a4:	b510      	push	{r4, lr}
    currFbBase = (uint16_t*)frameBuffer;
 80009a6:	4c0c      	ldr	r4, [pc, #48]	; (80009d8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 80009a8:	6021      	str	r1, [r4, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009aa:	b931      	cbnz	r1, 80009ba <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x16>
 80009ac:	4b0b      	ldr	r3, [pc, #44]	; (80009dc <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 80009ae:	4a0c      	ldr	r2, [pc, #48]	; (80009e0 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 80009b0:	480c      	ldr	r0, [pc, #48]	; (80009e4 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 80009b2:	f240 216b 	movw	r1, #619	; 0x26b
 80009b6:	f01a fd29 	bl	801b40c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80009ba:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009be:	3a00      	subs	r2, #0
 80009c0:	4909      	ldr	r1, [pc, #36]	; (80009e8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80009c2:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009c4:	bf18      	it	ne
 80009c6:	2201      	movne	r2, #1
 80009c8:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80009ca:	3b00      	subs	r3, #0
 80009cc:	4a07      	ldr	r2, [pc, #28]	; (80009ec <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x48>)
 80009ce:	bf18      	it	ne
 80009d0:	2301      	movne	r3, #1
 80009d2:	7013      	strb	r3, [r2, #0]
}
 80009d4:	bd10      	pop	{r4, pc}
 80009d6:	bf00      	nop
 80009d8:	20000174 	.word	0x20000174
 80009dc:	0801c6b4 	.word	0x0801c6b4
 80009e0:	0801c6ec 	.word	0x0801c6ec
 80009e4:	0801c73a 	.word	0x0801c73a
 80009e8:	2000a42a 	.word	0x2000a42a
 80009ec:	2000a42b 	.word	0x2000a42b

080009f0 <_ZN11TouchGFXHAL10initializeEv>:
{
 80009f0:	b538      	push	{r3, r4, r5, lr}
 80009f2:	4604      	mov	r4, r0
    mcuInstr.init();
 80009f4:	4d09      	ldr	r5, [pc, #36]	; (8000a1c <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 80009f6:	f7ff ff11 	bl	800081c <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 80009fa:	4620      	mov	r0, r4
 80009fc:	f000 fcf0 	bl	80013e0 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8000a00:	2300      	movs	r3, #0
 8000a02:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 8000a06:	4628      	mov	r0, r5
 8000a08:	f7ff fe04 	bl	8000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8000a0c:	2301      	movs	r3, #1
 8000a0e:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 8000a12:	4b03      	ldr	r3, [pc, #12]	; (8000a20 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 8000a14:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 8000a16:	6163      	str	r3, [r4, #20]
}
 8000a18:	bd38      	pop	{r3, r4, r5, pc}
 8000a1a:	bf00      	nop
 8000a1c:	20000180 	.word	0x20000180
 8000a20:	2000017c 	.word	0x2000017c

08000a24 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a24:	2801      	cmp	r0, #1
    {
 8000a26:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a28:	d80a      	bhi.n	8000a40 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a2a:	784b      	ldrb	r3, [r1, #1]
 8000a2c:	9300      	str	r3, [sp, #0]
 8000a2e:	780b      	ldrb	r3, [r1, #0]
 8000a30:	4808      	ldr	r0, [pc, #32]	; (8000a54 <DSI_IO_WriteCmd+0x30>)
 8000a32:	2215      	movs	r2, #21
 8000a34:	2100      	movs	r1, #0
 8000a36:	f004 fa74 	bl	8004f22 <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000a3a:	b003      	add	sp, #12
 8000a3c:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000a40:	9101      	str	r1, [sp, #4]
 8000a42:	5c0b      	ldrb	r3, [r1, r0]
 8000a44:	9300      	str	r3, [sp, #0]
 8000a46:	2239      	movs	r2, #57	; 0x39
 8000a48:	4603      	mov	r3, r0
 8000a4a:	2100      	movs	r1, #0
 8000a4c:	4801      	ldr	r0, [pc, #4]	; (8000a54 <DSI_IO_WriteCmd+0x30>)
 8000a4e:	f004 fa79 	bl	8004f44 <HAL_DSI_LongWrite>
    }
 8000a52:	e7f2      	b.n	8000a3a <DSI_IO_WriteCmd+0x16>
 8000a54:	20001248 	.word	0x20001248

08000a58 <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000a58:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000a5a:	4a0b      	ldr	r2, [pc, #44]	; (8000a88 <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a5c:	4c0b      	ldr	r4, [pc, #44]	; (8000a8c <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000a5e:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000a60:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000a62:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000a64:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a66:	9201      	str	r2, [sp, #4]
 8000a68:	2244      	movs	r2, #68	; 0x44
 8000a6a:	9200      	str	r2, [sp, #0]
 8000a6c:	2100      	movs	r1, #0
 8000a6e:	2239      	movs	r2, #57	; 0x39
 8000a70:	4620      	mov	r0, r4
 8000a72:	f004 fa67 	bl	8004f44 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000a76:	2100      	movs	r1, #0
 8000a78:	9100      	str	r1, [sp, #0]
 8000a7a:	2335      	movs	r3, #53	; 0x35
 8000a7c:	462a      	mov	r2, r5
 8000a7e:	4620      	mov	r0, r4
 8000a80:	f004 fa4f 	bl	8004f22 <HAL_DSI_ShortWrite>
    }
 8000a84:	b003      	add	sp, #12
 8000a86:	bd30      	pop	{r4, r5, pc}
 8000a88:	2000018c 	.word	0x2000018c
 8000a8c:	20001248 	.word	0x20001248

08000a90 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000a90:	b507      	push	{r0, r1, r2, lr}
 8000a92:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000a94:	f7ff ffe0 	bl	8000a58 <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a98:	9801      	ldr	r0, [sp, #4]
}
 8000a9a:	b003      	add	sp, #12
 8000a9c:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000aa0:	f000 bc8e 	b.w	80013c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000aa4 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000aa4:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000aa6:	4b07      	ldr	r3, [pc, #28]	; (8000ac4 <LCD_SetUpdateRegion+0x20>)
 8000aa8:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000aac:	232a      	movs	r3, #42	; 0x2a
 8000aae:	9001      	str	r0, [sp, #4]
 8000ab0:	9300      	str	r3, [sp, #0]
 8000ab2:	2239      	movs	r2, #57	; 0x39
 8000ab4:	2304      	movs	r3, #4
 8000ab6:	2100      	movs	r1, #0
 8000ab8:	4803      	ldr	r0, [pc, #12]	; (8000ac8 <LCD_SetUpdateRegion+0x24>)
 8000aba:	f004 fa43 	bl	8004f44 <HAL_DSI_LongWrite>
    }
 8000abe:	b003      	add	sp, #12
 8000ac0:	f85d fb04 	ldr.w	pc, [sp], #4
 8000ac4:	20000004 	.word	0x20000004
 8000ac8:	20001248 	.word	0x20001248

08000acc <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000acc:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000ace:	4d15      	ldr	r5, [pc, #84]	; (8000b24 <HAL_DSI_TearingEffectCallback+0x58>)
 8000ad0:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000ad2:	2000      	movs	r0, #0
 8000ad4:	f7ff fe44 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000ad8:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000ada:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000ade:	3301      	adds	r3, #1
 8000ae0:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000ae4:	f000 f902 	bl	8000cec <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000ae8:	4b0f      	ldr	r3, [pc, #60]	; (8000b28 <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000aea:	6828      	ldr	r0, [r5, #0]
 8000aec:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000aee:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000af0:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000af4:	b123      	cbz	r3, 8000b00 <HAL_DSI_TearingEffectCallback+0x34>
 8000af6:	4d0d      	ldr	r5, [pc, #52]	; (8000b2c <HAL_DSI_TearingEffectCallback+0x60>)
 8000af8:	782b      	ldrb	r3, [r5, #0]
 8000afa:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000afe:	b123      	cbz	r3, 8000b0a <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000b00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000b04:	2000      	movs	r0, #0
 8000b06:	f7ff be47 	b.w	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000b0a:	f009 fcd5 	bl	800a4b8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b0e:	4b08      	ldr	r3, [pc, #32]	; (8000b30 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b10:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b12:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b14:	f7ff ffc6 	bl	8000aa4 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b18:	4620      	mov	r0, r4
 8000b1a:	f004 f9f2 	bl	8004f02 <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b1e:	2301      	movs	r3, #1
 8000b20:	702b      	strb	r3, [r5, #0]
    }
 8000b22:	bd70      	pop	{r4, r5, r6, pc}
 8000b24:	2000a42c 	.word	0x2000a42c
 8000b28:	20000014 	.word	0x20000014
 8000b2c:	2000018e 	.word	0x2000018e
 8000b30:	20000178 	.word	0x20000178

08000b34 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000b34:	4b33      	ldr	r3, [pc, #204]	; (8000c04 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000b36:	681a      	ldr	r2, [r3, #0]
 8000b38:	3201      	adds	r2, #1
    {
 8000b3a:	b570      	push	{r4, r5, r6, lr}
        updateRegion++;
 8000b3c:	601a      	str	r2, [r3, #0]
        if (updateRegion < 4)
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b3e:	4b32      	ldr	r3, [pc, #200]	; (8000c08 <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000b40:	4c32      	ldr	r4, [pc, #200]	; (8000c0c <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000b42:	6819      	ldr	r1, [r3, #0]
 8000b44:	4b32      	ldr	r3, [pc, #200]	; (8000c10 <HAL_DSI_EndOfRefreshCallback+0xdc>)
        if (updateRegion < 4)
 8000b46:	2a03      	cmp	r2, #3
    {
 8000b48:	4605      	mov	r5, r0
        if (updateRegion < 4)
 8000b4a:	dc2e      	bgt.n	8000baa <HAL_DSI_EndOfRefreshCallback+0x76>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b4c:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 8000b50:	f020 0008 	bic.w	r0, r0, #8
 8000b54:	f8c4 0404 	str.w	r0, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b58:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8000b5c:	fb00 1102 	mla	r1, r0, r2, r1
 8000b60:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000b64:	bf0c      	ite	eq
 8000b66:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000b68:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000b6a:	3302      	adds	r3, #2
 8000b6c:	4928      	ldr	r1, [pc, #160]	; (8000c10 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000b6e:	041b      	lsls	r3, r3, #16
 8000b70:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000b74:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000b76:	4b27      	ldr	r3, [pc, #156]	; (8000c14 <HAL_DSI_EndOfRefreshCallback+0xe0>)
 8000b78:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000b7a:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000b7e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000b82:	4b25      	ldr	r3, [pc, #148]	; (8000c18 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000b84:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000b88:	2301      	movs	r3, #1
            LCD_SetUpdateRegion(updateRegion);
 8000b8a:	4610      	mov	r0, r2
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000b8c:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000b8e:	f7ff ff89 	bl	8000aa4 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000b92:	4a1e      	ldr	r2, [pc, #120]	; (8000c0c <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000b94:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000b98:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000b9c:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000b9e:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000ba2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000ba6:	f004 b9ac 	b.w	8004f02 <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000baa:	f8d4 2404 	ldr.w	r2, [r4, #1028]	; 0x404
 8000bae:	f022 0208 	bic.w	r2, r2, #8
 8000bb2:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bb6:	4a19      	ldr	r2, [pc, #100]	; (8000c1c <HAL_DSI_EndOfRefreshCallback+0xe8>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000bb8:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bbc:	611a      	str	r2, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000bbe:	f102 1201 	add.w	r2, r2, #65537	; 0x10001
 8000bc2:	615a      	str	r2, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000bc4:	4a16      	ldr	r2, [pc, #88]	; (8000c20 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000bc6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000bca:	4a13      	ldr	r2, [pc, #76]	; (8000c18 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bcc:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000bd0:	2201      	movs	r2, #1
 8000bd2:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000bd4:	2000      	movs	r0, #0
 8000bd6:	f7ff ff65 	bl	8000aa4 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bda:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000bde:	f043 0308 	orr.w	r3, r3, #8
 8000be2:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000be6:	2000      	movs	r0, #0
 8000be8:	f7ff fdd6 	bl	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000bec:	4b0d      	ldr	r3, [pc, #52]	; (8000c24 <HAL_DSI_EndOfRefreshCallback+0xf0>)
 8000bee:	2200      	movs	r2, #0
 8000bf0:	701a      	strb	r2, [r3, #0]
        return instance;
 8000bf2:	4b0d      	ldr	r3, [pc, #52]	; (8000c28 <HAL_DSI_EndOfRefreshCallback+0xf4>)
 8000bf4:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000bf6:	b120      	cbz	r0, 8000c02 <HAL_DSI_EndOfRefreshCallback+0xce>
        allowDMATransfers();
 8000bf8:	6803      	ldr	r3, [r0, #0]
    }
 8000bfa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000bfe:	699b      	ldr	r3, [r3, #24]
 8000c00:	4718      	bx	r3
 8000c02:	bd70      	pop	{r4, r5, r6, pc}
 8000c04:	20000178 	.word	0x20000178
 8000c08:	20000174 	.word	0x20000174
 8000c0c:	40016c00 	.word	0x40016c00
 8000c10:	40016800 	.word	0x40016800
 8000c14:	00ca01e3 	.word	0x00ca01e3
 8000c18:	06800193 	.word	0x06800193
 8000c1c:	00ca01e2 	.word	0x00ca01e2
 8000c20:	00ca0003 	.word	0x00ca0003
 8000c24:	2000018e 	.word	0x2000018e
 8000c28:	2000a42c 	.word	0x2000a42c

08000c2c <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000c2c:	b508      	push	{r3, lr}
        return instance;
 8000c2e:	4b04      	ldr	r3, [pc, #16]	; (8000c40 <IdleTaskHook+0x14>)
 8000c30:	4601      	mov	r1, r0
 8000c32:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000c34:	b101      	cbz	r1, 8000c38 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000c36:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000c38:	f009 fc58 	bl	800a4ec <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000c3c:	2001      	movs	r0, #1
 8000c3e:	bd08      	pop	{r3, pc}
 8000c40:	2000a42c 	.word	0x2000a42c

08000c44 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000c44:	4b05      	ldr	r3, [pc, #20]	; (8000c5c <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000c46:	4806      	ldr	r0, [pc, #24]	; (8000c60 <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000c48:	2200      	movs	r2, #0
 8000c4a:	605a      	str	r2, [r3, #4]
 8000c4c:	609a      	str	r2, [r3, #8]
 8000c4e:	4a05      	ldr	r2, [pc, #20]	; (8000c64 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000c50:	601a      	str	r2, [r3, #0]
 8000c52:	4b05      	ldr	r3, [pc, #20]	; (8000c68 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000c54:	6003      	str	r3, [r0, #0]
        init();
 8000c56:	f7ff bd13 	b.w	8000680 <_ZN8touchgfx10KeySampler4initEv>
 8000c5a:	bf00      	nop
 8000c5c:	20000180 	.word	0x20000180
 8000c60:	2000017c 	.word	0x2000017c
 8000c64:	0801c5d4 	.word	0x0801c5d4
 8000c68:	0801c5fc 	.word	0x0801c5fc

08000c6c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c6c:	2101      	movs	r1, #1
{
 8000c6e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c70:	2200      	movs	r2, #0
 8000c72:	4608      	mov	r0, r1
 8000c74:	f006 fb6c 	bl	8007350 <osSemaphoreNew>
 8000c78:	4b0a      	ldr	r3, [pc, #40]	; (8000ca4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000c7a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000c7c:	b928      	cbnz	r0, 8000c8a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000c7e:	4b0a      	ldr	r3, [pc, #40]	; (8000ca8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000c80:	4a0a      	ldr	r2, [pc, #40]	; (8000cac <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c82:	2125      	movs	r1, #37	; 0x25

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c84:	480a      	ldr	r0, [pc, #40]	; (8000cb0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000c86:	f01a fbc1 	bl	801b40c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000c8a:	2200      	movs	r2, #0
 8000c8c:	2104      	movs	r1, #4
 8000c8e:	2001      	movs	r0, #1
 8000c90:	f006 fc24 	bl	80074dc <osMessageQueueNew>
 8000c94:	4b07      	ldr	r3, [pc, #28]	; (8000cb4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000c96:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c98:	b918      	cbnz	r0, 8000ca2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000c9a:	4b07      	ldr	r3, [pc, #28]	; (8000cb8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000c9c:	4a03      	ldr	r2, [pc, #12]	; (8000cac <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c9e:	2129      	movs	r1, #41	; 0x29
 8000ca0:	e7f0      	b.n	8000c84 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000ca2:	bd08      	pop	{r3, pc}
 8000ca4:	20000194 	.word	0x20000194
 8000ca8:	0801c83c 	.word	0x0801c83c
 8000cac:	0801c885 	.word	0x0801c885
 8000cb0:	0801c8b4 	.word	0x0801c8b4
 8000cb4:	20000190 	.word	0x20000190
 8000cb8:	0801c902 	.word	0x0801c902

08000cbc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000cbc:	4b02      	ldr	r3, [pc, #8]	; (8000cc8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000cbe:	f04f 31ff 	mov.w	r1, #4294967295
 8000cc2:	6818      	ldr	r0, [r3, #0]
 8000cc4:	f006 bb9a 	b.w	80073fc <osSemaphoreAcquire>
 8000cc8:	20000194 	.word	0x20000194

08000ccc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000ccc:	4b01      	ldr	r3, [pc, #4]	; (8000cd4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000cce:	6818      	ldr	r0, [r3, #0]
 8000cd0:	f006 bbce 	b.w	8007470 <osSemaphoreRelease>
 8000cd4:	20000194 	.word	0x20000194

08000cd8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000cd8:	4b02      	ldr	r3, [pc, #8]	; (8000ce4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000cda:	2100      	movs	r1, #0
 8000cdc:	6818      	ldr	r0, [r3, #0]
 8000cde:	f006 bb8d 	b.w	80073fc <osSemaphoreAcquire>
 8000ce2:	bf00      	nop
 8000ce4:	20000194 	.word	0x20000194

08000ce8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000ce8:	f7ff bff0 	b.w	8000ccc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000cec <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000cec:	4803      	ldr	r0, [pc, #12]	; (8000cfc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000cee:	4904      	ldr	r1, [pc, #16]	; (8000d00 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000cf0:	6800      	ldr	r0, [r0, #0]
 8000cf2:	2300      	movs	r3, #0
 8000cf4:	461a      	mov	r2, r3
 8000cf6:	f006 bc37 	b.w	8007568 <osMessageQueuePut>
 8000cfa:	bf00      	nop
 8000cfc:	20000190 	.word	0x20000190
 8000d00:	20000018 	.word	0x20000018

08000d04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000d04:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000d06:	4c08      	ldr	r4, [pc, #32]	; (8000d28 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000d08:	2300      	movs	r3, #0
 8000d0a:	461a      	mov	r2, r3
 8000d0c:	a901      	add	r1, sp, #4
 8000d0e:	6820      	ldr	r0, [r4, #0]
 8000d10:	f006 fc6c 	bl	80075ec <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d14:	6820      	ldr	r0, [r4, #0]
 8000d16:	f04f 33ff 	mov.w	r3, #4294967295
 8000d1a:	2200      	movs	r2, #0
 8000d1c:	a901      	add	r1, sp, #4
 8000d1e:	f006 fc65 	bl	80075ec <osMessageQueueGet>
}
 8000d22:	b002      	add	sp, #8
 8000d24:	bd10      	pop	{r4, pc}
 8000d26:	bf00      	nop
 8000d28:	20000190 	.word	0x20000190

08000d2c <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000d2c:	6803      	ldr	r3, [r0, #0]
 8000d2e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d30:	4718      	bx	r3

08000d32 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
    {
        return DMA_TYPE_GENERIC;
    }
 8000d32:	2000      	movs	r0, #0
 8000d34:	4770      	bx	lr

08000d36 <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000d36:	6803      	ldr	r3, [r0, #0]
 8000d38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d3a:	4718      	bx	r3

08000d3c <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000d3c:	f240 10ef 	movw	r0, #495	; 0x1ef
 8000d40:	4770      	bx	lr
	...

08000d44 <_ZN10STM32F4DMA10initializeEv>:
{
 8000d44:	b510      	push	{r4, lr}
    hdma2d.Instance = DMA2D;
 8000d46:	4c07      	ldr	r4, [pc, #28]	; (8000d64 <_ZN10STM32F4DMA10initializeEv+0x20>)
 8000d48:	4b07      	ldr	r3, [pc, #28]	; (8000d68 <_ZN10STM32F4DMA10initializeEv+0x24>)
 8000d4a:	6023      	str	r3, [r4, #0]
    HAL_DMA2D_Init(&hdma2d);
 8000d4c:	4620      	mov	r0, r4
 8000d4e:	f003 fbd5 	bl	80044fc <HAL_DMA2D_Init>
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000d52:	4b06      	ldr	r3, [pc, #24]	; (8000d6c <_ZN10STM32F4DMA10initializeEv+0x28>)
 8000d54:	6123      	str	r3, [r4, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8000d56:	4b06      	ldr	r3, [pc, #24]	; (8000d70 <_ZN10STM32F4DMA10initializeEv+0x2c>)
 8000d58:	6163      	str	r3, [r4, #20]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000d5a:	4b06      	ldr	r3, [pc, #24]	; (8000d74 <_ZN10STM32F4DMA10initializeEv+0x30>)
 8000d5c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000d60:	609a      	str	r2, [r3, #8]
}
 8000d62:	bd10      	pop	{r4, pc}
 8000d64:	20001208 	.word	0x20001208
 8000d68:	4002b000 	.word	0x4002b000
 8000d6c:	08000ddd 	.word	0x08000ddd
 8000d70:	08000d79 	.word	0x08000d79
 8000d74:	e000e100 	.word	0xe000e100

08000d78 <DMA2D_XferErrorCallback>:
    {
 8000d78:	b508      	push	{r3, lr}
        assert(0);
 8000d7a:	4a03      	ldr	r2, [pc, #12]	; (8000d88 <DMA2D_XferErrorCallback+0x10>)
 8000d7c:	4b03      	ldr	r3, [pc, #12]	; (8000d8c <DMA2D_XferErrorCallback+0x14>)
 8000d7e:	4804      	ldr	r0, [pc, #16]	; (8000d90 <DMA2D_XferErrorCallback+0x18>)
 8000d80:	2136      	movs	r1, #54	; 0x36
 8000d82:	f01a fb43 	bl	801b40c <__assert_func>
 8000d86:	bf00      	nop
 8000d88:	0801c944 	.word	0x0801c944
 8000d8c:	0801f37a 	.word	0x0801f37a
 8000d90:	0801c977 	.word	0x0801c977

08000d94 <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 8000d94:	4b08      	ldr	r3, [pc, #32]	; (8000db8 <_ZN10STM32F4DMAD1Ev+0x24>)
 8000d96:	b510      	push	{r4, lr}
 8000d98:	6003      	str	r3, [r0, #0]
 8000d9a:	4604      	mov	r4, r0
    HAL_DMA2D_DeInit(&hdma2d);
 8000d9c:	4807      	ldr	r0, [pc, #28]	; (8000dbc <_ZN10STM32F4DMAD1Ev+0x28>)
 8000d9e:	f003 fc77 	bl	8004690 <HAL_DMA2D_DeInit>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000da2:	4b07      	ldr	r3, [pc, #28]	; (8000dc0 <_ZN10STM32F4DMAD1Ev+0x2c>)
 8000da4:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000da8:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000dac:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000db0:	f3bf 8f6f 	isb	sy
}
 8000db4:	4620      	mov	r0, r4
 8000db6:	bd10      	pop	{r4, pc}
 8000db8:	0801c9cc 	.word	0x0801c9cc
 8000dbc:	20001208 	.word	0x20001208
 8000dc0:	e000e100 	.word	0xe000e100

08000dc4 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 8000dc4:	b510      	push	{r4, lr}
 8000dc6:	4604      	mov	r4, r0
}
 8000dc8:	f7ff ffe4 	bl	8000d94 <_ZN10STM32F4DMAD1Ev>
 8000dcc:	4620      	mov	r0, r4
 8000dce:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8000dd2:	f01a faed 	bl	801b3b0 <_ZdlPvj>
 8000dd6:	4620      	mov	r0, r4
 8000dd8:	bd10      	pop	{r4, pc}
	...

08000ddc <DMA2D_XferCpltCallback>:
 8000ddc:	4b02      	ldr	r3, [pc, #8]	; (8000de8 <DMA2D_XferCpltCallback+0xc>)
 8000dde:	681b      	ldr	r3, [r3, #0]
 8000de0:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000de2:	6803      	ldr	r3, [r0, #0]
 8000de4:	695b      	ldr	r3, [r3, #20]
 8000de6:	4718      	bx	r3
 8000de8:	2000a42c 	.word	0x2000a42c

08000dec <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8000dec:	4b04      	ldr	r3, [pc, #16]	; (8000e00 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8000dee:	681b      	ldr	r3, [r3, #0]
 8000df0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8000df4:	b10a      	cbz	r2, 8000dfa <_ZN8touchgfx3HAL3lcdEv+0xe>
 8000df6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8000df8:	b900      	cbnz	r0, 8000dfc <_ZN8touchgfx3HAL3lcdEv+0x10>
            return instance->lcdRef;
 8000dfa:	6898      	ldr	r0, [r3, #8]
    }
 8000dfc:	4770      	bx	lr
 8000dfe:	bf00      	nop
 8000e00:	2000a42c 	.word	0x2000a42c

08000e04 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000e04:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
    uint32_t dma2dColorMode = 0;

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 8000e08:	680d      	ldr	r5, [r1, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000e0a:	2d20      	cmp	r5, #32
{
 8000e0c:	460c      	mov	r4, r1
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000e0e:	f000 809c 	beq.w	8000f4a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 8000e12:	2d40      	cmp	r5, #64	; 0x40
 8000e14:	f000 8099 	beq.w	8000f4a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000e18:	1f2a      	subs	r2, r5, #4
 8000e1a:	4256      	negs	r6, r2
 8000e1c:	4156      	adcs	r6, r2

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8000e1e:	2d80      	cmp	r5, #128	; 0x80
 8000e20:	f000 8095 	beq.w	8000f4e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14a>
 8000e24:	f5a5 7380 	sub.w	r3, r5, #256	; 0x100
 8000e28:	425d      	negs	r5, r3
 8000e2a:	415d      	adcs	r5, r3

    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000e2c:	f7ff ffde 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8000e30:	6803      	ldr	r3, [r0, #0]
 8000e32:	69db      	ldr	r3, [r3, #28]
 8000e34:	4798      	blx	r3

    switch (blitOp.operation)
 8000e36:	6823      	ldr	r3, [r4, #0]
 8000e38:	2b80      	cmp	r3, #128	; 0x80
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000e3a:	4684      	mov	ip, r0
    switch (blitOp.operation)
 8000e3c:	f000 8096 	beq.w	8000f6c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
 8000e40:	f200 8087 	bhi.w	8000f52 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14e>
 8000e44:	2b20      	cmp	r3, #32
 8000e46:	f000 8093 	beq.w	8000f70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16c>
 8000e4a:	2b40      	cmp	r3, #64	; 0x40
 8000e4c:	f000 8090 	beq.w	8000f70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16c>
 8000e50:	2b04      	cmp	r3, #4
 8000e52:	f000 8084 	beq.w	8000f5e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
        break;
    default:
        dma2dTransferMode = DMA2D_M2M;
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000e56:	f1bc 0f10 	cmp.w	ip, #16
 8000e5a:	bf0c      	ite	eq
 8000e5c:	2102      	moveq	r1, #2
 8000e5e:	2101      	movne	r1, #1
 8000e60:	2200      	movs	r2, #0
        break;
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8000e62:	4b4a      	ldr	r3, [pc, #296]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000e64:	f8b4 8010 	ldrh.w	r8, [r4, #16]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e68:	f8d3 e000 	ldr.w	lr, [r3]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000e6c:	8ae7      	ldrh	r7, [r4, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e6e:	f8de 9000 	ldr.w	r9, [lr]
    hdma2d.Init.Mode = dma2dTransferMode;
 8000e72:	605a      	str	r2, [r3, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000e74:	f1bc 0f10 	cmp.w	ip, #16
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e78:	f429 3940 	bic.w	r9, r9, #196608	; 0x30000
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000e7c:	bf0c      	ite	eq
 8000e7e:	2002      	moveq	r0, #2
 8000e80:	2001      	movne	r0, #1
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000e82:	eba7 0708 	sub.w	r7, r7, r8
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e86:	ea49 0202 	orr.w	r2, r9, r2
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000e8a:	6098      	str	r0, [r3, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000e8c:	60df      	str	r7, [r3, #12]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e8e:	f8ce 2000 	str.w	r2, [lr]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000e92:	f8de 2034 	ldr.w	r2, [lr, #52]	; 0x34

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8000e96:	62d9      	str	r1, [r3, #44]	; 0x2c
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000e98:	f022 0207 	bic.w	r2, r2, #7
 8000e9c:	4302      	orrs	r2, r0
 8000e9e:	f8ce 2034 	str.w	r2, [lr, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8000ea2:	f8de 2040 	ldr.w	r2, [lr, #64]	; 0x40
 8000ea6:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
 8000eaa:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 8000eae:	433a      	orrs	r2, r7
 8000eb0:	f8ce 2040 	str.w	r2, [lr, #64]	; 0x40
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 8000eb4:	8aa2      	ldrh	r2, [r4, #20]
 8000eb6:	eba2 0208 	sub.w	r2, r2, r8
 8000eba:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 8000ebc:	b906      	cbnz	r6, 8000ec0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbc>
 8000ebe:	b38d      	cbz	r5, 8000f24 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x120>
    {
        if (blitOp.alpha < 255)
 8000ec0:	7f22      	ldrb	r2, [r4, #28]
 8000ec2:	2aff      	cmp	r2, #255	; 0xff
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 8000ec4:	bf15      	itete	ne
 8000ec6:	2102      	movne	r1, #2
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000ec8:	2100      	moveq	r1, #0
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 8000eca:	e9c3 120c 	strdne	r1, r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000ece:	6319      	streq	r1, [r3, #48]	; 0x30
        }

        if (blendingText)
 8000ed0:	b315      	cbz	r5, 8000f18 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x114>
        {
            if (bitDepth == 16)
 8000ed2:	f1bc 0f10 	cmp.w	ip, #16
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ed6:	69a1      	ldr	r1, [r4, #24]
 8000ed8:	ea4f 6e02 	mov.w	lr, r2, lsl #24
 8000edc:	d14a      	bne.n	8000f74 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x170>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000ede:	f04f 081f 	mov.w	r8, #31
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000ee2:	ea01 0208 	and.w	r2, r1, r8
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000ee6:	f3c1 2cc4 	ubfx	ip, r1, #11, #5
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000eea:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000eee:	fbb2 f2f8 	udiv	r2, r2, r8
                uint32_t alpha = blitOp.alpha;
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000ef2:	ea42 020e 	orr.w	r2, r2, lr
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000ef6:	ebcc 2c0c 	rsb	ip, ip, ip, lsl #8
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000efa:	f3c1 1145 	ubfx	r1, r1, #5, #6
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000efe:	fbbc fcf8 	udiv	ip, ip, r8
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000f02:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000f06:	ebc1 2101 	rsb	r1, r1, r1, lsl #8
 8000f0a:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
 8000f0e:	fbb1 f1fc 	udiv	r1, r1, ip
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000f12:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000f16:	635a      	str	r2, [r3, #52]	; 0x34
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000f18:	e9c3 7006 	strd	r7, r0, [r3, #24]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8000f1c:	2100      	movs	r1, #0
 8000f1e:	481b      	ldr	r0, [pc, #108]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000f20:	f003 fc76 	bl	8004810 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8000f24:	4819      	ldr	r0, [pc, #100]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000f26:	2101      	movs	r1, #1
 8000f28:	f003 fc72 	bl	8004810 <HAL_DMA2D_ConfigLayer>

    if (blendingImage || blendingText)
 8000f2c:	8a23      	ldrh	r3, [r4, #16]
 8000f2e:	8a62      	ldrh	r2, [r4, #18]
 8000f30:	b906      	cbnz	r6, 8000f34 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
 8000f32:	b31d      	cbz	r5, 8000f7c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8000f34:	e9cd 3200 	strd	r3, r2, [sp]
 8000f38:	68e3      	ldr	r3, [r4, #12]
 8000f3a:	6861      	ldr	r1, [r4, #4]
 8000f3c:	4813      	ldr	r0, [pc, #76]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000f3e:	461a      	mov	r2, r3
 8000f40:	f003 fb26 	bl	8004590 <HAL_DMA2D_BlendingStart_IT>
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
                           (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
    }
}
 8000f44:	b003      	add	sp, #12
 8000f46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000f4a:	2601      	movs	r6, #1
 8000f4c:	e76a      	b.n	8000e24 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8000f4e:	2501      	movs	r5, #1
 8000f50:	e76c      	b.n	8000e2c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28>
    switch (blitOp.operation)
 8000f52:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000f56:	f47f af7e 	bne.w	8000e56 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x52>
 8000f5a:	2109      	movs	r1, #9
 8000f5c:	e003      	b.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000f5e:	2810      	cmp	r0, #16
 8000f60:	bf0c      	ite	eq
 8000f62:	2102      	moveq	r1, #2
 8000f64:	2101      	movne	r1, #1
    switch (blitOp.operation)
 8000f66:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8000f6a:	e77a      	b.n	8000e62 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5e>
        dma2dColorMode = CM_A4;
 8000f6c:	210a      	movs	r1, #10
 8000f6e:	e7fa      	b.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
        dma2dColorMode = CM_ARGB8888;
 8000f70:	2100      	movs	r1, #0
 8000f72:	e7f8      	b.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 8000f74:	ea4e 0101 	orr.w	r1, lr, r1
 8000f78:	6359      	str	r1, [r3, #52]	; 0x34
 8000f7a:	e7cd      	b.n	8000f18 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x114>
        HAL_DMA2D_Start_IT(&hdma2d,
 8000f7c:	9200      	str	r2, [sp, #0]
 8000f7e:	6861      	ldr	r1, [r4, #4]
 8000f80:	68e2      	ldr	r2, [r4, #12]
 8000f82:	4802      	ldr	r0, [pc, #8]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000f84:	f003 fae6 	bl	8004554 <HAL_DMA2D_Start_IT>
}
 8000f88:	e7dc      	b.n	8000f44 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>
 8000f8a:	bf00      	nop
 8000f8c:	20001208 	.word	0x20001208

08000f90 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8000f90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000f92:	460d      	mov	r5, r1
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000f94:	f7ff ff2a 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8000f98:	6803      	ldr	r3, [r0, #0]
 8000f9a:	69db      	ldr	r3, [r3, #28]
 8000f9c:	4798      	blx	r3
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000f9e:	2810      	cmp	r0, #16
 8000fa0:	69ab      	ldr	r3, [r5, #24]
 8000fa2:	7f29      	ldrb	r1, [r5, #28]
 8000fa4:	d167      	bne.n	8001076 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe6>
    uint32_t color = 0;
    if (bitDepth == 16)
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000fa6:	f003 021f 	and.w	r2, r3, #31
 8000faa:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000fae:	201f      	movs	r0, #31
 8000fb0:	fbb2 f4f0 	udiv	r4, r2, r0
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000fb4:	f3c3 22c4 	ubfx	r2, r3, #11, #5
        uint32_t alpha = blitOp.alpha;
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000fb8:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000fbc:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000fc0:	f3c3 1345 	ubfx	r3, r3, #5, #6
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000fc4:	fbb2 f2f0 	udiv	r2, r2, r0
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000fc8:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000fcc:	ebc3 2303 	rsb	r3, r3, r3, lsl #8
 8000fd0:	223f      	movs	r2, #63	; 0x3f
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000fd2:	2102      	movs	r1, #2
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000fd4:	fbb3 f3f2 	udiv	r3, r3, r2
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000fd8:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
    }

    switch (blitOp.operation)
 8000fdc:	682b      	ldr	r3, [r5, #0]
        dma2dTransferMode = DMA2D_R2M;
        break;
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8000fde:	4828      	ldr	r0, [pc, #160]	; (8001080 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf0>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000fe0:	8aee      	ldrh	r6, [r5, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000fe2:	6802      	ldr	r2, [r0, #0]
        dma2dTransferMode = DMA2D_R2M;
 8000fe4:	2b08      	cmp	r3, #8
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000fe6:	8a2b      	ldrh	r3, [r5, #16]
 8000fe8:	eba6 0603 	sub.w	r6, r6, r3
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000fec:	6813      	ldr	r3, [r2, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000fee:	60c6      	str	r6, [r0, #12]
        dma2dTransferMode = DMA2D_R2M;
 8000ff0:	bf0c      	ite	eq
 8000ff2:	f44f 3700 	moveq.w	r7, #131072	; 0x20000
 8000ff6:	f44f 3740 	movne.w	r7, #196608	; 0x30000
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000ffa:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000ffe:	433b      	orrs	r3, r7
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8001000:	e9c0 7101 	strd	r7, r1, [r0, #4]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001004:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8001006:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001008:	f023 0307 	bic.w	r3, r3, #7
 800100c:	430b      	orrs	r3, r1
 800100e:	6353      	str	r3, [r2, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8001010:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001012:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8001016:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800101a:	4333      	orrs	r3, r6

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 800101c:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8001020:	6413      	str	r3, [r2, #64]	; 0x40
    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8001022:	d11c      	bne.n	800105e <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xce>
    {
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 8001024:	2301      	movs	r3, #1
        hdma2d.LayerCfg[1].InputAlpha = color;
 8001026:	e9c0 340c 	strd	r3, r4, [r0, #48]	; 0x30
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 800102a:	2309      	movs	r3, #9
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800102c:	e9c0 6106 	strd	r6, r1, [r0, #24]
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8001030:	62c3      	str	r3, [r0, #44]	; 0x2c
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8001032:	2100      	movs	r1, #0
 8001034:	f003 fbec 	bl	8004810 <HAL_DMA2D_ConfigLayer>
    {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
        hdma2d.LayerCfg[1].InputOffset = 0;
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8001038:	2101      	movs	r1, #1
 800103a:	4811      	ldr	r0, [pc, #68]	; (8001080 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf0>)
 800103c:	f003 fbe8 	bl	8004810 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8001040:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
 8001044:	8a2a      	ldrh	r2, [r5, #16]
 8001046:	8a69      	ldrh	r1, [r5, #18]
 8001048:	d10d      	bne.n	8001066 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xd6>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800104a:	68eb      	ldr	r3, [r5, #12]
 800104c:	480c      	ldr	r0, [pc, #48]	; (8001080 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf0>)
 800104e:	e9cd 2100 	strd	r2, r1, [sp]
 8001052:	461a      	mov	r2, r3
 8001054:	4619      	mov	r1, r3
 8001056:	f003 fa9b 	bl	8004590 <HAL_DMA2D_BlendingStart_IT>
                                   (unsigned int)blitOp.pDst,
                                   blitOp.nSteps, blitOp.nLoops);
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 800105a:	b003      	add	sp, #12
 800105c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hdma2d.LayerCfg[1].InputOffset = 0;
 800105e:	2300      	movs	r3, #0
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8001060:	62c1      	str	r1, [r0, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 8001062:	6283      	str	r3, [r0, #40]	; 0x28
 8001064:	e7e8      	b.n	8001038 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8001066:	9100      	str	r1, [sp, #0]
 8001068:	4613      	mov	r3, r2
 800106a:	4621      	mov	r1, r4
 800106c:	68ea      	ldr	r2, [r5, #12]
 800106e:	4804      	ldr	r0, [pc, #16]	; (8001080 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf0>)
 8001070:	f003 fa70 	bl	8004554 <HAL_DMA2D_Start_IT>
}
 8001074:	e7f1      	b.n	800105a <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xca>
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 8001076:	ea43 6401 	orr.w	r4, r3, r1, lsl #24
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800107a:	2101      	movs	r1, #1
 800107c:	e7ae      	b.n	8000fdc <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x4c>
 800107e:	bf00      	nop
 8001080:	20001208 	.word	0x20001208

08001084 <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001088:	4625      	mov	r5, r4
 800108a:	4b0a      	ldr	r3, [pc, #40]	; (80010b4 <_ZN10STM32F4DMAC1Ev+0x30>)
 800108c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800108e:	2600      	movs	r6, #0
 8001090:	6060      	str	r0, [r4, #4]
 8001092:	7226      	strb	r6, [r4, #8]
 8001094:	7266      	strb	r6, [r4, #9]
 8001096:	f845 3b20 	str.w	r3, [r5], #32
 800109a:	2260      	movs	r2, #96	; 0x60
 800109c:	4629      	mov	r1, r5
 800109e:	f009 fb53 	bl	800a748 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80010a2:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
        : color(0)
 80010a6:	61ae      	str	r6, [r5, #24]
 80010a8:	3520      	adds	r5, #32
 80010aa:	42ab      	cmp	r3, r5
 80010ac:	d1fb      	bne.n	80010a6 <_ZN10STM32F4DMAC1Ev+0x22>
{}
 80010ae:	4620      	mov	r0, r4
 80010b0:	bd70      	pop	{r4, r5, r6, pc}
 80010b2:	bf00      	nop
 80010b4:	0801c9cc 	.word	0x0801c9cc

080010b8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80010b8:	2001      	movs	r0, #1
 80010ba:	4770      	bx	lr

080010bc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80010bc:	2038      	movs	r0, #56	; 0x38
 80010be:	4770      	bx	lr

080010c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80010c0:	2338      	movs	r3, #56	; 0x38
 80010c2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010c6:	3008      	adds	r0, #8
 80010c8:	4770      	bx	lr

080010ca <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80010ca:	2338      	movs	r3, #56	; 0x38
 80010cc:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010d0:	3008      	adds	r0, #8
 80010d2:	4770      	bx	lr

080010d4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010d4:	2001      	movs	r0, #1
 80010d6:	4770      	bx	lr

080010d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010d8:	f44f 70ba 	mov.w	r0, #372	; 0x174
 80010dc:	4770      	bx	lr

080010de <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010de:	f44f 73ba 	mov.w	r3, #372	; 0x174
 80010e2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010e6:	3008      	adds	r0, #8
 80010e8:	4770      	bx	lr

080010ea <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ea:	f44f 73ba 	mov.w	r3, #372	; 0x174
 80010ee:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010f2:	3008      	adds	r0, #8
 80010f4:	4770      	bx	lr

080010f6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010f6:	2001      	movs	r0, #1
 80010f8:	4770      	bx	lr

080010fa <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010fa:	2010      	movs	r0, #16
 80010fc:	4770      	bx	lr

080010fe <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010fe:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001102:	3008      	adds	r0, #8
 8001104:	4770      	bx	lr

08001106 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001106:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800110a:	3008      	adds	r0, #8
 800110c:	4770      	bx	lr

0800110e <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 800110e:	4608      	mov	r0, r1
 8001110:	f001 ba92 	b.w	8002638 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001114:	b510      	push	{r4, lr}
 8001116:	4b03      	ldr	r3, [pc, #12]	; (8001124 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8001118:	6003      	str	r3, [r0, #0]
 800111a:	4604      	mov	r4, r0
 800111c:	f008 fa5a 	bl	80095d4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001120:	4620      	mov	r0, r4
 8001122:	bd10      	pop	{r4, pc}
 8001124:	0801ca84 	.word	0x0801ca84

08001128 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8001128:	b510      	push	{r4, lr}
 800112a:	4604      	mov	r4, r0
 800112c:	f7ff fff2 	bl	8001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001130:	4620      	mov	r0, r4
 8001132:	2140      	movs	r1, #64	; 0x40
 8001134:	f01a f93c 	bl	801b3b0 <_ZdlPvj>
 8001138:	4620      	mov	r0, r4
 800113a:	bd10      	pop	{r4, pc}

0800113c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800113c:	b510      	push	{r4, lr}
 800113e:	4b03      	ldr	r3, [pc, #12]	; (800114c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001140:	6003      	str	r3, [r0, #0]
 8001142:	4604      	mov	r4, r0
 8001144:	f008 fa46 	bl	80095d4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001148:	4620      	mov	r0, r4
 800114a:	bd10      	pop	{r4, pc}
 800114c:	0801ca50 	.word	0x0801ca50

08001150 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001150:	b510      	push	{r4, lr}
 8001152:	4604      	mov	r4, r0
 8001154:	f7ff fff2 	bl	800113c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001158:	4620      	mov	r0, r4
 800115a:	f44f 71be 	mov.w	r1, #380	; 0x17c
 800115e:	f01a f927 	bl	801b3b0 <_ZdlPvj>
 8001162:	4620      	mov	r0, r4
 8001164:	bd10      	pop	{r4, pc}
	...

08001168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001168:	b510      	push	{r4, lr}
 800116a:	4b03      	ldr	r3, [pc, #12]	; (8001178 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800116c:	6003      	str	r3, [r0, #0]
 800116e:	4604      	mov	r4, r0
 8001170:	f008 fa30 	bl	80095d4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001174:	4620      	mov	r0, r4
 8001176:	bd10      	pop	{r4, pc}
 8001178:	0801ca1c 	.word	0x0801ca1c

0800117c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800117c:	b510      	push	{r4, lr}
 800117e:	4604      	mov	r4, r0
 8001180:	f7ff fff2 	bl	8001168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001184:	4620      	mov	r0, r4
 8001186:	2118      	movs	r1, #24
 8001188:	f01a f912 	bl	801b3b0 <_ZdlPvj>
 800118c:	4620      	mov	r0, r4
 800118e:	bd10      	pop	{r4, pc}

08001190 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001190:	b510      	push	{r4, lr}
 8001192:	4b08      	ldr	r3, [pc, #32]	; (80011b4 <_ZN12FrontendHeapD1Ev+0x24>)
 8001194:	6003      	str	r3, [r0, #0]
 8001196:	4604      	mov	r4, r0
 8001198:	f500 70d4 	add.w	r0, r0, #424	; 0x1a8
 800119c:	f7ff ffba 	bl	8001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80011a0:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80011a4:	f7ff ffca 	bl	800113c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011a8:	f104 0014 	add.w	r0, r4, #20
 80011ac:	f7ff ffdc 	bl	8001168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011b0:	4620      	mov	r0, r4
 80011b2:	bd10      	pop	{r4, pc}
 80011b4:	0801cab8 	.word	0x0801cab8

080011b8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80011b8:	b508      	push	{r3, lr}
 80011ba:	4802      	ldr	r0, [pc, #8]	; (80011c4 <__tcf_0+0xc>)
 80011bc:	f7ff ffe8 	bl	8001190 <_ZN12FrontendHeapD1Ev>
 80011c0:	bd08      	pop	{r3, pc}
 80011c2:	bf00      	nop
 80011c4:	2000019c 	.word	0x2000019c

080011c8 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011c8:	b510      	push	{r4, lr}
 80011ca:	4604      	mov	r4, r0
 80011cc:	f7ff ffe0 	bl	8001190 <_ZN12FrontendHeapD1Ev>
 80011d0:	4620      	mov	r0, r4
 80011d2:	f44f 7151 	mov.w	r1, #836	; 0x344
 80011d6:	f01a f8eb 	bl	801b3b0 <_ZdlPvj>
 80011da:	4620      	mov	r0, r4
 80011dc:	bd10      	pop	{r4, pc}
	...

080011e0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011e0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011e4:	f000 ff24 	bl	8002030 <_ZN14BitmapDatabase11getInstanceEv>
 80011e8:	4605      	mov	r5, r0
 80011ea:	f000 ff25 	bl	8002038 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011ee:	2400      	movs	r4, #0
 80011f0:	4601      	mov	r1, r0
 80011f2:	4623      	mov	r3, r4
 80011f4:	4628      	mov	r0, r5
 80011f6:	4622      	mov	r2, r4
 80011f8:	9400      	str	r4, [sp, #0]
 80011fa:	f00e fab5 	bl	800f768 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80011fe:	4b25      	ldr	r3, [pc, #148]	; (8001294 <touchgfx_init+0xb4>)
 8001200:	4a25      	ldr	r2, [pc, #148]	; (8001298 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 8001202:	4d26      	ldr	r5, [pc, #152]	; (800129c <touchgfx_init+0xbc>)
 8001204:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001206:	4620      	mov	r0, r4
 8001208:	f001 feb6 	bl	8002f78 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800120c:	4824      	ldr	r0, [pc, #144]	; (80012a0 <touchgfx_init+0xc0>)
 800120e:	f00e f9ed 	bl	800f5ec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001212:	782b      	ldrb	r3, [r5, #0]
 8001214:	f3bf 8f5b 	dmb	ish
 8001218:	07db      	lsls	r3, r3, #31
 800121a:	d435      	bmi.n	8001288 <touchgfx_init+0xa8>
 800121c:	4628      	mov	r0, r5
 800121e:	f01a f8c9 	bl	801b3b4 <__cxa_guard_acquire>
 8001222:	b388      	cbz	r0, 8001288 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001224:	4c1f      	ldr	r4, [pc, #124]	; (80012a4 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001226:	4b20      	ldr	r3, [pc, #128]	; (80012a8 <touchgfx_init+0xc8>)
 8001228:	6023      	str	r3, [r4, #0]
 800122a:	f504 76f6 	add.w	r6, r4, #492	; 0x1ec
 800122e:	f104 0014 	add.w	r0, r4, #20
 8001232:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001236:	f504 77d4 	add.w	r7, r4, #424	; 0x1a8
 800123a:	6060      	str	r0, [r4, #4]
 800123c:	f8c4 8008 	str.w	r8, [r4, #8]
 8001240:	60e7      	str	r7, [r4, #12]
 8001242:	6126      	str	r6, [r4, #16]
 8001244:	f008 f9c8 	bl	80095d8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001248:	4b18      	ldr	r3, [pc, #96]	; (80012ac <touchgfx_init+0xcc>)
 800124a:	6163      	str	r3, [r4, #20]
 800124c:	4640      	mov	r0, r8
 800124e:	f008 f9c3 	bl	80095d8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001252:	4b17      	ldr	r3, [pc, #92]	; (80012b0 <touchgfx_init+0xd0>)
 8001254:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001256:	4638      	mov	r0, r7
 8001258:	f008 f9be 	bl	80095d8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800125c:	4b15      	ldr	r3, [pc, #84]	; (80012b4 <touchgfx_init+0xd4>)
 800125e:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
 8001262:	f504 70f4 	add.w	r0, r4, #488	; 0x1e8
 8001266:	f001 ff07 	bl	8003078 <_ZN5ModelC1Ev>
 800126a:	4622      	mov	r2, r4
 800126c:	f504 71f4 	add.w	r1, r4, #488	; 0x1e8
 8001270:	4630      	mov	r0, r6
 8001272:	f001 fef7 	bl	8003064 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001276:	4630      	mov	r0, r6
 8001278:	f001 f9de 	bl	8002638 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 800127c:	480e      	ldr	r0, [pc, #56]	; (80012b8 <touchgfx_init+0xd8>)
 800127e:	f01a f8e3 	bl	801b448 <atexit>
 8001282:	4628      	mov	r0, r5
 8001284:	f01a f8a2 	bl	801b3cc <__cxa_guard_release>

    FrontendHeap& heap = FrontendHeap::getInstance();
    (void)heap; // we need to obtain the reference above to initialize the frontend heap.

    hal.initialize();
 8001288:	480c      	ldr	r0, [pc, #48]	; (80012bc <touchgfx_init+0xdc>)
}
 800128a:	b002      	add	sp, #8
 800128c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001290:	f7ff bbae 	b.w	80009f0 <_ZN11TouchGFXHAL10initializeEv>
 8001294:	2000a488 	.word	0x2000a488
 8001298:	20001180 	.word	0x20001180
 800129c:	20000198 	.word	0x20000198
 80012a0:	2000001c 	.word	0x2000001c
 80012a4:	2000019c 	.word	0x2000019c
 80012a8:	0801cab8 	.word	0x0801cab8
 80012ac:	0801ca1c 	.word	0x0801ca1c
 80012b0:	0801ca50 	.word	0x0801ca50
 80012b4:	0801ca84 	.word	0x0801ca84
 80012b8:	080011b9 	.word	0x080011b9
 80012bc:	20001104 	.word	0x20001104

080012c0 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80012c0:	4801      	ldr	r0, [pc, #4]	; (80012c8 <touchgfx_taskEntry+0x8>)
 80012c2:	f7ff badf 	b.w	8000884 <_ZN11TouchGFXHAL9taskEntryEv>
 80012c6:	bf00      	nop
 80012c8:	20001104 	.word	0x20001104

080012cc <_GLOBAL__sub_I_touchgfx_init>:
}
 80012cc:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 80012ce:	4c24      	ldr	r4, [pc, #144]	; (8001360 <_GLOBAL__sub_I_touchgfx_init+0x94>)
static STM32F4DMA dma;
 80012d0:	4e24      	ldr	r6, [pc, #144]	; (8001364 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80012d2:	4b25      	ldr	r3, [pc, #148]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static LCD16bpp display;
 80012d4:	4d25      	ldr	r5, [pc, #148]	; (800136c <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 80012d6:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 80012d8:	4630      	mov	r0, r6
 80012da:	f7ff fed3 	bl	8001084 <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 80012de:	4628      	mov	r0, r5
 80012e0:	f011 face 	bl	8012880 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderVariant(HARDWARE)
 80012e4:	4b22      	ldr	r3, [pc, #136]	; (8001370 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 80012e6:	4823      	ldr	r0, [pc, #140]	; (8001374 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80012e8:	60dc      	str	r4, [r3, #12]
 80012ea:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012ee:	f8a3 1048 	strh.w	r1, [r3, #72]	; 0x48
 80012f2:	f8a3 1076 	strh.w	r1, [r3, #118]	; 0x76
 80012f6:	2101      	movs	r1, #1
 80012f8:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 80012fc:	491e      	ldr	r1, [pc, #120]	; (8001378 <_GLOBAL__sub_I_touchgfx_init+0xac>)
        DISPLAY_HEIGHT = height;
 80012fe:	4c1f      	ldr	r4, [pc, #124]	; (800137c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        instance = this;
 8001300:	600b      	str	r3, [r1, #0]
          lastRenderVariant(HARDWARE)
 8001302:	2200      	movs	r2, #0
        DISPLAY_WIDTH = width;
 8001304:	491e      	ldr	r1, [pc, #120]	; (8001380 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : listener(0), dragThresholdValue(0)
 8001306:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderVariant(HARDWARE)
 8001308:	e9c3 0219 	strd	r0, r2, [r3, #100]	; 0x64
        DISPLAY_WIDTH = width;
 800130c:	f44f 7050 	mov.w	r0, #832	; 0x340
 8001310:	8008      	strh	r0, [r1, #0]
        DISPLAY_HEIGHT = height;
 8001312:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8001316:	8021      	strh	r1, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8001318:	4c1a      	ldr	r4, [pc, #104]	; (8001384 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
          lastRenderVariant(HARDWARE)
 800131a:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
        DISPLAY_ROTATION = rotate0;
 800131e:	7022      	strb	r2, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8001320:	4c19      	ldr	r4, [pc, #100]	; (8001388 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
    {
 8001322:	655a      	str	r2, [r3, #84]	; 0x54
          lastRenderVariant(HARDWARE)
 8001324:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001328:	e9c3 2206 	strd	r2, r2, [r3, #24]
 800132c:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001330:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8001334:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001338:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
 800133c:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
 8001340:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8001344:	671a      	str	r2, [r3, #112]	; 0x70
 8001346:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 800134a:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800134e:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001350:	480e      	ldr	r0, [pc, #56]	; (800138c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001352:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 8001356:	4a0e      	ldr	r2, [pc, #56]	; (8001390 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001358:	8001      	strh	r1, [r0, #0]
 800135a:	601a      	str	r2, [r3, #0]
}
 800135c:	bd70      	pop	{r4, r5, r6, pc}
 800135e:	bf00      	nop
 8001360:	200004e0 	.word	0x200004e0
 8001364:	200004e4 	.word	0x200004e4
 8001368:	0801c6a4 	.word	0x0801c6a4
 800136c:	20001184 	.word	0x20001184
 8001370:	20001104 	.word	0x20001104
 8001374:	01000001 	.word	0x01000001
 8001378:	2000a42c 	.word	0x2000a42c
 800137c:	2000a422 	.word	0x2000a422
 8001380:	2000a420 	.word	0x2000a420
 8001384:	2000a424 	.word	0x2000a424
 8001388:	2000a426 	.word	0x2000a426
 800138c:	2000a428 	.word	0x2000a428
 8001390:	0801c788 	.word	0x0801c788

08001394 <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 8001394:	4801      	ldr	r0, [pc, #4]	; (800139c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001396:	f7ff bcfd 	b.w	8000d94 <_ZN10STM32F4DMAD1Ev>
 800139a:	bf00      	nop
 800139c:	200004e4 	.word	0x200004e4

080013a0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013a0:	4b02      	ldr	r3, [pc, #8]	; (80013ac <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80013a2:	2290      	movs	r2, #144	; 0x90
 80013a4:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 80013a8:	4770      	bx	lr
 80013aa:	bf00      	nop
 80013ac:	e000e100 	.word	0xe000e100

080013b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013b0:	4b02      	ldr	r3, [pc, #8]	; (80013bc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80013b2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013b6:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80013b8:	4770      	bx	lr
 80013ba:	bf00      	nop
 80013bc:	e000e100 	.word	0xe000e100

080013c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 80013c0:	4770      	bx	lr

080013c2 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80013c2:	4770      	bx	lr

080013c4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013c4:	f008 baf8 	b.w	80099b8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013c8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013c8:	4b04      	ldr	r3, [pc, #16]	; (80013dc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013ca:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013ce:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80013d2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013d6:	f3bf 8f6f 	isb	sy
}
 80013da:	4770      	bx	lr
 80013dc:	e000e100 	.word	0xe000e100

080013e0 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80013e0:	b538      	push	{r3, r4, r5, lr}
 80013e2:	4604      	mov	r4, r0
    HAL::initialize();
 80013e4:	f008 fde0 	bl	8009fa8 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013e8:	6823      	ldr	r3, [r4, #0]
 80013ea:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80013ec:	f00b fc78 	bl	800cce0 <_ZN8touchgfx11Application11getInstanceEv>
 80013f0:	4601      	mov	r1, r0
 80013f2:	4620      	mov	r0, r4
 80013f4:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013f6:	6823      	ldr	r3, [r4, #0]
 80013f8:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 80013fa:	2300      	movs	r3, #0
 80013fc:	461a      	mov	r2, r3
 80013fe:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 8001402:	4620      	mov	r0, r4
 8001404:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 8001406:	2301      	movs	r3, #1
 8001408:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 800140c:	bd38      	pop	{r3, r4, r5, pc}
	...

08001410 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8001410:	4901      	ldr	r1, [pc, #4]	; (8001418 <vApplicationIdleHook+0x8>)
 8001412:	2000      	movs	r0, #0
 8001414:	f007 bc02 	b.w	8008c1c <vTaskSetApplicationTaskTag>
 8001418:	08000c2d 	.word	0x08000c2d

0800141c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800141c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001420:	b0a4      	sub	sp, #144	; 0x90
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001422:	2210      	movs	r2, #16
 8001424:	2100      	movs	r1, #0
 8001426:	a80a      	add	r0, sp, #40	; 0x28
 8001428:	f01a f87c 	bl	801b524 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800142c:	2214      	movs	r2, #20
 800142e:	2100      	movs	r1, #0
 8001430:	a803      	add	r0, sp, #12
 8001432:	f01a f877 	bl	801b524 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001436:	2100      	movs	r1, #0
 8001438:	223c      	movs	r2, #60	; 0x3c
 800143a:	a815      	add	r0, sp, #84	; 0x54
 800143c:	f01a f872 	bl	801b524 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001440:	2400      	movs	r4, #0
 8001442:	4b24      	ldr	r3, [pc, #144]	; (80014d4 <SystemClock_Config+0xb8>)
 8001444:	9401      	str	r4, [sp, #4]
 8001446:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001448:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800144c:	641a      	str	r2, [r3, #64]	; 0x40
 800144e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001450:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001454:	9301      	str	r3, [sp, #4]
 8001456:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001458:	4b1f      	ldr	r3, [pc, #124]	; (80014d8 <SystemClock_Config+0xbc>)
 800145a:	9402      	str	r4, [sp, #8]
 800145c:	681a      	ldr	r2, [r3, #0]
 800145e:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001462:	601a      	str	r2, [r3, #0]
 8001464:	681b      	ldr	r3, [r3, #0]
 8001466:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800146a:	9302      	str	r3, [sp, #8]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800146c:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800146e:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001470:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001474:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001478:	2502      	movs	r5, #2
 800147a:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800147e:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001482:	f04f 0808 	mov.w	r8, #8
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 4;
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001486:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001488:	f44f 77b4 	mov.w	r7, #360	; 0x168
  RCC_OscInitStruct.PLL.PLLR = 6;
 800148c:	2606      	movs	r6, #6
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800148e:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001490:	e9cd 3613 	strd	r3, r6, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001494:	e9cd 8710 	strd	r8, r7, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001498:	9512      	str	r5, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800149a:	f005 fb01 	bl	8006aa0 <HAL_RCC_OscConfig>
  {
    Error_Handler();
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 800149e:	f004 fd5b 	bl	8005f58 <HAL_PWREx_EnableOverDrive>
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80014a2:	230f      	movs	r3, #15
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80014a4:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014a8:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80014ac:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80014b0:	e9cd 1306 	strd	r1, r3, [sp, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014b4:	a803      	add	r0, sp, #12
 80014b6:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80014b8:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014ba:	f005 f8c5 	bl	8006648 <HAL_RCC_ClockConfig>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80014be:	a815      	add	r0, sp, #84	; 0x54
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80014c0:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 80014c4:	9719      	str	r7, [sp, #100]	; 0x64
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 80014c6:	961c      	str	r6, [sp, #112]	; 0x70
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 80014c8:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80014ca:	f005 f987 	bl	80067dc <HAL_RCCEx_PeriphCLKConfig>
  {
    Error_Handler();
  }
}
 80014ce:	b024      	add	sp, #144	; 0x90
 80014d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80014d4:	40023800 	.word	0x40023800
 80014d8:	40007000 	.word	0x40007000

080014dc <main>:
{
 80014dc:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014e0:	b0bd      	sub	sp, #244	; 0xf4
  HAL_Init();
 80014e2:	f002 fe0f 	bl	8004104 <HAL_Init>
  SystemClock_Config();
 80014e6:	f7ff ff99 	bl	800141c <SystemClock_Config>
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014ea:	2214      	movs	r2, #20
 80014ec:	2100      	movs	r1, #0
 80014ee:	a82f      	add	r0, sp, #188	; 0xbc

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014f0:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014f2:	f01a f817 	bl	801b524 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014f6:	4bc8      	ldr	r3, [pc, #800]	; (8001818 <main+0x33c>)
 80014f8:	9402      	str	r4, [sp, #8]
 80014fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  __HAL_RCC_GPIOH_CLK_ENABLE();
  __HAL_RCC_GPIOC_CLK_ENABLE();
  __HAL_RCC_GPIOJ_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80014fc:	48c7      	ldr	r0, [pc, #796]	; (800181c <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014fe:	f042 0210 	orr.w	r2, r2, #16
 8001502:	631a      	str	r2, [r3, #48]	; 0x30
 8001504:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001506:	f002 0210 	and.w	r2, r2, #16
 800150a:	9202      	str	r2, [sp, #8]
 800150c:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800150e:	9403      	str	r4, [sp, #12]
 8001510:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001512:	f042 0202 	orr.w	r2, r2, #2
 8001516:	631a      	str	r2, [r3, #48]	; 0x30
 8001518:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151a:	f002 0202 	and.w	r2, r2, #2
 800151e:	9203      	str	r2, [sp, #12]
 8001520:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001522:	9404      	str	r4, [sp, #16]
 8001524:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001526:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800152a:	631a      	str	r2, [r3, #48]	; 0x30
 800152c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800152e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001532:	9204      	str	r2, [sp, #16]
 8001534:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001536:	9405      	str	r4, [sp, #20]
 8001538:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800153a:	f042 0208 	orr.w	r2, r2, #8
 800153e:	631a      	str	r2, [r3, #48]	; 0x30
 8001540:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001542:	f002 0208 	and.w	r2, r2, #8
 8001546:	9205      	str	r2, [sp, #20]
 8001548:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800154a:	9406      	str	r4, [sp, #24]
 800154c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800154e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001552:	631a      	str	r2, [r3, #48]	; 0x30
 8001554:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001556:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800155a:	9206      	str	r2, [sp, #24]
 800155c:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800155e:	9407      	str	r4, [sp, #28]
 8001560:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001562:	f042 0220 	orr.w	r2, r2, #32
 8001566:	631a      	str	r2, [r3, #48]	; 0x30
 8001568:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156a:	f002 0220 	and.w	r2, r2, #32
 800156e:	9207      	str	r2, [sp, #28]
 8001570:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001572:	9408      	str	r4, [sp, #32]
 8001574:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001576:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800157a:	631a      	str	r2, [r3, #48]	; 0x30
 800157c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800157e:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001582:	9208      	str	r2, [sp, #32]
 8001584:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001586:	9409      	str	r4, [sp, #36]	; 0x24
 8001588:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800158a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800158e:	631a      	str	r2, [r3, #48]	; 0x30
 8001590:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001592:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001596:	9209      	str	r2, [sp, #36]	; 0x24
 8001598:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800159a:	940a      	str	r4, [sp, #40]	; 0x28
 800159c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800159e:	f042 0204 	orr.w	r2, r2, #4
 80015a2:	631a      	str	r2, [r3, #48]	; 0x30
 80015a4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015a6:	f002 0204 	and.w	r2, r2, #4
 80015aa:	920a      	str	r2, [sp, #40]	; 0x28
 80015ac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015ae:	940b      	str	r4, [sp, #44]	; 0x2c
 80015b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015b2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80015b6:	631a      	str	r2, [r3, #48]	; 0x30
 80015b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015ba:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80015be:	930b      	str	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015c0:	2201      	movs	r2, #1
 80015c2:	2108      	movs	r1, #8
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015c6:	f003 fec5 	bl	8005354 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 80015ca:	4895      	ldr	r0, [pc, #596]	; (8001820 <main+0x344>)
 80015cc:	4622      	mov	r2, r4
 80015ce:	2110      	movs	r1, #16
 80015d0:	f003 fec0 	bl	8005354 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 80015d4:	4893      	ldr	r0, [pc, #588]	; (8001824 <main+0x348>)
 80015d6:	4622      	mov	r2, r4
 80015d8:	2140      	movs	r1, #64	; 0x40
 80015da:	f003 febb 	bl	8005354 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015de:	4622      	mov	r2, r4
 80015e0:	4891      	ldr	r0, [pc, #580]	; (8001828 <main+0x34c>)
 80015e2:	2180      	movs	r1, #128	; 0x80
 80015e4:	f003 feb6 	bl	8005354 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PK3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015e8:	2611      	movs	r6, #17
 80015ea:	2308      	movs	r3, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015ec:	488b      	ldr	r0, [pc, #556]	; (800181c <main+0x340>)
 80015ee:	a92f      	add	r1, sp, #188	; 0xbc

  /*Configure GPIO pin : RENDER_TIME_Pin */
  GPIO_InitStruct.Pin = RENDER_TIME_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015f0:	2701      	movs	r7, #1
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015f2:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015f6:	e9cd 362f 	strd	r3, r6, [sp, #188]	; 0xbc
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015fa:	f04f 0a10 	mov.w	sl, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015fe:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001602:	f003 fd17 	bl	8005034 <HAL_GPIO_Init>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 8001606:	4886      	ldr	r0, [pc, #536]	; (8001820 <main+0x344>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001608:	9431      	str	r4, [sp, #196]	; 0xc4
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 800160a:	a92f      	add	r1, sp, #188	; 0xbc
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800160c:	e9cd a72f 	strd	sl, r7, [sp, #188]	; 0xbc
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001610:	f8cd 80c8 	str.w	r8, [sp, #200]	; 0xc8
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 8001614:	f003 fd0e 	bl	8005034 <HAL_GPIO_Init>

  /*Configure GPIO pin : VSYNC_FREQ_Pin */
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
 8001618:	2340      	movs	r3, #64	; 0x40
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 800161a:	4882      	ldr	r0, [pc, #520]	; (8001824 <main+0x348>)
 800161c:	a92f      	add	r1, sp, #188	; 0xbc

  /*Configure GPIO pin : PH7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 800161e:	2580      	movs	r5, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001620:	e9cd 372f 	strd	r3, r7, [sp, #188]	; 0xbc
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001624:	e9cd 4831 	strd	r4, r8, [sp, #196]	; 0xc4
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 8001628:	f003 fd04 	bl	8005034 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800162c:	a92f      	add	r1, sp, #188	; 0xbc
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800162e:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001630:	487d      	ldr	r0, [pc, #500]	; (8001828 <main+0x34c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001632:	9332      	str	r3, [sp, #200]	; 0xc8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001634:	e9cd 562f 	strd	r5, r6, [sp, #188]	; 0xbc
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001638:	9431      	str	r4, [sp, #196]	; 0xc4
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800163a:	f003 fcfb 	bl	8005034 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 800163e:	487b      	ldr	r0, [pc, #492]	; (800182c <main+0x350>)
  hdma2d.Instance = DMA2D;
 8001640:	4e7b      	ldr	r6, [pc, #492]	; (8001830 <main+0x354>)
  hcrc.Instance = CRC;
 8001642:	4b7c      	ldr	r3, [pc, #496]	; (8001834 <main+0x358>)
 8001644:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001646:	f002 fe03 	bl	8004250 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 800164a:	4b7b      	ldr	r3, [pc, #492]	; (8001838 <main+0x35c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 800164c:	e9c6 440a 	strd	r4, r4, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001650:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001654:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001656:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 800165a:	e9c6 4402 	strd	r4, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800165e:	f002 ff4d 	bl	80044fc <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001662:	4639      	mov	r1, r7
 8001664:	4630      	mov	r0, r6
 8001666:	f003 f8d3 	bl	8004810 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800166a:	4629      	mov	r1, r5
 800166c:	4622      	mov	r2, r4
 800166e:	486e      	ldr	r0, [pc, #440]	; (8001828 <main+0x34c>)
  hdsi.Instance = DSI;
 8001670:	4e72      	ldr	r6, [pc, #456]	; (800183c <main+0x360>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001672:	f003 fe6f 	bl	8005354 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 8001676:	2014      	movs	r0, #20
 8001678:	f002 fd70 	bl	800415c <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 800167c:	4629      	mov	r1, r5
 800167e:	463a      	mov	r2, r7
 8001680:	4869      	ldr	r0, [pc, #420]	; (8001828 <main+0x34c>)
 8001682:	f003 fe67 	bl	8005354 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 8001686:	200a      	movs	r0, #10
 8001688:	f002 fd68 	bl	800415c <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 800168c:	2224      	movs	r2, #36	; 0x24
 800168e:	4621      	mov	r1, r4
 8001690:	a815      	add	r0, sp, #84	; 0x54
  DSI_PLLInitTypeDef PLLInit = {0};
 8001692:	940e      	str	r4, [sp, #56]	; 0x38
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8001694:	f019 ff46 	bl	801b524 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 8001698:	2218      	movs	r2, #24
 800169a:	4621      	mov	r1, r4
 800169c:	a80f      	add	r0, sp, #60	; 0x3c
 800169e:	f019 ff41 	bl	801b524 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 80016a2:	2234      	movs	r2, #52	; 0x34
 80016a4:	4621      	mov	r1, r4
 80016a6:	a82f      	add	r0, sp, #188	; 0xbc
 80016a8:	f019 ff3c 	bl	801b524 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 80016ac:	222c      	movs	r2, #44	; 0x2c
 80016ae:	4621      	mov	r1, r4
 80016b0:	a822      	add	r0, sp, #136	; 0x88
 80016b2:	f019 ff37 	bl	801b524 <memset>
  hdsi.Instance = DSI;
 80016b6:	4b62      	ldr	r3, [pc, #392]	; (8001840 <main+0x364>)
  hdsi.Init.TXEscapeCkdiv = 4;
 80016b8:	2504      	movs	r5, #4
  PLLInit.PLLNDIV = 125;
 80016ba:	227d      	movs	r2, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016bc:	a90c      	add	r1, sp, #48	; 0x30
 80016be:	4630      	mov	r0, r6
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 80016c0:	e9c6 3400 	strd	r3, r4, [r6]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016c4:	e9cd 280c 	strd	r2, r8, [sp, #48]	; 0x30
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 80016c8:	e9c6 5702 	strd	r5, r7, [r6, #8]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016cc:	f003 f968 	bl	80049a0 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016d0:	a915      	add	r1, sp, #84	; 0x54
 80016d2:	4630      	mov	r0, r6
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 80016d4:	e9cd 7415 	strd	r7, r4, [sp, #84]	; 0x54
  HostTimeouts.HighSpeedReadTimeout = 0;
 80016d8:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedWriteTimeout = 0;
 80016dc:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.LowPowerWriteTimeout = 0;
 80016e0:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.BTATimeout = 0;
 80016e4:	941d      	str	r4, [sp, #116]	; 0x74
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016e6:	f003 fb83 	bl	8004df0 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 80016ea:	231c      	movs	r3, #28
 80016ec:	2221      	movs	r2, #33	; 0x21
 80016ee:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
  PhyTimings.DataLaneLP2HSTime = 25;
 80016f2:	210f      	movs	r1, #15
 80016f4:	2219      	movs	r2, #25
 80016f6:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016fa:	4630      	mov	r0, r6
 80016fc:	a90f      	add	r1, sp, #60	; 0x3c
  PhyTimings.StopWaitTime = 0;
 80016fe:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001702:	f003 fb38 	bl	8004d76 <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 8001706:	4629      	mov	r1, r5
 8001708:	4630      	mov	r0, r6
 800170a:	f003 fb23 	bl	8004d54 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 800170e:	f242 7110 	movw	r1, #10000	; 0x2710
 8001712:	4630      	mov	r0, r6
 8001714:	f003 fc77 	bl	8005006 <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 8001718:	4621      	mov	r1, r4
 800171a:	4630      	mov	r0, r6
 800171c:	f003 f8dd 	bl	80048da <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8001720:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001724:	f44f 7200 	mov.w	r2, #512	; 0x200
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001728:	f44f 6980 	mov.w	r9, #1024	; 0x400
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 800172c:	e9cd 022f 	strd	r0, r2, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001730:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001734:	e9cd 9231 	strd	r9, r2, [sp, #196]	; 0xc4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001738:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800173c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8001740:	e9cd 2133 	strd	r2, r1, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001744:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001748:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 800174c:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001750:	e9cd 3135 	strd	r3, r1, [sp, #212]	; 0xd4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001754:	f44f 2180 	mov.w	r1, #262144	; 0x40000
 8001758:	e9cd c137 	strd	ip, r1, [sp, #220]	; 0xdc
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 800175c:	f44f 2e00 	mov.w	lr, #524288	; 0x80000
 8001760:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8001764:	e9cd e139 	strd	lr, r1, [sp, #228]	; 0xe4
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001768:	4630      	mov	r0, r6
 800176a:	a92f      	add	r1, sp, #188	; 0xbc
  CmdCfg.CommandSize = 200;
 800176c:	f04f 0bc8 	mov.w	fp, #200	; 0xc8
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8001770:	f8cd 80ec 	str.w	r8, [sp, #236]	; 0xec
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001774:	f003 faba 	bl	8004cec <HAL_DSI_ConfigCommand>
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001778:	a922      	add	r1, sp, #136	; 0x88
 800177a:	4630      	mov	r0, r6
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 800177c:	e9cd 4526 	strd	r4, r5, [sp, #152]	; 0x98
  CmdCfg.ColorCoding = DSI_RGB565;
 8001780:	e9cd 4422 	strd	r4, r4, [sp, #136]	; 0x88
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001784:	e9cd ba24 	strd	fp, sl, [sp, #144]	; 0x90
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 8001788:	e9cd 8428 	strd	r8, r4, [sp, #160]	; 0xa0
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 800178c:	e9cd 442a 	strd	r4, r4, [sp, #168]	; 0xa8
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8001790:	972c      	str	r7, [sp, #176]	; 0xb0
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001792:	f003 fa39 	bl	8004c08 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8001796:	4621      	mov	r1, r4
 8001798:	4630      	mov	r0, r6
 800179a:	f003 fa24 	bl	8004be6 <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800179e:	4829      	ldr	r0, [pc, #164]	; (8001844 <main+0x368>)
 80017a0:	4929      	ldr	r1, [pc, #164]	; (8001848 <main+0x36c>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 80017a2:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 80017a4:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80017a8:	2340      	movs	r3, #64	; 0x40
 80017aa:	2120      	movs	r1, #32
 80017ac:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017b0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80017b4:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017b8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80017bc:	e9c0 2309 	strd	r2, r3, [r0, #36]	; 0x24
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80017c0:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.WriteRecoveryTime = 3;
 80017c4:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 80017c6:	2207      	movs	r2, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017c8:	a92f      	add	r1, sp, #188	; 0xbc
  SdramTiming.RPDelay = 2;
 80017ca:	e9cd 3833 	strd	r3, r8, [sp, #204]	; 0xcc
  SdramTiming.SelfRefreshTime = 4;
 80017ce:	e9cd 2530 	strd	r2, r5, [sp, #192]	; 0xc0
  SdramTiming.RowCycleDelay = 7;
 80017d2:	9232      	str	r2, [sp, #200]	; 0xc8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80017d4:	e9c0 4502 	strd	r4, r5, [r0, #8]
  SdramTiming.LoadToActiveDelay = 2;
 80017d8:	f8cd 80bc 	str.w	r8, [sp, #188]	; 0xbc
  SdramTiming.RCDDelay = 2;
 80017dc:	f8cd 80d4 	str.w	r8, [sp, #212]	; 0xd4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017e0:	f005 fae8 	bl	8006db4 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 80017e4:	f002 fbbc 	bl	8003f60 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 80017e8:	f002 fb6c 	bl	8003ec4 <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017ec:	2234      	movs	r2, #52	; 0x34
 80017ee:	4621      	mov	r1, r4
 80017f0:	a815      	add	r0, sp, #84	; 0x54
 80017f2:	f019 fe97 	bl	801b524 <memset>
  LTDC_LayerCfgTypeDef pLayerCfg1 = {0};
 80017f6:	2234      	movs	r2, #52	; 0x34
 80017f8:	4621      	mov	r1, r4
 80017fa:	a822      	add	r0, sp, #136	; 0x88
  hltdc.Instance = LTDC;
 80017fc:	4d13      	ldr	r5, [pc, #76]	; (800184c <main+0x370>)
  LTDC_LayerCfgTypeDef pLayerCfg1 = {0};
 80017fe:	f019 fe91 	bl	801b524 <memset>
  hltdc.Instance = LTDC;
 8001802:	4b13      	ldr	r3, [pc, #76]	; (8001850 <main+0x374>)
  hltdc.Init.Backcolor.Blue = 0;
 8001804:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001806:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 800180a:	22ca      	movs	r2, #202	; 0xca
 800180c:	f44f 73f1 	mov.w	r3, #482	; 0x1e2
 8001810:	e9c5 2309 	strd	r2, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 8001814:	21cb      	movs	r1, #203	; 0xcb
 8001816:	e01d      	b.n	8001854 <main+0x378>
 8001818:	40023800 	.word	0x40023800
 800181c:	40022800 	.word	0x40022800
 8001820:	40020c00 	.word	0x40020c00
 8001824:	40021800 	.word	0x40021800
 8001828:	40021c00 	.word	0x40021c00
 800182c:	20001200 	.word	0x20001200
 8001830:	20001208 	.word	0x20001208
 8001834:	40023000 	.word	0x40023000
 8001838:	4002b000 	.word	0x4002b000
 800183c:	20001248 	.word	0x20001248
 8001840:	40016c00 	.word	0x40016c00
 8001844:	200013ac 	.word	0x200013ac
 8001848:	a0000140 	.word	0xa0000140
 800184c:	200012b8 	.word	0x200012b8
 8001850:	40016800 	.word	0x40016800
 8001854:	f240 13e3 	movw	r3, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001858:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 800185a:	e9c5 130b 	strd	r1, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800185e:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 8001862:	e9c5 4704 	strd	r4, r7, [r5, #16]
  hltdc.Init.AccumulatedHBP = 2;
 8001866:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 800186a:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 800186e:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001872:	f004 fa3b 	bl	8005cec <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001876:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.WindowY1 = 480;
 8001878:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.Alpha0 = 0;
 800187c:	e9cd 341a 	strd	r3, r4, [sp, #104]	; 0x68
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001880:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 8001884:	2305      	movs	r3, #5
 8001886:	e9cd 311d 	strd	r3, r1, [sp, #116]	; 0x74
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800188a:	e9cd 2818 	strd	r2, r8, [sp, #96]	; 0x60
  pLayerCfg.ImageHeight = 480;
 800188e:	e9cd b21f 	strd	fp, r2, [sp, #124]	; 0x7c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001892:	a915      	add	r1, sp, #84	; 0x54
 8001894:	4622      	mov	r2, r4
 8001896:	4628      	mov	r0, r5
  pLayerCfg.WindowX1 = 200;
 8001898:	e9cd 4b15 	strd	r4, fp, [sp, #84]	; 0x54
  pLayerCfg.WindowY0 = 0;
 800189c:	9417      	str	r4, [sp, #92]	; 0x5c
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 800189e:	f8cd 9070 	str.w	r9, [sp, #112]	; 0x70
  pLayerCfg.Backcolor.Blue = 0;
 80018a2:	f8ad 4084 	strh.w	r4, [sp, #132]	; 0x84
  pLayerCfg.Backcolor.Red = 0;
 80018a6:	f88d 4086 	strb.w	r4, [sp, #134]	; 0x86
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018aa:	f004 faeb 	bl	8005e84 <HAL_LTDC_ConfigLayer>
  pLayerCfg1.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80018ae:	2305      	movs	r3, #5
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg1, 1) != HAL_OK)
 80018b0:	a922      	add	r1, sp, #136	; 0x88
 80018b2:	463a      	mov	r2, r7
 80018b4:	4628      	mov	r0, r5
  pLayerCfg1.FBStartAdress = 0;
 80018b6:	e9cd 342a 	strd	r3, r4, [sp, #168]	; 0xa8
  pLayerCfg1.WindowX1 = 0;
 80018ba:	e9cd 4422 	strd	r4, r4, [sp, #136]	; 0x88
  pLayerCfg1.WindowY1 = 0;
 80018be:	e9cd 4424 	strd	r4, r4, [sp, #144]	; 0x90
  pLayerCfg1.Alpha = 0;
 80018c2:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  pLayerCfg1.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 80018c6:	e9cd 4928 	strd	r4, r9, [sp, #160]	; 0xa0
  pLayerCfg1.ImageHeight = 0;
 80018ca:	e9cd 442c 	strd	r4, r4, [sp, #176]	; 0xb0
  pLayerCfg1.Backcolor.Blue = 0;
 80018ce:	f8ad 40b8 	strh.w	r4, [sp, #184]	; 0xb8
  pLayerCfg1.Backcolor.Red = 0;
 80018d2:	f88d 40ba 	strb.w	r4, [sp, #186]	; 0xba
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg1, 1) != HAL_OK)
 80018d6:	f004 fad5 	bl	8005e84 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 80018da:	682a      	ldr	r2, [r5, #0]
 80018dc:	6993      	ldr	r3, [r2, #24]
 80018de:	f023 0301 	bic.w	r3, r3, #1
 80018e2:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 80018e4:	4630      	mov	r0, r6
 80018e6:	f003 fae9 	bl	8004ebc <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 80018ea:	4639      	mov	r1, r7
 80018ec:	4640      	mov	r0, r8
 80018ee:	f001 fcad 	bl	800324c <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 80018f2:	2328      	movs	r3, #40	; 0x28
 80018f4:	2215      	movs	r2, #21
 80018f6:	4621      	mov	r1, r4
 80018f8:	9400      	str	r4, [sp, #0]
 80018fa:	4630      	mov	r0, r6
 80018fc:	f003 fb11 	bl	8004f22 <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001900:	a92f      	add	r1, sp, #188	; 0xbc
 8001902:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 8001904:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8001908:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 800190c:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 8001910:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 8001914:	e9cd 4437 	strd	r4, r4, [sp, #220]	; 0xdc
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 8001918:	9439      	str	r4, [sp, #228]	; 0xe4
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 800191a:	f003 f9e7 	bl	8004cec <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 800191e:	f44f 7148 	mov.w	r1, #800	; 0x320
 8001922:	4622      	mov	r2, r4
 8001924:	4628      	mov	r0, r5
 8001926:	f004 fadb 	bl	8005ee0 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 800192a:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 800192c:	481c      	ldr	r0, [pc, #112]	; (80019a0 <main+0x4c4>)
  __HAL_LTDC_ENABLE(&hltdc);
 800192e:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 8001930:	4d1c      	ldr	r5, [pc, #112]	; (80019a4 <main+0x4c8>)
  __HAL_LTDC_ENABLE(&hltdc);
 8001932:	433b      	orrs	r3, r7
 8001934:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 8001936:	4b1c      	ldr	r3, [pc, #112]	; (80019a8 <main+0x4cc>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8001938:	6204      	str	r4, [r0, #32]
  hqspi.Init.ClockPrescaler = 1;
 800193a:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 800193e:	231b      	movs	r3, #27
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8001940:	e9c0 3904 	strd	r3, r9, [r0, #16]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8001944:	e9c0 7a02 	strd	r7, sl, [r0, #8]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 8001948:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 800194c:	f004 fc12 	bl	8006174 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 8001950:	f002 f97e 	bl	8003c50 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 8001954:	f002 f8b2 	bl	8003abc <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 8001958:	f002 f828 	bl	80039ac <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 800195c:	4813      	ldr	r0, [pc, #76]	; (80019ac <main+0x4d0>)
 800195e:	4b14      	ldr	r3, [pc, #80]	; (80019b0 <main+0x4d4>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001960:	622c      	str	r4, [r5, #32]
  hi2c1.Init.ClockSpeed = 400000;
 8001962:	e9c5 0300 	strd	r0, r3, [r5]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001966:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800196a:	4628      	mov	r0, r5
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800196c:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c1.Init.OwnAddress1 = 0;
 8001970:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001974:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001978:	f003 fed4 	bl	8005724 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 800197c:	4628      	mov	r0, r5
 800197e:	f003 ff79 	bl	8005874 <HAL_I2C_DeInit>
  MX_TouchGFX_Init();
 8001982:	f7fe fe38 	bl	80005f6 <MX_TouchGFX_Init>
  osKernelInitialize();
 8001986:	f005 fc53 	bl	8007230 <osKernelInitialize>
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800198a:	4a0a      	ldr	r2, [pc, #40]	; (80019b4 <main+0x4d8>)
 800198c:	480a      	ldr	r0, [pc, #40]	; (80019b8 <main+0x4dc>)
 800198e:	4621      	mov	r1, r4
 8001990:	f005 fc88 	bl	80072a4 <osThreadNew>
 8001994:	4b09      	ldr	r3, [pc, #36]	; (80019bc <main+0x4e0>)
 8001996:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001998:	f005 fc64 	bl	8007264 <osKernelStart>
  while (1)
 800199c:	e7fe      	b.n	800199c <main+0x4c0>
 800199e:	bf00      	nop
 80019a0:	20001360 	.word	0x20001360
 80019a4:	20001264 	.word	0x20001264
 80019a8:	a0001000 	.word	0xa0001000
 80019ac:	40005400 	.word	0x40005400
 80019b0:	00061a80 	.word	0x00061a80
 80019b4:	0801cad4 	.word	0x0801cad4
 80019b8:	080005fb 	.word	0x080005fb
 80019bc:	200011fc 	.word	0x200011fc

080019c0 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80019c0:	6802      	ldr	r2, [r0, #0]
 80019c2:	4b03      	ldr	r3, [pc, #12]	; (80019d0 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80019c4:	429a      	cmp	r2, r3
 80019c6:	d101      	bne.n	80019cc <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80019c8:	f002 bbb6 	b.w	8004138 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80019cc:	4770      	bx	lr
 80019ce:	bf00      	nop
 80019d0:	40001000 	.word	0x40001000

080019d4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019d4:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019d6:	4b0e      	ldr	r3, [pc, #56]	; (8001a10 <HAL_MspInit+0x3c>)
 80019d8:	2200      	movs	r2, #0
 80019da:	9200      	str	r2, [sp, #0]
 80019dc:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019de:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019e2:	6459      	str	r1, [r3, #68]	; 0x44
 80019e4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019e6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019ea:	9100      	str	r1, [sp, #0]
 80019ec:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019ee:	9201      	str	r2, [sp, #4]
 80019f0:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019f2:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80019f6:	6419      	str	r1, [r3, #64]	; 0x40
 80019f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019fa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019fe:	9301      	str	r3, [sp, #4]
 8001a00:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a02:	210f      	movs	r1, #15
 8001a04:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a08:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a0a:	f002 bbcd 	b.w	80041a8 <HAL_NVIC_SetPriority>
 8001a0e:	bf00      	nop
 8001a10:	40023800 	.word	0x40023800

08001a14 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a14:	6802      	ldr	r2, [r0, #0]
 8001a16:	4b09      	ldr	r3, [pc, #36]	; (8001a3c <HAL_CRC_MspInit+0x28>)
 8001a18:	429a      	cmp	r2, r3
{
 8001a1a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a1c:	d10b      	bne.n	8001a36 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a1e:	2300      	movs	r3, #0
 8001a20:	9301      	str	r3, [sp, #4]
 8001a22:	4b07      	ldr	r3, [pc, #28]	; (8001a40 <HAL_CRC_MspInit+0x2c>)
 8001a24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a26:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a2a:	631a      	str	r2, [r3, #48]	; 0x30
 8001a2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a2e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a32:	9301      	str	r3, [sp, #4]
 8001a34:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a36:	b002      	add	sp, #8
 8001a38:	4770      	bx	lr
 8001a3a:	bf00      	nop
 8001a3c:	40023000 	.word	0x40023000
 8001a40:	40023800 	.word	0x40023800

08001a44 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a44:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a46:	4b0f      	ldr	r3, [pc, #60]	; (8001a84 <HAL_DMA2D_MspInit+0x40>)
 8001a48:	6802      	ldr	r2, [r0, #0]
 8001a4a:	429a      	cmp	r2, r3
 8001a4c:	d116      	bne.n	8001a7c <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a4e:	2200      	movs	r2, #0
 8001a50:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a54:	9201      	str	r2, [sp, #4]
 8001a56:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a58:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001a5c:	6319      	str	r1, [r3, #48]	; 0x30
 8001a5e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a60:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a64:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a66:	2105      	movs	r1, #5
 8001a68:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a6a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a6c:	f002 fb9c 	bl	80041a8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a70:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a72:	b003      	add	sp, #12
 8001a74:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a78:	f002 bbc8 	b.w	800420c <HAL_NVIC_EnableIRQ>
}
 8001a7c:	b003      	add	sp, #12
 8001a7e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a82:	bf00      	nop
 8001a84:	4002b000 	.word	0x4002b000

08001a88 <HAL_DMA2D_MspDeInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001a88:	6802      	ldr	r2, [r0, #0]
 8001a8a:	4b06      	ldr	r3, [pc, #24]	; (8001aa4 <HAL_DMA2D_MspDeInit+0x1c>)
 8001a8c:	429a      	cmp	r2, r3
 8001a8e:	d107      	bne.n	8001aa0 <HAL_DMA2D_MspDeInit+0x18>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 8001a90:	4a05      	ldr	r2, [pc, #20]	; (8001aa8 <HAL_DMA2D_MspDeInit+0x20>)
 8001a92:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001a94:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001a98:	6313      	str	r3, [r2, #48]	; 0x30

    /* DMA2D interrupt DeInit */
    HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 8001a9a:	205a      	movs	r0, #90	; 0x5a
 8001a9c:	f002 bbc4 	b.w	8004228 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 8001aa0:	4770      	bx	lr
 8001aa2:	bf00      	nop
 8001aa4:	4002b000 	.word	0x4002b000
 8001aa8:	40023800 	.word	0x40023800

08001aac <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001aac:	b510      	push	{r4, lr}
 8001aae:	4604      	mov	r4, r0
 8001ab0:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ab2:	2214      	movs	r2, #20
 8001ab4:	2100      	movs	r1, #0
 8001ab6:	a803      	add	r0, sp, #12
 8001ab8:	f019 fd34 	bl	801b524 <memset>
  if(hdsi->Instance==DSI)
 8001abc:	6822      	ldr	r2, [r4, #0]
 8001abe:	4b17      	ldr	r3, [pc, #92]	; (8001b1c <HAL_DSI_MspInit+0x70>)
 8001ac0:	429a      	cmp	r2, r3
 8001ac2:	d128      	bne.n	8001b16 <HAL_DSI_MspInit+0x6a>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001ac4:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001ac8:	2400      	movs	r4, #0
 8001aca:	9401      	str	r4, [sp, #4]
 8001acc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001ace:	4814      	ldr	r0, [pc, #80]	; (8001b20 <HAL_DSI_MspInit+0x74>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001ad0:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001ad4:	645a      	str	r2, [r3, #68]	; 0x44
 8001ad6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ad8:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001adc:	9201      	str	r2, [sp, #4]
 8001ade:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001ae0:	9402      	str	r4, [sp, #8]
 8001ae2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ae4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001ae8:	631a      	str	r2, [r3, #48]	; 0x30
 8001aea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001aec:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001af0:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001af2:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001af4:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001af6:	2302      	movs	r3, #2
 8001af8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001afc:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001afe:	230d      	movs	r3, #13
 8001b00:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b02:	f003 fa97 	bl	8005034 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001b06:	205c      	movs	r0, #92	; 0x5c
 8001b08:	4622      	mov	r2, r4
 8001b0a:	2105      	movs	r1, #5
 8001b0c:	f002 fb4c 	bl	80041a8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001b10:	205c      	movs	r0, #92	; 0x5c
 8001b12:	f002 fb7b 	bl	800420c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001b16:	b008      	add	sp, #32
 8001b18:	bd10      	pop	{r4, pc}
 8001b1a:	bf00      	nop
 8001b1c:	40016c00 	.word	0x40016c00
 8001b20:	40022400 	.word	0x40022400

08001b24 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b24:	b530      	push	{r4, r5, lr}
 8001b26:	4604      	mov	r4, r0
 8001b28:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b2a:	2214      	movs	r2, #20
 8001b2c:	2100      	movs	r1, #0
 8001b2e:	a803      	add	r0, sp, #12
 8001b30:	f019 fcf8 	bl	801b524 <memset>
  if(hi2c->Instance==I2C1)
 8001b34:	6822      	ldr	r2, [r4, #0]
 8001b36:	4b1a      	ldr	r3, [pc, #104]	; (8001ba0 <HAL_I2C_MspInit+0x7c>)
 8001b38:	429a      	cmp	r2, r3
 8001b3a:	d12f      	bne.n	8001b9c <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b3c:	4c19      	ldr	r4, [pc, #100]	; (8001ba4 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b3e:	481a      	ldr	r0, [pc, #104]	; (8001ba8 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b40:	2500      	movs	r5, #0
 8001b42:	9501      	str	r5, [sp, #4]
 8001b44:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b46:	f043 0302 	orr.w	r3, r3, #2
 8001b4a:	6323      	str	r3, [r4, #48]	; 0x30
 8001b4c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b4e:	f003 0302 	and.w	r3, r3, #2
 8001b52:	9301      	str	r3, [sp, #4]
 8001b54:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b56:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001b5a:	2312      	movs	r3, #18
 8001b5c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b60:	2101      	movs	r1, #1
 8001b62:	2303      	movs	r3, #3
 8001b64:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b68:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b6a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b6c:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b6e:	f003 fa61 	bl	8005034 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001b72:	9502      	str	r5, [sp, #8]
 8001b74:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b76:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b7a:	6423      	str	r3, [r4, #64]	; 0x40
 8001b7c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b7e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001b82:	9302      	str	r3, [sp, #8]
 8001b84:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001b86:	6a23      	ldr	r3, [r4, #32]
 8001b88:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b8c:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001b8e:	6a23      	ldr	r3, [r4, #32]
 8001b90:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b94:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001b96:	2064      	movs	r0, #100	; 0x64
 8001b98:	f002 fae0 	bl	800415c <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001b9c:	b009      	add	sp, #36	; 0x24
 8001b9e:	bd30      	pop	{r4, r5, pc}
 8001ba0:	40005400 	.word	0x40005400
 8001ba4:	40023800 	.word	0x40023800
 8001ba8:	40020400 	.word	0x40020400

08001bac <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001bac:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001bae:	6802      	ldr	r2, [r0, #0]
 8001bb0:	4b0a      	ldr	r3, [pc, #40]	; (8001bdc <HAL_I2C_MspDeInit+0x30>)
 8001bb2:	429a      	cmp	r2, r3
 8001bb4:	d110      	bne.n	8001bd8 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001bb6:	4a0a      	ldr	r2, [pc, #40]	; (8001be0 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001bb8:	480a      	ldr	r0, [pc, #40]	; (8001be4 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001bba:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001bbc:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001bc0:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001bc2:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001bc6:	f003 fb1d 	bl	8005204 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001bca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001bce:	4805      	ldr	r0, [pc, #20]	; (8001be4 <HAL_I2C_MspDeInit+0x38>)
 8001bd0:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001bd4:	f003 bb16 	b.w	8005204 <HAL_GPIO_DeInit>
}
 8001bd8:	bd08      	pop	{r3, pc}
 8001bda:	bf00      	nop
 8001bdc:	40005400 	.word	0x40005400
 8001be0:	40023800 	.word	0x40023800
 8001be4:	40020400 	.word	0x40020400

08001be8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001be8:	b507      	push	{r0, r1, r2, lr}
  if(hltdc->Instance==LTDC)
 8001bea:	4b0f      	ldr	r3, [pc, #60]	; (8001c28 <HAL_LTDC_MspInit+0x40>)
 8001bec:	6802      	ldr	r2, [r0, #0]
 8001bee:	429a      	cmp	r2, r3
 8001bf0:	d116      	bne.n	8001c20 <HAL_LTDC_MspInit+0x38>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001bf2:	2200      	movs	r2, #0
 8001bf4:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001bf8:	9201      	str	r2, [sp, #4]
 8001bfa:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001bfc:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8001c00:	6459      	str	r1, [r3, #68]	; 0x44
 8001c02:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c04:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001c08:	9301      	str	r3, [sp, #4]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c0a:	2105      	movs	r1, #5
 8001c0c:	2058      	movs	r0, #88	; 0x58
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c0e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c10:	f002 faca 	bl	80041a8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c14:	2058      	movs	r0, #88	; 0x58
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001c16:	b003      	add	sp, #12
 8001c18:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c1c:	f002 baf6 	b.w	800420c <HAL_NVIC_EnableIRQ>
}
 8001c20:	b003      	add	sp, #12
 8001c22:	f85d fb04 	ldr.w	pc, [sp], #4
 8001c26:	bf00      	nop
 8001c28:	40016800 	.word	0x40016800

08001c2c <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001c2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c2e:	4604      	mov	r4, r0
 8001c30:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c32:	2214      	movs	r2, #20
 8001c34:	2100      	movs	r1, #0
 8001c36:	a803      	add	r0, sp, #12
 8001c38:	f019 fc74 	bl	801b524 <memset>
  if(hqspi->Instance==QUADSPI)
 8001c3c:	6822      	ldr	r2, [r4, #0]
 8001c3e:	4b24      	ldr	r3, [pc, #144]	; (8001cd0 <HAL_QSPI_MspInit+0xa4>)
 8001c40:	429a      	cmp	r2, r3
 8001c42:	d142      	bne.n	8001cca <HAL_QSPI_MspInit+0x9e>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c44:	4b23      	ldr	r3, [pc, #140]	; (8001cd4 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c46:	4824      	ldr	r0, [pc, #144]	; (8001cd8 <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c48:	2400      	movs	r4, #0
 8001c4a:	9400      	str	r4, [sp, #0]
 8001c4c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c4e:	f042 0202 	orr.w	r2, r2, #2
 8001c52:	639a      	str	r2, [r3, #56]	; 0x38
 8001c54:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c56:	f002 0202 	and.w	r2, r2, #2
 8001c5a:	9200      	str	r2, [sp, #0]
 8001c5c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c5e:	9401      	str	r4, [sp, #4]
 8001c60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c62:	f042 0202 	orr.w	r2, r2, #2
 8001c66:	631a      	str	r2, [r3, #48]	; 0x30
 8001c68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c6a:	f002 0202 	and.w	r2, r2, #2
 8001c6e:	9201      	str	r2, [sp, #4]
 8001c70:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c72:	9402      	str	r4, [sp, #8]
 8001c74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c76:	f042 0220 	orr.w	r2, r2, #32
 8001c7a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c7e:	f003 0320 	and.w	r3, r3, #32
 8001c82:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c84:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c86:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c88:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c8a:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c8c:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c8e:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c90:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c94:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c98:	f003 f9cc 	bl	8005034 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001c9c:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ca0:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ca4:	480d      	ldr	r0, [pc, #52]	; (8001cdc <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001ca6:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ca8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001caa:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cac:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb0:	f003 f9c0 	bl	8005034 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001cb4:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb8:	4808      	ldr	r0, [pc, #32]	; (8001cdc <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cba:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cbc:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cbe:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cc2:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cc6:	f003 f9b5 	bl	8005034 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001cca:	b009      	add	sp, #36	; 0x24
 8001ccc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cce:	bf00      	nop
 8001cd0:	a0001000 	.word	0xa0001000
 8001cd4:	40023800 	.word	0x40023800
 8001cd8:	40020400 	.word	0x40020400
 8001cdc:	40021400 	.word	0x40021400

08001ce0 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001ce0:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001ce2:	6802      	ldr	r2, [r0, #0]
 8001ce4:	4b09      	ldr	r3, [pc, #36]	; (8001d0c <HAL_QSPI_MspDeInit+0x2c>)
 8001ce6:	429a      	cmp	r2, r3
 8001ce8:	d10f      	bne.n	8001d0a <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cea:	4a09      	ldr	r2, [pc, #36]	; (8001d10 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cec:	4809      	ldr	r0, [pc, #36]	; (8001d14 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cee:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001cf0:	f023 0302 	bic.w	r3, r3, #2
 8001cf4:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cf6:	2140      	movs	r1, #64	; 0x40
 8001cf8:	f003 fa84 	bl	8005204 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001cfc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001d00:	4805      	ldr	r0, [pc, #20]	; (8001d18 <HAL_QSPI_MspDeInit+0x38>)
 8001d02:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001d06:	f003 ba7d 	b.w	8005204 <HAL_GPIO_DeInit>
}
 8001d0a:	bd08      	pop	{r3, pc}
 8001d0c:	a0001000 	.word	0xa0001000
 8001d10:	40023800 	.word	0x40023800
 8001d14:	40020400 	.word	0x40020400
 8001d18:	40021400 	.word	0x40021400

08001d1c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d1e:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001d20:	2300      	movs	r3, #0
 8001d22:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001d24:	4b30      	ldr	r3, [pc, #192]	; (8001de8 <HAL_SDRAM_MspInit+0xcc>)
 8001d26:	681c      	ldr	r4, [r3, #0]
 8001d28:	2c00      	cmp	r4, #0
 8001d2a:	d15a      	bne.n	8001de2 <HAL_SDRAM_MspInit+0xc6>
  FMC_Initialized = 1;
 8001d2c:	2201      	movs	r2, #1
 8001d2e:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d30:	4b2e      	ldr	r3, [pc, #184]	; (8001dec <HAL_SDRAM_MspInit+0xd0>)
 8001d32:	9400      	str	r4, [sp, #0]
 8001d34:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d36:	482e      	ldr	r0, [pc, #184]	; (8001df0 <HAL_SDRAM_MspInit+0xd4>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d38:	f042 0201 	orr.w	r2, r2, #1
 8001d3c:	639a      	str	r2, [r3, #56]	; 0x38
 8001d3e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001d40:	f003 0301 	and.w	r3, r3, #1
 8001d44:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d46:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d48:	2603      	movs	r6, #3
 8001d4a:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d4c:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d4e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d50:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001d54:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d58:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d5c:	f003 f96a 	bl	8005034 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001d60:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d64:	4823      	ldr	r0, [pc, #140]	; (8001df4 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d66:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d68:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d6a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d6e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d72:	f003 f95f 	bl	8005034 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001d76:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d7a:	481f      	ldr	r0, [pc, #124]	; (8001df8 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d7c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d7e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d80:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d84:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d88:	f003 f954 	bl	8005034 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001d8c:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d90:	481a      	ldr	r0, [pc, #104]	; (8001dfc <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d92:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d94:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d96:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d9a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d9e:	f003 f949 	bl	8005034 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001da2:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001da6:	4816      	ldr	r0, [pc, #88]	; (8001e00 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001da8:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001daa:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dac:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001db0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001db4:	f003 f93e 	bl	8005034 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001db8:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dbc:	4811      	ldr	r0, [pc, #68]	; (8001e04 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dbe:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dc0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dc2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dc6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dca:	f003 f933 	bl	8005034 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001dce:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001dd0:	480d      	ldr	r0, [pc, #52]	; (8001e08 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dd2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001dd4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dd6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dda:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001dde:	f003 f929 	bl	8005034 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001de2:	b007      	add	sp, #28
 8001de4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001de6:	bf00      	nop
 8001de8:	200013e4 	.word	0x200013e4
 8001dec:	40023800 	.word	0x40023800
 8001df0:	40021000 	.word	0x40021000
 8001df4:	40021800 	.word	0x40021800
 8001df8:	40020c00 	.word	0x40020c00
 8001dfc:	40022000 	.word	0x40022000
 8001e00:	40021400 	.word	0x40021400
 8001e04:	40021c00 	.word	0x40021c00
 8001e08:	40020800 	.word	0x40020800

08001e0c <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001e0c:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001e0e:	4b17      	ldr	r3, [pc, #92]	; (8001e6c <HAL_SDRAM_MspDeInit+0x60>)
 8001e10:	681a      	ldr	r2, [r3, #0]
 8001e12:	bb52      	cbnz	r2, 8001e6a <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001e14:	2201      	movs	r2, #1
 8001e16:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e18:	4a15      	ldr	r2, [pc, #84]	; (8001e70 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e1a:	4816      	ldr	r0, [pc, #88]	; (8001e74 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e1c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001e1e:	f023 0301 	bic.w	r3, r3, #1
 8001e22:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e24:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001e28:	f003 f9ec 	bl	8005204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001e2c:	4812      	ldr	r0, [pc, #72]	; (8001e78 <HAL_SDRAM_MspDeInit+0x6c>)
 8001e2e:	f248 1133 	movw	r1, #33075	; 0x8133
 8001e32:	f003 f9e7 	bl	8005204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001e36:	4811      	ldr	r0, [pc, #68]	; (8001e7c <HAL_SDRAM_MspDeInit+0x70>)
 8001e38:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001e3c:	f003 f9e2 	bl	8005204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001e40:	480f      	ldr	r0, [pc, #60]	; (8001e80 <HAL_SDRAM_MspDeInit+0x74>)
 8001e42:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001e46:	f003 f9dd 	bl	8005204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001e4a:	480e      	ldr	r0, [pc, #56]	; (8001e84 <HAL_SDRAM_MspDeInit+0x78>)
 8001e4c:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001e50:	f003 f9d8 	bl	8005204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001e54:	480c      	ldr	r0, [pc, #48]	; (8001e88 <HAL_SDRAM_MspDeInit+0x7c>)
 8001e56:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001e5a:	f003 f9d3 	bl	8005204 <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001e5e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001e62:	480a      	ldr	r0, [pc, #40]	; (8001e8c <HAL_SDRAM_MspDeInit+0x80>)
 8001e64:	210d      	movs	r1, #13
 8001e66:	f003 b9cd 	b.w	8005204 <HAL_GPIO_DeInit>
}
 8001e6a:	bd08      	pop	{r3, pc}
 8001e6c:	200013e0 	.word	0x200013e0
 8001e70:	40023800 	.word	0x40023800
 8001e74:	40021000 	.word	0x40021000
 8001e78:	40021800 	.word	0x40021800
 8001e7c:	40020c00 	.word	0x40020c00
 8001e80:	40022000 	.word	0x40022000
 8001e84:	40021400 	.word	0x40021400
 8001e88:	40021c00 	.word	0x40021c00
 8001e8c:	40020800 	.word	0x40020800

08001e90 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e90:	b530      	push	{r4, r5, lr}
 8001e92:	4601      	mov	r1, r0
 8001e94:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001e96:	2200      	movs	r2, #0
 8001e98:	2036      	movs	r0, #54	; 0x36
 8001e9a:	f002 f985 	bl	80041a8 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001e9e:	2036      	movs	r0, #54	; 0x36
 8001ea0:	f002 f9b4 	bl	800420c <HAL_NVIC_EnableIRQ>
  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ea4:	2500      	movs	r5, #0
 8001ea6:	4b15      	ldr	r3, [pc, #84]	; (8001efc <HAL_InitTick+0x6c>)
 8001ea8:	9502      	str	r5, [sp, #8]
 8001eaa:	6c1a      	ldr	r2, [r3, #64]	; 0x40

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001eac:	4c14      	ldr	r4, [pc, #80]	; (8001f00 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001eae:	f042 0210 	orr.w	r2, r2, #16
 8001eb2:	641a      	str	r2, [r3, #64]	; 0x40
 8001eb4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001eb6:	f003 0310 	and.w	r3, r3, #16
 8001eba:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ebc:	a901      	add	r1, sp, #4
 8001ebe:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ec0:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ec2:	f004 fc6d 	bl	80067a0 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001ec6:	f004 fc5b 	bl	8006780 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001eca:	4b0e      	ldr	r3, [pc, #56]	; (8001f04 <HAL_InitTick+0x74>)
 8001ecc:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 8001ece:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001ed2:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001ed4:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8001ed6:	4b0c      	ldr	r3, [pc, #48]	; (8001f08 <HAL_InitTick+0x78>)
 8001ed8:	fbb0 f0f3 	udiv	r0, r0, r3
 8001edc:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001ede:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001ee0:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001ee2:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ee4:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001ee6:	f005 f8d9 	bl	800709c <HAL_TIM_Base_Init>
 8001eea:	b920      	cbnz	r0, 8001ef6 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001eec:	4620      	mov	r0, r4
 8001eee:	f004 ffb9 	bl	8006e64 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001ef2:	b009      	add	sp, #36	; 0x24
 8001ef4:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001ef6:	2001      	movs	r0, #1
 8001ef8:	e7fb      	b.n	8001ef2 <HAL_InitTick+0x62>
 8001efa:	bf00      	nop
 8001efc:	40023800 	.word	0x40023800
 8001f00:	200013e8 	.word	0x200013e8
 8001f04:	40001000 	.word	0x40001000
 8001f08:	000f4240 	.word	0x000f4240

08001f0c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f0c:	4770      	bx	lr

08001f0e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f0e:	e7fe      	b.n	8001f0e <HardFault_Handler>

08001f10 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f10:	e7fe      	b.n	8001f10 <MemManage_Handler>

08001f12 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f12:	e7fe      	b.n	8001f12 <BusFault_Handler>

08001f14 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f14:	e7fe      	b.n	8001f14 <UsageFault_Handler>

08001f16 <DebugMon_Handler>:
 8001f16:	4770      	bx	lr

08001f18 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001f18:	4801      	ldr	r0, [pc, #4]	; (8001f20 <TIM6_DAC_IRQHandler+0x8>)
 8001f1a:	f004 bfb7 	b.w	8006e8c <HAL_TIM_IRQHandler>
 8001f1e:	bf00      	nop
 8001f20:	200013e8 	.word	0x200013e8

08001f24 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001f24:	4801      	ldr	r0, [pc, #4]	; (8001f2c <LTDC_IRQHandler+0x8>)
 8001f26:	f003 bf50 	b.w	8005dca <HAL_LTDC_IRQHandler>
 8001f2a:	bf00      	nop
 8001f2c:	200012b8 	.word	0x200012b8

08001f30 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001f30:	4801      	ldr	r0, [pc, #4]	; (8001f38 <DMA2D_IRQHandler+0x8>)
 8001f32:	f002 bbe3 	b.w	80046fc <HAL_DMA2D_IRQHandler>
 8001f36:	bf00      	nop
 8001f38:	20001208 	.word	0x20001208

08001f3c <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001f3c:	4801      	ldr	r0, [pc, #4]	; (8001f44 <DSI_IRQHandler+0x8>)
 8001f3e:	f002 bde0 	b.w	8004b02 <HAL_DSI_IRQHandler>
 8001f42:	bf00      	nop
 8001f44:	20001248 	.word	0x20001248

08001f48 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f48:	2001      	movs	r0, #1
 8001f4a:	4770      	bx	lr

08001f4c <_kill>:

int _kill(int pid, int sig)
{
 8001f4c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f4e:	f019 fa8f 	bl	801b470 <__errno>
 8001f52:	2316      	movs	r3, #22
 8001f54:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f56:	f04f 30ff 	mov.w	r0, #4294967295
 8001f5a:	bd08      	pop	{r3, pc}

08001f5c <_exit>:

void _exit (int status)
{
 8001f5c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f5e:	f019 fa87 	bl	801b470 <__errno>
 8001f62:	2316      	movs	r3, #22
 8001f64:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f66:	e7fe      	b.n	8001f66 <_exit+0xa>

08001f68 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f68:	b570      	push	{r4, r5, r6, lr}
 8001f6a:	460d      	mov	r5, r1
 8001f6c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f6e:	460e      	mov	r6, r1
 8001f70:	1b73      	subs	r3, r6, r5
 8001f72:	429c      	cmp	r4, r3
 8001f74:	dc01      	bgt.n	8001f7a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f76:	4620      	mov	r0, r4
 8001f78:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f7a:	f3af 8000 	nop.w
 8001f7e:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f82:	e7f5      	b.n	8001f70 <_read+0x8>

08001f84 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f84:	b570      	push	{r4, r5, r6, lr}
 8001f86:	460d      	mov	r5, r1
 8001f88:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f8a:	460e      	mov	r6, r1
 8001f8c:	1b73      	subs	r3, r6, r5
 8001f8e:	429c      	cmp	r4, r3
 8001f90:	dc01      	bgt.n	8001f96 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f92:	4620      	mov	r0, r4
 8001f94:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001f96:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001f9a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f9e:	e7f5      	b.n	8001f8c <_write+0x8>

08001fa0 <_close>:

int _close(int file)
{
	return -1;
}
 8001fa0:	f04f 30ff 	mov.w	r0, #4294967295
 8001fa4:	4770      	bx	lr

08001fa6 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001fa6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001faa:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001fac:	2000      	movs	r0, #0
 8001fae:	4770      	bx	lr

08001fb0 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001fb0:	2001      	movs	r0, #1
 8001fb2:	4770      	bx	lr

08001fb4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001fb4:	2000      	movs	r0, #0
 8001fb6:	4770      	bx	lr

08001fb8 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001fb8:	4a0a      	ldr	r2, [pc, #40]	; (8001fe4 <_sbrk+0x2c>)
 8001fba:	6811      	ldr	r1, [r2, #0]
{
 8001fbc:	b508      	push	{r3, lr}
 8001fbe:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001fc0:	b909      	cbnz	r1, 8001fc6 <_sbrk+0xe>
		heap_end = &end;
 8001fc2:	4909      	ldr	r1, [pc, #36]	; (8001fe8 <_sbrk+0x30>)
 8001fc4:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8001fc6:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001fc8:	4669      	mov	r1, sp
 8001fca:	4403      	add	r3, r0
 8001fcc:	428b      	cmp	r3, r1
 8001fce:	d906      	bls.n	8001fde <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001fd0:	f019 fa4e 	bl	801b470 <__errno>
 8001fd4:	230c      	movs	r3, #12
 8001fd6:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001fd8:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001fdc:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001fde:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001fe0:	e7fc      	b.n	8001fdc <_sbrk+0x24>
 8001fe2:	bf00      	nop
 8001fe4:	20001428 	.word	0x20001428
 8001fe8:	2000a6d0 	.word	0x2000a6d0

08001fec <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;         // verdana_10_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 3; // comicbd_83_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001fec:	4770      	bx	lr

08001fee <_ZN23ApplicationFontProviderD0Ev>:
 8001fee:	b510      	push	{r4, lr}
 8001ff0:	2104      	movs	r1, #4
 8001ff2:	4604      	mov	r4, r0
 8001ff4:	f019 f9dc 	bl	801b3b0 <_ZdlPvj>
 8001ff8:	4620      	mov	r0, r4
 8001ffa:	bd10      	pop	{r4, pc}

08001ffc <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8001ffc:	b508      	push	{r3, lr}
    switch (typography)
 8001ffe:	2903      	cmp	r1, #3
 8002000:	d813      	bhi.n	800202a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002002:	e8df f001 	tbb	[pc, r1]
 8002006:	0602      	.short	0x0602
 8002008:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800200a:	f001 f801 	bl	8003010 <_ZN17TypedTextDatabase8getFontsEv>
 800200e:	6800      	ldr	r0, [r0, #0]
        // comicbd_83_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002010:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002012:	f000 fffd 	bl	8003010 <_ZN17TypedTextDatabase8getFontsEv>
 8002016:	6840      	ldr	r0, [r0, #4]
 8002018:	e7fa      	b.n	8002010 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800201a:	f000 fff9 	bl	8003010 <_ZN17TypedTextDatabase8getFontsEv>
 800201e:	6880      	ldr	r0, [r0, #8]
 8002020:	e7f6      	b.n	8002010 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002022:	f000 fff5 	bl	8003010 <_ZN17TypedTextDatabase8getFontsEv>
 8002026:	68c0      	ldr	r0, [r0, #12]
 8002028:	e7f2      	b.n	8002010 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800202a:	2000      	movs	r0, #0
 800202c:	e7f0      	b.n	8002010 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002030 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002030:	4800      	ldr	r0, [pc, #0]	; (8002034 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002032:	4770      	bx	lr
 8002034:	0801cb0c 	.word	0x0801cb0c

08002038 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002038:	2004      	movs	r0, #4
 800203a:	4770      	bx	lr

0800203c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800203c:	b513      	push	{r0, r1, r4, lr}
 800203e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002040:	b151      	cbz	r1, 8002058 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002042:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002044:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002046:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800204a:	aa01      	add	r2, sp, #4
 800204c:	689c      	ldr	r4, [r3, #8]
 800204e:	f10d 0303 	add.w	r3, sp, #3
 8002052:	47a0      	blx	r4
        return glyph;
    }
 8002054:	b002      	add	sp, #8
 8002056:	bd10      	pop	{r4, pc}
            return 0;
 8002058:	4608      	mov	r0, r1
 800205a:	e7fb      	b.n	8002054 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800205c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800205c:	8940      	ldrh	r0, [r0, #10]
 800205e:	4770      	bx	lr

08002060 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002060:	8980      	ldrh	r0, [r0, #12]
 8002062:	4770      	bx	lr

08002064 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002064:	8880      	ldrh	r0, [r0, #4]
 8002066:	4770      	bx	lr

08002068 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002068:	7983      	ldrb	r3, [r0, #6]
 800206a:	8880      	ldrh	r0, [r0, #4]
 800206c:	4418      	add	r0, r3
    }
 800206e:	b280      	uxth	r0, r0
 8002070:	4770      	bx	lr

08002072 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002072:	79c0      	ldrb	r0, [r0, #7]
    }
 8002074:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002078:	4770      	bx	lr

0800207a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800207a:	79c0      	ldrb	r0, [r0, #7]
    }
 800207c:	09c0      	lsrs	r0, r0, #7
 800207e:	4770      	bx	lr

08002080 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002080:	4770      	bx	lr

08002082 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002082:	b510      	push	{r4, lr}
    }
 8002084:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002086:	4604      	mov	r4, r0
    }
 8002088:	f019 f992 	bl	801b3b0 <_ZdlPvj>
 800208c:	4620      	mov	r0, r4
 800208e:	bd10      	pop	{r4, pc}

08002090 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002090:	4770      	bx	lr

08002092 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002092:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002096:	6808      	ldr	r0, [r1, #0]
 8002098:	6849      	ldr	r1, [r1, #4]
 800209a:	c303      	stmia	r3!, {r0, r1}
    };
 800209c:	4770      	bx	lr

0800209e <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800209e:	2000      	movs	r0, #0
 80020a0:	4770      	bx	lr

080020a2 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80020a2:	8081      	strh	r1, [r0, #4]
    }
 80020a4:	4770      	bx	lr

080020a6 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80020a6:	80c1      	strh	r1, [r0, #6]
    }
 80020a8:	4770      	bx	lr

080020aa <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80020aa:	8101      	strh	r1, [r0, #8]
    }
 80020ac:	4770      	bx	lr

080020ae <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80020ae:	8141      	strh	r1, [r0, #10]
    }
 80020b0:	4770      	bx	lr

080020b2 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80020b2:	4770      	bx	lr

080020b4 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt)
    {
    }
 80020b4:	4770      	bx	lr

080020b6 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt)
    {
    }
 80020b6:	4770      	bx	lr

080020b8 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt)
    {
    }
 80020b8:	4770      	bx	lr

080020ba <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80020ba:	4770      	bx	lr

080020bc <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80020bc:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80020be:	88c4      	ldrh	r4, [r0, #6]
 80020c0:	6803      	ldr	r3, [r0, #0]
 80020c2:	1b12      	subs	r2, r2, r4
 80020c4:	8884      	ldrh	r4, [r0, #4]
 80020c6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80020c8:	1b09      	subs	r1, r1, r4
 80020ca:	b212      	sxth	r2, r2
    }
 80020cc:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80020d0:	b209      	sxth	r1, r1
 80020d2:	4718      	bx	r3

080020d4 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80020d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80020d8:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80020da:	f04f 33ff 	mov.w	r3, #4294967295
 80020de:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80020e0:	6813      	ldr	r3, [r2, #0]
 80020e2:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80020e4:	6010      	str	r0, [r2, #0]
    }
 80020e6:	4770      	bx	lr

080020e8 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80020e8:	4770      	bx	lr

080020ea <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80020ea:	4770      	bx	lr

080020ec <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80020ec:	6041      	str	r1, [r0, #4]
    }
 80020ee:	4770      	bx	lr

080020f0 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80020f0:	4770      	bx	lr

080020f2 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80020f2:	2301      	movs	r3, #1
 80020f4:	7203      	strb	r3, [r0, #8]
    }
 80020f6:	4770      	bx	lr

080020f8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 80020f8:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80020fc:	b11a      	cbz	r2, 8002106 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80020fe:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002102:	b102      	cbz	r2, 8002106 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002104:	6018      	str	r0, [r3, #0]
        }
    }
 8002106:	4770      	bx	lr

08002108 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 8002108:	4770      	bx	lr

0800210a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EED1Ev>:
class WipeTransition : public Transition
 800210a:	4770      	bx	lr

0800210c <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800210c:	4770      	bx	lr

0800210e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800210e:	4770      	bx	lr

08002110 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE8tearDownEv>:
            //Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 8002110:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8002112:	6840      	ldr	r0, [r0, #4]
 8002114:	6803      	ldr	r3, [r0, #0]
 8002116:	3110      	adds	r1, #16
 8002118:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800211a:	4718      	bx	r3

0800211c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE4initEv>:
    }

    virtual void init()
 800211c:	4601      	mov	r1, r0
    {
        Transition::init();
        //add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800211e:	6840      	ldr	r0, [r0, #4]
 8002120:	6803      	ldr	r3, [r0, #0]
 8002122:	3110      	adds	r1, #16
 8002124:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002126:	4718      	bx	r3

08002128 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE10invalidateEv>:
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
        //nop
    }
 8002128:	4770      	bx	lr

0800212a <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE0EE13FullSolidRect4drawERKNS_4RectE>:
        }
 800212a:	4770      	bx	lr

0800212c <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE0EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 800212c:	b510      	push	{r4, lr}
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
    {
        this->x = x;
 800212e:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 8002130:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8002134:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002138:	8002      	strh	r2, [r0, #0]
        this->y = y;
 800213a:	8042      	strh	r2, [r0, #2]
        this->width = width;
 800213c:	8084      	strh	r4, [r0, #4]
        this->height = height;
 800213e:	80c1      	strh	r1, [r0, #6]
        }
 8002140:	bd10      	pop	{r4, pc}

08002142 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002142:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8002144:	68c2      	ldr	r2, [r0, #12]
 8002146:	6841      	ldr	r1, [r0, #4]
 8002148:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800214a:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 800214c:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002150:	07d2      	lsls	r2, r2, #31
 8002152:	bf48      	it	mi
 8002154:	590a      	ldrmi	r2, [r1, r4]
 8002156:	689b      	ldr	r3, [r3, #8]
    }
 8002158:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 800215c:	bf48      	it	mi
 800215e:	58d3      	ldrmi	r3, [r2, r3]
 8002160:	4718      	bx	r3

08002162 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8002162:	6843      	ldr	r3, [r0, #4]
 8002164:	b12b      	cbz	r3, 8002172 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002166:	6883      	ldr	r3, [r0, #8]
 8002168:	b92b      	cbnz	r3, 8002176 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800216a:	68c0      	ldr	r0, [r0, #12]
 800216c:	f000 0001 	and.w	r0, r0, #1
 8002170:	4770      	bx	lr
 8002172:	4618      	mov	r0, r3
 8002174:	4770      	bx	lr
 8002176:	2001      	movs	r0, #1
    }
 8002178:	4770      	bx	lr

0800217a <_ZN8touchgfx12NoTransitionD0Ev>:
 800217a:	b510      	push	{r4, lr}
 800217c:	210c      	movs	r1, #12
 800217e:	4604      	mov	r4, r0
 8002180:	f019 f916 	bl	801b3b0 <_ZdlPvj>
 8002184:	4620      	mov	r0, r4
 8002186:	bd10      	pop	{r4, pc}

08002188 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002188:	b510      	push	{r4, lr}
 800218a:	2110      	movs	r1, #16
 800218c:	4604      	mov	r4, r0
 800218e:	f019 f90f 	bl	801b3b0 <_ZdlPvj>
 8002192:	4620      	mov	r0, r4
 8002194:	bd10      	pop	{r4, pc}

08002196 <_ZN23FrontendApplicationBaseD0Ev>:
 8002196:	b510      	push	{r4, lr}
 8002198:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800219c:	4604      	mov	r4, r0
 800219e:	f019 f907 	bl	801b3b0 <_ZdlPvj>
 80021a2:	4620      	mov	r0, r4
 80021a4:	bd10      	pop	{r4, pc}

080021a6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EED0Ev>:
class WipeTransition : public Transition
 80021a6:	b510      	push	{r4, lr}
 80021a8:	2138      	movs	r1, #56	; 0x38
 80021aa:	4604      	mov	r4, r0
 80021ac:	f019 f900 	bl	801b3b0 <_ZdlPvj>
 80021b0:	4620      	mov	r0, r4
 80021b2:	bd10      	pop	{r4, pc}

080021b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 80021b4:	b510      	push	{r4, lr}
 80021b6:	2128      	movs	r1, #40	; 0x28
 80021b8:	4604      	mov	r4, r0
 80021ba:	f019 f8f9 	bl	801b3b0 <_ZdlPvj>
 80021be:	4620      	mov	r0, r4
 80021c0:	bd10      	pop	{r4, pc}

080021c2 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80021c2:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 80021c4:	f00a fd8c 	bl	800cce0 <_ZN8touchgfx11Application11getInstanceEv>
 80021c8:	6803      	ldr	r3, [r0, #0]
    }
 80021ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 80021ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021d0:	4718      	bx	r3

080021d2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80021d2:	b510      	push	{r4, lr}
 80021d4:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80021d6:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80021da:	b158      	cbz	r0, 80021f4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80021dc:	6803      	ldr	r3, [r0, #0]
 80021de:	68db      	ldr	r3, [r3, #12]
 80021e0:	4798      	blx	r3
 80021e2:	b138      	cbz	r0, 80021f4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80021e4:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 80021e8:	6803      	ldr	r3, [r0, #0]
 80021ea:	689b      	ldr	r3, [r3, #8]
 80021ec:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80021ee:	2300      	movs	r3, #0
 80021f0:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80021f4:	bd10      	pop	{r4, pc}
	...

080021f8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 80021f8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80021fc:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002200:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002202:	68a8      	ldr	r0, [r5, #8]
 8002204:	6803      	ldr	r3, [r0, #0]
 8002206:	6a1b      	ldr	r3, [r3, #32]
 8002208:	4798      	blx	r3
 800220a:	f5b0 7fba 	cmp.w	r0, #372	; 0x174
 800220e:	d205      	bcs.n	800221c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 8002210:	4b45      	ldr	r3, [pc, #276]	; (8002328 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002212:	4a46      	ldr	r2, [pc, #280]	; (800232c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002214:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002216:	4846      	ldr	r0, [pc, #280]	; (8002330 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002218:	f019 f8f8 	bl	801b40c <__assert_func>
 800221c:	6868      	ldr	r0, [r5, #4]
 800221e:	6803      	ldr	r3, [r0, #0]
 8002220:	6a1b      	ldr	r3, [r3, #32]
 8002222:	4798      	blx	r3
 8002224:	280f      	cmp	r0, #15
 8002226:	d803      	bhi.n	8002230 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002228:	4b42      	ldr	r3, [pc, #264]	; (8002334 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 800222a:	4a40      	ldr	r2, [pc, #256]	; (800232c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800222c:	21a8      	movs	r1, #168	; 0xa8
 800222e:	e7f2      	b.n	8002216 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002230:	68e8      	ldr	r0, [r5, #12]
 8002232:	6803      	ldr	r3, [r0, #0]
 8002234:	6a1b      	ldr	r3, [r3, #32]
 8002236:	4798      	blx	r3
 8002238:	280b      	cmp	r0, #11
 800223a:	d803      	bhi.n	8002244 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 800223c:	4b3e      	ldr	r3, [pc, #248]	; (8002338 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 800223e:	4a3b      	ldr	r2, [pc, #236]	; (800232c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002240:	21a9      	movs	r1, #169	; 0xa9
 8002242:	e7e8      	b.n	8002216 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8002244:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002340 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002248:	f00a fd4a 	bl	800cce0 <_ZN8touchgfx11Application11getInstanceEv>
 800224c:	f00a fd96 	bl	800cd7c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002250:	f8d9 0000 	ldr.w	r0, [r9]
 8002254:	b110      	cbz	r0, 800225c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002256:	6803      	ldr	r3, [r0, #0]
 8002258:	68db      	ldr	r3, [r3, #12]
 800225a:	4798      	blx	r3
    if (*currentTrans)
 800225c:	f8d9 0000 	ldr.w	r0, [r9]
 8002260:	b110      	cbz	r0, 8002268 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8002262:	6803      	ldr	r3, [r0, #0]
 8002264:	681b      	ldr	r3, [r3, #0]
 8002266:	4798      	blx	r3
    if (*currentScreen)
 8002268:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002344 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 800226c:	f8d8 0000 	ldr.w	r0, [r8]
 8002270:	b110      	cbz	r0, 8002278 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002272:	6803      	ldr	r3, [r0, #0]
 8002274:	695b      	ldr	r3, [r3, #20]
 8002276:	4798      	blx	r3
    if (*currentPresenter)
 8002278:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800227c:	b110      	cbz	r0, 8002284 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800227e:	6803      	ldr	r3, [r0, #0]
 8002280:	685b      	ldr	r3, [r3, #4]
 8002282:	4798      	blx	r3
    if (*currentScreen)
 8002284:	f8d8 0000 	ldr.w	r0, [r8]
 8002288:	b110      	cbz	r0, 8002290 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800228a:	6803      	ldr	r3, [r0, #0]
 800228c:	681b      	ldr	r3, [r3, #0]
 800228e:	4798      	blx	r3
    if (*currentPresenter)
 8002290:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002294:	b110      	cbz	r0, 800229c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002296:	6803      	ldr	r3, [r0, #0]
 8002298:	689b      	ldr	r3, [r3, #8]
 800229a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800229c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800229e:	6803      	ldr	r3, [r0, #0]
 80022a0:	2100      	movs	r1, #0
 80022a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022a4:	4798      	blx	r3
        : screenContainer(0), done(false)
 80022a6:	f04f 0b00 	mov.w	fp, #0
 80022aa:	4b24      	ldr	r3, [pc, #144]	; (800233c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 80022ac:	6003      	str	r3, [r0, #0]
 80022ae:	4604      	mov	r4, r0
 80022b0:	f8c0 b004 	str.w	fp, [r0, #4]
 80022b4:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80022b8:	68a8      	ldr	r0, [r5, #8]
 80022ba:	6803      	ldr	r3, [r0, #0]
 80022bc:	4659      	mov	r1, fp
 80022be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022c0:	4798      	blx	r3
 80022c2:	4606      	mov	r6, r0
 80022c4:	f000 ff04 	bl	80030d0 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80022c8:	6868      	ldr	r0, [r5, #4]
 80022ca:	6803      	ldr	r3, [r0, #0]
 80022cc:	4659      	mov	r1, fp
 80022ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022d0:	4798      	blx	r3
 80022d2:	4631      	mov	r1, r6
 80022d4:	4605      	mov	r5, r0
 80022d6:	f000 fee1 	bl	800309c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 80022da:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80022de:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80022e2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80022e6:	b1e5      	cbz	r5, 8002322 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 80022e8:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80022ea:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80022ee:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80022f0:	f8c5 a008 	str.w	sl, [r5, #8]
 80022f4:	4630      	mov	r0, r6
 80022f6:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 80022f8:	63f5      	str	r5, [r6, #60]	; 0x3c
 80022fa:	4798      	blx	r3
    newPresenter->activate();
 80022fc:	682b      	ldr	r3, [r5, #0]
 80022fe:	4628      	mov	r0, r5
 8002300:	681b      	ldr	r3, [r3, #0]
 8002302:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002304:	4621      	mov	r1, r4
 8002306:	4630      	mov	r0, r6
 8002308:	f00c f96b 	bl	800e5e2 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800230c:	6823      	ldr	r3, [r4, #0]
 800230e:	4620      	mov	r0, r4
 8002310:	691b      	ldr	r3, [r3, #16]
 8002312:	4798      	blx	r3
    newTransition->invalidate();
 8002314:	6823      	ldr	r3, [r4, #0]
 8002316:	695b      	ldr	r3, [r3, #20]
 8002318:	4620      	mov	r0, r4
}
 800231a:	b001      	add	sp, #4
 800231c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002320:	4718      	bx	r3
    model->bind(newPresenter);
 8002322:	462b      	mov	r3, r5
 8002324:	e7e1      	b.n	80022ea <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 8002326:	bf00      	nop
 8002328:	0801cb6c 	.word	0x0801cb6c
 800232c:	0801cbfa 	.word	0x0801cbfa
 8002330:	0801ccfe 	.word	0x0801ccfe
 8002334:	0801cd45 	.word	0x0801cd45
 8002338:	0801cde8 	.word	0x0801cde8
 800233c:	0801d008 	.word	0x0801d008
 8002340:	2000a46c 	.word	0x2000a46c
 8002344:	2000a468 	.word	0x2000a468

08002348 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv>:
{
 8002348:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::WipeTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800234c:	e9d0 ba54 	ldrd	fp, sl, [r0, #336]	; 0x150
{
 8002350:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002352:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002356:	6803      	ldr	r3, [r0, #0]
 8002358:	6a1b      	ldr	r3, [r3, #32]
 800235a:	4798      	blx	r3
 800235c:	28b3      	cmp	r0, #179	; 0xb3
 800235e:	d805      	bhi.n	800236c <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x24>
 8002360:	4b56      	ldr	r3, [pc, #344]	; (80024bc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x174>)
 8002362:	4a57      	ldr	r2, [pc, #348]	; (80024c0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x178>)
 8002364:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002366:	4857      	ldr	r0, [pc, #348]	; (80024c4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x17c>)
 8002368:	f019 f850 	bl	801b40c <__assert_func>
 800236c:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002370:	6803      	ldr	r3, [r0, #0]
 8002372:	6a1b      	ldr	r3, [r3, #32]
 8002374:	4798      	blx	r3
 8002376:	280f      	cmp	r0, #15
 8002378:	d803      	bhi.n	8002382 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x3a>
 800237a:	4b53      	ldr	r3, [pc, #332]	; (80024c8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x180>)
 800237c:	4a50      	ldr	r2, [pc, #320]	; (80024c0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x178>)
 800237e:	21a8      	movs	r1, #168	; 0xa8
 8002380:	e7f1      	b.n	8002366 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002382:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002386:	6803      	ldr	r3, [r0, #0]
 8002388:	6a1b      	ldr	r3, [r3, #32]
 800238a:	4798      	blx	r3
 800238c:	2837      	cmp	r0, #55	; 0x37
 800238e:	d803      	bhi.n	8002398 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x50>
 8002390:	4b4e      	ldr	r3, [pc, #312]	; (80024cc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x184>)
 8002392:	4a4b      	ldr	r2, [pc, #300]	; (80024c0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x178>)
 8002394:	21a9      	movs	r1, #169	; 0xa9
 8002396:	e7e6      	b.n	8002366 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x1e>
    if (*currentTrans)
 8002398:	f8df 9144 	ldr.w	r9, [pc, #324]	; 80024e0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x198>
    Application::getInstance()->clearAllTimerWidgets();
 800239c:	f00a fca0 	bl	800cce0 <_ZN8touchgfx11Application11getInstanceEv>
 80023a0:	f00a fcec 	bl	800cd7c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80023a4:	f8d9 0000 	ldr.w	r0, [r9]
 80023a8:	b110      	cbz	r0, 80023b0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x68>
        (*currentTrans)->tearDown();
 80023aa:	6803      	ldr	r3, [r0, #0]
 80023ac:	68db      	ldr	r3, [r3, #12]
 80023ae:	4798      	blx	r3
    if (*currentTrans)
 80023b0:	f8d9 0000 	ldr.w	r0, [r9]
 80023b4:	b110      	cbz	r0, 80023bc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x74>
        (*currentTrans)->~Transition();
 80023b6:	6803      	ldr	r3, [r0, #0]
 80023b8:	681b      	ldr	r3, [r3, #0]
 80023ba:	4798      	blx	r3
    if (*currentScreen)
 80023bc:	f8df 8124 	ldr.w	r8, [pc, #292]	; 80024e4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x19c>
 80023c0:	f8d8 0000 	ldr.w	r0, [r8]
 80023c4:	b110      	cbz	r0, 80023cc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80023c6:	6803      	ldr	r3, [r0, #0]
 80023c8:	695b      	ldr	r3, [r3, #20]
 80023ca:	4798      	blx	r3
    if (*currentPresenter)
 80023cc:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80023d0:	b110      	cbz	r0, 80023d8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x90>
        (*currentPresenter)->deactivate();
 80023d2:	6803      	ldr	r3, [r0, #0]
 80023d4:	685b      	ldr	r3, [r3, #4]
 80023d6:	4798      	blx	r3
    if (*currentScreen)
 80023d8:	f8d8 0000 	ldr.w	r0, [r8]
 80023dc:	b110      	cbz	r0, 80023e4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x9c>
        (*currentScreen)->~Screen();
 80023de:	6803      	ldr	r3, [r0, #0]
 80023e0:	681b      	ldr	r3, [r3, #0]
 80023e2:	4798      	blx	r3
    if (*currentPresenter)
 80023e4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80023e8:	b110      	cbz	r0, 80023f0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80023ea:	6803      	ldr	r3, [r0, #0]
 80023ec:	689b      	ldr	r3, [r3, #8]
 80023ee:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80023f0:	f8db 000c 	ldr.w	r0, [fp, #12]
 80023f4:	6803      	ldr	r3, [r0, #0]
 80023f6:	2100      	movs	r1, #0
 80023f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023fa:	4798      	blx	r3
          solid()
 80023fc:	4b34      	ldr	r3, [pc, #208]	; (80024d0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x188>)
 80023fe:	6003      	str	r3, [r0, #0]
 8002400:	4604      	mov	r4, r0
 8002402:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8002406:	8103      	strh	r3, [r0, #8]
 8002408:	2500      	movs	r5, #0
 800240a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800240e:	6045      	str	r5, [r0, #4]
 8002410:	7285      	strb	r5, [r0, #10]
 8002412:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 8002414:	4b2f      	ldr	r3, [pc, #188]	; (80024d4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x18c>)
 8002416:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_HEIGHT;
 8002418:	4b2f      	ldr	r3, [pc, #188]	; (80024d8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x190>)
          solid()
 800241a:	81e5      	strh	r5, [r4, #14]
            targetValue = HAL::DISPLAY_HEIGHT;
 800241c:	f9b3 6000 	ldrsh.w	r6, [r3]
        setWidth(width);
 8002420:	4b2e      	ldr	r3, [pc, #184]	; (80024dc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x194>)
 8002422:	81a6      	strh	r6, [r4, #12]
 8002424:	f9b3 1000 	ldrsh.w	r1, [r3]
          solid()
 8002428:	3010      	adds	r0, #16
 800242a:	e9c4 5505 	strd	r5, r5, [r4, #20]
 800242e:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8002432:	e9c4 5509 	strd	r5, r5, [r4, #36]	; 0x24
 8002436:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
 800243a:	9001      	str	r0, [sp, #4]
 800243c:	f7ff fe35 	bl	80020aa <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002440:	6923      	ldr	r3, [r4, #16]
 8002442:	9801      	ldr	r0, [sp, #4]
 8002444:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002446:	4631      	mov	r1, r6
 8002448:	4798      	blx	r3
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800244a:	f8db 0008 	ldr.w	r0, [fp, #8]
 800244e:	6803      	ldr	r3, [r0, #0]
 8002450:	4629      	mov	r1, r5
 8002452:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002454:	4798      	blx	r3
 8002456:	4606      	mov	r6, r0
 8002458:	f000 fe6c 	bl	8003134 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800245c:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002460:	6803      	ldr	r3, [r0, #0]
 8002462:	4629      	mov	r1, r5
 8002464:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002466:	4798      	blx	r3
 8002468:	4631      	mov	r1, r6
 800246a:	4605      	mov	r5, r0
 800246c:	f000 fe48 	bl	8003100 <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
 8002470:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002474:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002478:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800247c:	b1e5      	cbz	r5, 80024b8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x170>
 800247e:	1d2b      	adds	r3, r5, #4
 8002480:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002484:	6833      	ldr	r3, [r6, #0]
 8002486:	f8c5 a008 	str.w	sl, [r5, #8]
 800248a:	4630      	mov	r0, r6
 800248c:	68db      	ldr	r3, [r3, #12]
 800248e:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002490:	4798      	blx	r3
    newPresenter->activate();
 8002492:	682b      	ldr	r3, [r5, #0]
 8002494:	4628      	mov	r0, r5
 8002496:	681b      	ldr	r3, [r3, #0]
 8002498:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800249a:	4621      	mov	r1, r4
 800249c:	4630      	mov	r0, r6
 800249e:	f00c f8a0 	bl	800e5e2 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80024a2:	6823      	ldr	r3, [r4, #0]
 80024a4:	4620      	mov	r0, r4
 80024a6:	691b      	ldr	r3, [r3, #16]
 80024a8:	4798      	blx	r3
    newTransition->invalidate();
 80024aa:	6823      	ldr	r3, [r4, #0]
 80024ac:	695b      	ldr	r3, [r3, #20]
 80024ae:	4620      	mov	r0, r4
}
 80024b0:	b003      	add	sp, #12
 80024b2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024b6:	4718      	bx	r3
    model->bind(newPresenter);
 80024b8:	462b      	mov	r3, r5
 80024ba:	e7e1      	b.n	8002480 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x138>
 80024bc:	0801cb6c 	.word	0x0801cb6c
 80024c0:	0801ce8b 	.word	0x0801ce8b
 80024c4:	0801ccfe 	.word	0x0801ccfe
 80024c8:	0801cd45 	.word	0x0801cd45
 80024cc:	0801cde8 	.word	0x0801cde8
 80024d0:	0801d090 	.word	0x0801d090
 80024d4:	0801d02c 	.word	0x0801d02c
 80024d8:	2000a422 	.word	0x2000a422
 80024dc:	2000a420 	.word	0x2000a420
 80024e0:	2000a46c 	.word	0x2000a46c
 80024e4:	2000a468 	.word	0x2000a468

080024e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80024e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80024ea:	4604      	mov	r4, r0
        animationCounter++;
 80024ec:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 80024ee:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80024f0:	3001      	adds	r0, #1
 80024f2:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 80024f4:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 80024f6:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 80024f8:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 80024fa:	d851      	bhi.n	80025a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xb8>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80024fc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002500:	2100      	movs	r1, #0
 8002502:	f00c f874 	bl	800e5ee <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002506:	f010 0201 	ands.w	r2, r0, #1
 800250a:	b283      	uxth	r3, r0
 800250c:	d04e      	beq.n	80025ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xc4>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800250e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002512:	2800      	cmp	r0, #0
 8002514:	bfd8      	it	le
 8002516:	460a      	movle	r2, r1
 8002518:	4413      	add	r3, r2
 800251a:	81e3      	strh	r3, [r4, #14]
                solid.setHeight(HAL::DISPLAY_HEIGHT - calculatedValue);
 800251c:	4e24      	ldr	r6, [pc, #144]	; (80025b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xc8>)
        return rect.y;
 800251e:	f9b4 1016 	ldrsh.w	r1, [r4, #22]
 8002522:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8002526:	89e3      	ldrh	r3, [r4, #14]
 8002528:	8832      	ldrh	r2, [r6, #0]
        rect.y = y;
 800252a:	82e0      	strh	r0, [r4, #22]
                screenContainer->invalidateRect(r);
 800252c:	6860      	ldr	r0, [r4, #4]
                Rect r(0, prevSolidPos, HAL::DISPLAY_WIDTH, delta);
 800252e:	4f21      	ldr	r7, [pc, #132]	; (80025b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xcc>)
        this->y = y;
 8002530:	f8ad 101a 	strh.w	r1, [sp, #26]
                solid.setHeight(HAL::DISPLAY_HEIGHT - calculatedValue);
 8002534:	1ad2      	subs	r2, r2, r3
                const uint16_t delta = calculatedValue - prevSolidPos;
 8002536:	1a5b      	subs	r3, r3, r1
        this->height = height;
 8002538:	f8ad 301e 	strh.w	r3, [sp, #30]
                screenContainer->invalidateRect(r);
 800253c:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 800253e:	8362      	strh	r2, [r4, #26]
        this->x = x;
 8002540:	2500      	movs	r5, #0
                Rect r(0, prevSolidPos, HAL::DISPLAY_WIDTH, delta);
 8002542:	f9b7 2000 	ldrsh.w	r2, [r7]
                screenContainer->invalidateRect(r);
 8002546:	691b      	ldr	r3, [r3, #16]
 8002548:	f8ad 5018 	strh.w	r5, [sp, #24]
        this->width = width;
 800254c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8002550:	a906      	add	r1, sp, #24
 8002552:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002554:	7aa3      	ldrb	r3, [r4, #10]
 8002556:	2b01      	cmp	r3, #1
 8002558:	d126      	bne.n	80025a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xc0>
 800255a:	4b17      	ldr	r3, [pc, #92]	; (80025b8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xd0>)
 800255c:	781b      	ldrb	r3, [r3, #0]
 800255e:	b31b      	cbz	r3, 80025a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xc0>
            Rect rect = solid.getRect(); //part to copy between buffers
 8002560:	69a1      	ldr	r1, [r4, #24]
 8002562:	6960      	ldr	r0, [r4, #20]
 8002564:	ab04      	add	r3, sp, #16
 8002566:	c303      	stmia	r3!, {r0, r1}
        return instance;
 8002568:	4b14      	ldr	r3, [pc, #80]	; (80025bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xd4>)
 800256a:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 800256c:	6803      	ldr	r3, [r0, #0]
 800256e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002570:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 8002572:	883b      	ldrh	r3, [r7, #0]
 8002574:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 8002578:	8833      	ldrh	r3, [r6, #0]
 800257a:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 800257e:	9003      	str	r0, [sp, #12]
        x = 0;
 8002580:	f8ad 5018 	strh.w	r5, [sp, #24]
        y = 0;
 8002584:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 8002588:	f7fe fc30 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800258c:	22ff      	movs	r2, #255	; 0xff
 800258e:	6803      	ldr	r3, [r0, #0]
 8002590:	9200      	str	r2, [sp, #0]
 8002592:	9501      	str	r5, [sp, #4]
 8002594:	68dc      	ldr	r4, [r3, #12]
 8002596:	9903      	ldr	r1, [sp, #12]
 8002598:	ab04      	add	r3, sp, #16
 800259a:	aa06      	add	r2, sp, #24
 800259c:	47a0      	blx	r4
 800259e:	e003      	b.n	80025a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xc0>
            done = true;
 80025a0:	2301      	movs	r3, #1
 80025a2:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80025a4:	2300      	movs	r3, #0
 80025a6:	72a3      	strb	r3, [r4, #10]
    }
 80025a8:	b009      	add	sp, #36	; 0x24
 80025aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80025ac:	81e0      	strh	r0, [r4, #14]
 80025ae:	e7b5      	b.n	800251c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0x34>
 80025b0:	2000a422 	.word	0x2000a422
 80025b4:	2000a420 	.word	0x2000a420
 80025b8:	2000a42a 	.word	0x2000a42a
 80025bc:	2000a42c 	.word	0x2000a42c

080025c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80025c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80025c2:	4604      	mov	r4, r0
 80025c4:	4617      	mov	r7, r2
 80025c6:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80025c8:	f00a fbf2 	bl	800cdb0 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80025cc:	4b0e      	ldr	r3, [pc, #56]	; (8002608 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 80025ce:	601c      	str	r4, [r3, #0]
      model(m)
 80025d0:	4b0e      	ldr	r3, [pc, #56]	; (800260c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 80025d2:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun_0(0)
 80025d4:	4b0e      	ldr	r3, [pc, #56]	; (8002610 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80025d6:	2500      	movs	r5, #0
 80025d8:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 80025dc:	4b0d      	ldr	r3, [pc, #52]	; (8002614 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80025de:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 80025e2:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80025e4:	6803      	ldr	r3, [r0, #0]
 80025e6:	4629      	mov	r1, r5
 80025e8:	689b      	ldr	r3, [r3, #8]
 80025ea:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 80025ee:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80025f2:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80025f4:	4628      	mov	r0, r5
 80025f6:	f000 fcbf 	bl	8002f78 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80025fa:	f7fe fbf7 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 80025fe:	f011 fda0 	bl	8014142 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002602:	4620      	mov	r0, r4
 8002604:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002606:	bf00      	nop
 8002608:	2000a478 	.word	0x2000a478
 800260c:	0801cfc4 	.word	0x0801cfc4
 8002610:	0801cfac 	.word	0x0801cfac
 8002614:	2000a42c 	.word	0x2000a42c

08002618 <_ZN23FrontendApplicationBase36gotoScreen2ScreenWipeTransitionNorthEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002618:	4b06      	ldr	r3, [pc, #24]	; (8002634 <_ZN23FrontendApplicationBase36gotoScreen2ScreenWipeTransitionNorthEv+0x1c>)
 800261a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800261e:	2300      	movs	r3, #0
 8002620:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002624:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002628:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800262c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002630:	4770      	bx	lr
 8002632:	bf00      	nop
 8002634:	08002349 	.word	0x08002349

08002638 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 8002638:	4b06      	ldr	r3, [pc, #24]	; (8002654 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 800263a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800263e:	2300      	movs	r3, #0
 8002640:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002644:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002648:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800264c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002650:	4770      	bx	lr
 8002652:	bf00      	nop
 8002654:	080021f9 	.word	0x080021f9

08002658 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002658:	6a00      	ldr	r0, [r0, #32]
 800265a:	4770      	bx	lr

0800265c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 800265c:	4770      	bx	lr

0800265e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800265e:	888b      	ldrh	r3, [r1, #4]
 8002660:	6980      	ldr	r0, [r0, #24]
 8002662:	680a      	ldr	r2, [r1, #0]
 8002664:	0adb      	lsrs	r3, r3, #11
 8002666:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800266a:	4410      	add	r0, r2
 800266c:	4770      	bx	lr

0800266e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800266e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002670:	b1c2      	cbz	r2, 80026a4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002672:	7b13      	ldrb	r3, [r2, #12]
 8002674:	b1b3      	cbz	r3, 80026a4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002676:	7b54      	ldrb	r4, [r2, #13]
 8002678:	7ad2      	ldrb	r2, [r2, #11]
 800267a:	0224      	lsls	r4, r4, #8
 800267c:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002680:	4314      	orrs	r4, r2
 8002682:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002684:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002686:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800268a:	8813      	ldrh	r3, [r2, #0]
 800268c:	428b      	cmp	r3, r1
 800268e:	d102      	bne.n	8002696 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002690:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002694:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002696:	d805      	bhi.n	80026a4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002698:	3801      	subs	r0, #1
 800269a:	b280      	uxth	r0, r0
 800269c:	3204      	adds	r2, #4
 800269e:	2800      	cmp	r0, #0
 80026a0:	d1f3      	bne.n	800268a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80026a2:	e7f7      	b.n	8002694 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80026a4:	2000      	movs	r0, #0
 80026a6:	e7f5      	b.n	8002694 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080026a8 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80026a8:	b510      	push	{r4, lr}
 80026aa:	2124      	movs	r1, #36	; 0x24
 80026ac:	4604      	mov	r4, r0
 80026ae:	f018 fe7f 	bl	801b3b0 <_ZdlPvj>
 80026b2:	4620      	mov	r0, r4
 80026b4:	bd10      	pop	{r4, pc}
	...

080026b8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 80026b8:	b530      	push	{r4, r5, lr}
 80026ba:	b089      	sub	sp, #36	; 0x24
 80026bc:	4604      	mov	r4, r0
    gsubTable(gsubData)
 80026be:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80026c2:	9506      	str	r5, [sp, #24]
 80026c4:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80026c8:	9505      	str	r5, [sp, #20]
 80026ca:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80026ce:	9504      	str	r5, [sp, #16]
 80026d0:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80026d4:	9503      	str	r5, [sp, #12]
 80026d6:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80026da:	9502      	str	r5, [sp, #8]
 80026dc:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80026e0:	9501      	str	r5, [sp, #4]
 80026e2:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80026e6:	9500      	str	r5, [sp, #0]
 80026e8:	f00b fb5e 	bl	800dda8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80026ec:	4b05      	ldr	r3, [pc, #20]	; (8002704 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x4c>)
 80026ee:	6023      	str	r3, [r4, #0]
 80026f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80026f2:	61a3      	str	r3, [r4, #24]
 80026f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80026f6:	61e3      	str	r3, [r4, #28]
 80026f8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80026fa:	6223      	str	r3, [r4, #32]
}
 80026fc:	4620      	mov	r0, r4
 80026fe:	b009      	add	sp, #36	; 0x24
 8002700:	bd30      	pop	{r4, r5, pc}
 8002702:	bf00      	nop
 8002704:	0801d0b4 	.word	0x0801d0b4

08002708 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002708:	4770      	bx	lr

0800270a <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800270a:	4770      	bx	lr

0800270c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800270c:	4770      	bx	lr

0800270e <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800270e:	4770      	bx	lr

08002710 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8002710:	4770      	bx	lr

08002712 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002712:	4770      	bx	lr

08002714 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8002714:	4770      	bx	lr

08002716 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002716:	4770      	bx	lr

08002718 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002718:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800271a:	68c2      	ldr	r2, [r0, #12]
 800271c:	6844      	ldr	r4, [r0, #4]
 800271e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002720:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002722:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002726:	07d2      	lsls	r2, r2, #31
 8002728:	bf48      	it	mi
 800272a:	5962      	ldrmi	r2, [r4, r5]
 800272c:	689b      	ldr	r3, [r3, #8]
    }
 800272e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002730:	bf48      	it	mi
 8002732:	58d3      	ldrmi	r3, [r2, r3]
 8002734:	4718      	bx	r3

08002736 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002736:	6843      	ldr	r3, [r0, #4]
 8002738:	b12b      	cbz	r3, 8002746 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800273a:	6883      	ldr	r3, [r0, #8]
 800273c:	b92b      	cbnz	r3, 800274a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800273e:	68c0      	ldr	r0, [r0, #12]
 8002740:	f000 0001 	and.w	r0, r0, #1
 8002744:	4770      	bx	lr
 8002746:	4618      	mov	r0, r3
 8002748:	4770      	bx	lr
 800274a:	2001      	movs	r0, #1
    }
 800274c:	4770      	bx	lr

0800274e <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800274e:	b510      	push	{r4, lr}
 8002750:	2110      	movs	r1, #16
 8002752:	4604      	mov	r4, r0
 8002754:	f018 fe2c 	bl	801b3b0 <_ZdlPvj>
 8002758:	4620      	mov	r0, r4
 800275a:	bd10      	pop	{r4, pc}

0800275c <_ZN15Screen1ViewBaseD0Ev>:
 800275c:	b510      	push	{r4, lr}
 800275e:	f44f 71ba 	mov.w	r1, #372	; 0x174
 8002762:	4604      	mov	r4, r0
 8002764:	f018 fe24 	bl	801b3b0 <_ZdlPvj>
 8002768:	4620      	mov	r0, r4
 800276a:	bd10      	pop	{r4, pc}

0800276c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button_nowa_gra)
 800276c:	30e0      	adds	r0, #224	; 0xe0
 800276e:	4288      	cmp	r0, r1
{
 8002770:	b508      	push	{r3, lr}
    if (&src == &button_nowa_gra)
 8002772:	d105      	bne.n	8002780 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002774:	f00a fab4 	bl	800cce0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When button_nowa_gra clicked change screen to Screen2
        //Go to Screen2 with screen transition towards North
        application().gotoScreen2ScreenWipeTransitionNorth();
    }
}
 8002778:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenWipeTransitionNorth();
 800277c:	f7ff bf4c 	b.w	8002618 <_ZN23FrontendApplicationBase36gotoScreen2ScreenWipeTransitionNorthEv>
}
 8002780:	bd08      	pop	{r3, pc}

08002782 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002782:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002784:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002786:	4604      	mov	r4, r0
        setX(x);
 8002788:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setXY(int16_t x, int16_t y)
 800278a:	4615      	mov	r5, r2
        setX(x);
 800278c:	4798      	blx	r3
        setY(y);
 800278e:	6823      	ldr	r3, [r4, #0]
 8002790:	4629      	mov	r1, r5
 8002792:	4620      	mov	r0, r4
 8002794:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 8002796:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 800279a:	4718      	bx	r3

0800279c <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800279c:	b570      	push	{r4, r5, r6, lr}
 800279e:	4604      	mov	r4, r0
 80027a0:	461d      	mov	r5, r3
 80027a2:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80027a6:	f7ff ffec 	bl	8002782 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80027aa:	6823      	ldr	r3, [r4, #0]
 80027ac:	4629      	mov	r1, r5
 80027ae:	4620      	mov	r0, r4
 80027b0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80027b2:	4798      	blx	r3
        setHeight(height);
 80027b4:	6823      	ldr	r3, [r4, #0]
 80027b6:	4631      	mov	r1, r6
 80027b8:	4620      	mov	r0, r4
 80027ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 80027bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80027c0:	4718      	bx	r3
	...

080027c4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80027c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
        return typedTextId != TYPED_TEXT_INVALID;
 80027c6:	8f01      	ldrh	r1, [r0, #56]	; 0x38
    {
        if (typedText.hasValidId())
 80027c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80027cc:	4299      	cmp	r1, r3
    void updateTextPosition()
 80027ce:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80027d0:	d033      	beq.n	800283a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x76>
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80027d2:	4b1c      	ldr	r3, [pc, #112]	; (8002844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 80027d4:	681b      	ldr	r3, [r3, #0]
 80027d6:	b92b      	cbnz	r3, 80027e4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80027d8:	4b1b      	ldr	r3, [pc, #108]	; (8002848 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 80027da:	4a1c      	ldr	r2, [pc, #112]	; (800284c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 80027dc:	21b1      	movs	r1, #177	; 0xb1
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80027de:	481c      	ldr	r0, [pc, #112]	; (8002850 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x8c>)
 80027e0:	f018 fe14 	bl	801b40c <__assert_func>
 80027e4:	4a1b      	ldr	r2, [pc, #108]	; (8002854 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x90>)
 80027e6:	8812      	ldrh	r2, [r2, #0]
 80027e8:	428a      	cmp	r2, r1
 80027ea:	d803      	bhi.n	80027f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x30>
 80027ec:	4b1a      	ldr	r3, [pc, #104]	; (8002858 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x94>)
 80027ee:	4a17      	ldr	r2, [pc, #92]	; (800284c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 80027f0:	21b2      	movs	r1, #178	; 0xb2
 80027f2:	e7f4      	b.n	80027de <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x1a>
        return fonts[typedTexts[typedTextId].fontIdx];
 80027f4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80027f8:	4b18      	ldr	r3, [pc, #96]	; (800285c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x98>)
 80027fa:	681b      	ldr	r3, [r3, #0]
 80027fc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002800:	4b17      	ldr	r3, [pc, #92]	; (8002860 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x9c>)
 8002802:	6818      	ldr	r0, [r3, #0]
 8002804:	f000 fbf4 	bl	8002ff0 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002808:	682b      	ldr	r3, [r5, #0]
 800280a:	9001      	str	r0, [sp, #4]
 800280c:	4601      	mov	r1, r0
 800280e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002810:	4628      	mov	r0, r5
 8002812:	4798      	blx	r3
 8002814:	682b      	ldr	r3, [r5, #0]
 8002816:	9901      	ldr	r1, [sp, #4]
 8002818:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800281a:	4604      	mov	r4, r0
 800281c:	4628      	mov	r0, r5
 800281e:	4798      	blx	r3
 8002820:	682b      	ldr	r3, [r5, #0]
 8002822:	9901      	ldr	r1, [sp, #4]
 8002824:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002826:	fb14 f400 	smulbb	r4, r4, r0
 800282a:	4628      	mov	r0, r5
 800282c:	4798      	blx	r3
 800282e:	b2e4      	uxtb	r4, r4
 8002830:	4404      	add	r4, r0
 8002832:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002836:	b002      	add	sp, #8
 8002838:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 800283a:	2300      	movs	r3, #0
 800283c:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002840:	e7f9      	b.n	8002836 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x72>
 8002842:	bf00      	nop
 8002844:	2000a47c 	.word	0x2000a47c
 8002848:	0801d100 	.word	0x0801d100
 800284c:	0801d142 	.word	0x0801d142
 8002850:	0801d170 	.word	0x0801d170
 8002854:	2000a480 	.word	0x2000a480
 8002858:	0801d1b7 	.word	0x0801d1b7
 800285c:	2000a484 	.word	0x2000a484
 8002860:	2000a488 	.word	0x2000a488

08002864 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     *
     * @note This function is not available to call before the LCD has been setup, because the
     *       color depth is required. Consider using the function getColorFromRGB for a
     *       specific class, e.g. LCD16::getColorFromRGB().
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 8002864:	4613      	mov	r3, r2
 8002866:	4a0c      	ldr	r2, [pc, #48]	; (8002898 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x34>)
 8002868:	b570      	push	{r4, r5, r6, lr}
 800286a:	6814      	ldr	r4, [r2, #0]
 800286c:	4605      	mov	r5, r0
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 800286e:	b92c      	cbnz	r4, 800287c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x18>
 8002870:	4b0a      	ldr	r3, [pc, #40]	; (800289c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x38>)
 8002872:	4a0b      	ldr	r2, [pc, #44]	; (80028a0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x3c>)
 8002874:	480b      	ldr	r0, [pc, #44]	; (80028a4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x40>)
 8002876:	2135      	movs	r1, #53	; 0x35
 8002878:	f018 fdc8 	bl	801b40c <__assert_func>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800287c:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 8002880:	b10a      	cbz	r2, 8002886 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x22>
 8002882:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8002884:	b900      	cbnz	r0, 8002888 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x24>
            return instance->lcdRef;
 8002886:	68a0      	ldr	r0, [r4, #8]
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8002888:	6802      	ldr	r2, [r0, #0]
 800288a:	6a94      	ldr	r4, [r2, #40]	; 0x28
 800288c:	460a      	mov	r2, r1
 800288e:	46a4      	mov	ip, r4
 8002890:	4629      	mov	r1, r5
    }
 8002892:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8002896:	4760      	bx	ip
 8002898:	2000a42c 	.word	0x2000a42c
 800289c:	0801d209 	.word	0x0801d209
 80028a0:	0801d24c 	.word	0x0801d24c
 80028a4:	0801d2a8 	.word	0x0801d2a8

080028a8 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 80028a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80028ac:	4604      	mov	r4, r0
 80028ae:	b089      	sub	sp, #36	; 0x24
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 80028b0:	46a2      	mov	sl, r4
        : presenter(0)
 80028b2:	2500      	movs	r5, #0
 80028b4:	f00b fd1a 	bl	800e2ec <_ZN8touchgfx6ScreenC1Ev>
 80028b8:	4b77      	ldr	r3, [pc, #476]	; (8002a98 <_ZN15Screen1ViewBaseC1Ev+0x1f0>)
 80028ba:	63e5      	str	r5, [r4, #60]	; 0x3c
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80028bc:	26ff      	movs	r6, #255	; 0xff
 80028be:	f84a 3b40 	str.w	r3, [sl], #64
 80028c2:	f104 096c 	add.w	r9, r4, #108	; 0x6c
          visible(true)
 80028c6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80028ca:	4b74      	ldr	r3, [pc, #464]	; (8002a9c <_ZN15Screen1ViewBaseC1Ev+0x1f4>)
 80028cc:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 80028d0:	f104 0898 	add.w	r8, r4, #152	; 0x98
 80028d4:	a906      	add	r1, sp, #24
 80028d6:	6423      	str	r3, [r4, #64]	; 0x40
        this->width = width;
 80028d8:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80028dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
        width = 0;
 80028e0:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
 80028e4:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
 80028e8:	65e5      	str	r5, [r4, #92]	; 0x5c
 80028ea:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
        color = col;
 80028ee:	66a5      	str	r5, [r4, #104]	; 0x68
 80028f0:	4648      	mov	r0, r9
 80028f2:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 80028f6:	f8ad 3018 	strh.w	r3, [sp, #24]
 80028fa:	f007 ff6f 	bl	800a7dc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80028fe:	4640      	mov	r0, r8
 8002900:	f008 fd96 	bl	800b430 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002904:	4638      	mov	r0, r7
 8002906:	f008 fd93 	bl	800b430 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : typedTextId(id)
 800290a:	4b65      	ldr	r3, [pc, #404]	; (8002aa0 <_ZN15Screen1ViewBaseC1Ev+0x1f8>)
 800290c:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
 8002910:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002914:	f8a4 3154 	strh.w	r3, [r4, #340]	; 0x154
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002918:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 800291c:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
    {
 8002920:	4b60      	ldr	r3, [pc, #384]	; (8002aa4 <_ZN15Screen1ViewBaseC1Ev+0x1fc>)
 8002922:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
        this->pobject = pobject;
 8002926:	e9c4 3459 	strd	r3, r4, [r4, #356]	; 0x164
        this->pmemfun_1 = pmemfun_1;
 800292a:	4b5f      	ldr	r3, [pc, #380]	; (8002aa8 <_ZN15Screen1ViewBaseC1Ev+0x200>)
 800292c:	f8c4 5158 	str.w	r5, [r4, #344]	; 0x158
 8002930:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002934:	e9c4 355b 	strd	r3, r5, [r4, #364]	; 0x16c
 8002938:	f8a4 214c 	strh.w	r2, [r4, #332]	; 0x14c
    __background.setPosition(0, 0, 800, 480);
 800293c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002940:	4a5a      	ldr	r2, [pc, #360]	; (8002aac <_ZN15Screen1ViewBaseC1Ev+0x204>)
 8002942:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8002946:	9300      	str	r3, [sp, #0]
 8002948:	462a      	mov	r2, r5
 800294a:	f44f 7348 	mov.w	r3, #800	; 0x320
 800294e:	4629      	mov	r1, r5
 8002950:	4650      	mov	r0, sl
        this->width = width;
 8002952:	e9c4 554b 	strd	r5, r5, [r4, #300]	; 0x12c
        width = 0;
 8002956:	e9c4 554d 	strd	r5, r5, [r4, #308]	; 0x134
 800295a:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
 800295e:	f8a4 5160 	strh.w	r5, [r4, #352]	; 0x160
 8002962:	f7ff ff1b 	bl	800279c <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8002966:	462a      	mov	r2, r5
 8002968:	4629      	mov	r1, r5
 800296a:	4628      	mov	r0, r5
 800296c:	f7ff ff7a 	bl	8002864 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8002970:	2303      	movs	r3, #3
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8002972:	66a0      	str	r0, [r4, #104]	; 0x68
    tlo_menu.setBitmap(touchgfx::Bitmap(BITMAP_TLO_2_ID));
 8002974:	a906      	add	r1, sp, #24
 8002976:	4648      	mov	r0, r9
 8002978:	f8ad 3018 	strh.w	r3, [sp, #24]
 800297c:	f008 fc15 	bl	800b1aa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    tlo_menu.setPosition(0, 0, 809, 490);
 8002980:	f44f 73f5 	mov.w	r3, #490	; 0x1ea
 8002984:	462a      	mov	r2, r5
 8002986:	9300      	str	r3, [sp, #0]
 8002988:	4629      	mov	r1, r5
 800298a:	f240 3329 	movw	r3, #809	; 0x329
 800298e:	4648      	mov	r0, r9
 8002990:	f7ff ff04 	bl	800279c <_ZN8touchgfx8Drawable11setPositionEssss>
    tlo_menu.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002994:	4629      	mov	r1, r5
 8002996:	4648      	mov	r0, r9
 8002998:	f007 fee6 	bl	800a768 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    button_wyjdz.setXY(315, 245);
 800299c:	4640      	mov	r0, r8
 800299e:	22f5      	movs	r2, #245	; 0xf5
 80029a0:	f240 113b 	movw	r1, #315	; 0x13b
 80029a4:	f7ff feed 	bl	8002782 <_ZN8touchgfx8Drawable5setXYEss>
 80029a8:	2301      	movs	r3, #1
    button_wyjdz.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_PRESSED_ID));
 80029aa:	aa06      	add	r2, sp, #24
 80029ac:	a905      	add	r1, sp, #20
 80029ae:	4640      	mov	r0, r8
 80029b0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80029b4:	f8ad 5014 	strh.w	r5, [sp, #20]
 80029b8:	f008 fb25 	bl	800b006 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 80029bc:	4640      	mov	r0, r8
class TypedText
 80029be:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
 80029c2:	f7ff feff 	bl	80027c4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    button_wyjdz.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80029c6:	4632      	mov	r2, r6
 80029c8:	4631      	mov	r1, r6
 80029ca:	4630      	mov	r0, r6
 80029cc:	f7ff ff4a 	bl	8002864 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    button_wyjdz.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80029d0:	4632      	mov	r2, r6
        color = col;
 80029d2:	f8c4 00d4 	str.w	r0, [r4, #212]	; 0xd4
 80029d6:	4631      	mov	r1, r6
 80029d8:	4630      	mov	r0, r6
 80029da:	f7ff ff43 	bl	8002864 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    button_nowa_gra.setXY(315, 180);
 80029de:	22b4      	movs	r2, #180	; 0xb4
        colorPressed = col;
 80029e0:	f8c4 00d8 	str.w	r0, [r4, #216]	; 0xd8
 80029e4:	f240 113b 	movw	r1, #315	; 0x13b
 80029e8:	4638      	mov	r0, r7
 80029ea:	f7ff feca 	bl	8002782 <_ZN8touchgfx8Drawable5setXYEss>
    button_nowa_gra.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_PRESSED_ID));
 80029ee:	aa06      	add	r2, sp, #24
 80029f0:	a905      	add	r1, sp, #20
 80029f2:	2301      	movs	r3, #1
 80029f4:	4638      	mov	r0, r7
 80029f6:	f8ad 3018 	strh.w	r3, [sp, #24]
 80029fa:	f8ad 5014 	strh.w	r5, [sp, #20]
 80029fe:	f008 fb02 	bl	800b006 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002a02:	2301      	movs	r3, #1
 8002a04:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
        updateTextPosition();
 8002a08:	4638      	mov	r0, r7
 8002a0a:	f7ff fedb 	bl	80027c4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    button_nowa_gra.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8002a0e:	4632      	mov	r2, r6
 8002a10:	4631      	mov	r1, r6
 8002a12:	4630      	mov	r0, r6
 8002a14:	f7ff ff26 	bl	8002864 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    button_nowa_gra.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8002a18:	4632      	mov	r2, r6
        color = col;
 8002a1a:	f8c4 011c 	str.w	r0, [r4, #284]	; 0x11c
 8002a1e:	4631      	mov	r1, r6
 8002a20:	4630      	mov	r0, r6
 8002a22:	f7ff ff1f 	bl	8002864 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 8002a26:	f504 7b94 	add.w	fp, r4, #296	; 0x128
    button_nowa_gra.setAction(buttonCallback);
 8002a2a:	f504 73b2 	add.w	r3, r4, #356	; 0x164
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002a2e:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
        colorPressed = col;
 8002a32:	f8c4 0120 	str.w	r0, [r4, #288]	; 0x120
    nazwa_gry.setXY(307, 38);
 8002a36:	2226      	movs	r2, #38	; 0x26
 8002a38:	4658      	mov	r0, fp
 8002a3a:	f240 1133 	movw	r1, #307	; 0x133
 8002a3e:	f7ff fea0 	bl	8002782 <_ZN8touchgfx8Drawable5setXYEss>
    nazwa_gry.setColor(touchgfx::Color::getColorFrom24BitRGB(166, 47, 168));
 8002a42:	22a8      	movs	r2, #168	; 0xa8
 8002a44:	212f      	movs	r1, #47	; 0x2f
 8002a46:	20a6      	movs	r0, #166	; 0xa6
 8002a48:	f7ff ff0c 	bl	8002864 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        : typedTextId(id)
 8002a4c:	4b14      	ldr	r3, [pc, #80]	; (8002aa0 <_ZN15Screen1ViewBaseC1Ev+0x1f8>)
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 8002a4e:	f8c4 0158 	str.w	r0, [r4, #344]	; 0x158
 8002a52:	9306      	str	r3, [sp, #24]
    nazwa_gry.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3));
 8002a54:	a906      	add	r1, sp, #24
 8002a56:	2302      	movs	r3, #2
 8002a58:	4658      	mov	r0, fp
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 8002a5a:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
 8002a5e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002a62:	f008 fa8d 	bl	800af80 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002a66:	1d20      	adds	r0, r4, #4
 8002a68:	4651      	mov	r1, sl
 8002a6a:	9003      	str	r0, [sp, #12]
 8002a6c:	f006 fe5e 	bl	800972c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002a70:	9803      	ldr	r0, [sp, #12]
 8002a72:	4649      	mov	r1, r9
 8002a74:	f006 fe5a 	bl	800972c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002a78:	9803      	ldr	r0, [sp, #12]
 8002a7a:	4641      	mov	r1, r8
 8002a7c:	f006 fe56 	bl	800972c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002a80:	9803      	ldr	r0, [sp, #12]
 8002a82:	4639      	mov	r1, r7
 8002a84:	f006 fe52 	bl	800972c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002a88:	9803      	ldr	r0, [sp, #12]
 8002a8a:	4659      	mov	r1, fp
 8002a8c:	f006 fe4e 	bl	800972c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002a90:	4620      	mov	r0, r4
 8002a92:	b009      	add	sp, #36	; 0x24
 8002a94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002a98:	0801d30c 	.word	0x0801d30c
 8002a9c:	0801e374 	.word	0x0801e374
 8002aa0:	0801cb64 	.word	0x0801cb64
 8002aa4:	0801d2f4 	.word	0x0801d2f4
 8002aa8:	0800276d 	.word	0x0800276d
 8002aac:	0801e2cc 	.word	0x0801e2cc

08002ab0 <_ZN15Screen2ViewBaseD1Ev>:

class Screen2ViewBase : public touchgfx::View<Screen2Presenter>
{
public:
    Screen2ViewBase();
    virtual ~Screen2ViewBase() {}
 8002ab0:	4770      	bx	lr

08002ab2 <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEED1Ev>:
 * callback when the animation has finished.
 *
 * This mixin can be used on any Drawable.
 */
template <class T>
class MoveAnimator : public T
 8002ab2:	4770      	bx	lr

08002ab4 <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21setMoveAnimationDelayEt>:
     *
     * @see getMoveAnimationDelay
     */
    virtual void setMoveAnimationDelay(uint16_t delay)
    {
        moveAnimationDelay = delay;
 8002ab4:	85c1      	strh	r1, [r0, #46]	; 0x2e
    }
 8002ab6:	4770      	bx	lr

08002ab8 <_ZNK8touchgfx12MoveAnimatorINS_13ScalableImageEE21getMoveAnimationDelayEv>:
     * @see setMoveAnimationDelay
     */
    virtual uint16_t getMoveAnimationDelay() const
    {
        return moveAnimationDelay;
    }
 8002ab8:	8dc0      	ldrh	r0, [r0, #46]	; 0x2e
 8002aba:	4770      	bx	lr

08002abc <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEED0Ev>:
class MoveAnimator : public T
 8002abc:	b510      	push	{r4, lr}
 8002abe:	2148      	movs	r1, #72	; 0x48
 8002ac0:	4604      	mov	r4, r0
 8002ac2:	f018 fc75 	bl	801b3b0 <_ZdlPvj>
 8002ac6:	4620      	mov	r0, r4
 8002ac8:	bd10      	pop	{r4, pc}

08002aca <_ZN15Screen2ViewBaseD0Ev>:
 8002aca:	b510      	push	{r4, lr}
 8002acc:	21b4      	movs	r1, #180	; 0xb4
 8002ace:	4604      	mov	r4, r0
 8002ad0:	f018 fc6e 	bl	801b3b0 <_ZdlPvj>
 8002ad4:	4620      	mov	r0, r4
 8002ad6:	bd10      	pop	{r4, pc}

08002ad8 <_ZN15Screen2ViewBase11setupScreenEv>:
        moveAnimationEndedCallback = 0;
 8002ad8:	2300      	movs	r3, #0
    add(__background);
    add(tlo_animacja);
}

void Screen2ViewBase::setupScreen()
{
 8002ada:	b510      	push	{r4, lr}
 8002adc:	f8c0 30b0 	str.w	r3, [r0, #176]	; 0xb0
     *                              Y position during the animation. Default is
     *                              EasingEquations::linearEaseNone.
     */
    void startMoveAnimation(int16_t endX, int16_t endY, uint16_t duration, EasingEquation xProgressionEquation = &EasingEquations::linearEaseNone, EasingEquation yProgressionEquation = &EasingEquations::linearEaseNone)
    {
        if (!moveAnimationRunning)
 8002ae0:	f890 3096 	ldrb.w	r3, [r0, #150]	; 0x96
 8002ae4:	4604      	mov	r4, r0
 8002ae6:	b92b      	cbnz	r3, 8002af4 <_ZN15Screen2ViewBase11setupScreenEv+0x1c>
        {
            Application::getInstance()->registerTimerWidget(this);
 8002ae8:	f00a f8fa 	bl	800cce0 <_ZN8touchgfx11Application11getInstanceEv>
 8002aec:	f104 016c 	add.w	r1, r4, #108	; 0x6c
 8002af0:	f00a f8fc 	bl	800ccec <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        }

        moveAnimationCounter = 0;
 8002af4:	2300      	movs	r3, #0
 8002af6:	f8a4 3098 	strh.w	r3, [r4, #152]	; 0x98
        moveAnimationStartX = T::getX();
        moveAnimationStartY = T::getY();
        moveAnimationEndX = endX;
        moveAnimationEndY = endY;
 8002afa:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
        moveAnimationDuration = duration;
 8002afe:	f44f 7361 	mov.w	r3, #900	; 0x384
        moveAnimationStartX = T::getX();
 8002b02:	f8b4 2070 	ldrh.w	r2, [r4, #112]	; 0x70
        moveAnimationDuration = duration;
 8002b06:	f8a4 309c 	strh.w	r3, [r4, #156]	; 0x9c
        moveAnimationXEquation = xProgressionEquation;
 8002b0a:	4b08      	ldr	r3, [pc, #32]	; (8002b2c <_ZN15Screen2ViewBase11setupScreenEv+0x54>)
        moveAnimationStartX = T::getX();
 8002b0c:	f8a4 209e 	strh.w	r2, [r4, #158]	; 0x9e
        moveAnimationStartY = T::getY();
 8002b10:	f8b4 2072 	ldrh.w	r2, [r4, #114]	; 0x72
 8002b14:	f8a4 20a0 	strh.w	r2, [r4, #160]	; 0xa0
        moveAnimationYEquation = yProgressionEquation;
 8002b18:	e9c4 332a 	strd	r3, r3, [r4, #168]	; 0xa8
        moveAnimationEndX = endX;
 8002b1c:	f24f 0260 	movw	r2, #61536	; 0xf060

        moveAnimationRunning = true;
 8002b20:	2301      	movs	r3, #1
        moveAnimationEndX = endX;
 8002b22:	f8a4 20a2 	strh.w	r2, [r4, #162]	; 0xa2
        moveAnimationRunning = true;
 8002b26:	f884 3096 	strb.w	r3, [r4, #150]	; 0x96
    //When screen transition begins move tlo_animacja
    //Move tlo_animacja to x:-4000, y:0 with LinearIn easing in 15000 ms (900 Ticks)
    tlo_animacja.clearMoveAnimationEndedAction();
    tlo_animacja.startMoveAnimation(-4000, 0, 900, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);

}
 8002b2a:	bd10      	pop	{r4, pc}
 8002b2c:	0800e6b7 	.word	0x0800e6b7

08002b30 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase()
 8002b30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002b32:	4604      	mov	r4, r0
 8002b34:	b087      	sub	sp, #28
 8002b36:	4627      	mov	r7, r4
 8002b38:	f00b fbd8 	bl	800e2ec <_ZN8touchgfx6ScreenC1Ev>
 8002b3c:	2500      	movs	r5, #0
 8002b3e:	4b34      	ldr	r3, [pc, #208]	; (8002c10 <_ZN15Screen2ViewBaseC1Ev+0xe0>)
 8002b40:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002b42:	f847 3b40 	str.w	r3, [r7], #64
        : Widget(), alpha(255), color(0)
 8002b46:	4b33      	ldr	r3, [pc, #204]	; (8002c14 <_ZN15Screen2ViewBaseC1Ev+0xe4>)
 8002b48:	6423      	str	r3, [r4, #64]	; 0x40
 8002b4a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002b4e:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
 8002b52:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 8002b56:	23ff      	movs	r3, #255	; 0xff
 8002b58:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
          moveAnimationEndedCallback(0)
 8002b5c:	a905      	add	r1, sp, #20
 8002b5e:	f64f 73ff 	movw	r3, #65535	; 0xffff
        this->width = width;
 8002b62:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
        width = 0;
 8002b66:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
 8002b6a:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
 8002b6e:	65e5      	str	r5, [r4, #92]	; 0x5c
        color = col;
 8002b70:	66a5      	str	r5, [r4, #104]	; 0x68
 8002b72:	4630      	mov	r0, r6
 8002b74:	f8ad 3014 	strh.w	r3, [sp, #20]
 8002b78:	f007 fe30 	bl	800a7dc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002b7c:	4b26      	ldr	r3, [pc, #152]	; (8002c18 <_ZN15Screen2ViewBaseC1Ev+0xe8>)
 8002b7e:	66e3      	str	r3, [r4, #108]	; 0x6c
    __background.setPosition(0, 0, 800, 480);
 8002b80:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002b84:	9300      	str	r3, [sp, #0]
 8002b86:	f884 5096 	strb.w	r5, [r4, #150]	; 0x96
 8002b8a:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002b8e:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98
 8002b92:	f8c4 50b0 	str.w	r5, [r4, #176]	; 0xb0
 8002b96:	462a      	mov	r2, r5
 8002b98:	4629      	mov	r1, r5
 8002b9a:	4638      	mov	r0, r7
 8002b9c:	f7ff fdfe 	bl	800279c <_ZN8touchgfx8Drawable11setPositionEssss>
        return instance;
 8002ba0:	4b1e      	ldr	r3, [pc, #120]	; (8002c1c <_ZN15Screen2ViewBaseC1Ev+0xec>)
 8002ba2:	681b      	ldr	r3, [r3, #0]
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 8002ba4:	b92b      	cbnz	r3, 8002bb2 <_ZN15Screen2ViewBaseC1Ev+0x82>
 8002ba6:	4b1e      	ldr	r3, [pc, #120]	; (8002c20 <_ZN15Screen2ViewBaseC1Ev+0xf0>)
 8002ba8:	4a1e      	ldr	r2, [pc, #120]	; (8002c24 <_ZN15Screen2ViewBaseC1Ev+0xf4>)
 8002baa:	481f      	ldr	r0, [pc, #124]	; (8002c28 <_ZN15Screen2ViewBaseC1Ev+0xf8>)
 8002bac:	2135      	movs	r1, #53	; 0x35
 8002bae:	f018 fc2d 	bl	801b40c <__assert_func>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002bb2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002bb6:	b10a      	cbz	r2, 8002bbc <_ZN15Screen2ViewBaseC1Ev+0x8c>
 8002bb8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002bba:	b900      	cbnz	r0, 8002bbe <_ZN15Screen2ViewBaseC1Ev+0x8e>
            return instance->lcdRef;
 8002bbc:	6898      	ldr	r0, [r3, #8]
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8002bbe:	6803      	ldr	r3, [r0, #0]
 8002bc0:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 8002bc2:	2300      	movs	r3, #0
 8002bc4:	461a      	mov	r2, r3
 8002bc6:	4619      	mov	r1, r3
 8002bc8:	47a8      	blx	r5
 8002bca:	2302      	movs	r3, #2
        this->color = color;
 8002bcc:	66a0      	str	r0, [r4, #104]	; 0x68
    tlo_animacja.setBitmap(touchgfx::Bitmap(BITMAP_DLUUUUGI_OBRAZ_ID));
 8002bce:	a905      	add	r1, sp, #20
 8002bd0:	4630      	mov	r0, r6
 8002bd2:	f8ad 3014 	strh.w	r3, [sp, #20]
 8002bd6:	f008 fae8 	bl	800b1aa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    tlo_animacja.setPosition(0, 0, 4592, 480);
 8002bda:	2200      	movs	r2, #0
 8002bdc:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002be0:	4611      	mov	r1, r2
 8002be2:	9300      	str	r3, [sp, #0]
 8002be4:	4630      	mov	r0, r6
 8002be6:	f241 13f0 	movw	r3, #4592	; 0x11f0
 8002bea:	f7ff fdd7 	bl	800279c <_ZN8touchgfx8Drawable11setPositionEssss>
    tlo_animacja.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002bee:	4630      	mov	r0, r6
 8002bf0:	2100      	movs	r1, #0
 8002bf2:	f007 fdb9 	bl	800a768 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002bf6:	1d20      	adds	r0, r4, #4
 8002bf8:	4639      	mov	r1, r7
 8002bfa:	9003      	str	r0, [sp, #12]
 8002bfc:	f006 fd96 	bl	800972c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002c00:	9803      	ldr	r0, [sp, #12]
 8002c02:	4631      	mov	r1, r6
 8002c04:	f006 fd92 	bl	800972c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002c08:	4620      	mov	r0, r4
 8002c0a:	b007      	add	sp, #28
 8002c0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002c0e:	bf00      	nop
 8002c10:	0801d3b8 	.word	0x0801d3b8
 8002c14:	0801e374 	.word	0x0801e374
 8002c18:	0801d340 	.word	0x0801d340
 8002c1c:	2000a42c 	.word	0x2000a42c
 8002c20:	0801d209 	.word	0x0801d209
 8002c24:	0801d24c 	.word	0x0801d24c
 8002c28:	0801d2a8 	.word	0x0801d2a8

08002c2c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv>:

protected:
    /** Execute next step in move animation and stop the timer if the animation has finished. */
    void nextMoveAnimationStep()
    {
        if (moveAnimationRunning)
 8002c2c:	f890 302a 	ldrb.w	r3, [r0, #42]	; 0x2a
    void nextMoveAnimationStep()
 8002c30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002c34:	4604      	mov	r4, r0
        if (moveAnimationRunning)
 8002c36:	2b00      	cmp	r3, #0
 8002c38:	d040      	beq.n	8002cbc <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
        {
            moveAnimationCounter++;
 8002c3a:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
            if (moveAnimationCounter >= moveAnimationDelay)
 8002c3c:	8dc5      	ldrh	r5, [r0, #46]	; 0x2e
            moveAnimationCounter++;
 8002c3e:	3301      	adds	r3, #1
 8002c40:	b29b      	uxth	r3, r3
            if (moveAnimationCounter >= moveAnimationDelay)
 8002c42:	42ab      	cmp	r3, r5
            moveAnimationCounter++;
 8002c44:	8583      	strh	r3, [r0, #44]	; 0x2c
            if (moveAnimationCounter >= moveAnimationDelay)
 8002c46:	d339      	bcc.n	8002cbc <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = moveAnimationCounter - moveAnimationDelay;

                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 8002c48:	1b5b      	subs	r3, r3, r5
 8002c4a:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8002c4c:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
 8002c4e:	b29d      	uxth	r5, r3
 8002c50:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8002c52:	1ad2      	subs	r2, r2, r3
 8002c54:	b212      	sxth	r2, r2
 8002c56:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8002c58:	2100      	movs	r1, #0
 8002c5a:	4628      	mov	r0, r5
 8002c5c:	47b0      	blx	r6
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 8002c5e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8002c60:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8002c62:	6c27      	ldr	r7, [r4, #64]	; 0x40
 8002c64:	1ad2      	subs	r2, r2, r3
                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 8002c66:	4606      	mov	r6, r0
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 8002c68:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8002c6a:	b212      	sxth	r2, r2
 8002c6c:	2100      	movs	r1, #0
 8002c6e:	4628      	mov	r0, r5
 8002c70:	47b8      	blx	r7

                T::moveTo(moveAnimationStartX + deltaX, moveAnimationStartY + deltaY);
 8002c72:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8002c74:	8e61      	ldrh	r1, [r4, #50]	; 0x32
 8002c76:	4402      	add	r2, r0
 8002c78:	4431      	add	r1, r6
 8002c7a:	b212      	sxth	r2, r2
 8002c7c:	b209      	sxth	r1, r1
 8002c7e:	4620      	mov	r0, r4
 8002c80:	f7ff fa1c 	bl	80020bc <_ZN8touchgfx8Drawable6moveToEss>

                if (moveAnimationCounter >= (uint32_t)(moveAnimationDelay + moveAnimationDuration))
 8002c84:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8002c86:	8e21      	ldrh	r1, [r4, #48]	; 0x30
 8002c88:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8002c8a:	440b      	add	r3, r1
 8002c8c:	429a      	cmp	r2, r3
 8002c8e:	d315      	bcc.n	8002cbc <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
                {
                    // End of animation
                    moveAnimationRunning = false;
 8002c90:	2300      	movs	r3, #0
 8002c92:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
                    moveAnimationCounter = 0;
 8002c96:	85a3      	strh	r3, [r4, #44]	; 0x2c
                    Application::getInstance()->unregisterTimerWidget(this);
 8002c98:	f00a f822 	bl	800cce0 <_ZN8touchgfx11Application11getInstanceEv>
 8002c9c:	4621      	mov	r1, r4
 8002c9e:	f00a f857 	bl	800cd50 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>

                    if (moveAnimationEndedCallback && moveAnimationEndedCallback->isValid())
 8002ca2:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8002ca4:	b150      	cbz	r0, 8002cbc <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
 8002ca6:	6803      	ldr	r3, [r0, #0]
 8002ca8:	68db      	ldr	r3, [r3, #12]
 8002caa:	4798      	blx	r3
 8002cac:	b130      	cbz	r0, 8002cbc <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
                    {
                        moveAnimationEndedCallback->execute(*this);
 8002cae:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8002cb0:	6803      	ldr	r3, [r0, #0]
 8002cb2:	4621      	mov	r1, r4
 8002cb4:	689b      	ldr	r3, [r3, #8]
                    }
                }
            }
        }
    }
 8002cb6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
                        moveAnimationEndedCallback->execute(*this);
 8002cba:	4718      	bx	r3
    }
 8002cbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08002cc0 <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002cc0:	b508      	push	{r3, lr}
        nextMoveAnimationStep();
 8002cc2:	f7ff ffb3 	bl	8002c2c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv>
    }
 8002cc6:	bd08      	pop	{r3, pc}

08002cc8 <__tcf_0>:

touchgfx::GeneratedFont& getFont_comicbd_83_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_83_4bpp()
{
    static touchgfx::GeneratedFont comicbd_83_4bpp(glyphs_comicbd_83_4bpp, 6, 83, 4, 4, 1, 0, 0, unicodes_comicbd_83_4bpp, kerning_comicbd_83_4bpp, 63, 0, 0);
 8002cc8:	4770      	bx	lr
	...

08002ccc <_Z23getFont_comicbd_83_4bppv>:
{
 8002ccc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_83_4bpp(glyphs_comicbd_83_4bpp, 6, 83, 4, 4, 1, 0, 0, unicodes_comicbd_83_4bpp, kerning_comicbd_83_4bpp, 63, 0, 0);
 8002cce:	4d15      	ldr	r5, [pc, #84]	; (8002d24 <_Z23getFont_comicbd_83_4bppv+0x58>)
 8002cd0:	782c      	ldrb	r4, [r5, #0]
 8002cd2:	f3bf 8f5b 	dmb	ish
 8002cd6:	f014 0401 	ands.w	r4, r4, #1
{
 8002cda:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont comicbd_83_4bpp(glyphs_comicbd_83_4bpp, 6, 83, 4, 4, 1, 0, 0, unicodes_comicbd_83_4bpp, kerning_comicbd_83_4bpp, 63, 0, 0);
 8002cdc:	d11e      	bne.n	8002d1c <_Z23getFont_comicbd_83_4bppv+0x50>
 8002cde:	4628      	mov	r0, r5
 8002ce0:	f018 fb68 	bl	801b3b4 <__cxa_guard_acquire>
 8002ce4:	b1d0      	cbz	r0, 8002d1c <_Z23getFont_comicbd_83_4bppv+0x50>
 8002ce6:	233f      	movs	r3, #63	; 0x3f
 8002ce8:	9307      	str	r3, [sp, #28]
 8002cea:	4b0f      	ldr	r3, [pc, #60]	; (8002d28 <_Z23getFont_comicbd_83_4bppv+0x5c>)
 8002cec:	9306      	str	r3, [sp, #24]
 8002cee:	4b0f      	ldr	r3, [pc, #60]	; (8002d2c <_Z23getFont_comicbd_83_4bppv+0x60>)
 8002cf0:	490f      	ldr	r1, [pc, #60]	; (8002d30 <_Z23getFont_comicbd_83_4bppv+0x64>)
 8002cf2:	4810      	ldr	r0, [pc, #64]	; (8002d34 <_Z23getFont_comicbd_83_4bppv+0x68>)
 8002cf4:	9403      	str	r4, [sp, #12]
 8002cf6:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002cfa:	2201      	movs	r2, #1
 8002cfc:	2304      	movs	r3, #4
 8002cfe:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002d02:	9300      	str	r3, [sp, #0]
 8002d04:	2206      	movs	r2, #6
 8002d06:	2353      	movs	r3, #83	; 0x53
 8002d08:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8002d0c:	f7ff fcd4 	bl	80026b8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002d10:	4809      	ldr	r0, [pc, #36]	; (8002d38 <_Z23getFont_comicbd_83_4bppv+0x6c>)
 8002d12:	f018 fb99 	bl	801b448 <atexit>
 8002d16:	4628      	mov	r0, r5
 8002d18:	f018 fb58 	bl	801b3cc <__cxa_guard_release>
    return comicbd_83_4bpp;
}
 8002d1c:	4805      	ldr	r0, [pc, #20]	; (8002d34 <_Z23getFont_comicbd_83_4bppv+0x68>)
 8002d1e:	b00b      	add	sp, #44	; 0x2c
 8002d20:	bd30      	pop	{r4, r5, pc}
 8002d22:	bf00      	nop
 8002d24:	2000142c 	.word	0x2000142c
 8002d28:	0801fc38 	.word	0x0801fc38
 8002d2c:	0801d3e4 	.word	0x0801d3e4
 8002d30:	9077e174 	.word	0x9077e174
 8002d34:	20001430 	.word	0x20001430
 8002d38:	08002cc9 	.word	0x08002cc9

08002d3c <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8002d3c:	4770      	bx	lr
	...

08002d40 <_Z23getFont_verdana_10_4bppv>:
{
 8002d40:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8002d42:	4d14      	ldr	r5, [pc, #80]	; (8002d94 <_Z23getFont_verdana_10_4bppv+0x54>)
 8002d44:	782c      	ldrb	r4, [r5, #0]
 8002d46:	f3bf 8f5b 	dmb	ish
 8002d4a:	f014 0401 	ands.w	r4, r4, #1
{
 8002d4e:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8002d50:	d11d      	bne.n	8002d8e <_Z23getFont_verdana_10_4bppv+0x4e>
 8002d52:	4628      	mov	r0, r5
 8002d54:	f018 fb2e 	bl	801b3b4 <__cxa_guard_acquire>
 8002d58:	b1c8      	cbz	r0, 8002d8e <_Z23getFont_verdana_10_4bppv+0x4e>
 8002d5a:	233f      	movs	r3, #63	; 0x3f
 8002d5c:	9307      	str	r3, [sp, #28]
 8002d5e:	4b0e      	ldr	r3, [pc, #56]	; (8002d98 <_Z23getFont_verdana_10_4bppv+0x58>)
 8002d60:	9306      	str	r3, [sp, #24]
 8002d62:	4b0e      	ldr	r3, [pc, #56]	; (8002d9c <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002d64:	490e      	ldr	r1, [pc, #56]	; (8002da0 <_Z23getFont_verdana_10_4bppv+0x60>)
 8002d66:	480f      	ldr	r0, [pc, #60]	; (8002da4 <_Z23getFont_verdana_10_4bppv+0x64>)
 8002d68:	9403      	str	r4, [sp, #12]
 8002d6a:	2201      	movs	r2, #1
 8002d6c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002d70:	2304      	movs	r3, #4
 8002d72:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002d76:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8002d7a:	230a      	movs	r3, #10
 8002d7c:	9400      	str	r4, [sp, #0]
 8002d7e:	f7ff fc9b 	bl	80026b8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002d82:	4809      	ldr	r0, [pc, #36]	; (8002da8 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002d84:	f018 fb60 	bl	801b448 <atexit>
 8002d88:	4628      	mov	r0, r5
 8002d8a:	f018 fb1f 	bl	801b3cc <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8002d8e:	4805      	ldr	r0, [pc, #20]	; (8002da4 <_Z23getFont_verdana_10_4bppv+0x64>)
 8002d90:	b00b      	add	sp, #44	; 0x2c
 8002d92:	bd30      	pop	{r4, r5, pc}
 8002d94:	20001454 	.word	0x20001454
 8002d98:	0801fc3c 	.word	0x0801fc3c
 8002d9c:	0801d3e8 	.word	0x0801d3e8
 8002da0:	9077e1c8 	.word	0x9077e1c8
 8002da4:	20001458 	.word	0x20001458
 8002da8:	08002d3d 	.word	0x08002d3d

08002dac <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 13, 20, 4, 4, 1, 1, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8002dac:	4770      	bx	lr
	...

08002db0 <_Z23getFont_verdana_20_4bppv>:
{
 8002db0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 13, 20, 4, 4, 1, 1, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8002db2:	4d15      	ldr	r5, [pc, #84]	; (8002e08 <_Z23getFont_verdana_20_4bppv+0x58>)
 8002db4:	782c      	ldrb	r4, [r5, #0]
 8002db6:	f3bf 8f5b 	dmb	ish
 8002dba:	f014 0401 	ands.w	r4, r4, #1
{
 8002dbe:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 13, 20, 4, 4, 1, 1, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8002dc0:	d11e      	bne.n	8002e00 <_Z23getFont_verdana_20_4bppv+0x50>
 8002dc2:	4628      	mov	r0, r5
 8002dc4:	f018 faf6 	bl	801b3b4 <__cxa_guard_acquire>
 8002dc8:	b1d0      	cbz	r0, 8002e00 <_Z23getFont_verdana_20_4bppv+0x50>
 8002dca:	233f      	movs	r3, #63	; 0x3f
 8002dcc:	9307      	str	r3, [sp, #28]
 8002dce:	4b0f      	ldr	r3, [pc, #60]	; (8002e0c <_Z23getFont_verdana_20_4bppv+0x5c>)
 8002dd0:	9306      	str	r3, [sp, #24]
 8002dd2:	4b0f      	ldr	r3, [pc, #60]	; (8002e10 <_Z23getFont_verdana_20_4bppv+0x60>)
 8002dd4:	490f      	ldr	r1, [pc, #60]	; (8002e14 <_Z23getFont_verdana_20_4bppv+0x64>)
 8002dd6:	4810      	ldr	r0, [pc, #64]	; (8002e18 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002dd8:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002ddc:	2301      	movs	r3, #1
 8002dde:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002de2:	2304      	movs	r3, #4
 8002de4:	e9cd 3300 	strd	r3, r3, [sp]
 8002de8:	220d      	movs	r2, #13
 8002dea:	2314      	movs	r3, #20
 8002dec:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8002df0:	f7ff fc62 	bl	80026b8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002df4:	4809      	ldr	r0, [pc, #36]	; (8002e1c <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002df6:	f018 fb27 	bl	801b448 <atexit>
 8002dfa:	4628      	mov	r0, r5
 8002dfc:	f018 fae6 	bl	801b3cc <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8002e00:	4805      	ldr	r0, [pc, #20]	; (8002e18 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002e02:	b00b      	add	sp, #44	; 0x2c
 8002e04:	bd30      	pop	{r4, r5, pc}
 8002e06:	bf00      	nop
 8002e08:	2000147c 	.word	0x2000147c
 8002e0c:	0801fc40 	.word	0x0801fc40
 8002e10:	0801d3ec 	.word	0x0801d3ec
 8002e14:	9077e1d8 	.word	0x9077e1d8
 8002e18:	20001480 	.word	0x20001480
 8002e1c:	08002dad 	.word	0x08002dad

08002e20 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002e20:	4770      	bx	lr
	...

08002e24 <_Z23getFont_verdana_40_4bppv>:
{
 8002e24:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002e26:	4d14      	ldr	r5, [pc, #80]	; (8002e78 <_Z23getFont_verdana_40_4bppv+0x54>)
 8002e28:	782c      	ldrb	r4, [r5, #0]
 8002e2a:	f3bf 8f5b 	dmb	ish
 8002e2e:	f014 0401 	ands.w	r4, r4, #1
{
 8002e32:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002e34:	d11d      	bne.n	8002e72 <_Z23getFont_verdana_40_4bppv+0x4e>
 8002e36:	4628      	mov	r0, r5
 8002e38:	f018 fabc 	bl	801b3b4 <__cxa_guard_acquire>
 8002e3c:	b1c8      	cbz	r0, 8002e72 <_Z23getFont_verdana_40_4bppv+0x4e>
 8002e3e:	233f      	movs	r3, #63	; 0x3f
 8002e40:	9307      	str	r3, [sp, #28]
 8002e42:	4b0e      	ldr	r3, [pc, #56]	; (8002e7c <_Z23getFont_verdana_40_4bppv+0x58>)
 8002e44:	9306      	str	r3, [sp, #24]
 8002e46:	4b0e      	ldr	r3, [pc, #56]	; (8002e80 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002e48:	490e      	ldr	r1, [pc, #56]	; (8002e84 <_Z23getFont_verdana_40_4bppv+0x60>)
 8002e4a:	480f      	ldr	r0, [pc, #60]	; (8002e88 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002e4c:	9403      	str	r4, [sp, #12]
 8002e4e:	2201      	movs	r2, #1
 8002e50:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002e54:	2304      	movs	r3, #4
 8002e56:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002e5a:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8002e5e:	2328      	movs	r3, #40	; 0x28
 8002e60:	9400      	str	r4, [sp, #0]
 8002e62:	f7ff fc29 	bl	80026b8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002e66:	4809      	ldr	r0, [pc, #36]	; (8002e8c <_Z23getFont_verdana_40_4bppv+0x68>)
 8002e68:	f018 faee 	bl	801b448 <atexit>
 8002e6c:	4628      	mov	r0, r5
 8002e6e:	f018 faad 	bl	801b3cc <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8002e72:	4805      	ldr	r0, [pc, #20]	; (8002e88 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002e74:	b00b      	add	sp, #44	; 0x2c
 8002e76:	bd30      	pop	{r4, r5, pc}
 8002e78:	200014a4 	.word	0x200014a4
 8002e7c:	0801fc4c 	.word	0x0801fc4c
 8002e80:	0801d3f0 	.word	0x0801d3f0
 8002e84:	9077e290 	.word	0x9077e290
 8002e88:	200014a8 	.word	0x200014a8
 8002e8c:	08002e21 	.word	0x08002e21

08002e90 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8002e90:	2000      	movs	r0, #0
 8002e92:	4770      	bx	lr

08002e94 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002e94:	b40e      	push	{r1, r2, r3}
 8002e96:	b503      	push	{r0, r1, lr}
 8002e98:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002e9a:	2100      	movs	r1, #0
{
 8002e9c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002ea0:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002ea2:	f00a fdb7 	bl	800da14 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002ea6:	b002      	add	sp, #8
 8002ea8:	f85d eb04 	ldr.w	lr, [sp], #4
 8002eac:	b003      	add	sp, #12
 8002eae:	4770      	bx	lr

08002eb0 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002eb0:	b40c      	push	{r2, r3}
 8002eb2:	b507      	push	{r0, r1, r2, lr}
 8002eb4:	ab04      	add	r3, sp, #16
 8002eb6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002eba:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002ebc:	f00a fdaa 	bl	800da14 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002ec0:	b003      	add	sp, #12
 8002ec2:	f85d eb04 	ldr.w	lr, [sp], #4
 8002ec6:	b002      	add	sp, #8
 8002ec8:	4770      	bx	lr
	...

08002ecc <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002ecc:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 8002ece:	b510      	push	{r4, lr}
 8002ed0:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002ed2:	b373      	cbz	r3, 8002f32 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002ed4:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8002ed6:	b92b      	cbnz	r3, 8002ee4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002ed8:	4b18      	ldr	r3, [pc, #96]	; (8002f3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002eda:	4a19      	ldr	r2, [pc, #100]	; (8002f40 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002edc:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002ede:	4819      	ldr	r0, [pc, #100]	; (8002f44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002ee0:	f018 fa94 	bl	801b40c <__assert_func>
            return buffer[pos];
 8002ee4:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8002ee6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002eea:	8b5b      	ldrh	r3, [r3, #26]
 8002eec:	b30b      	cbz	r3, 8002f32 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002eee:	f00c f937 	bl	800f160 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002ef2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8002ef4:	2b01      	cmp	r3, #1
 8002ef6:	d803      	bhi.n	8002f00 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002ef8:	4b13      	ldr	r3, [pc, #76]	; (8002f48 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002efa:	4a14      	ldr	r2, [pc, #80]	; (8002f4c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002efc:	21c5      	movs	r1, #197	; 0xc5
 8002efe:	e7ee      	b.n	8002ede <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002f00:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 8002f02:	1c53      	adds	r3, r2, #1
 8002f04:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002f06:	2b09      	cmp	r3, #9
 8002f08:	4619      	mov	r1, r3
 8002f0a:	bf88      	it	hi
 8002f0c:	f1a3 010a 	subhi.w	r1, r3, #10
 8002f10:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 8002f14:	f640 103f 	movw	r0, #2367	; 0x93f
 8002f18:	8b49      	ldrh	r1, [r1, #26]
 8002f1a:	4281      	cmp	r1, r0
 8002f1c:	d109      	bne.n	8002f32 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8002f1e:	2b0a      	cmp	r3, #10
 8002f20:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002f24:	bf28      	it	cs
 8002f26:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002f28:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002f2c:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 8002f2e:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 8002f30:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002f32:	4620      	mov	r0, r4
}
 8002f34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002f38:	f00b bff6 	b.w	800ef28 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002f3c:	0801d3f4 	.word	0x0801d3f4
 8002f40:	0801d3fd 	.word	0x0801d3fd
 8002f44:	0801d4a8 	.word	0x0801d4a8
 8002f48:	0801d4f2 	.word	0x0801d4f2
 8002f4c:	0801d500 	.word	0x0801d500

08002f50 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002f50:	f00b bfa4 	b.w	800ee9c <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002f54 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8002f54:	b510      	push	{r4, lr}
 8002f56:	b086      	sub	sp, #24
 8002f58:	ac02      	add	r4, sp, #8
 8002f5a:	e884 0006 	stmia.w	r4, {r1, r2}
 8002f5e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8002f60:	ab0a      	add	r3, sp, #40	; 0x28
 8002f62:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8002f64:	9301      	str	r3, [sp, #4]
 8002f66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002f68:	9300      	str	r3, [sp, #0]
 8002f6a:	4621      	mov	r1, r4
 8002f6c:	9b08      	ldr	r3, [sp, #32]
 8002f6e:	f009 fa2a 	bl	800c3c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8002f72:	b006      	add	sp, #24
 8002f74:	bd10      	pop	{r4, pc}
	...

08002f78 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002f78:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002f7a:	bb18      	cbnz	r0, 8002fc4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8002f7c:	4b12      	ldr	r3, [pc, #72]	; (8002fc8 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002f7e:	4813      	ldr	r0, [pc, #76]	; (8002fcc <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002f80:	681b      	ldr	r3, [r3, #0]
 8002f82:	4913      	ldr	r1, [pc, #76]	; (8002fd0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002f84:	b1b3      	cbz	r3, 8002fb4 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002f86:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002f88:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002f8a:	441a      	add	r2, r3
 8002f8c:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8002f8e:	685a      	ldr	r2, [r3, #4]
 8002f90:	441a      	add	r2, r3
 8002f92:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002f94:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8002f96:	4b0f      	ldr	r3, [pc, #60]	; (8002fd4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002f98:	2200      	movs	r2, #0
 8002f9a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002f9c:	f000 f838 	bl	8003010 <_ZN17TypedTextDatabase8getFontsEv>
 8002fa0:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002fa2:	f000 f833 	bl	800300c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002fa6:	4b0c      	ldr	r3, [pc, #48]	; (8002fd8 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002fa8:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002faa:	4b0c      	ldr	r3, [pc, #48]	; (8002fdc <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002fac:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002fae:	4b0c      	ldr	r3, [pc, #48]	; (8002fe0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002fb0:	8018      	strh	r0, [r3, #0]
    }
}
 8002fb2:	e007      	b.n	8002fc4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8002fb4:	4b0b      	ldr	r3, [pc, #44]	; (8002fe4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002fb6:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002fb8:	4b0b      	ldr	r3, [pc, #44]	; (8002fe8 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002fba:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002fbc:	4b0b      	ldr	r3, [pc, #44]	; (8002fec <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8002fbe:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8002fc0:	2c00      	cmp	r4, #0
 8002fc2:	d1e8      	bne.n	8002f96 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8002fc4:	bd38      	pop	{r3, r4, r5, pc}
 8002fc6:	bf00      	nop
 8002fc8:	200014cc 	.word	0x200014cc
 8002fcc:	200014d0 	.word	0x200014d0
 8002fd0:	200014d4 	.word	0x200014d4
 8002fd4:	200014d8 	.word	0x200014d8
 8002fd8:	2000a47c 	.word	0x2000a47c
 8002fdc:	2000a484 	.word	0x2000a484
 8002fe0:	2000a480 	.word	0x2000a480
 8002fe4:	9077e2ac 	.word	0x9077e2ac
 8002fe8:	9077e2a0 	.word	0x9077e2a0
 8002fec:	9077e2e0 	.word	0x9077e2e0

08002ff0 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8002ff0:	4b04      	ldr	r3, [pc, #16]	; (8003004 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8002ff2:	681b      	ldr	r3, [r3, #0]
 8002ff4:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8002ff8:	4b03      	ldr	r3, [pc, #12]	; (8003008 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8002ffa:	681b      	ldr	r3, [r3, #0]
}
 8002ffc:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003000:	4770      	bx	lr
 8003002:	bf00      	nop
 8003004:	200014d4 	.word	0x200014d4
 8003008:	200014d0 	.word	0x200014d0

0800300c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800300c:	2003      	movs	r0, #3
 800300e:	4770      	bx	lr

08003010 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003010:	4800      	ldr	r0, [pc, #0]	; (8003014 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8003012:	4770      	bx	lr
 8003014:	200014dc 	.word	0x200014dc

08003018 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_comicbd_83_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 8003018:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 800301a:	f7ff fec9 	bl	8002db0 <_Z23getFont_verdana_20_4bppv>
};
 800301e:	4c06      	ldr	r4, [pc, #24]	; (8003038 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8003020:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8003022:	f7ff feff 	bl	8002e24 <_Z23getFont_verdana_40_4bppv>
};
 8003026:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8003028:	f7ff fe8a 	bl	8002d40 <_Z23getFont_verdana_10_4bppv>
};
 800302c:	60a0      	str	r0, [r4, #8]
    &(getFont_comicbd_83_4bpp())
 800302e:	f7ff fe4d 	bl	8002ccc <_Z23getFont_comicbd_83_4bppv>
};
 8003032:	60e0      	str	r0, [r4, #12]
}  // namespace TypedTextDatabase
 8003034:	bd10      	pop	{r4, pc}
 8003036:	bf00      	nop
 8003038:	200014dc 	.word	0x200014dc

0800303c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800303c:	4770      	bx	lr

0800303e <_ZN19FrontendApplicationD0Ev>:
 800303e:	b510      	push	{r4, lr}
 8003040:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8003044:	4604      	mov	r4, r0
 8003046:	f018 f9b3 	bl	801b3b0 <_ZdlPvj>
 800304a:	4620      	mov	r0, r4
 800304c:	bd10      	pop	{r4, pc}

0800304e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800304e:	b510      	push	{r4, lr}
 8003050:	4604      	mov	r4, r0
    {
        model.tick();
 8003052:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8003056:	f000 f812 	bl	800307e <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800305a:	4620      	mov	r0, r4
    }
 800305c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003060:	f009 bd16 	b.w	800ca90 <_ZN8touchgfx11Application15handleTickEventEv>

08003064 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003064:	b510      	push	{r4, lr}
 8003066:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003068:	f7ff faaa 	bl	80025c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800306c:	4b01      	ldr	r3, [pc, #4]	; (8003074 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800306e:	6023      	str	r3, [r4, #0]
{

}
 8003070:	4620      	mov	r0, r4
 8003072:	bd10      	pop	{r4, pc}
 8003074:	0801d5dc 	.word	0x0801d5dc

08003078 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8003078:	2200      	movs	r2, #0
 800307a:	6002      	str	r2, [r0, #0]
{

}
 800307c:	4770      	bx	lr

0800307e <_ZN5Model4tickEv>:

void Model::tick()
{

}
 800307e:	4770      	bx	lr

08003080 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8003080:	4770      	bx	lr

08003082 <_ZThn4_N16Screen1PresenterD1Ev>:
 8003082:	3804      	subs	r0, #4
 8003084:	4770      	bx	lr

08003086 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8003086:	4770      	bx	lr

08003088 <_ZN16Screen1PresenterD0Ev>:
 8003088:	b510      	push	{r4, lr}
 800308a:	2110      	movs	r1, #16
 800308c:	4604      	mov	r4, r0
 800308e:	f018 f98f 	bl	801b3b0 <_ZdlPvj>
 8003092:	4620      	mov	r0, r4
 8003094:	bd10      	pop	{r4, pc}

08003096 <_ZThn4_N16Screen1PresenterD0Ev>:
 8003096:	f1a0 0004 	sub.w	r0, r0, #4
 800309a:	e7f5      	b.n	8003088 <_ZN16Screen1PresenterD0Ev>

0800309c <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 800309c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800309e:	2200      	movs	r2, #0
 80030a0:	6082      	str	r2, [r0, #8]
    : view(v)
 80030a2:	4a04      	ldr	r2, [pc, #16]	; (80030b4 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 80030a4:	60c1      	str	r1, [r0, #12]
 80030a6:	f102 0408 	add.w	r4, r2, #8
 80030aa:	3220      	adds	r2, #32
 80030ac:	6004      	str	r4, [r0, #0]
 80030ae:	6042      	str	r2, [r0, #4]
}
 80030b0:	bd10      	pop	{r4, pc}
 80030b2:	bf00      	nop
 80030b4:	0801d618 	.word	0x0801d618

080030b8 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 80030b8:	4770      	bx	lr

080030ba <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 80030ba:	4770      	bx	lr

080030bc <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 80030bc:	f7ff bb2a 	b.w	8002714 <_ZN15Screen1ViewBase11setupScreenEv>

080030c0 <_ZN11Screen1ViewD0Ev>:
 80030c0:	b510      	push	{r4, lr}
 80030c2:	f44f 71ba 	mov.w	r1, #372	; 0x174
 80030c6:	4604      	mov	r4, r0
 80030c8:	f018 f972 	bl	801b3b0 <_ZdlPvj>
 80030cc:	4620      	mov	r0, r4
 80030ce:	bd10      	pop	{r4, pc}

080030d0 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 80030d0:	b510      	push	{r4, lr}
 80030d2:	4604      	mov	r4, r0
 80030d4:	f7ff fbe8 	bl	80028a8 <_ZN15Screen1ViewBaseC1Ev>
 80030d8:	4b01      	ldr	r3, [pc, #4]	; (80030e0 <_ZN11Screen1ViewC1Ev+0x10>)
 80030da:	6023      	str	r3, [r4, #0]
}
 80030dc:	4620      	mov	r0, r4
 80030de:	bd10      	pop	{r4, pc}
 80030e0:	0801d648 	.word	0x0801d648

080030e4 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {};
 80030e4:	4770      	bx	lr

080030e6 <_ZThn4_N16Screen2PresenterD1Ev>:
 80030e6:	3804      	subs	r0, #4
 80030e8:	4770      	bx	lr

080030ea <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 80030ea:	4770      	bx	lr

080030ec <_ZN16Screen2PresenterD0Ev>:
 80030ec:	b510      	push	{r4, lr}
 80030ee:	2110      	movs	r1, #16
 80030f0:	4604      	mov	r4, r0
 80030f2:	f018 f95d 	bl	801b3b0 <_ZdlPvj>
 80030f6:	4620      	mov	r0, r4
 80030f8:	bd10      	pop	{r4, pc}

080030fa <_ZThn4_N16Screen2PresenterD0Ev>:
 80030fa:	f1a0 0004 	sub.w	r0, r0, #4
 80030fe:	e7f5      	b.n	80030ec <_ZN16Screen2PresenterD0Ev>

08003100 <_ZN16Screen2PresenterC1ER11Screen2View>:
Screen2Presenter::Screen2Presenter(Screen2View& v)
 8003100:	b510      	push	{r4, lr}
 8003102:	2200      	movs	r2, #0
 8003104:	6082      	str	r2, [r0, #8]
    : view(v)
 8003106:	4a04      	ldr	r2, [pc, #16]	; (8003118 <_ZN16Screen2PresenterC1ER11Screen2View+0x18>)
 8003108:	60c1      	str	r1, [r0, #12]
 800310a:	f102 0408 	add.w	r4, r2, #8
 800310e:	3220      	adds	r2, #32
 8003110:	6004      	str	r4, [r0, #0]
 8003112:	6042      	str	r2, [r0, #4]
}
 8003114:	bd10      	pop	{r4, pc}
 8003116:	bf00      	nop
 8003118:	0801d674 	.word	0x0801d674

0800311c <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 800311c:	4770      	bx	lr

0800311e <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 800311e:	4770      	bx	lr

08003120 <_ZN11Screen2View11setupScreenEv>:
    Screen2ViewBase::setupScreen();
 8003120:	f7ff bcda 	b.w	8002ad8 <_ZN15Screen2ViewBase11setupScreenEv>

08003124 <_ZN11Screen2ViewD0Ev>:
 8003124:	b510      	push	{r4, lr}
 8003126:	21b4      	movs	r1, #180	; 0xb4
 8003128:	4604      	mov	r4, r0
 800312a:	f018 f941 	bl	801b3b0 <_ZdlPvj>
 800312e:	4620      	mov	r0, r4
 8003130:	bd10      	pop	{r4, pc}
	...

08003134 <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 8003134:	b510      	push	{r4, lr}
 8003136:	4604      	mov	r4, r0
 8003138:	f7ff fcfa 	bl	8002b30 <_ZN15Screen2ViewBaseC1Ev>
 800313c:	4b01      	ldr	r3, [pc, #4]	; (8003144 <_ZN11Screen2ViewC1Ev+0x10>)
 800313e:	6023      	str	r3, [r4, #0]
}
 8003140:	4620      	mov	r0, r4
 8003142:	bd10      	pop	{r4, pc}
 8003144:	0801d6a4 	.word	0x0801d6a4

08003148 <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 8003148:	4770      	bx	lr

0800314a <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 800314a:	2000      	movs	r0, #0
 800314c:	4770      	bx	lr

0800314e <ft6x06_ReadID>:
{
 800314e:	b510      	push	{r4, lr}
 8003150:	4604      	mov	r4, r0
  TS_IO_Init();
 8003152:	f000 fb75 	bl	8003840 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 8003156:	21a8      	movs	r1, #168	; 0xa8
 8003158:	b2e0      	uxtb	r0, r4
 800315a:	f000 fb8d 	bl	8003878 <TS_IO_Read>
}
 800315e:	b280      	uxth	r0, r0
 8003160:	bd10      	pop	{r4, pc}
	...

08003164 <ft6x06_TS_DetectTouch>:
{
 8003164:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8003166:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8003168:	2102      	movs	r1, #2
 800316a:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 800316c:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8003170:	f000 fb82 	bl	8003878 <TS_IO_Read>
 8003174:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 8003178:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800317c:	f003 030f 	and.w	r3, r3, #15
 8003180:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8003184:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003188:	2b02      	cmp	r3, #2
    nbTouch = 0;
 800318a:	bf88      	it	hi
 800318c:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8003190:	4b04      	ldr	r3, [pc, #16]	; (80031a4 <ft6x06_TS_DetectTouch+0x40>)
 8003192:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 8003196:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 800319a:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 800319c:	2200      	movs	r2, #0
 800319e:	709a      	strb	r2, [r3, #2]
}
 80031a0:	b002      	add	sp, #8
 80031a2:	bd10      	pop	{r4, pc}
 80031a4:	200014ee 	.word	0x200014ee

080031a8 <ft6x06_TS_GetXY>:
{
 80031a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80031aa:	4c15      	ldr	r4, [pc, #84]	; (8003200 <ft6x06_TS_GetXY+0x58>)
{
 80031ac:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80031ae:	78a3      	ldrb	r3, [r4, #2]
 80031b0:	7862      	ldrb	r2, [r4, #1]
 80031b2:	429a      	cmp	r2, r3
{
 80031b4:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80031b6:	d91f      	bls.n	80031f8 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 80031b8:	b303      	cbz	r3, 80031fc <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 80031ba:	2b01      	cmp	r3, #1
 80031bc:	bf14      	ite	ne
 80031be:	2100      	movne	r1, #0
 80031c0:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 80031c2:	2304      	movs	r3, #4
 80031c4:	eb0d 0203 	add.w	r2, sp, r3
 80031c8:	b2c0      	uxtb	r0, r0
 80031ca:	f000 fb73 	bl	80038b4 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 80031ce:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80031d2:	f89d 2005 	ldrb.w	r2, [sp, #5]
 80031d6:	021b      	lsls	r3, r3, #8
 80031d8:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80031dc:	4313      	orrs	r3, r2
 80031de:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 80031e0:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80031e4:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80031e8:	021b      	lsls	r3, r3, #8
 80031ea:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80031ee:	4313      	orrs	r3, r2
 80031f0:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 80031f2:	78a3      	ldrb	r3, [r4, #2]
 80031f4:	3301      	adds	r3, #1
 80031f6:	70a3      	strb	r3, [r4, #2]
}
 80031f8:	b002      	add	sp, #8
 80031fa:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 80031fc:	2103      	movs	r1, #3
 80031fe:	e7e0      	b.n	80031c2 <ft6x06_TS_GetXY+0x1a>
 8003200:	200014ee 	.word	0x200014ee

08003204 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8003204:	2201      	movs	r2, #1
 8003206:	21a4      	movs	r1, #164	; 0xa4
 8003208:	b2c0      	uxtb	r0, r0
 800320a:	f000 bb1b 	b.w	8003844 <TS_IO_Write>

0800320e <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 800320e:	2200      	movs	r2, #0
 8003210:	21a4      	movs	r1, #164	; 0xa4
 8003212:	b2c0      	uxtb	r0, r0
 8003214:	f000 bb16 	b.w	8003844 <TS_IO_Write>

08003218 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8003218:	f7ff bff9 	b.w	800320e <ft6x06_TS_DisableIT>

0800321c <ft6x06_TS_ClearIT>:
 800321c:	4770      	bx	lr
	...

08003220 <ft6x06_Init>:
{  
 8003220:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8003222:	4b09      	ldr	r3, [pc, #36]	; (8003248 <ft6x06_Init+0x28>)
 8003224:	781a      	ldrb	r2, [r3, #0]
 8003226:	4290      	cmp	r0, r2
 8003228:	d00a      	beq.n	8003240 <ft6x06_Init+0x20>
 800322a:	7859      	ldrb	r1, [r3, #1]
 800322c:	4288      	cmp	r0, r1
 800322e:	d007      	beq.n	8003240 <ft6x06_Init+0x20>
 8003230:	b10a      	cbz	r2, 8003236 <ft6x06_Init+0x16>
 8003232:	b929      	cbnz	r1, 8003240 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8003234:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 8003236:	5498      	strb	r0, [r3, r2]
}
 8003238:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 800323c:	f000 bb00 	b.w	8003840 <TS_IO_Init>
}
 8003240:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003244:	4770      	bx	lr
 8003246:	bf00      	nop
 8003248:	200014ec 	.word	0x200014ec

0800324c <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 800324c:	b538      	push	{r3, r4, r5, lr}
 800324e:	4604      	mov	r4, r0
 8003250:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003252:	2000      	movs	r0, #0
 8003254:	49c9      	ldr	r1, [pc, #804]	; (800357c <OTM8009A_Init+0x330>)
 8003256:	f7fd fbe5 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 800325a:	49c9      	ldr	r1, [pc, #804]	; (8003580 <OTM8009A_Init+0x334>)
 800325c:	2003      	movs	r0, #3
 800325e:	f7fd fbe1 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 8003262:	49c8      	ldr	r1, [pc, #800]	; (8003584 <OTM8009A_Init+0x338>)
 8003264:	2000      	movs	r0, #0
 8003266:	f7fd fbdd 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 800326a:	49c7      	ldr	r1, [pc, #796]	; (8003588 <OTM8009A_Init+0x33c>)
 800326c:	2002      	movs	r0, #2
 800326e:	f7fd fbd9 	bl	8000a24 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8003272:	49c4      	ldr	r1, [pc, #784]	; (8003584 <OTM8009A_Init+0x338>)
 8003274:	2000      	movs	r0, #0
 8003276:	f7fd fbd5 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 800327a:	49c4      	ldr	r1, [pc, #784]	; (800358c <OTM8009A_Init+0x340>)
 800327c:	2000      	movs	r0, #0
 800327e:	f7fd fbd1 	bl	8000a24 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8003282:	200a      	movs	r0, #10
 8003284:	f000 fb2e 	bl	80038e4 <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 8003288:	49c1      	ldr	r1, [pc, #772]	; (8003590 <OTM8009A_Init+0x344>)
 800328a:	2000      	movs	r0, #0
 800328c:	f7fd fbca 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 8003290:	49c0      	ldr	r1, [pc, #768]	; (8003594 <OTM8009A_Init+0x348>)
 8003292:	2000      	movs	r0, #0
 8003294:	f7fd fbc6 	bl	8000a24 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8003298:	200a      	movs	r0, #10
 800329a:	f000 fb23 	bl	80038e4 <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 800329e:	49be      	ldr	r1, [pc, #760]	; (8003598 <OTM8009A_Init+0x34c>)
 80032a0:	2000      	movs	r0, #0
 80032a2:	f7fd fbbf 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 80032a6:	49bd      	ldr	r1, [pc, #756]	; (800359c <OTM8009A_Init+0x350>)
 80032a8:	2000      	movs	r0, #0
 80032aa:	f7fd fbbb 	bl	8000a24 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 80032ae:	49bc      	ldr	r1, [pc, #752]	; (80035a0 <OTM8009A_Init+0x354>)
 80032b0:	2000      	movs	r0, #0
 80032b2:	f7fd fbb7 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 80032b6:	49bb      	ldr	r1, [pc, #748]	; (80035a4 <OTM8009A_Init+0x358>)
 80032b8:	2000      	movs	r0, #0
 80032ba:	f7fd fbb3 	bl	8000a24 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 80032be:	49ba      	ldr	r1, [pc, #744]	; (80035a8 <OTM8009A_Init+0x35c>)
 80032c0:	2000      	movs	r0, #0
 80032c2:	f7fd fbaf 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 80032c6:	49b9      	ldr	r1, [pc, #740]	; (80035ac <OTM8009A_Init+0x360>)
 80032c8:	2000      	movs	r0, #0
 80032ca:	f7fd fbab 	bl	8000a24 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80032ce:	49ab      	ldr	r1, [pc, #684]	; (800357c <OTM8009A_Init+0x330>)
 80032d0:	2000      	movs	r0, #0
 80032d2:	f7fd fba7 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 80032d6:	49b6      	ldr	r1, [pc, #728]	; (80035b0 <OTM8009A_Init+0x364>)
 80032d8:	2000      	movs	r0, #0
 80032da:	f7fd fba3 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 80032de:	49b5      	ldr	r1, [pc, #724]	; (80035b4 <OTM8009A_Init+0x368>)
 80032e0:	2000      	movs	r0, #0
 80032e2:	f7fd fb9f 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 80032e6:	49b4      	ldr	r1, [pc, #720]	; (80035b8 <OTM8009A_Init+0x36c>)
 80032e8:	2000      	movs	r0, #0
 80032ea:	f7fd fb9b 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 80032ee:	49b3      	ldr	r1, [pc, #716]	; (80035bc <OTM8009A_Init+0x370>)
 80032f0:	2000      	movs	r0, #0
 80032f2:	f7fd fb97 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 80032f6:	49b2      	ldr	r1, [pc, #712]	; (80035c0 <OTM8009A_Init+0x374>)
 80032f8:	2000      	movs	r0, #0
 80032fa:	f7fd fb93 	bl	8000a24 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 80032fe:	49b1      	ldr	r1, [pc, #708]	; (80035c4 <OTM8009A_Init+0x378>)
 8003300:	2000      	movs	r0, #0
 8003302:	f7fd fb8f 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 8003306:	49b0      	ldr	r1, [pc, #704]	; (80035c8 <OTM8009A_Init+0x37c>)
 8003308:	2000      	movs	r0, #0
 800330a:	f7fd fb8b 	bl	8000a24 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 800330e:	49af      	ldr	r1, [pc, #700]	; (80035cc <OTM8009A_Init+0x380>)
 8003310:	2000      	movs	r0, #0
 8003312:	f7fd fb87 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8003316:	49a3      	ldr	r1, [pc, #652]	; (80035a4 <OTM8009A_Init+0x358>)
 8003318:	2000      	movs	r0, #0
 800331a:	f7fd fb83 	bl	8000a24 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800331e:	4997      	ldr	r1, [pc, #604]	; (800357c <OTM8009A_Init+0x330>)
 8003320:	2000      	movs	r0, #0
 8003322:	f7fd fb7f 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 8003326:	49aa      	ldr	r1, [pc, #680]	; (80035d0 <OTM8009A_Init+0x384>)
 8003328:	2002      	movs	r0, #2
 800332a:	f7fd fb7b 	bl	8000a24 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 800332e:	49a9      	ldr	r1, [pc, #676]	; (80035d4 <OTM8009A_Init+0x388>)
 8003330:	2000      	movs	r0, #0
 8003332:	f7fd fb77 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 8003336:	49a8      	ldr	r1, [pc, #672]	; (80035d8 <OTM8009A_Init+0x38c>)
 8003338:	2000      	movs	r0, #0
 800333a:	f7fd fb73 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 800333e:	49a7      	ldr	r1, [pc, #668]	; (80035dc <OTM8009A_Init+0x390>)
 8003340:	2000      	movs	r0, #0
 8003342:	f7fd fb6f 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 8003346:	49a6      	ldr	r1, [pc, #664]	; (80035e0 <OTM8009A_Init+0x394>)
 8003348:	2000      	movs	r0, #0
 800334a:	f7fd fb6b 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 800334e:	49a5      	ldr	r1, [pc, #660]	; (80035e4 <OTM8009A_Init+0x398>)
 8003350:	2000      	movs	r0, #0
 8003352:	f7fd fb67 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 8003356:	49a4      	ldr	r1, [pc, #656]	; (80035e8 <OTM8009A_Init+0x39c>)
 8003358:	2000      	movs	r0, #0
 800335a:	f7fd fb63 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800335e:	4995      	ldr	r1, [pc, #596]	; (80035b4 <OTM8009A_Init+0x368>)
 8003360:	2000      	movs	r0, #0
 8003362:	f7fd fb5f 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 8003366:	49a1      	ldr	r1, [pc, #644]	; (80035ec <OTM8009A_Init+0x3a0>)
 8003368:	2000      	movs	r0, #0
 800336a:	f7fd fb5b 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 800336e:	4993      	ldr	r1, [pc, #588]	; (80035bc <OTM8009A_Init+0x370>)
 8003370:	2000      	movs	r0, #0
 8003372:	f7fd fb57 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 8003376:	499e      	ldr	r1, [pc, #632]	; (80035f0 <OTM8009A_Init+0x3a4>)
 8003378:	2000      	movs	r0, #0
 800337a:	f7fd fb53 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 800337e:	499d      	ldr	r1, [pc, #628]	; (80035f4 <OTM8009A_Init+0x3a8>)
 8003380:	2000      	movs	r0, #0
 8003382:	f7fd fb4f 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 8003386:	499c      	ldr	r1, [pc, #624]	; (80035f8 <OTM8009A_Init+0x3ac>)
 8003388:	2002      	movs	r0, #2
 800338a:	f7fd fb4b 	bl	8000a24 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800338e:	497d      	ldr	r1, [pc, #500]	; (8003584 <OTM8009A_Init+0x338>)
 8003390:	2000      	movs	r0, #0
 8003392:	f7fd fb47 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 8003396:	4999      	ldr	r1, [pc, #612]	; (80035fc <OTM8009A_Init+0x3b0>)
 8003398:	2006      	movs	r0, #6
 800339a:	f7fd fb43 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800339e:	4998      	ldr	r1, [pc, #608]	; (8003600 <OTM8009A_Init+0x3b4>)
 80033a0:	2000      	movs	r0, #0
 80033a2:	f7fd fb3f 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 80033a6:	4997      	ldr	r1, [pc, #604]	; (8003604 <OTM8009A_Init+0x3b8>)
 80033a8:	200e      	movs	r0, #14
 80033aa:	f7fd fb3b 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 80033ae:	4996      	ldr	r1, [pc, #600]	; (8003608 <OTM8009A_Init+0x3bc>)
 80033b0:	2000      	movs	r0, #0
 80033b2:	f7fd fb37 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 80033b6:	4995      	ldr	r1, [pc, #596]	; (800360c <OTM8009A_Init+0x3c0>)
 80033b8:	200e      	movs	r0, #14
 80033ba:	f7fd fb33 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 80033be:	4994      	ldr	r1, [pc, #592]	; (8003610 <OTM8009A_Init+0x3c4>)
 80033c0:	2000      	movs	r0, #0
 80033c2:	f7fd fb2f 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 80033c6:	4993      	ldr	r1, [pc, #588]	; (8003614 <OTM8009A_Init+0x3c8>)
 80033c8:	200a      	movs	r0, #10
 80033ca:	f7fd fb2b 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 80033ce:	4992      	ldr	r1, [pc, #584]	; (8003618 <OTM8009A_Init+0x3cc>)
 80033d0:	2000      	movs	r0, #0
 80033d2:	f7fd fb27 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 80033d6:	4991      	ldr	r1, [pc, #580]	; (800361c <OTM8009A_Init+0x3d0>)
 80033d8:	2000      	movs	r0, #0
 80033da:	f7fd fb23 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80033de:	4969      	ldr	r1, [pc, #420]	; (8003584 <OTM8009A_Init+0x338>)
 80033e0:	2000      	movs	r0, #0
 80033e2:	f7fd fb1f 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 80033e6:	498e      	ldr	r1, [pc, #568]	; (8003620 <OTM8009A_Init+0x3d4>)
 80033e8:	200a      	movs	r0, #10
 80033ea:	f7fd fb1b 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 80033ee:	498d      	ldr	r1, [pc, #564]	; (8003624 <OTM8009A_Init+0x3d8>)
 80033f0:	2000      	movs	r0, #0
 80033f2:	f7fd fb17 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 80033f6:	498c      	ldr	r1, [pc, #560]	; (8003628 <OTM8009A_Init+0x3dc>)
 80033f8:	200f      	movs	r0, #15
 80033fa:	f7fd fb13 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 80033fe:	4980      	ldr	r1, [pc, #512]	; (8003600 <OTM8009A_Init+0x3b4>)
 8003400:	2000      	movs	r0, #0
 8003402:	f7fd fb0f 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 8003406:	4989      	ldr	r1, [pc, #548]	; (800362c <OTM8009A_Init+0x3e0>)
 8003408:	200f      	movs	r0, #15
 800340a:	f7fd fb0b 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800340e:	497e      	ldr	r1, [pc, #504]	; (8003608 <OTM8009A_Init+0x3bc>)
 8003410:	2000      	movs	r0, #0
 8003412:	f7fd fb07 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 8003416:	4986      	ldr	r1, [pc, #536]	; (8003630 <OTM8009A_Init+0x3e4>)
 8003418:	200a      	movs	r0, #10
 800341a:	f7fd fb03 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800341e:	497c      	ldr	r1, [pc, #496]	; (8003610 <OTM8009A_Init+0x3c4>)
 8003420:	2000      	movs	r0, #0
 8003422:	f7fd faff 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 8003426:	4983      	ldr	r1, [pc, #524]	; (8003634 <OTM8009A_Init+0x3e8>)
 8003428:	200f      	movs	r0, #15
 800342a:	f7fd fafb 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800342e:	497a      	ldr	r1, [pc, #488]	; (8003618 <OTM8009A_Init+0x3cc>)
 8003430:	2000      	movs	r0, #0
 8003432:	f7fd faf7 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 8003436:	4980      	ldr	r1, [pc, #512]	; (8003638 <OTM8009A_Init+0x3ec>)
 8003438:	200f      	movs	r0, #15
 800343a:	f7fd faf3 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 800343e:	497f      	ldr	r1, [pc, #508]	; (800363c <OTM8009A_Init+0x3f0>)
 8003440:	2000      	movs	r0, #0
 8003442:	f7fd faef 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 8003446:	497e      	ldr	r1, [pc, #504]	; (8003640 <OTM8009A_Init+0x3f4>)
 8003448:	200a      	movs	r0, #10
 800344a:	f7fd faeb 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 800344e:	497d      	ldr	r1, [pc, #500]	; (8003644 <OTM8009A_Init+0x3f8>)
 8003450:	2000      	movs	r0, #0
 8003452:	f7fd fae7 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 8003456:	497c      	ldr	r1, [pc, #496]	; (8003648 <OTM8009A_Init+0x3fc>)
 8003458:	200a      	movs	r0, #10
 800345a:	f7fd fae3 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800345e:	4949      	ldr	r1, [pc, #292]	; (8003584 <OTM8009A_Init+0x338>)
 8003460:	2000      	movs	r0, #0
 8003462:	f7fd fadf 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 8003466:	4979      	ldr	r1, [pc, #484]	; (800364c <OTM8009A_Init+0x400>)
 8003468:	200a      	movs	r0, #10
 800346a:	f7fd fadb 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 800346e:	496d      	ldr	r1, [pc, #436]	; (8003624 <OTM8009A_Init+0x3d8>)
 8003470:	2000      	movs	r0, #0
 8003472:	f7fd fad7 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 8003476:	4976      	ldr	r1, [pc, #472]	; (8003650 <OTM8009A_Init+0x404>)
 8003478:	200f      	movs	r0, #15
 800347a:	f7fd fad3 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800347e:	4960      	ldr	r1, [pc, #384]	; (8003600 <OTM8009A_Init+0x3b4>)
 8003480:	2000      	movs	r0, #0
 8003482:	f7fd facf 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 8003486:	4973      	ldr	r1, [pc, #460]	; (8003654 <OTM8009A_Init+0x408>)
 8003488:	200f      	movs	r0, #15
 800348a:	f7fd facb 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800348e:	495e      	ldr	r1, [pc, #376]	; (8003608 <OTM8009A_Init+0x3bc>)
 8003490:	2000      	movs	r0, #0
 8003492:	f7fd fac7 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 8003496:	4970      	ldr	r1, [pc, #448]	; (8003658 <OTM8009A_Init+0x40c>)
 8003498:	200a      	movs	r0, #10
 800349a:	f7fd fac3 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800349e:	495c      	ldr	r1, [pc, #368]	; (8003610 <OTM8009A_Init+0x3c4>)
 80034a0:	2000      	movs	r0, #0
 80034a2:	f7fd fabf 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 80034a6:	496d      	ldr	r1, [pc, #436]	; (800365c <OTM8009A_Init+0x410>)
 80034a8:	200f      	movs	r0, #15
 80034aa:	f7fd fabb 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 80034ae:	495a      	ldr	r1, [pc, #360]	; (8003618 <OTM8009A_Init+0x3cc>)
 80034b0:	2000      	movs	r0, #0
 80034b2:	f7fd fab7 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 80034b6:	496a      	ldr	r1, [pc, #424]	; (8003660 <OTM8009A_Init+0x414>)
 80034b8:	200f      	movs	r0, #15
 80034ba:	f7fd fab3 	bl	8000a24 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 80034be:	493d      	ldr	r1, [pc, #244]	; (80035b4 <OTM8009A_Init+0x368>)
 80034c0:	2000      	movs	r0, #0
 80034c2:	f7fd faaf 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 80034c6:	4967      	ldr	r1, [pc, #412]	; (8003664 <OTM8009A_Init+0x418>)
 80034c8:	2000      	movs	r0, #0
 80034ca:	f7fd faab 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 80034ce:	4966      	ldr	r1, [pc, #408]	; (8003668 <OTM8009A_Init+0x41c>)
 80034d0:	2000      	movs	r0, #0
 80034d2:	f7fd faa7 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 80034d6:	4965      	ldr	r1, [pc, #404]	; (800366c <OTM8009A_Init+0x420>)
 80034d8:	2000      	movs	r0, #0
 80034da:	f7fd faa3 	bl	8000a24 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 80034de:	4964      	ldr	r1, [pc, #400]	; (8003670 <OTM8009A_Init+0x424>)
 80034e0:	2000      	movs	r0, #0
 80034e2:	f7fd fa9f 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 80034e6:	4963      	ldr	r1, [pc, #396]	; (8003674 <OTM8009A_Init+0x428>)
 80034e8:	2000      	movs	r0, #0
 80034ea:	f7fd fa9b 	bl	8000a24 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80034ee:	4923      	ldr	r1, [pc, #140]	; (800357c <OTM8009A_Init+0x330>)
 80034f0:	2000      	movs	r0, #0
 80034f2:	f7fd fa97 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 80034f6:	4960      	ldr	r1, [pc, #384]	; (8003678 <OTM8009A_Init+0x42c>)
 80034f8:	2003      	movs	r0, #3
 80034fa:	f7fd fa93 	bl	8000a24 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80034fe:	491f      	ldr	r1, [pc, #124]	; (800357c <OTM8009A_Init+0x330>)
 8003500:	2000      	movs	r0, #0
 8003502:	f7fd fa8f 	bl	8000a24 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003506:	491d      	ldr	r1, [pc, #116]	; (800357c <OTM8009A_Init+0x330>)
 8003508:	2000      	movs	r0, #0
 800350a:	f7fd fa8b 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 800350e:	495b      	ldr	r1, [pc, #364]	; (800367c <OTM8009A_Init+0x430>)
 8003510:	2010      	movs	r0, #16
 8003512:	f7fd fa87 	bl	8000a24 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003516:	4919      	ldr	r1, [pc, #100]	; (800357c <OTM8009A_Init+0x330>)
 8003518:	2000      	movs	r0, #0
 800351a:	f7fd fa83 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 800351e:	4958      	ldr	r1, [pc, #352]	; (8003680 <OTM8009A_Init+0x434>)
 8003520:	2010      	movs	r0, #16
 8003522:	f7fd fa7f 	bl	8000a24 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 8003526:	2000      	movs	r0, #0
 8003528:	4956      	ldr	r1, [pc, #344]	; (8003684 <OTM8009A_Init+0x438>)
 800352a:	f7fd fa7b 	bl	8000a24 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 800352e:	2078      	movs	r0, #120	; 0x78
 8003530:	f000 f9d8 	bl	80038e4 <OTM8009A_IO_Delay>

  switch(ColorCoding)
 8003534:	2c00      	cmp	r4, #0
 8003536:	f000 80c7 	beq.w	80036c8 <OTM8009A_Init+0x47c>
 800353a:	2c02      	cmp	r4, #2
 800353c:	d103      	bne.n	8003546 <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 800353e:	4952      	ldr	r1, [pc, #328]	; (8003688 <OTM8009A_Init+0x43c>)
 8003540:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8003542:	f7fd fa6f 	bl	8000a24 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 8003546:	2d01      	cmp	r5, #1
 8003548:	d10b      	bne.n	8003562 <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 800354a:	4950      	ldr	r1, [pc, #320]	; (800368c <OTM8009A_Init+0x440>)
 800354c:	2000      	movs	r0, #0
 800354e:	f7fd fa69 	bl	8000a24 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 8003552:	494f      	ldr	r1, [pc, #316]	; (8003690 <OTM8009A_Init+0x444>)
 8003554:	2004      	movs	r0, #4
 8003556:	f7fd fa65 	bl	8000a24 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 800355a:	494e      	ldr	r1, [pc, #312]	; (8003694 <OTM8009A_Init+0x448>)
 800355c:	2004      	movs	r0, #4
 800355e:	f7fd fa61 	bl	8000a24 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 8003562:	494d      	ldr	r1, [pc, #308]	; (8003698 <OTM8009A_Init+0x44c>)
 8003564:	2000      	movs	r0, #0
 8003566:	f7fd fa5d 	bl	8000a24 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 800356a:	494c      	ldr	r1, [pc, #304]	; (800369c <OTM8009A_Init+0x450>)
 800356c:	2000      	movs	r0, #0
 800356e:	f7fd fa59 	bl	8000a24 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 8003572:	494b      	ldr	r1, [pc, #300]	; (80036a0 <OTM8009A_Init+0x454>)
 8003574:	2000      	movs	r0, #0
 8003576:	f7fd fa55 	bl	8000a24 <DSI_IO_WriteCmd>
 800357a:	e093      	b.n	80036a4 <OTM8009A_Init+0x458>
 800357c:	0801d6d0 	.word	0x0801d6d0
 8003580:	0801d736 	.word	0x0801d736
 8003584:	0801d6e6 	.word	0x0801d6e6
 8003588:	0801d7bc 	.word	0x0801d7bc
 800358c:	0801d6fc 	.word	0x0801d6fc
 8003590:	0801d712 	.word	0x0801d712
 8003594:	0801d728 	.word	0x0801d728
 8003598:	0801d72e 	.word	0x0801d72e
 800359c:	0801d730 	.word	0x0801d730
 80035a0:	0801d732 	.word	0x0801d732
 80035a4:	0801d734 	.word	0x0801d734
 80035a8:	0801d6d2 	.word	0x0801d6d2
 80035ac:	0801d6d4 	.word	0x0801d6d4
 80035b0:	0801d6d6 	.word	0x0801d6d6
 80035b4:	0801d6d8 	.word	0x0801d6d8
 80035b8:	0801d6da 	.word	0x0801d6da
 80035bc:	0801d6dc 	.word	0x0801d6dc
 80035c0:	0801d6de 	.word	0x0801d6de
 80035c4:	0801d6e0 	.word	0x0801d6e0
 80035c8:	0801d6e2 	.word	0x0801d6e2
 80035cc:	0801d6e4 	.word	0x0801d6e4
 80035d0:	0801d83a 	.word	0x0801d83a
 80035d4:	0801d6e8 	.word	0x0801d6e8
 80035d8:	0801d6ea 	.word	0x0801d6ea
 80035dc:	0801d6ec 	.word	0x0801d6ec
 80035e0:	0801d6ee 	.word	0x0801d6ee
 80035e4:	0801d6f0 	.word	0x0801d6f0
 80035e8:	0801d6f2 	.word	0x0801d6f2
 80035ec:	0801d6f4 	.word	0x0801d6f4
 80035f0:	0801d6f6 	.word	0x0801d6f6
 80035f4:	0801d6f8 	.word	0x0801d6f8
 80035f8:	0801d83d 	.word	0x0801d83d
 80035fc:	0801d840 	.word	0x0801d840
 8003600:	0801d6fa 	.word	0x0801d6fa
 8003604:	0801d847 	.word	0x0801d847
 8003608:	0801d6fe 	.word	0x0801d6fe
 800360c:	0801d856 	.word	0x0801d856
 8003610:	0801d700 	.word	0x0801d700
 8003614:	0801d73a 	.word	0x0801d73a
 8003618:	0801d702 	.word	0x0801d702
 800361c:	0801d720 	.word	0x0801d720
 8003620:	0801d745 	.word	0x0801d745
 8003624:	0801d704 	.word	0x0801d704
 8003628:	0801d750 	.word	0x0801d750
 800362c:	0801d760 	.word	0x0801d760
 8003630:	0801d770 	.word	0x0801d770
 8003634:	0801d77b 	.word	0x0801d77b
 8003638:	0801d78b 	.word	0x0801d78b
 800363c:	0801d706 	.word	0x0801d706
 8003640:	0801d79b 	.word	0x0801d79b
 8003644:	0801d708 	.word	0x0801d708
 8003648:	0801d7a6 	.word	0x0801d7a6
 800364c:	0801d7b1 	.word	0x0801d7b1
 8003650:	0801d7bf 	.word	0x0801d7bf
 8003654:	0801d7cf 	.word	0x0801d7cf
 8003658:	0801d7df 	.word	0x0801d7df
 800365c:	0801d7ea 	.word	0x0801d7ea
 8003660:	0801d7fa 	.word	0x0801d7fa
 8003664:	0801d722 	.word	0x0801d722
 8003668:	0801d724 	.word	0x0801d724
 800366c:	0801d726 	.word	0x0801d726
 8003670:	0801d72a 	.word	0x0801d72a
 8003674:	0801d72c 	.word	0x0801d72c
 8003678:	0801d80a 	.word	0x0801d80a
 800367c:	0801d818 	.word	0x0801d818
 8003680:	0801d829 	.word	0x0801d829
 8003684:	0801d70a 	.word	0x0801d70a
 8003688:	0801d70c 	.word	0x0801d70c
 800368c:	0801d710 	.word	0x0801d710
 8003690:	0801d80e 	.word	0x0801d80e
 8003694:	0801d813 	.word	0x0801d813
 8003698:	0801d714 	.word	0x0801d714
 800369c:	0801d716 	.word	0x0801d716
 80036a0:	0801d718 	.word	0x0801d718

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 80036a4:	490a      	ldr	r1, [pc, #40]	; (80036d0 <OTM8009A_Init+0x484>)
 80036a6:	2000      	movs	r0, #0
 80036a8:	f7fd f9bc 	bl	8000a24 <DSI_IO_WriteCmd>

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 80036ac:	4909      	ldr	r1, [pc, #36]	; (80036d4 <OTM8009A_Init+0x488>)
 80036ae:	2000      	movs	r0, #0
 80036b0:	f7fd f9b8 	bl	8000a24 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80036b4:	4908      	ldr	r1, [pc, #32]	; (80036d8 <OTM8009A_Init+0x48c>)
 80036b6:	2000      	movs	r0, #0
 80036b8:	f7fd f9b4 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 80036bc:	4907      	ldr	r1, [pc, #28]	; (80036dc <OTM8009A_Init+0x490>)
 80036be:	2000      	movs	r0, #0
 80036c0:	f7fd f9b0 	bl	8000a24 <DSI_IO_WriteCmd>

  return 0;
}
 80036c4:	2000      	movs	r0, #0
 80036c6:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 80036c8:	4905      	ldr	r1, [pc, #20]	; (80036e0 <OTM8009A_Init+0x494>)
 80036ca:	4620      	mov	r0, r4
 80036cc:	e739      	b.n	8003542 <OTM8009A_Init+0x2f6>
 80036ce:	bf00      	nop
 80036d0:	0801d71a 	.word	0x0801d71a
 80036d4:	0801d71c 	.word	0x0801d71c
 80036d8:	0801d6d0 	.word	0x0801d6d0
 80036dc:	0801d71e 	.word	0x0801d71e
 80036e0:	0801d70e 	.word	0x0801d70e

080036e4 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 80036e4:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 80036e6:	4d2f      	ldr	r5, [pc, #188]	; (80037a4 <I2C1_Init+0xc0>)
{
 80036e8:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 80036ea:	4628      	mov	r0, r5
 80036ec:	f002 fa74 	bl	8005bd8 <HAL_I2C_GetState>
 80036f0:	4604      	mov	r4, r0
 80036f2:	2800      	cmp	r0, #0
 80036f4:	d154      	bne.n	80037a0 <I2C1_Init+0xbc>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 80036f6:	4a2c      	ldr	r2, [pc, #176]	; (80037a8 <I2C1_Init+0xc4>)
 80036f8:	4b2c      	ldr	r3, [pc, #176]	; (80037ac <I2C1_Init+0xc8>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 80036fa:	4e2d      	ldr	r6, [pc, #180]	; (80037b0 <I2C1_Init+0xcc>)
 80036fc:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 80036fe:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8003702:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 8003706:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800370a:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800370e:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8003712:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8003714:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8003716:	f043 0302 	orr.w	r3, r3, #2
 800371a:	6333      	str	r3, [r6, #48]	; 0x30
 800371c:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 800371e:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8003720:	f003 0302 	and.w	r3, r3, #2
 8003724:	9301      	str	r3, [sp, #4]
 8003726:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8003728:	f44f 7180 	mov.w	r1, #256	; 0x100
 800372c:	2312      	movs	r3, #18
 800372e:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 8003732:	2002      	movs	r0, #2
 8003734:	2304      	movs	r3, #4
 8003736:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800373a:	a903      	add	r1, sp, #12
 800373c:	481d      	ldr	r0, [pc, #116]	; (80037b4 <I2C1_Init+0xd0>)
 800373e:	f001 fc79 	bl	8005034 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8003742:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8003746:	a903      	add	r1, sp, #12
 8003748:	481a      	ldr	r0, [pc, #104]	; (80037b4 <I2C1_Init+0xd0>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 800374a:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800374c:	f001 fc72 	bl	8005034 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 8003750:	9402      	str	r4, [sp, #8]
 8003752:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8003754:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003758:	6433      	str	r3, [r6, #64]	; 0x40
 800375a:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800375c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003760:	9302      	str	r3, [sp, #8]
 8003762:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8003764:	6a33      	ldr	r3, [r6, #32]
 8003766:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800376a:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 800376c:	6a33      	ldr	r3, [r6, #32]
 800376e:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8003772:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 8003774:	4622      	mov	r2, r4
 8003776:	2105      	movs	r1, #5
 8003778:	201f      	movs	r0, #31
 800377a:	f000 fd15 	bl	80041a8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 800377e:	201f      	movs	r0, #31
 8003780:	f000 fd44 	bl	800420c <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 8003784:	4622      	mov	r2, r4
 8003786:	2105      	movs	r1, #5
 8003788:	2020      	movs	r0, #32
 800378a:	f000 fd0d 	bl	80041a8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 800378e:	2020      	movs	r0, #32
 8003790:	f000 fd3c 	bl	800420c <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 8003794:	4628      	mov	r0, r5
  }
}
 8003796:	b008      	add	sp, #32
 8003798:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_I2C_Init(&heval_I2c1);
 800379c:	f001 bfc2 	b.w	8005724 <HAL_I2C_Init>
}
 80037a0:	b008      	add	sp, #32
 80037a2:	bd70      	pop	{r4, r5, r6, pc}
 80037a4:	200014f4 	.word	0x200014f4
 80037a8:	40005400 	.word	0x40005400
 80037ac:	00061a80 	.word	0x00061a80
 80037b0:	40023800 	.word	0x40023800
 80037b4:	40020400 	.word	0x40020400

080037b8 <BSP_PB_Init>:
{
 80037b8:	b510      	push	{r4, lr}
 80037ba:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 80037bc:	4b18      	ldr	r3, [pc, #96]	; (8003820 <BSP_PB_Init+0x68>)
 80037be:	2400      	movs	r4, #0
 80037c0:	9400      	str	r4, [sp, #0]
 80037c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80037c4:	f042 0201 	orr.w	r2, r2, #1
 80037c8:	631a      	str	r2, [r3, #48]	; 0x30
 80037ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80037cc:	f003 0301 	and.w	r3, r3, #1
 80037d0:	9300      	str	r3, [sp, #0]
 80037d2:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 80037d4:	b969      	cbnz	r1, 80037f2 <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 80037d6:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 80037d8:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 80037dc:	2302      	movs	r3, #2
 80037de:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80037e0:	4b10      	ldr	r3, [pc, #64]	; (8003824 <BSP_PB_Init+0x6c>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 80037e2:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80037e4:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 80037e8:	a901      	add	r1, sp, #4
 80037ea:	f001 fc23 	bl	8005034 <HAL_GPIO_Init>
}
 80037ee:	b006      	add	sp, #24
 80037f0:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 80037f2:	2901      	cmp	r1, #1
 80037f4:	d1fb      	bne.n	80037ee <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 80037f6:	2302      	movs	r3, #2
 80037f8:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 80037fa:	4b0b      	ldr	r3, [pc, #44]	; (8003828 <BSP_PB_Init+0x70>)
 80037fc:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80037fe:	4b09      	ldr	r3, [pc, #36]	; (8003824 <BSP_PB_Init+0x6c>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8003800:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003802:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8003806:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003808:	a901      	add	r1, sp, #4
 800380a:	f001 fc13 	bl	8005034 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 800380e:	4622      	mov	r2, r4
 8003810:	210f      	movs	r1, #15
 8003812:	2006      	movs	r0, #6
 8003814:	f000 fcc8 	bl	80041a8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 8003818:	2006      	movs	r0, #6
 800381a:	f000 fcf7 	bl	800420c <HAL_NVIC_EnableIRQ>
}
 800381e:	e7e6      	b.n	80037ee <BSP_PB_Init+0x36>
 8003820:	40023800 	.word	0x40023800
 8003824:	20000048 	.word	0x20000048
 8003828:	10110000 	.word	0x10110000

0800382c <BSP_PB_GetState>:
{
 800382c:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 800382e:	4b03      	ldr	r3, [pc, #12]	; (800383c <BSP_PB_GetState+0x10>)
 8003830:	2101      	movs	r1, #1
 8003832:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8003836:	f001 fd87 	bl	8005348 <HAL_GPIO_ReadPin>
}
 800383a:	bd08      	pop	{r3, pc}
 800383c:	20000048 	.word	0x20000048

08003840 <TS_IO_Init>:
 8003840:	f7ff bf50 	b.w	80036e4 <I2C1_Init>

08003844 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8003844:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 8003846:	2301      	movs	r3, #1
 8003848:	f88d 2017 	strb.w	r2, [sp, #23]
 800384c:	2264      	movs	r2, #100	; 0x64
 800384e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003852:	f10d 0217 	add.w	r2, sp, #23
 8003856:	9200      	str	r2, [sp, #0]
 8003858:	460a      	mov	r2, r1
 800385a:	4601      	mov	r1, r0
 800385c:	4805      	ldr	r0, [pc, #20]	; (8003874 <TS_IO_Write+0x30>)
 800385e:	f002 f823 	bl	80058a8 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 8003862:	b120      	cbz	r0, 800386e <TS_IO_Write+0x2a>
  HAL_I2C_DeInit(&heval_I2c1);
 8003864:	4803      	ldr	r0, [pc, #12]	; (8003874 <TS_IO_Write+0x30>)
 8003866:	f002 f805 	bl	8005874 <HAL_I2C_DeInit>
  I2C1_Init();
 800386a:	f7ff ff3b 	bl	80036e4 <I2C1_Init>
  I2C1_Write(Addr, Reg, Value);
}
 800386e:	b007      	add	sp, #28
 8003870:	f85d fb04 	ldr.w	pc, [sp], #4
 8003874:	200014f4 	.word	0x200014f4

08003878 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8003878:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 800387a:	2300      	movs	r3, #0
{
 800387c:	460a      	mov	r2, r1
  uint8_t Value = 0;
 800387e:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8003882:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003886:	2301      	movs	r3, #1
 8003888:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800388c:	f10d 0117 	add.w	r1, sp, #23
 8003890:	9100      	str	r1, [sp, #0]
 8003892:	4601      	mov	r1, r0
 8003894:	4806      	ldr	r0, [pc, #24]	; (80038b0 <TS_IO_Read+0x38>)
 8003896:	f002 f897 	bl	80059c8 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 800389a:	b120      	cbz	r0, 80038a6 <TS_IO_Read+0x2e>
  HAL_I2C_DeInit(&heval_I2c1);
 800389c:	4804      	ldr	r0, [pc, #16]	; (80038b0 <TS_IO_Read+0x38>)
 800389e:	f001 ffe9 	bl	8005874 <HAL_I2C_DeInit>
  I2C1_Init();
 80038a2:	f7ff ff1f 	bl	80036e4 <I2C1_Init>
  return I2C1_Read(Addr, Reg);
}
 80038a6:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80038aa:	b007      	add	sp, #28
 80038ac:	f85d fb04 	ldr.w	pc, [sp], #4
 80038b0:	200014f4 	.word	0x200014f4

080038b4 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 80038b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 80038b6:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 80038ba:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80038be:	9200      	str	r2, [sp, #0]
 80038c0:	2301      	movs	r3, #1
 80038c2:	460a      	mov	r2, r1
 80038c4:	4601      	mov	r1, r0
 80038c6:	4806      	ldr	r0, [pc, #24]	; (80038e0 <TS_IO_ReadMultiple+0x2c>)
 80038c8:	f002 f87e 	bl	80059c8 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 80038cc:	4604      	mov	r4, r0
 80038ce:	b120      	cbz	r0, 80038da <TS_IO_ReadMultiple+0x26>
  HAL_I2C_DeInit(&heval_I2c1);
 80038d0:	4803      	ldr	r0, [pc, #12]	; (80038e0 <TS_IO_ReadMultiple+0x2c>)
 80038d2:	f001 ffcf 	bl	8005874 <HAL_I2C_DeInit>
  I2C1_Init();
 80038d6:	f7ff ff05 	bl	80036e4 <I2C1_Init>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 80038da:	b2a0      	uxth	r0, r4
 80038dc:	b004      	add	sp, #16
 80038de:	bd10      	pop	{r4, pc}
 80038e0:	200014f4 	.word	0x200014f4

080038e4 <OTM8009A_IO_Delay>:
 80038e4:	f000 bc3a 	b.w	800415c <HAL_Delay>

080038e8 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80038e8:	b500      	push	{lr}
 80038ea:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80038ec:	f44f 7280 	mov.w	r2, #256	; 0x100
 80038f0:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80038f2:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 80038f6:	2205      	movs	r2, #5
 80038f8:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80038fa:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80038fc:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 80038fe:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8003900:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003904:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003908:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 800390c:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800390e:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8003910:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 8003912:	2210      	movs	r2, #16
 8003914:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8003916:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 800391a:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 800391c:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800391e:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8003920:	a906      	add	r1, sp, #24
 8003922:	466a      	mov	r2, sp
 8003924:	4804      	ldr	r0, [pc, #16]	; (8003938 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 8003926:	f002 fcd0 	bl	80062ca <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 800392a:	3800      	subs	r0, #0
 800392c:	bf18      	it	ne
 800392e:	2001      	movne	r0, #1
 8003930:	b015      	add	sp, #84	; 0x54
 8003932:	f85d fb04 	ldr.w	pc, [sp], #4
 8003936:	bf00      	nop
 8003938:	20001548 	.word	0x20001548

0800393c <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 800393c:	b500      	push	{lr}
 800393e:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003940:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003944:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8003946:	2306      	movs	r3, #6
 8003948:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800394a:	4817      	ldr	r0, [pc, #92]	; (80039a8 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800394c:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800394e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003952:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003954:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003958:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 800395c:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 800395e:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003960:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003962:	f002 fc6e 	bl	8006242 <HAL_QSPI_Command>
 8003966:	b9e0      	cbnz	r0, 80039a2 <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8003968:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 800396a:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 800396e:	2201      	movs	r2, #1
 8003970:	2310      	movs	r3, #16
 8003972:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8003976:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 800397a:	2305      	movs	r3, #5
 800397c:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8003980:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8003984:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8003986:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003988:	4807      	ldr	r0, [pc, #28]	; (80039a8 <QSPI_WriteEnable.constprop.0+0x6c>)
 800398a:	f241 3388 	movw	r3, #5000	; 0x1388
 800398e:	466a      	mov	r2, sp
 8003990:	a906      	add	r1, sp, #24
 8003992:	f002 fc9a 	bl	80062ca <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 8003996:	3800      	subs	r0, #0
 8003998:	bf18      	it	ne
 800399a:	2001      	movne	r0, #1
}
 800399c:	b015      	add	sp, #84	; 0x54
 800399e:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 80039a2:	2001      	movs	r0, #1
 80039a4:	e7fa      	b.n	800399c <QSPI_WriteEnable.constprop.0+0x60>
 80039a6:	bf00      	nop
 80039a8:	20001548 	.word	0x20001548

080039ac <BSP_QSPI_EnableMemoryMappedMode>:
{
 80039ac:	b500      	push	{lr}
 80039ae:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80039b0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80039b4:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 80039b6:	23eb      	movs	r3, #235	; 0xeb
 80039b8:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 80039ba:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80039be:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 80039c0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80039c4:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 80039c6:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 80039ca:	2300      	movs	r3, #0
 80039cc:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 80039d0:	220a      	movs	r2, #10
 80039d2:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80039d4:	a902      	add	r1, sp, #8
 80039d6:	466a      	mov	r2, sp
 80039d8:	4806      	ldr	r0, [pc, #24]	; (80039f4 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80039da:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80039dc:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 80039e0:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80039e2:	f002 fcc2 	bl	800636a <HAL_QSPI_MemoryMapped>
}
 80039e6:	3800      	subs	r0, #0
 80039e8:	bf18      	it	ne
 80039ea:	2001      	movne	r0, #1
 80039ec:	b011      	add	sp, #68	; 0x44
 80039ee:	f85d fb04 	ldr.w	pc, [sp], #4
 80039f2:	bf00      	nop
 80039f4:	20001548 	.word	0x20001548

080039f8 <BSP_QSPI_MspInit>:
{
 80039f8:	b570      	push	{r4, r5, r6, lr}
 80039fa:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 80039fc:	4b2c      	ldr	r3, [pc, #176]	; (8003ab0 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80039fe:	482d      	ldr	r0, [pc, #180]	; (8003ab4 <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8003a00:	2400      	movs	r4, #0
 8003a02:	9400      	str	r4, [sp, #0]
 8003a04:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003a06:	f042 0202 	orr.w	r2, r2, #2
 8003a0a:	639a      	str	r2, [r3, #56]	; 0x38
 8003a0c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003a0e:	f002 0202 	and.w	r2, r2, #2
 8003a12:	9200      	str	r2, [sp, #0]
 8003a14:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 8003a16:	699a      	ldr	r2, [r3, #24]
 8003a18:	f042 0202 	orr.w	r2, r2, #2
 8003a1c:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003a1e:	699a      	ldr	r2, [r3, #24]
 8003a20:	f022 0202 	bic.w	r2, r2, #2
 8003a24:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 8003a26:	9401      	str	r4, [sp, #4]
 8003a28:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a2a:	f042 0202 	orr.w	r2, r2, #2
 8003a2e:	631a      	str	r2, [r3, #48]	; 0x30
 8003a30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a32:	f002 0202 	and.w	r2, r2, #2
 8003a36:	9201      	str	r2, [sp, #4]
 8003a38:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8003a3a:	9402      	str	r4, [sp, #8]
 8003a3c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a3e:	f042 0220 	orr.w	r2, r2, #32
 8003a42:	631a      	str	r2, [r3, #48]	; 0x30
 8003a44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003a46:	f003 0320 	and.w	r3, r3, #32
 8003a4a:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003a4c:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8003a4e:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003a50:	2302      	movs	r3, #2
 8003a52:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8003a56:	2101      	movs	r1, #1
 8003a58:	2303      	movs	r3, #3
 8003a5a:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003a5e:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003a60:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8003a62:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003a64:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003a66:	f001 fae5 	bl	8005034 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8003a6a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8003a6e:	a903      	add	r1, sp, #12
 8003a70:	4811      	ldr	r0, [pc, #68]	; (8003ab8 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8003a72:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8003a74:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8003a76:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8003a78:	f001 fadc 	bl	8005034 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8003a7c:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003a80:	a903      	add	r1, sp, #12
 8003a82:	480d      	ldr	r0, [pc, #52]	; (8003ab8 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8003a84:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003a86:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003a88:	f001 fad4 	bl	8005034 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8003a8c:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003a8e:	a903      	add	r1, sp, #12
 8003a90:	4809      	ldr	r0, [pc, #36]	; (8003ab8 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8003a92:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8003a94:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003a96:	f001 facd 	bl	8005034 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8003a9a:	4622      	mov	r2, r4
 8003a9c:	210f      	movs	r1, #15
 8003a9e:	205b      	movs	r0, #91	; 0x5b
 8003aa0:	f000 fb82 	bl	80041a8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8003aa4:	205b      	movs	r0, #91	; 0x5b
 8003aa6:	f000 fbb1 	bl	800420c <HAL_NVIC_EnableIRQ>
}
 8003aaa:	b008      	add	sp, #32
 8003aac:	bd70      	pop	{r4, r5, r6, pc}
 8003aae:	bf00      	nop
 8003ab0:	40023800 	.word	0x40023800
 8003ab4:	40020400 	.word	0x40020400
 8003ab8:	40021400 	.word	0x40021400

08003abc <BSP_QSPI_Init>:
{
 8003abc:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8003abe:	4c48      	ldr	r4, [pc, #288]	; (8003be0 <BSP_QSPI_Init+0x124>)
 8003ac0:	4b48      	ldr	r3, [pc, #288]	; (8003be4 <BSP_QSPI_Init+0x128>)
 8003ac2:	6023      	str	r3, [r4, #0]
{
 8003ac4:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8003ac6:	4620      	mov	r0, r4
 8003ac8:	f002 fba8 	bl	800621c <HAL_QSPI_DeInit>
 8003acc:	4605      	mov	r5, r0
 8003ace:	b110      	cbz	r0, 8003ad6 <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8003ad0:	2001      	movs	r0, #1
}
 8003ad2:	b011      	add	sp, #68	; 0x44
 8003ad4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 8003ad6:	4601      	mov	r1, r0
 8003ad8:	4620      	mov	r0, r4
 8003ada:	f7ff ff8d 	bl	80039f8 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 8003ade:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8003ae0:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 8003ae2:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8003ae6:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8003ae8:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8003aec:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8003af0:	fab3 f383 	clz	r3, r3
 8003af4:	3b01      	subs	r3, #1
 8003af6:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8003af8:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8003afa:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8003afe:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8003b02:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8003b06:	f002 fb35 	bl	8006174 <HAL_QSPI_Init>
 8003b0a:	2800      	cmp	r0, #0
 8003b0c:	d1e0      	bne.n	8003ad0 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003b0e:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003b12:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003b16:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003b1a:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8003b1c:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 8003b1e:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003b20:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b22:	f241 3288 	movw	r2, #5000	; 0x1388
 8003b26:	a902      	add	r1, sp, #8
 8003b28:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003b2a:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003b2c:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b2e:	f002 fb88 	bl	8006242 <HAL_QSPI_Command>
 8003b32:	b108      	cbz	r0, 8003b38 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 8003b34:	2004      	movs	r0, #4
 8003b36:	e7cc      	b.n	8003ad2 <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8003b38:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b3a:	f241 3288 	movw	r2, #5000	; 0x1388
 8003b3e:	a902      	add	r1, sp, #8
 8003b40:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 8003b42:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b44:	f002 fb7d 	bl	8006242 <HAL_QSPI_Command>
 8003b48:	2800      	cmp	r0, #0
 8003b4a:	d1f3      	bne.n	8003b34 <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8003b4c:	f241 3088 	movw	r0, #5000	; 0x1388
 8003b50:	f7ff feca 	bl	80038e8 <QSPI_AutoPollingMemReady.constprop.0>
 8003b54:	2800      	cmp	r0, #0
 8003b56:	d1ed      	bne.n	8003b34 <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003b58:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8003b5c:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003b60:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8003b64:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 8003b66:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b68:	f241 3288 	movw	r2, #5000	; 0x1388
 8003b6c:	a902      	add	r1, sp, #8
 8003b6e:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003b70:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8003b72:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003b74:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b76:	f002 fb64 	bl	8006242 <HAL_QSPI_Command>
 8003b7a:	2800      	cmp	r0, #0
 8003b7c:	d1da      	bne.n	8003b34 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003b7e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003b82:	f10d 0107 	add.w	r1, sp, #7
 8003b86:	4620      	mov	r0, r4
 8003b88:	f002 fcce 	bl	8006528 <HAL_QSPI_Receive>
 8003b8c:	2800      	cmp	r0, #0
 8003b8e:	d1d1      	bne.n	8003b34 <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 8003b90:	f7ff fed4 	bl	800393c <QSPI_WriteEnable.constprop.0>
 8003b94:	2800      	cmp	r0, #0
 8003b96:	d1cd      	bne.n	8003b34 <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 8003b98:	2381      	movs	r3, #129	; 0x81
 8003b9a:	9302      	str	r3, [sp, #8]
 8003b9c:	22f0      	movs	r2, #240	; 0xf0
 8003b9e:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8003ba2:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003ba6:	210a      	movs	r1, #10
 8003ba8:	fab2 f282 	clz	r2, r2
 8003bac:	fa01 f202 	lsl.w	r2, r1, r2
 8003bb0:	f003 030f 	and.w	r3, r3, #15
 8003bb4:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003bb6:	a902      	add	r1, sp, #8
 8003bb8:	f241 3288 	movw	r2, #5000	; 0x1388
 8003bbc:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8003bbe:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003bc2:	f002 fb3e 	bl	8006242 <HAL_QSPI_Command>
 8003bc6:	2800      	cmp	r0, #0
 8003bc8:	d1b4      	bne.n	8003b34 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003bca:	f241 3288 	movw	r2, #5000	; 0x1388
 8003bce:	f10d 0107 	add.w	r1, sp, #7
 8003bd2:	4620      	mov	r0, r4
 8003bd4:	f002 fc4c 	bl	8006470 <HAL_QSPI_Transmit>
 8003bd8:	2800      	cmp	r0, #0
 8003bda:	f43f af7a 	beq.w	8003ad2 <BSP_QSPI_Init+0x16>
 8003bde:	e7a9      	b.n	8003b34 <BSP_QSPI_Init+0x78>
 8003be0:	20001548 	.word	0x20001548
 8003be4:	a0001000 	.word	0xa0001000

08003be8 <BSP_QSPI_MspDeInit>:
{
 8003be8:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8003bea:	205b      	movs	r0, #91	; 0x5b
 8003bec:	f000 fb1c 	bl	8004228 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 8003bf0:	4814      	ldr	r0, [pc, #80]	; (8003c44 <BSP_QSPI_MspDeInit+0x5c>)
 8003bf2:	2140      	movs	r1, #64	; 0x40
 8003bf4:	f001 fb06 	bl	8005204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 8003bf8:	4813      	ldr	r0, [pc, #76]	; (8003c48 <BSP_QSPI_MspDeInit+0x60>)
 8003bfa:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003bfe:	f001 fb01 	bl	8005204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 8003c02:	4811      	ldr	r0, [pc, #68]	; (8003c48 <BSP_QSPI_MspDeInit+0x60>)
 8003c04:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003c08:	f001 fafc 	bl	8005204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 8003c0c:	480e      	ldr	r0, [pc, #56]	; (8003c48 <BSP_QSPI_MspDeInit+0x60>)
 8003c0e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003c12:	f001 faf7 	bl	8005204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 8003c16:	480c      	ldr	r0, [pc, #48]	; (8003c48 <BSP_QSPI_MspDeInit+0x60>)
 8003c18:	2180      	movs	r1, #128	; 0x80
 8003c1a:	f001 faf3 	bl	8005204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 8003c1e:	480a      	ldr	r0, [pc, #40]	; (8003c48 <BSP_QSPI_MspDeInit+0x60>)
 8003c20:	2140      	movs	r1, #64	; 0x40
 8003c22:	f001 faef 	bl	8005204 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 8003c26:	4b09      	ldr	r3, [pc, #36]	; (8003c4c <BSP_QSPI_MspDeInit+0x64>)
 8003c28:	699a      	ldr	r2, [r3, #24]
 8003c2a:	f042 0202 	orr.w	r2, r2, #2
 8003c2e:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003c30:	699a      	ldr	r2, [r3, #24]
 8003c32:	f022 0202 	bic.w	r2, r2, #2
 8003c36:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 8003c38:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003c3a:	f022 0202 	bic.w	r2, r2, #2
 8003c3e:	639a      	str	r2, [r3, #56]	; 0x38
}
 8003c40:	bd08      	pop	{r3, pc}
 8003c42:	bf00      	nop
 8003c44:	40020400 	.word	0x40020400
 8003c48:	40021400 	.word	0x40021400
 8003c4c:	40023800 	.word	0x40023800

08003c50 <BSP_QSPI_DeInit>:
{
 8003c50:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 8003c52:	4d08      	ldr	r5, [pc, #32]	; (8003c74 <BSP_QSPI_DeInit+0x24>)
 8003c54:	4b08      	ldr	r3, [pc, #32]	; (8003c78 <BSP_QSPI_DeInit+0x28>)
 8003c56:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8003c58:	4628      	mov	r0, r5
 8003c5a:	f002 fadf 	bl	800621c <HAL_QSPI_DeInit>
 8003c5e:	4604      	mov	r4, r0
 8003c60:	b928      	cbnz	r0, 8003c6e <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 8003c62:	4601      	mov	r1, r0
 8003c64:	4628      	mov	r0, r5
 8003c66:	f7ff ffbf 	bl	8003be8 <BSP_QSPI_MspDeInit>
}
 8003c6a:	4620      	mov	r0, r4
 8003c6c:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 8003c6e:	2401      	movs	r4, #1
 8003c70:	e7fb      	b.n	8003c6a <BSP_QSPI_DeInit+0x1a>
 8003c72:	bf00      	nop
 8003c74:	20001548 	.word	0x20001548
 8003c78:	a0001000 	.word	0xa0001000

08003c7c <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 8003c7c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8003c80:	4c21      	ldr	r4, [pc, #132]	; (8003d08 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003c82:	4d22      	ldr	r5, [pc, #136]	; (8003d0c <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003c84:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 8003c86:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003c8a:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003c8c:	4621      	mov	r1, r4
{
 8003c8e:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003c90:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003c94:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003c96:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8003c9a:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 8003c9e:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003ca2:	f003 f8b5 	bl	8006e10 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 8003ca6:	4630      	mov	r0, r6
 8003ca8:	f000 fa58 	bl	800415c <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8003cac:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003cae:	4621      	mov	r1, r4
 8003cb0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003cb4:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003cb6:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8003cba:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003cbe:	f003 f8a7 	bl	8006e10 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8003cc2:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003cc4:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003cc8:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 8003cca:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003ccc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003cd0:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 8003cd2:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003cd6:	f003 f89b 	bl	8006e10 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 8003cda:	f44f 730c 	mov.w	r3, #560	; 0x230
 8003cde:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8003ce0:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003ce2:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003ce6:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 8003ce8:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 8003cea:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003cec:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003cf0:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 8003cf2:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003cf4:	f003 f88c 	bl	8006e10 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8003cf8:	4649      	mov	r1, r9
 8003cfa:	4628      	mov	r0, r5
}
 8003cfc:	b003      	add	sp, #12
 8003cfe:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8003d02:	f003 b89c 	b.w	8006e3e <HAL_SDRAM_ProgramRefreshRate>
 8003d06:	bf00      	nop
 8003d08:	20001594 	.word	0x20001594
 8003d0c:	20001680 	.word	0x20001680

08003d10 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8003d10:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8003d12:	4606      	mov	r6, r0
{
 8003d14:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8003d16:	2800      	cmp	r0, #0
 8003d18:	f000 80bd 	beq.w	8003e96 <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 8003d1c:	4b5f      	ldr	r3, [pc, #380]	; (8003e9c <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003d1e:	4860      	ldr	r0, [pc, #384]	; (8003ea0 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8003d20:	4c60      	ldr	r4, [pc, #384]	; (8003ea4 <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 8003d22:	2500      	movs	r5, #0
 8003d24:	9500      	str	r5, [sp, #0]
 8003d26:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003d28:	f042 0201 	orr.w	r2, r2, #1
 8003d2c:	639a      	str	r2, [r3, #56]	; 0x38
 8003d2e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003d30:	f002 0201 	and.w	r2, r2, #1
 8003d34:	9200      	str	r2, [sp, #0]
 8003d36:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 8003d38:	9501      	str	r5, [sp, #4]
 8003d3a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003d3c:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8003d40:	631a      	str	r2, [r3, #48]	; 0x30
 8003d42:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003d44:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8003d48:	9201      	str	r2, [sp, #4]
 8003d4a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8003d4c:	9502      	str	r5, [sp, #8]
 8003d4e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003d50:	f042 0204 	orr.w	r2, r2, #4
 8003d54:	631a      	str	r2, [r3, #48]	; 0x30
 8003d56:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003d58:	f002 0204 	and.w	r2, r2, #4
 8003d5c:	9202      	str	r2, [sp, #8]
 8003d5e:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8003d60:	9503      	str	r5, [sp, #12]
 8003d62:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003d64:	f042 0208 	orr.w	r2, r2, #8
 8003d68:	631a      	str	r2, [r3, #48]	; 0x30
 8003d6a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003d6c:	f002 0208 	and.w	r2, r2, #8
 8003d70:	9203      	str	r2, [sp, #12]
 8003d72:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8003d74:	9504      	str	r5, [sp, #16]
 8003d76:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003d78:	f042 0210 	orr.w	r2, r2, #16
 8003d7c:	631a      	str	r2, [r3, #48]	; 0x30
 8003d7e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003d80:	f002 0210 	and.w	r2, r2, #16
 8003d84:	9204      	str	r2, [sp, #16]
 8003d86:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8003d88:	9505      	str	r5, [sp, #20]
 8003d8a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003d8c:	f042 0220 	orr.w	r2, r2, #32
 8003d90:	631a      	str	r2, [r3, #48]	; 0x30
 8003d92:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003d94:	f002 0220 	and.w	r2, r2, #32
 8003d98:	9205      	str	r2, [sp, #20]
 8003d9a:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8003d9c:	9506      	str	r5, [sp, #24]
 8003d9e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003da0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003da4:	631a      	str	r2, [r3, #48]	; 0x30
 8003da6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003da8:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8003dac:	9206      	str	r2, [sp, #24]
 8003dae:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8003db0:	9507      	str	r5, [sp, #28]
 8003db2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003db4:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8003db8:	631a      	str	r2, [r3, #48]	; 0x30
 8003dba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003dbc:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8003dc0:	9207      	str	r2, [sp, #28]
 8003dc2:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8003dc4:	9508      	str	r5, [sp, #32]
 8003dc6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003dc8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003dcc:	631a      	str	r2, [r3, #48]	; 0x30
 8003dce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003dd0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003dd4:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8003dd6:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8003dd8:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 8003dda:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8003ddc:	2301      	movs	r3, #1
 8003dde:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003de2:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8003de4:	220c      	movs	r2, #12
 8003de6:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 8003de8:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003dea:	f001 f923 	bl	8005034 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8003dee:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8003df2:	482d      	ldr	r0, [pc, #180]	; (8003ea8 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8003df4:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8003df6:	a909      	add	r1, sp, #36	; 0x24
 8003df8:	f001 f91c 	bl	8005034 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8003dfc:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8003e00:	482a      	ldr	r0, [pc, #168]	; (8003eac <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8003e02:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8003e04:	a909      	add	r1, sp, #36	; 0x24
 8003e06:	f001 f915 	bl	8005034 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8003e0a:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8003e0e:	4828      	ldr	r0, [pc, #160]	; (8003eb0 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8003e10:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8003e12:	a909      	add	r1, sp, #36	; 0x24
 8003e14:	f001 f90e 	bl	8005034 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8003e18:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8003e1c:	4825      	ldr	r0, [pc, #148]	; (8003eb4 <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8003e1e:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8003e20:	a909      	add	r1, sp, #36	; 0x24
 8003e22:	f001 f907 	bl	8005034 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8003e26:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8003e2a:	4823      	ldr	r0, [pc, #140]	; (8003eb8 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8003e2c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8003e2e:	a909      	add	r1, sp, #36	; 0x24
 8003e30:	f001 f900 	bl	8005034 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8003e34:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8003e38:	4820      	ldr	r0, [pc, #128]	; (8003ebc <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8003e3a:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8003e3c:	a909      	add	r1, sp, #36	; 0x24
 8003e3e:	f001 f8f9 	bl	8005034 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 8003e42:	2280      	movs	r2, #128	; 0x80
 8003e44:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003e48:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8003e4c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003e50:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003e54:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 8003e58:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 8003e5c:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 8003e60:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 8003e64:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 8003e68:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 8003e6a:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 8003e6e:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003e70:	4b13      	ldr	r3, [pc, #76]	; (8003ec0 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8003e72:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 8003e74:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003e76:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8003e78:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8003e7a:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 8003e7c:	f000 fa8e 	bl	800439c <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 8003e80:	4620      	mov	r0, r4
 8003e82:	f000 fa0b 	bl	800429c <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 8003e86:	2038      	movs	r0, #56	; 0x38
 8003e88:	462a      	mov	r2, r5
 8003e8a:	2105      	movs	r1, #5
 8003e8c:	f000 f98c 	bl	80041a8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 8003e90:	2038      	movs	r0, #56	; 0x38
 8003e92:	f000 f9bb 	bl	800420c <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8003e96:	b00e      	add	sp, #56	; 0x38
 8003e98:	bd70      	pop	{r4, r5, r6, pc}
 8003e9a:	bf00      	nop
 8003e9c:	40023800 	.word	0x40023800
 8003ea0:	40020800 	.word	0x40020800
 8003ea4:	20001620 	.word	0x20001620
 8003ea8:	40020c00 	.word	0x40020c00
 8003eac:	40021000 	.word	0x40021000
 8003eb0:	40021400 	.word	0x40021400
 8003eb4:	40021800 	.word	0x40021800
 8003eb8:	40021c00 	.word	0x40021c00
 8003ebc:	40022000 	.word	0x40022000
 8003ec0:	40026410 	.word	0x40026410

08003ec4 <BSP_SDRAM_Init>:
{
 8003ec4:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8003ec6:	4c19      	ldr	r4, [pc, #100]	; (8003f2c <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 8003ec8:	4d19      	ldr	r5, [pc, #100]	; (8003f30 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8003eca:	4b1a      	ldr	r3, [pc, #104]	; (8003f34 <BSP_SDRAM_Init+0x70>)
 8003ecc:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 8003ece:	2107      	movs	r1, #7
 8003ed0:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 8003ed2:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 8003ed4:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 8003ed8:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8003edc:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8003ee0:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 8003ee2:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8003ee4:	2340      	movs	r3, #64	; 0x40
 8003ee6:	2220      	movs	r2, #32
 8003ee8:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8003eec:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8003eee:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8003ef2:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 8003ef6:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8003efa:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003efe:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8003f02:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8003f04:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8003f08:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8003f0a:	f7ff ff01 	bl	8003d10 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 8003f0e:	4629      	mov	r1, r5
 8003f10:	4620      	mov	r0, r4
 8003f12:	f002 ff4f 	bl	8006db4 <HAL_SDRAM_Init>
 8003f16:	4c08      	ldr	r4, [pc, #32]	; (8003f38 <BSP_SDRAM_Init+0x74>)
 8003f18:	3800      	subs	r0, #0
 8003f1a:	bf18      	it	ne
 8003f1c:	2001      	movne	r0, #1
 8003f1e:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8003f20:	f240 5069 	movw	r0, #1385	; 0x569
 8003f24:	f7ff feaa 	bl	8003c7c <BSP_SDRAM_Initialization_sequence>
}
 8003f28:	7820      	ldrb	r0, [r4, #0]
 8003f2a:	bd38      	pop	{r3, r4, r5, pc}
 8003f2c:	20001680 	.word	0x20001680
 8003f30:	200015a4 	.word	0x200015a4
 8003f34:	a0000140 	.word	0xa0000140
 8003f38:	2000004d 	.word	0x2000004d

08003f3c <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8003f3c:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8003f3e:	b148      	cbz	r0, 8003f54 <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 8003f40:	2038      	movs	r0, #56	; 0x38
 8003f42:	f000 f971 	bl	8004228 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003f46:	4804      	ldr	r0, [pc, #16]	; (8003f58 <BSP_SDRAM_MspDeInit+0x1c>)
 8003f48:	4b04      	ldr	r3, [pc, #16]	; (8003f5c <BSP_SDRAM_MspDeInit+0x20>)
 8003f4a:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8003f4c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 8003f50:	f000 ba24 	b.w	800439c <HAL_DMA_DeInit>
}
 8003f54:	bd08      	pop	{r3, pc}
 8003f56:	bf00      	nop
 8003f58:	200015c0 	.word	0x200015c0
 8003f5c:	40026410 	.word	0x40026410

08003f60 <BSP_SDRAM_DeInit>:
{
 8003f60:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8003f62:	4c07      	ldr	r4, [pc, #28]	; (8003f80 <BSP_SDRAM_DeInit+0x20>)
 8003f64:	4b07      	ldr	r3, [pc, #28]	; (8003f84 <BSP_SDRAM_DeInit+0x24>)
 8003f66:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 8003f68:	4620      	mov	r0, r4
 8003f6a:	f002 ff43 	bl	8006df4 <HAL_SDRAM_DeInit>
 8003f6e:	4d06      	ldr	r5, [pc, #24]	; (8003f88 <BSP_SDRAM_DeInit+0x28>)
 8003f70:	4601      	mov	r1, r0
 8003f72:	b918      	cbnz	r0, 8003f7c <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 8003f74:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 8003f76:	4620      	mov	r0, r4
 8003f78:	f7ff ffe0 	bl	8003f3c <BSP_SDRAM_MspDeInit>
}
 8003f7c:	7828      	ldrb	r0, [r5, #0]
 8003f7e:	bd38      	pop	{r3, r4, r5, pc}
 8003f80:	20001680 	.word	0x20001680
 8003f84:	a0000140 	.word	0xa0000140
 8003f88:	2000004c 	.word	0x2000004c

08003f8c <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 8003f8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 8003f90:	4d16      	ldr	r5, [pc, #88]	; (8003fec <BSP_TS_Init+0x60>)
 8003f92:	4c17      	ldr	r4, [pc, #92]	; (8003ff0 <BSP_TS_Init+0x64>)
 8003f94:	682b      	ldr	r3, [r5, #0]
{
 8003f96:	4606      	mov	r6, r0
  ft6x06_ts_drv.Init(I2C_Address);
 8003f98:	7820      	ldrb	r0, [r4, #0]
{
 8003f9a:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 8003f9c:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 8003f9e:	686b      	ldr	r3, [r5, #4]
 8003fa0:	2054      	movs	r0, #84	; 0x54
 8003fa2:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 8003fa4:	b2c0      	uxtb	r0, r0
 8003fa6:	2811      	cmp	r0, #17
 8003fa8:	d00a      	beq.n	8003fc0 <BSP_TS_Init+0x34>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 8003faa:	686b      	ldr	r3, [r5, #4]
 8003fac:	2070      	movs	r0, #112	; 0x70
 8003fae:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003fb0:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8003fb2:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003fb4:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8003fb6:	7023      	strb	r3, [r4, #0]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003fb8:	d004      	beq.n	8003fc4 <BSP_TS_Init+0x38>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 8003fba:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 8003fbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 8003fc0:	2354      	movs	r3, #84	; 0x54
 8003fc2:	7023      	strb	r3, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8003fc4:	4b0b      	ldr	r3, [pc, #44]	; (8003ff4 <BSP_TS_Init+0x68>)
 8003fc6:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8003ff8 <BSP_TS_Init+0x6c>
      ts_driver->Reset(I2C_Address);
 8003fca:	7820      	ldrb	r0, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8003fcc:	f8c8 5000 	str.w	r5, [r8]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 8003fd0:	42be      	cmp	r6, r7
 8003fd2:	bf34      	ite	cc
 8003fd4:	2601      	movcc	r6, #1
 8003fd6:	260c      	movcs	r6, #12
 8003fd8:	701e      	strb	r6, [r3, #0]
      ts_driver->Reset(I2C_Address);
 8003fda:	68ab      	ldr	r3, [r5, #8]
 8003fdc:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 8003fde:	f8d8 3000 	ldr.w	r3, [r8]
 8003fe2:	7820      	ldrb	r0, [r4, #0]
 8003fe4:	68db      	ldr	r3, [r3, #12]
 8003fe6:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 8003fe8:	2000      	movs	r0, #0
 8003fea:	e7e7      	b.n	8003fbc <BSP_TS_Init+0x30>
 8003fec:	20000020 	.word	0x20000020
 8003ff0:	200016b4 	.word	0x200016b4
 8003ff4:	200016cc 	.word	0x200016cc
 8003ff8:	200016c8 	.word	0x200016c8

08003ffc <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 8003ffc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8004000:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 80040e0 <BSP_TS_GetState+0xe4>
 8004004:	4a33      	ldr	r2, [pc, #204]	; (80040d4 <BSP_TS_GetState+0xd8>)
 8004006:	f8db 3000 	ldr.w	r3, [fp]
{
 800400a:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800400c:	691b      	ldr	r3, [r3, #16]
 800400e:	7810      	ldrb	r0, [r2, #0]
{
 8004010:	b085      	sub	sp, #20
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8004012:	4798      	blx	r3
 8004014:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 8004016:	b158      	cbz	r0, 8004030 <BSP_TS_GetState+0x34>
 8004018:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80040e4 <BSP_TS_GetState+0xe8>
 800401c:	4f2e      	ldr	r7, [pc, #184]	; (80040d8 <BSP_TS_GetState+0xdc>)
 800401e:	f106 0a02 	add.w	sl, r6, #2
 8004022:	ad03      	add	r5, sp, #12
 8004024:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 8004026:	f04f 0900 	mov.w	r9, #0
 800402a:	7833      	ldrb	r3, [r6, #0]
 800402c:	454b      	cmp	r3, r9
 800402e:	d803      	bhi.n	8004038 <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8004030:	2000      	movs	r0, #0
 8004032:	b005      	add	sp, #20
 8004034:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 8004038:	f8db 3000 	ldr.w	r3, [fp]
 800403c:	4825      	ldr	r0, [pc, #148]	; (80040d4 <BSP_TS_GetState+0xd8>)
 800403e:	695b      	ldr	r3, [r3, #20]
 8004040:	7800      	ldrb	r0, [r0, #0]
 8004042:	9101      	str	r1, [sp, #4]
 8004044:	462a      	mov	r2, r5
 8004046:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 8004048:	4b24      	ldr	r3, [pc, #144]	; (80040dc <BSP_TS_GetState+0xe0>)
 800404a:	9901      	ldr	r1, [sp, #4]
 800404c:	781b      	ldrb	r3, [r3, #0]
 800404e:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 8004052:	bf1f      	itttt	ne
 8004054:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 8004056:	8828      	ldrhne	r0, [r5, #0]
 8004058:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 800405a:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 800405c:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 800405e:	bf41      	itttt	mi
 8004060:	880a      	ldrhmi	r2, [r1, #0]
 8004062:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 8004066:	3203      	addmi	r2, #3
 8004068:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 800406a:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 800406c:	bf48      	it	mi
 800406e:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8004070:	f8d8 2000 	ldr.w	r2, [r8]
 8004074:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8004078:	bf42      	ittt	mi
 800407a:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 800407e:	3301      	addmi	r3, #1
 8004080:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8004082:	b293      	uxth	r3, r2
 8004084:	4290      	cmp	r0, r2
 8004086:	bf8c      	ite	hi
 8004088:	1ac3      	subhi	r3, r0, r3
 800408a:	1a1b      	subls	r3, r3, r0
 800408c:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800408e:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8004092:	9301      	str	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8004094:	683b      	ldr	r3, [r7, #0]
 8004096:	b29c      	uxth	r4, r3
 8004098:	429a      	cmp	r2, r3
 800409a:	bf88      	it	hi
 800409c:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 800409e:	9b01      	ldr	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80040a0:	bf98      	it	ls
 80040a2:	1aa4      	subls	r4, r4, r2
 80040a4:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 80040a6:	441c      	add	r4, r3
 80040a8:	46c4      	mov	ip, r8
 80040aa:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 80040ac:	bfc8      	it	gt
 80040ae:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 80040b2:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 80040b6:	bfc8      	it	gt
 80040b8:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 80040ba:	46be      	mov	lr, r7
 80040bc:	f82a 3b02 	strh.w	r3, [sl], #2
      TS_State->touchY[index] = _y[index];
 80040c0:	f8de 3000 	ldr.w	r3, [lr]
 80040c4:	f8aa 3002 	strh.w	r3, [sl, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 80040c8:	f108 0804 	add.w	r8, r8, #4
 80040cc:	3704      	adds	r7, #4
 80040ce:	f109 0901 	add.w	r9, r9, #1
 80040d2:	e7aa      	b.n	800402a <BSP_TS_GetState+0x2e>
 80040d4:	200016b4 	.word	0x200016b4
 80040d8:	200016c0 	.word	0x200016c0
 80040dc:	200016cc 	.word	0x200016cc
 80040e0:	200016c8 	.word	0x200016c8
 80040e4:	200016b8 	.word	0x200016b8

080040e8 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80040e8:	4b05      	ldr	r3, [pc, #20]	; (8004100 <SystemInit+0x18>)
 80040ea:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 80040ee:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80040f2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80040f6:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80040fa:	609a      	str	r2, [r3, #8]
#endif
}
 80040fc:	4770      	bx	lr
 80040fe:	bf00      	nop
 8004100:	e000ed00 	.word	0xe000ed00

08004104 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004104:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8004106:	4b0b      	ldr	r3, [pc, #44]	; (8004134 <HAL_Init+0x30>)
 8004108:	681a      	ldr	r2, [r3, #0]
 800410a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800410e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8004110:	681a      	ldr	r2, [r3, #0]
 8004112:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004116:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004118:	681a      	ldr	r2, [r3, #0]
 800411a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800411e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004120:	2003      	movs	r0, #3
 8004122:	f000 f82f 	bl	8004184 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8004126:	2000      	movs	r0, #0
 8004128:	f7fd feb2 	bl	8001e90 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800412c:	f7fd fc52 	bl	80019d4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004130:	2000      	movs	r0, #0
 8004132:	bd08      	pop	{r3, pc}
 8004134:	40023c00 	.word	0x40023c00

08004138 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8004138:	4a03      	ldr	r2, [pc, #12]	; (8004148 <HAL_IncTick+0x10>)
 800413a:	4b04      	ldr	r3, [pc, #16]	; (800414c <HAL_IncTick+0x14>)
 800413c:	6811      	ldr	r1, [r2, #0]
 800413e:	781b      	ldrb	r3, [r3, #0]
 8004140:	440b      	add	r3, r1
 8004142:	6013      	str	r3, [r2, #0]
}
 8004144:	4770      	bx	lr
 8004146:	bf00      	nop
 8004148:	200016d0 	.word	0x200016d0
 800414c:	20000054 	.word	0x20000054

08004150 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004150:	4b01      	ldr	r3, [pc, #4]	; (8004158 <HAL_GetTick+0x8>)
 8004152:	6818      	ldr	r0, [r3, #0]
}
 8004154:	4770      	bx	lr
 8004156:	bf00      	nop
 8004158:	200016d0 	.word	0x200016d0

0800415c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800415c:	b538      	push	{r3, r4, r5, lr}
 800415e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004160:	f7ff fff6 	bl	8004150 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004164:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8004166:	bf1c      	itt	ne
 8004168:	4b05      	ldrne	r3, [pc, #20]	; (8004180 <HAL_Delay+0x24>)
 800416a:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 800416c:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800416e:	bf18      	it	ne
 8004170:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8004172:	f7ff ffed 	bl	8004150 <HAL_GetTick>
 8004176:	1b43      	subs	r3, r0, r5
 8004178:	42a3      	cmp	r3, r4
 800417a:	d3fa      	bcc.n	8004172 <HAL_Delay+0x16>
  {
  }
}
 800417c:	bd38      	pop	{r3, r4, r5, pc}
 800417e:	bf00      	nop
 8004180:	20000054 	.word	0x20000054

08004184 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004184:	4907      	ldr	r1, [pc, #28]	; (80041a4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8004186:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004188:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800418c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800418e:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004190:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004194:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004196:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004198:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800419c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80041a0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80041a2:	4770      	bx	lr
 80041a4:	e000ed00 	.word	0xe000ed00

080041a8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80041a8:	4b16      	ldr	r3, [pc, #88]	; (8004204 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80041aa:	b530      	push	{r4, r5, lr}
 80041ac:	68dc      	ldr	r4, [r3, #12]
 80041ae:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80041b2:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80041b6:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80041b8:	2d04      	cmp	r5, #4
 80041ba:	bf28      	it	cs
 80041bc:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80041be:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80041c0:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80041c4:	bf8c      	ite	hi
 80041c6:	3c03      	subhi	r4, #3
 80041c8:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80041ca:	fa03 f505 	lsl.w	r5, r3, r5
 80041ce:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80041d2:	40a3      	lsls	r3, r4
 80041d4:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80041d8:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 80041da:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80041dc:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80041e0:	bfac      	ite	ge
 80041e2:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80041e6:	4a08      	ldrlt	r2, [pc, #32]	; (8004208 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80041e8:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80041ec:	bfb8      	it	lt
 80041ee:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80041f2:	b2db      	uxtb	r3, r3
 80041f4:	bfaa      	itet	ge
 80041f6:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80041fa:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80041fc:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004200:	bd30      	pop	{r4, r5, pc}
 8004202:	bf00      	nop
 8004204:	e000ed00 	.word	0xe000ed00
 8004208:	e000ed14 	.word	0xe000ed14

0800420c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800420c:	2800      	cmp	r0, #0
 800420e:	db08      	blt.n	8004222 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004210:	0942      	lsrs	r2, r0, #5
 8004212:	2301      	movs	r3, #1
 8004214:	f000 001f 	and.w	r0, r0, #31
 8004218:	fa03 f000 	lsl.w	r0, r3, r0
 800421c:	4b01      	ldr	r3, [pc, #4]	; (8004224 <HAL_NVIC_EnableIRQ+0x18>)
 800421e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004222:	4770      	bx	lr
 8004224:	e000e100 	.word	0xe000e100

08004228 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004228:	2800      	cmp	r0, #0
 800422a:	db0d      	blt.n	8004248 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800422c:	0943      	lsrs	r3, r0, #5
 800422e:	2201      	movs	r2, #1
 8004230:	f000 001f 	and.w	r0, r0, #31
 8004234:	fa02 f000 	lsl.w	r0, r2, r0
 8004238:	3320      	adds	r3, #32
 800423a:	4a04      	ldr	r2, [pc, #16]	; (800424c <HAL_NVIC_DisableIRQ+0x24>)
 800423c:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8004240:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8004244:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8004248:	4770      	bx	lr
 800424a:	bf00      	nop
 800424c:	e000e100 	.word	0xe000e100

08004250 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004250:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004252:	4604      	mov	r4, r0
 8004254:	b150      	cbz	r0, 800426c <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004256:	7943      	ldrb	r3, [r0, #5]
 8004258:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800425c:	b913      	cbnz	r3, 8004264 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800425e:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004260:	f7fd fbd8 	bl	8001a14 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004264:	2301      	movs	r3, #1
 8004266:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8004268:	2000      	movs	r0, #0
}
 800426a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800426c:	2001      	movs	r0, #1
 800426e:	e7fc      	b.n	800426a <HAL_CRC_Init+0x1a>

08004270 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8004270:	6803      	ldr	r3, [r0, #0]
{
 8004272:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8004274:	4c08      	ldr	r4, [pc, #32]	; (8004298 <DMA_CalcBaseAndBitshift+0x28>)
{
 8004276:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8004278:	b2d9      	uxtb	r1, r3
 800427a:	3910      	subs	r1, #16
 800427c:	2018      	movs	r0, #24
 800427e:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8004282:	5c20      	ldrb	r0, [r4, r0]
 8004284:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8004286:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 800428a:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 800428e:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8004290:	bf88      	it	hi
 8004292:	3004      	addhi	r0, #4
 8004294:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 8004296:	bd10      	pop	{r4, pc}
 8004298:	0801d87d 	.word	0x0801d87d

0800429c <HAL_DMA_Init>:
{
 800429c:	b570      	push	{r4, r5, r6, lr}
 800429e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80042a0:	f7ff ff56 	bl	8004150 <HAL_GetTick>
 80042a4:	4605      	mov	r5, r0
  if(hdma == NULL)
 80042a6:	2c00      	cmp	r4, #0
 80042a8:	d073      	beq.n	8004392 <HAL_DMA_Init+0xf6>
  __HAL_UNLOCK(hdma);
 80042aa:	2300      	movs	r3, #0
 80042ac:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 80042b0:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 80042b2:	2302      	movs	r3, #2
 80042b4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 80042b8:	6813      	ldr	r3, [r2, #0]
 80042ba:	f023 0301 	bic.w	r3, r3, #1
 80042be:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80042c0:	6821      	ldr	r1, [r4, #0]
 80042c2:	680b      	ldr	r3, [r1, #0]
 80042c4:	07d8      	lsls	r0, r3, #31
 80042c6:	d42f      	bmi.n	8004328 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 80042c8:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80042ca:	4d33      	ldr	r5, [pc, #204]	; (8004398 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80042cc:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80042ce:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80042d0:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 80042d4:	4313      	orrs	r3, r2
 80042d6:	68e2      	ldr	r2, [r4, #12]
 80042d8:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80042da:	6922      	ldr	r2, [r4, #16]
 80042dc:	4313      	orrs	r3, r2
 80042de:	6962      	ldr	r2, [r4, #20]
 80042e0:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80042e2:	69e2      	ldr	r2, [r4, #28]
 80042e4:	4303      	orrs	r3, r0
 80042e6:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 80042e8:	6a22      	ldr	r2, [r4, #32]
 80042ea:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80042ec:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80042ee:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80042f0:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 80042f4:	bf02      	ittt	eq
 80042f6:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 80042fa:	4335      	orreq	r5, r6
 80042fc:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 80042fe:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8004300:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004302:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8004304:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8004308:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800430c:	d133      	bne.n	8004376 <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 800430e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8004310:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8004312:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8004314:	b37d      	cbz	r5, 8004376 <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8004316:	b990      	cbnz	r0, 800433e <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 8004318:	2a01      	cmp	r2, #1
 800431a:	d021      	beq.n	8004360 <HAL_DMA_Init+0xc4>
 800431c:	f032 0202 	bics.w	r2, r2, #2
 8004320:	d129      	bne.n	8004376 <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8004322:	01ea      	lsls	r2, r5, #7
 8004324:	d527      	bpl.n	8004376 <HAL_DMA_Init+0xda>
 8004326:	e01e      	b.n	8004366 <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8004328:	f7ff ff12 	bl	8004150 <HAL_GetTick>
 800432c:	1b40      	subs	r0, r0, r5
 800432e:	2805      	cmp	r0, #5
 8004330:	d9c6      	bls.n	80042c0 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004332:	2320      	movs	r3, #32
 8004334:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8004336:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8004338:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 800433c:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800433e:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8004342:	d114      	bne.n	800436e <HAL_DMA_Init+0xd2>
    switch (tmp)
 8004344:	2a03      	cmp	r2, #3
 8004346:	d816      	bhi.n	8004376 <HAL_DMA_Init+0xda>
 8004348:	a001      	add	r0, pc, #4	; (adr r0, 8004350 <HAL_DMA_Init+0xb4>)
 800434a:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 800434e:	bf00      	nop
 8004350:	08004367 	.word	0x08004367
 8004354:	08004323 	.word	0x08004323
 8004358:	08004367 	.word	0x08004367
 800435c:	08004361 	.word	0x08004361
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8004360:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8004364:	d107      	bne.n	8004376 <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8004366:	2340      	movs	r3, #64	; 0x40
 8004368:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 800436a:	2001      	movs	r0, #1
 800436c:	e7e4      	b.n	8004338 <HAL_DMA_Init+0x9c>
    switch (tmp)
 800436e:	2a02      	cmp	r2, #2
 8004370:	d9f9      	bls.n	8004366 <HAL_DMA_Init+0xca>
 8004372:	2a03      	cmp	r2, #3
 8004374:	d0d5      	beq.n	8004322 <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 8004376:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8004378:	4620      	mov	r0, r4
 800437a:	f7ff ff79 	bl	8004270 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800437e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8004380:	233f      	movs	r3, #63	; 0x3f
 8004382:	4093      	lsls	r3, r2
 8004384:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004386:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8004388:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800438a:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 800438c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8004390:	e7d4      	b.n	800433c <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 8004392:	2001      	movs	r0, #1
 8004394:	e7d2      	b.n	800433c <HAL_DMA_Init+0xa0>
 8004396:	bf00      	nop
 8004398:	f010803f 	.word	0xf010803f

0800439c <HAL_DMA_DeInit>:
{
 800439c:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 800439e:	4605      	mov	r5, r0
 80043a0:	b320      	cbz	r0, 80043ec <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 80043a2:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80043a6:	2b02      	cmp	r3, #2
 80043a8:	b2dc      	uxtb	r4, r3
 80043aa:	d01d      	beq.n	80043e8 <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 80043ac:	6803      	ldr	r3, [r0, #0]
 80043ae:	681a      	ldr	r2, [r3, #0]
 80043b0:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 80043b4:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 80043b6:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 80043b8:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 80043ba:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 80043bc:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 80043be:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 80043c0:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 80043c2:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 80043c4:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80043c6:	f7ff ff53 	bl	8004270 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80043ca:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 80043cc:	233f      	movs	r3, #63	; 0x3f
 80043ce:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 80043d0:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 80043d4:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 80043d8:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80043dc:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80043de:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 80043e0:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 80043e4:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 80043e8:	4620      	mov	r0, r4
 80043ea:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80043ec:	2401      	movs	r4, #1
 80043ee:	e7fb      	b.n	80043e8 <HAL_DMA_DeInit+0x4c>

080043f0 <HAL_DMA_Abort>:
{
 80043f0:	b570      	push	{r4, r5, r6, lr}
 80043f2:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80043f4:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 80043f6:	f7ff feab 	bl	8004150 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80043fa:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 80043fe:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8004400:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8004402:	d006      	beq.n	8004412 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004404:	2380      	movs	r3, #128	; 0x80
 8004406:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 8004408:	2300      	movs	r3, #0
 800440a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 800440e:	2001      	movs	r0, #1
}
 8004410:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8004412:	6823      	ldr	r3, [r4, #0]
 8004414:	681a      	ldr	r2, [r3, #0]
 8004416:	f022 0216 	bic.w	r2, r2, #22
 800441a:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 800441c:	695a      	ldr	r2, [r3, #20]
 800441e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004422:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8004424:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004426:	b90a      	cbnz	r2, 800442c <HAL_DMA_Abort+0x3c>
 8004428:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800442a:	b11a      	cbz	r2, 8004434 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 800442c:	681a      	ldr	r2, [r3, #0]
 800442e:	f022 0208 	bic.w	r2, r2, #8
 8004432:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8004434:	681a      	ldr	r2, [r3, #0]
 8004436:	f022 0201 	bic.w	r2, r2, #1
 800443a:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800443c:	6823      	ldr	r3, [r4, #0]
 800443e:	681b      	ldr	r3, [r3, #0]
 8004440:	f013 0301 	ands.w	r3, r3, #1
 8004444:	d10a      	bne.n	800445c <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004446:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8004448:	223f      	movs	r2, #63	; 0x3f
 800444a:	408a      	lsls	r2, r1
 800444c:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 800444e:	2201      	movs	r2, #1
    __HAL_UNLOCK(hdma);
 8004450:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    hdma->State = HAL_DMA_STATE_READY;
 8004454:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
  return HAL_OK;
 8004458:	4618      	mov	r0, r3
 800445a:	e7d9      	b.n	8004410 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800445c:	f7ff fe78 	bl	8004150 <HAL_GetTick>
 8004460:	1b40      	subs	r0, r0, r5
 8004462:	2805      	cmp	r0, #5
 8004464:	d9ea      	bls.n	800443c <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004466:	2320      	movs	r3, #32
 8004468:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800446a:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 800446c:	2300      	movs	r3, #0
 800446e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8004472:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        return HAL_TIMEOUT;
 8004476:	e7cb      	b.n	8004410 <HAL_DMA_Abort+0x20>

08004478 <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 8004478:	b570      	push	{r4, r5, r6, lr}
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 800447a:	6804      	ldr	r4, [r0, #0]
 800447c:	9d04      	ldr	r5, [sp, #16]
 800447e:	6c66      	ldr	r6, [r4, #68]	; 0x44
 8004480:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8004484:	f006 4640 	and.w	r6, r6, #3221225472	; 0xc0000000
 8004488:	4333      	orrs	r3, r6
 800448a:	6463      	str	r3, [r4, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 800448c:	6843      	ldr	r3, [r0, #4]
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 800448e:	63e2      	str	r2, [r4, #60]	; 0x3c
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8004490:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8004494:	d130      	bne.n	80044f8 <DMA2D_SetConfig+0x80>
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 8004496:	6886      	ldr	r6, [r0, #8]
 8004498:	b11e      	cbz	r6, 80044a2 <DMA2D_SetConfig+0x2a>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 800449a:	2e01      	cmp	r6, #1
 800449c:	d103      	bne.n	80044a6 <DMA2D_SetConfig+0x2e>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 800449e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
      tmp3 = (tmp3 >> 12U);
      tmp4 = (tmp4 >> 4U );
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 80044a2:	63a1      	str	r1, [r4, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 80044a4:	bd70      	pop	{r4, r5, r6, pc}
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 80044a6:	2e02      	cmp	r6, #2
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 80044a8:	f401 037f 	and.w	r3, r1, #16711680	; 0xff0000
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 80044ac:	f401 457f 	and.w	r5, r1, #65280	; 0xff00
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 80044b0:	b2c8      	uxtb	r0, r1
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 80044b2:	d107      	bne.n	80044c4 <DMA2D_SetConfig+0x4c>
      tmp2 = (tmp2 >> 19U);
 80044b4:	0cdb      	lsrs	r3, r3, #19
      tmp3 = (tmp3 >> 10U);
 80044b6:	0aa9      	lsrs	r1, r5, #10
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 80044b8:	02db      	lsls	r3, r3, #11
 80044ba:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
 80044be:	ea43 01d0 	orr.w	r1, r3, r0, lsr #3
 80044c2:	e7ee      	b.n	80044a2 <DMA2D_SetConfig+0x2a>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 80044c4:	2e03      	cmp	r6, #3
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 80044c6:	f001 427f 	and.w	r2, r1, #4278190080	; 0xff000000
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 80044ca:	d10a      	bne.n	80044e2 <DMA2D_SetConfig+0x6a>
      tmp2 = (tmp2 >> 19U);
 80044cc:	0cd9      	lsrs	r1, r3, #19
      tmp3 = (tmp3 >> 11U);
 80044ce:	0aed      	lsrs	r5, r5, #11
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 80044d0:	0289      	lsls	r1, r1, #10
 80044d2:	ea41 1145 	orr.w	r1, r1, r5, lsl #5
 80044d6:	ea41 01d0 	orr.w	r1, r1, r0, lsr #3
      tmp1 = (tmp1 >> 31U);
 80044da:	0fd3      	lsrs	r3, r2, #31
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 80044dc:	ea41 31c3 	orr.w	r1, r1, r3, lsl #15
 80044e0:	e7df      	b.n	80044a2 <DMA2D_SetConfig+0x2a>
      tmp2 = (tmp2 >> 20U);
 80044e2:	0d19      	lsrs	r1, r3, #20
      tmp3 = (tmp3 >> 12U);
 80044e4:	0b2d      	lsrs	r5, r5, #12
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 80044e6:	0209      	lsls	r1, r1, #8
 80044e8:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
 80044ec:	ea41 1110 	orr.w	r1, r1, r0, lsr #4
      tmp1 = (tmp1 >> 28U);
 80044f0:	0f13      	lsrs	r3, r2, #28
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 80044f2:	ea41 3103 	orr.w	r1, r1, r3, lsl #12
 80044f6:	e7d4      	b.n	80044a2 <DMA2D_SetConfig+0x2a>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 80044f8:	60e1      	str	r1, [r4, #12]
}
 80044fa:	e7d3      	b.n	80044a4 <DMA2D_SetConfig+0x2c>

080044fc <HAL_DMA2D_Init>:
{
 80044fc:	b510      	push	{r4, lr}
  if(hdma2d == NULL)
 80044fe:	4604      	mov	r4, r0
 8004500:	b330      	cbz	r0, 8004550 <HAL_DMA2D_Init+0x54>
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004502:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004506:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800450a:	b91b      	cbnz	r3, 8004514 <HAL_DMA2D_Init+0x18>
    hdma2d->Lock = HAL_UNLOCKED;
 800450c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 8004510:	f7fd fa98 	bl	8001a44 <HAL_DMA2D_MspInit>
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004514:	6822      	ldr	r2, [r4, #0]
 8004516:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004518:	2302      	movs	r3, #2
 800451a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800451e:	6813      	ldr	r3, [r2, #0]
 8004520:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8004524:	430b      	orrs	r3, r1
 8004526:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004528:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800452a:	68a1      	ldr	r1, [r4, #8]
 800452c:	f023 0307 	bic.w	r3, r3, #7
 8004530:	430b      	orrs	r3, r1
 8004532:	6353      	str	r3, [r2, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004534:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8004536:	68e1      	ldr	r1, [r4, #12]
 8004538:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800453c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8004540:	430b      	orrs	r3, r1
 8004542:	6413      	str	r3, [r2, #64]	; 0x40
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004544:	2000      	movs	r0, #0
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004546:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004548:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800454a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
}
 800454e:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8004550:	2001      	movs	r0, #1
 8004552:	e7fc      	b.n	800454e <HAL_DMA2D_Init+0x52>

08004554 <HAL_DMA2D_Start_IT>:
{
 8004554:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
 8004556:	f890 5038 	ldrb.w	r5, [r0, #56]	; 0x38
 800455a:	2d01      	cmp	r5, #1
{
 800455c:	4604      	mov	r4, r0
 800455e:	f04f 0502 	mov.w	r5, #2
  __HAL_LOCK(hdma2d);
 8004562:	d013      	beq.n	800458c <HAL_DMA2D_Start_IT+0x38>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004564:	f880 5039 	strb.w	r5, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8004568:	2601      	movs	r6, #1
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 800456a:	9d06      	ldr	r5, [sp, #24]
  __HAL_LOCK(hdma2d);
 800456c:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8004570:	9500      	str	r5, [sp, #0]
 8004572:	f7ff ff81 	bl	8004478 <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8004576:	6823      	ldr	r3, [r4, #0]
 8004578:	681a      	ldr	r2, [r3, #0]
 800457a:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 800457e:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 8004580:	681a      	ldr	r2, [r3, #0]
 8004582:	4332      	orrs	r2, r6
 8004584:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 8004586:	2000      	movs	r0, #0
}
 8004588:	b002      	add	sp, #8
 800458a:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 800458c:	4628      	mov	r0, r5
 800458e:	e7fb      	b.n	8004588 <HAL_DMA2D_Start_IT+0x34>

08004590 <HAL_DMA2D_BlendingStart_IT>:
{
 8004590:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004592:	4616      	mov	r6, r2
 8004594:	461a      	mov	r2, r3
  __HAL_LOCK(hdma2d);
 8004596:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800459a:	2b01      	cmp	r3, #1
{
 800459c:	4604      	mov	r4, r0
 800459e:	f04f 0502 	mov.w	r5, #2
  __HAL_LOCK(hdma2d);
 80045a2:	d017      	beq.n	80045d4 <HAL_DMA2D_BlendingStart_IT+0x44>
 80045a4:	2301      	movs	r3, #1
 80045a6:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 80045aa:	6803      	ldr	r3, [r0, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80045ac:	f880 5039 	strb.w	r5, [r0, #57]	; 0x39
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 80045b0:	615e      	str	r6, [r3, #20]
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 80045b2:	9b07      	ldr	r3, [sp, #28]
 80045b4:	9300      	str	r3, [sp, #0]
 80045b6:	9b06      	ldr	r3, [sp, #24]
 80045b8:	f7ff ff5e 	bl	8004478 <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 80045bc:	6823      	ldr	r3, [r4, #0]
 80045be:	681a      	ldr	r2, [r3, #0]
 80045c0:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 80045c4:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 80045c6:	681a      	ldr	r2, [r3, #0]
 80045c8:	f042 0201 	orr.w	r2, r2, #1
 80045cc:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 80045ce:	2000      	movs	r0, #0
}
 80045d0:	b002      	add	sp, #8
 80045d2:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 80045d4:	4628      	mov	r0, r5
 80045d6:	e7fb      	b.n	80045d0 <HAL_DMA2D_BlendingStart_IT+0x40>

080045d8 <HAL_DMA2D_Abort>:
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 80045d8:	6802      	ldr	r2, [r0, #0]
{
 80045da:	b538      	push	{r3, r4, r5, lr}
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 80045dc:	6813      	ldr	r3, [r2, #0]
 80045de:	f023 0305 	bic.w	r3, r3, #5
 80045e2:	f043 0304 	orr.w	r3, r3, #4
 80045e6:	6013      	str	r3, [r2, #0]
{
 80045e8:	4604      	mov	r4, r0
  tickstart = HAL_GetTick();
 80045ea:	f7ff fdb1 	bl	8004150 <HAL_GetTick>
 80045ee:	4605      	mov	r5, r0
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 80045f0:	6822      	ldr	r2, [r4, #0]
 80045f2:	6813      	ldr	r3, [r2, #0]
 80045f4:	f013 0301 	ands.w	r3, r3, #1
 80045f8:	d109      	bne.n	800460e <HAL_DMA2D_Abort+0x36>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 80045fa:	6811      	ldr	r1, [r2, #0]
 80045fc:	f421 510c 	bic.w	r1, r1, #8960	; 0x2300
 8004600:	6011      	str	r1, [r2, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004602:	2201      	movs	r2, #1
 8004604:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8004608:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 800460c:	e00f      	b.n	800462e <HAL_DMA2D_Abort+0x56>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 800460e:	f7ff fd9f 	bl	8004150 <HAL_GetTick>
 8004612:	1b40      	subs	r0, r0, r5
 8004614:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004618:	d9ea      	bls.n	80045f0 <HAL_DMA2D_Abort+0x18>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 800461a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800461c:	f043 0320 	orr.w	r3, r3, #32
 8004620:	63e3      	str	r3, [r4, #60]	; 0x3c
      __HAL_UNLOCK(hdma2d);
 8004622:	2200      	movs	r2, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8004624:	2303      	movs	r3, #3
 8004626:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 800462a:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
  return HAL_OK;
 800462e:	4618      	mov	r0, r3
}
 8004630:	bd38      	pop	{r3, r4, r5, pc}

08004632 <HAL_DMA2D_CLUTLoading_Abort>:
{
 8004632:	b570      	push	{r4, r5, r6, lr}
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 8004634:	6805      	ldr	r5, [r0, #0]
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 8004636:	682a      	ldr	r2, [r5, #0]
 8004638:	f042 0204 	orr.w	r2, r2, #4
 800463c:	602a      	str	r2, [r5, #0]
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 800463e:	2901      	cmp	r1, #1
{
 8004640:	4604      	mov	r4, r0
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 8004642:	bf14      	ite	ne
 8004644:	3524      	addne	r5, #36	; 0x24
    reg  = &(hdma2d->Instance->FGPFCCR);
 8004646:	351c      	addeq	r5, #28
  tickstart = HAL_GetTick();
 8004648:	f7ff fd82 	bl	8004150 <HAL_GetTick>
 800464c:	4606      	mov	r6, r0
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 800464e:	682b      	ldr	r3, [r5, #0]
 8004650:	f013 0320 	ands.w	r3, r3, #32
 8004654:	d10a      	bne.n	800466c <HAL_DMA2D_CLUTLoading_Abort+0x3a>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 8004656:	6821      	ldr	r1, [r4, #0]
 8004658:	680a      	ldr	r2, [r1, #0]
 800465a:	f422 5264 	bic.w	r2, r2, #14592	; 0x3900
 800465e:	600a      	str	r2, [r1, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004660:	2201      	movs	r2, #1
 8004662:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8004666:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 800466a:	e00f      	b.n	800468c <HAL_DMA2D_CLUTLoading_Abort+0x5a>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 800466c:	f7ff fd70 	bl	8004150 <HAL_GetTick>
 8004670:	1b80      	subs	r0, r0, r6
 8004672:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004676:	d9ea      	bls.n	800464e <HAL_DMA2D_CLUTLoading_Abort+0x1c>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8004678:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800467a:	f043 0320 	orr.w	r3, r3, #32
 800467e:	63e3      	str	r3, [r4, #60]	; 0x3c
      __HAL_UNLOCK(hdma2d);
 8004680:	2200      	movs	r2, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8004682:	2303      	movs	r3, #3
 8004684:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004688:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
  return HAL_OK;
 800468c:	4618      	mov	r0, r3
}
 800468e:	bd70      	pop	{r4, r5, r6, pc}

08004690 <HAL_DMA2D_DeInit>:
{
 8004690:	b538      	push	{r3, r4, r5, lr}
  if(hdma2d == NULL)
 8004692:	4605      	mov	r5, r0
 8004694:	b908      	cbnz	r0, 800469a <HAL_DMA2D_DeInit+0xa>
     return HAL_ERROR;
 8004696:	2001      	movs	r0, #1
}
 8004698:	bd38      	pop	{r3, r4, r5, pc}
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 800469a:	4b16      	ldr	r3, [pc, #88]	; (80046f4 <HAL_DMA2D_DeInit+0x64>)
 800469c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800469e:	0219      	lsls	r1, r3, #8
 80046a0:	d413      	bmi.n	80046ca <HAL_DMA2D_DeInit+0x3a>
  hdma2d->Instance->CR       =    0U;
 80046a2:	682b      	ldr	r3, [r5, #0]
 80046a4:	2400      	movs	r4, #0
  hdma2d->Instance->IFCR     = 0x3FU;
 80046a6:	223f      	movs	r2, #63	; 0x3f
  hdma2d->Instance->CR       =    0U;
 80046a8:	601c      	str	r4, [r3, #0]
  HAL_DMA2D_MspDeInit(hdma2d);
 80046aa:	4628      	mov	r0, r5
  hdma2d->Instance->IFCR     = 0x3FU;
 80046ac:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 80046ae:	611c      	str	r4, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 80046b0:	619c      	str	r4, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 80046b2:	61dc      	str	r4, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 80046b4:	625c      	str	r4, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 80046b6:	635c      	str	r4, [r3, #52]	; 0x34
  HAL_DMA2D_MspDeInit(hdma2d);
 80046b8:	f7fd f9e6 	bl	8001a88 <HAL_DMA2D_MspDeInit>
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80046bc:	63ec      	str	r4, [r5, #60]	; 0x3c
  __HAL_UNLOCK(hdma2d);
 80046be:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 80046c2:	f885 4039 	strb.w	r4, [r5, #57]	; 0x39
  return HAL_OK;
 80046c6:	4620      	mov	r0, r4
 80046c8:	e7e6      	b.n	8004698 <HAL_DMA2D_DeInit+0x8>
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 80046ca:	6803      	ldr	r3, [r0, #0]
 80046cc:	6819      	ldr	r1, [r3, #0]
 80046ce:	f011 0101 	ands.w	r1, r1, #1
 80046d2:	d004      	beq.n	80046de <HAL_DMA2D_DeInit+0x4e>
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 80046d4:	f7ff ff80 	bl	80045d8 <HAL_DMA2D_Abort>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 80046d8:	2800      	cmp	r0, #0
 80046da:	d0e2      	beq.n	80046a2 <HAL_DMA2D_DeInit+0x12>
 80046dc:	e7db      	b.n	8004696 <HAL_DMA2D_DeInit+0x6>
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 80046de:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80046e0:	0692      	lsls	r2, r2, #26
 80046e2:	d502      	bpl.n	80046ea <HAL_DMA2D_DeInit+0x5a>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 80046e4:	f7ff ffa5 	bl	8004632 <HAL_DMA2D_CLUTLoading_Abort>
 80046e8:	e7f6      	b.n	80046d8 <HAL_DMA2D_DeInit+0x48>
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 80046ea:	69db      	ldr	r3, [r3, #28]
 80046ec:	069b      	lsls	r3, r3, #26
 80046ee:	d5d8      	bpl.n	80046a2 <HAL_DMA2D_DeInit+0x12>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 80046f0:	2101      	movs	r1, #1
 80046f2:	e7f7      	b.n	80046e4 <HAL_DMA2D_DeInit+0x54>
 80046f4:	40023800 	.word	0x40023800

080046f8 <HAL_DMA2D_LineEventCallback>:
 80046f8:	4770      	bx	lr

080046fa <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80046fa:	4770      	bx	lr

080046fc <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80046fc:	6803      	ldr	r3, [r0, #0]
{
 80046fe:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004700:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004702:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004704:	07f2      	lsls	r2, r6, #31
{
 8004706:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004708:	d514      	bpl.n	8004734 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 800470a:	05e9      	lsls	r1, r5, #23
 800470c:	d512      	bpl.n	8004734 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800470e:	681a      	ldr	r2, [r3, #0]
 8004710:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004714:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004716:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8004718:	f042 0201 	orr.w	r2, r2, #1
 800471c:	63c2      	str	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800471e:	2201      	movs	r2, #1
 8004720:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004722:	2304      	movs	r3, #4
 8004724:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004728:	2300      	movs	r3, #0
 800472a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 800472e:	6943      	ldr	r3, [r0, #20]
 8004730:	b103      	cbz	r3, 8004734 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8004732:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004734:	06b2      	lsls	r2, r6, #26
 8004736:	d516      	bpl.n	8004766 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004738:	04ab      	lsls	r3, r5, #18
 800473a:	d514      	bpl.n	8004766 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800473c:	6823      	ldr	r3, [r4, #0]
 800473e:	681a      	ldr	r2, [r3, #0]
 8004740:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004744:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004746:	2220      	movs	r2, #32
 8004748:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800474a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800474c:	f043 0302 	orr.w	r3, r3, #2
 8004750:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004752:	2304      	movs	r3, #4
 8004754:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004758:	2300      	movs	r3, #0
 800475a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 800475e:	6963      	ldr	r3, [r4, #20]
 8004760:	b10b      	cbz	r3, 8004766 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8004762:	4620      	mov	r0, r4
 8004764:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004766:	0730      	lsls	r0, r6, #28
 8004768:	d516      	bpl.n	8004798 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800476a:	0529      	lsls	r1, r5, #20
 800476c:	d514      	bpl.n	8004798 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800476e:	6823      	ldr	r3, [r4, #0]
 8004770:	681a      	ldr	r2, [r3, #0]
 8004772:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004776:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004778:	2208      	movs	r2, #8
 800477a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800477c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800477e:	f043 0304 	orr.w	r3, r3, #4
 8004782:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004784:	2304      	movs	r3, #4
 8004786:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 800478a:	2300      	movs	r3, #0
 800478c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8004790:	6963      	ldr	r3, [r4, #20]
 8004792:	b10b      	cbz	r3, 8004798 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004794:	4620      	mov	r0, r4
 8004796:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004798:	0772      	lsls	r2, r6, #29
 800479a:	d50b      	bpl.n	80047b4 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 800479c:	056b      	lsls	r3, r5, #21
 800479e:	d509      	bpl.n	80047b4 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80047a0:	6823      	ldr	r3, [r4, #0]
 80047a2:	681a      	ldr	r2, [r3, #0]
 80047a4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80047a8:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 80047aa:	2204      	movs	r2, #4
 80047ac:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 80047ae:	4620      	mov	r0, r4
 80047b0:	f7ff ffa2 	bl	80046f8 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80047b4:	07b0      	lsls	r0, r6, #30
 80047b6:	d514      	bpl.n	80047e2 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 80047b8:	05a9      	lsls	r1, r5, #22
 80047ba:	d512      	bpl.n	80047e2 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80047bc:	6823      	ldr	r3, [r4, #0]
 80047be:	681a      	ldr	r2, [r3, #0]
 80047c0:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80047c4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80047c6:	2202      	movs	r2, #2
 80047c8:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80047ca:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80047cc:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80047ce:	2301      	movs	r3, #1
 80047d0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80047d4:	2300      	movs	r3, #0
 80047d6:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferCpltCallback != NULL)
 80047da:	6923      	ldr	r3, [r4, #16]
 80047dc:	b10b      	cbz	r3, 80047e2 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 80047de:	4620      	mov	r0, r4
 80047e0:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80047e2:	06f2      	lsls	r2, r6, #27
 80047e4:	d513      	bpl.n	800480e <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80047e6:	04eb      	lsls	r3, r5, #19
 80047e8:	d511      	bpl.n	800480e <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80047ea:	6823      	ldr	r3, [r4, #0]
 80047ec:	681a      	ldr	r2, [r3, #0]
 80047ee:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80047f2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80047f4:	2210      	movs	r2, #16
 80047f6:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80047f8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80047fa:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80047fc:	2301      	movs	r3, #1
 80047fe:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004802:	2300      	movs	r3, #0
 8004804:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004808:	4620      	mov	r0, r4
 800480a:	f7ff ff76 	bl	80046fa <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 800480e:	bd70      	pop	{r4, r5, r6, pc}

08004810 <HAL_DMA2D_ConfigLayer>:
{
 8004810:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_LOCK(hdma2d);
 8004812:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8004816:	2b01      	cmp	r3, #1
 8004818:	f04f 0302 	mov.w	r3, #2
 800481c:	d02b      	beq.n	8004876 <HAL_DMA2D_ConfigLayer+0x66>
 800481e:	2201      	movs	r2, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004820:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8004824:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004828:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 800482c:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8004830:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8004832:	4f18      	ldr	r7, [pc, #96]	; (8004894 <HAL_DMA2D_ConfigLayer+0x84>)
 8004834:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004838:	3c09      	subs	r4, #9
 800483a:	2c01      	cmp	r4, #1
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800483c:	bf9c      	itt	ls
 800483e:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8004842:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004844:	ea4f 1601 	mov.w	r6, r1, lsl #4
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004848:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800484a:	bf88      	it	hi
 800484c:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004850:	b999      	cbnz	r1, 800487a <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004852:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004854:	4039      	ands	r1, r7
 8004856:	430a      	orrs	r2, r1
 8004858:	625a      	str	r2, [r3, #36]	; 0x24
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800485a:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800485c:	6982      	ldr	r2, [r0, #24]
 800485e:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004860:	d803      	bhi.n	800486a <HAL_DMA2D_ConfigLayer+0x5a>
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8004862:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8004864:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8004868:	629a      	str	r2, [r3, #40]	; 0x28
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800486a:	2301      	movs	r3, #1
 800486c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8004870:	2300      	movs	r3, #0
 8004872:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8004876:	4618      	mov	r0, r3
}
 8004878:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800487a:	69d9      	ldr	r1, [r3, #28]
 800487c:	4039      	ands	r1, r7
 800487e:	430a      	orrs	r2, r1
 8004880:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004882:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004884:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004886:	6992      	ldr	r2, [r2, #24]
 8004888:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 800488a:	bf9c      	itt	ls
 800488c:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8004890:	621d      	strls	r5, [r3, #32]
 8004892:	e7ea      	b.n	800486a <HAL_DMA2D_ConfigLayer+0x5a>
 8004894:	00fcfff0 	.word	0x00fcfff0

08004898 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 8004898:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800489c:	4607      	mov	r7, r0
 800489e:	460d      	mov	r5, r1
 80048a0:	4614      	mov	r4, r2
 80048a2:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 80048a4:	f7ff fc54 	bl	8004150 <HAL_GetTick>
 80048a8:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 80048aa:	683b      	ldr	r3, [r7, #0]
 80048ac:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 80048ae:	07d2      	lsls	r2, r2, #31
 80048b0:	d50a      	bpl.n	80048c8 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 80048b2:	9906      	ldr	r1, [sp, #24]
 80048b4:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 80048b8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80048bc:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 80048c0:	66dc      	str	r4, [r3, #108]	; 0x6c

  return HAL_OK;
 80048c2:	2000      	movs	r0, #0
}
 80048c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((HAL_GetTick() - tickstart ) > DSI_TIMEOUT_VALUE)
 80048c8:	f7ff fc42 	bl	8004150 <HAL_GetTick>
 80048cc:	eba0 0008 	sub.w	r0, r0, r8
 80048d0:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80048d4:	d9e9      	bls.n	80048aa <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 80048d6:	2003      	movs	r0, #3
 80048d8:	e7f4      	b.n	80048c4 <DSI_ShortWrite+0x2c>

080048da <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80048da:	7c03      	ldrb	r3, [r0, #16]
 80048dc:	2b01      	cmp	r3, #1
 80048de:	d05d      	beq.n	800499c <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 80048e0:	6803      	ldr	r3, [r0, #0]
 80048e2:	2200      	movs	r2, #0
 80048e4:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 80048e8:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 80048ec:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 80048ee:	bf48      	it	mi
 80048f0:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 80048f4:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 80048f6:	bf42      	ittt	mi
 80048f8:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 80048fc:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 8004900:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 8004904:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 8004906:	bf42      	ittt	mi
 8004908:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 800490c:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 8004910:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 8004914:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 8004916:	bf42      	ittt	mi
 8004918:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800491c:	f042 0201 	orrmi.w	r2, r2, #1
 8004920:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 8004924:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 8004926:	bf42      	ittt	mi
 8004928:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800492c:	f042 0202 	orrmi.w	r2, r2, #2
 8004930:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 8004934:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 8004936:	bf42      	ittt	mi
 8004938:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800493c:	f042 020c 	orrmi.w	r2, r2, #12
 8004940:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 8004944:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 8004946:	bf42      	ittt	mi
 8004948:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800494c:	f042 0210 	orrmi.w	r2, r2, #16
 8004950:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 8004954:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 8004956:	bf42      	ittt	mi
 8004958:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800495c:	f042 0220 	orrmi.w	r2, r2, #32
 8004960:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 8004964:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 8004966:	bf42      	ittt	mi
 8004968:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800496c:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8004970:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 8004974:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 8004976:	bf42      	ittt	mi
 8004978:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800497c:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8004980:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 8004984:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 8004986:	bf42      	ittt	mi
 8004988:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800498c:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 8004990:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 8004994:	2300      	movs	r3, #0
 8004996:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004998:	4618      	mov	r0, r3
 800499a:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800499c:	2002      	movs	r0, #2
}
 800499e:	4770      	bx	lr

080049a0 <HAL_DSI_Init>:
{
 80049a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80049a2:	460d      	mov	r5, r1
  if (hdsi == NULL)
 80049a4:	4604      	mov	r4, r0
 80049a6:	2800      	cmp	r0, #0
 80049a8:	f000 80a6 	beq.w	8004af8 <HAL_DSI_Init+0x158>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 80049ac:	7c43      	ldrb	r3, [r0, #17]
 80049ae:	b90b      	cbnz	r3, 80049b4 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 80049b0:	f7fd f87c 	bl	8001aac <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 80049b4:	2303      	movs	r3, #3
 80049b6:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 80049b8:	2300      	movs	r3, #0
 80049ba:	9300      	str	r3, [sp, #0]
 80049bc:	6823      	ldr	r3, [r4, #0]
 80049be:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 80049c2:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80049c6:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 80049ca:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 80049ce:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80049d2:	9300      	str	r3, [sp, #0]
 80049d4:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 80049d6:	f7ff fbbb 	bl	8004150 <HAL_GetTick>
 80049da:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 80049dc:	6822      	ldr	r2, [r4, #0]
 80049de:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 80049e2:	04d9      	lsls	r1, r3, #19
 80049e4:	d577      	bpl.n	8004ad6 <HAL_DSI_Init+0x136>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 80049e6:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 80049ea:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 80049ee:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 80049f2:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << 2U) | ((PLLInit->PLLIDF) << 11U) | ((PLLInit->PLLODF) << 16U));
 80049f6:	e9d5 0300 	ldrd	r0, r3, [r5]
 80049fa:	02db      	lsls	r3, r3, #11
 80049fc:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
 8004a00:	68a8      	ldr	r0, [r5, #8]
 8004a02:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
 8004a06:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8004a0a:	430b      	orrs	r3, r1
 8004a0c:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 8004a10:	2300      	movs	r3, #0
 8004a12:	9301      	str	r3, [sp, #4]
 8004a14:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8004a18:	f043 0301 	orr.w	r3, r3, #1
 8004a1c:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 8004a20:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8004a24:	f003 0301 	and.w	r3, r3, #1
 8004a28:	9301      	str	r3, [sp, #4]
 8004a2a:	9b01      	ldr	r3, [sp, #4]
  tickstart = HAL_GetTick();
 8004a2c:	f7ff fb90 	bl	8004150 <HAL_GetTick>
 8004a30:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 8004a32:	6823      	ldr	r3, [r4, #0]
 8004a34:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004a38:	05d2      	lsls	r2, r2, #23
 8004a3a:	d556      	bpl.n	8004aea <HAL_DSI_Init+0x14a>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8004a3c:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8004a40:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8004a42:	f042 0206 	orr.w	r2, r2, #6
 8004a46:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 8004a4a:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8004a4e:	f022 0203 	bic.w	r2, r2, #3
 8004a52:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8004a56:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8004a5a:	430a      	orrs	r2, r1
 8004a5c:	f042 0201 	orr.w	r2, r2, #1
 8004a60:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8004a64:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8004a68:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8004a6a:	f022 0203 	bic.w	r2, r2, #3
 8004a6e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8004a72:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004a76:	430a      	orrs	r2, r1
 8004a78:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8004a7c:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004a7e:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8004a80:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8004a84:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004a86:	689a      	ldr	r2, [r3, #8]
 8004a88:	430a      	orrs	r2, r1
 8004a8a:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8004a8c:	686a      	ldr	r2, [r5, #4]
 8004a8e:	491b      	ldr	r1, [pc, #108]	; (8004afc <HAL_DSI_Init+0x15c>)
 8004a90:	2a01      	cmp	r2, #1
 8004a92:	bf38      	it	cc
 8004a94:	2201      	movcc	r2, #1
 8004a96:	434a      	muls	r2, r1
 8004a98:	68a9      	ldr	r1, [r5, #8]
 8004a9a:	f001 0103 	and.w	r1, r1, #3
 8004a9e:	408a      	lsls	r2, r1
 8004aa0:	6829      	ldr	r1, [r5, #0]
 8004aa2:	f44f 50fa 	mov.w	r0, #8000	; 0x1f40
 8004aa6:	4341      	muls	r1, r0
 8004aa8:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 8004aac:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 8004ab0:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8004ab4:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8004ab8:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8004abc:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8004abe:	430a      	orrs	r2, r1
 8004ac0:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8004ac4:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8004ac8:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 8004acc:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 8004ace:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 8004ad0:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 8004ad2:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 8004ad4:	e007      	b.n	8004ae6 <HAL_DSI_Init+0x146>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004ad6:	f7ff fb3b 	bl	8004150 <HAL_GetTick>
 8004ada:	1b80      	subs	r0, r0, r6
 8004adc:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004ae0:	f67f af7c 	bls.w	80049dc <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 8004ae4:	2003      	movs	r0, #3
}
 8004ae6:	b002      	add	sp, #8
 8004ae8:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004aea:	f7ff fb31 	bl	8004150 <HAL_GetTick>
 8004aee:	1b80      	subs	r0, r0, r6
 8004af0:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004af4:	d99d      	bls.n	8004a32 <HAL_DSI_Init+0x92>
 8004af6:	e7f5      	b.n	8004ae4 <HAL_DSI_Init+0x144>
    return HAL_ERROR;
 8004af8:	2001      	movs	r0, #1
 8004afa:	e7f4      	b.n	8004ae6 <HAL_DSI_Init+0x146>
 8004afc:	003d0900 	.word	0x003d0900

08004b00 <HAL_DSI_ErrorCallback>:
 8004b00:	4770      	bx	lr

08004b02 <HAL_DSI_IRQHandler>:
void HAL_DSI_IRQHandler(DSI_HandleTypeDef *hdsi)
{
  uint32_t ErrorStatus0, ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8004b02:	6803      	ldr	r3, [r0, #0]
 8004b04:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004b08:	07d1      	lsls	r1, r2, #31
{
 8004b0a:	b510      	push	{r4, lr}
 8004b0c:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8004b0e:	d508      	bpl.n	8004b22 <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 8004b10:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004b14:	07d2      	lsls	r2, r2, #31
 8004b16:	d504      	bpl.n	8004b22 <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 8004b18:	2201      	movs	r2, #1
 8004b1a:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 8004b1e:	f7fb ffd5 	bl	8000acc <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 8004b22:	6823      	ldr	r3, [r4, #0]
 8004b24:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004b28:	0791      	lsls	r1, r2, #30
 8004b2a:	d509      	bpl.n	8004b40 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 8004b2c:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004b30:	0792      	lsls	r2, r2, #30
 8004b32:	d505      	bpl.n	8004b40 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 8004b34:	2202      	movs	r2, #2
 8004b36:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 8004b3a:	4620      	mov	r0, r4
 8004b3c:	f7fb fffa 	bl	8000b34 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 8004b40:	69a3      	ldr	r3, [r4, #24]
 8004b42:	2b00      	cmp	r3, #0
 8004b44:	d04e      	beq.n	8004be4 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 8004b46:	6821      	ldr	r1, [r4, #0]
 8004b48:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8004b4c:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 8004b50:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8004b54:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8004b56:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8004b5a:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8004b5c:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8004b5e:	b119      	cbz	r1, 8004b68 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 8004b60:	6961      	ldr	r1, [r4, #20]
 8004b62:	f041 0101 	orr.w	r1, r1, #1
 8004b66:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 8004b68:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 8004b6c:	bf1e      	ittt	ne
 8004b6e:	6962      	ldrne	r2, [r4, #20]
 8004b70:	f042 0202 	orrne.w	r2, r2, #2
 8004b74:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 8004b76:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 8004b78:	bf42      	ittt	mi
 8004b7a:	6962      	ldrmi	r2, [r4, #20]
 8004b7c:	f042 0204 	orrmi.w	r2, r2, #4
 8004b80:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 8004b82:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 8004b84:	bf42      	ittt	mi
 8004b86:	6962      	ldrmi	r2, [r4, #20]
 8004b88:	f042 0208 	orrmi.w	r2, r2, #8
 8004b8c:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 8004b8e:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 8004b92:	bf1e      	ittt	ne
 8004b94:	6962      	ldrne	r2, [r4, #20]
 8004b96:	f042 0210 	orrne.w	r2, r2, #16
 8004b9a:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 8004b9c:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 8004b9e:	bf42      	ittt	mi
 8004ba0:	6962      	ldrmi	r2, [r4, #20]
 8004ba2:	f042 0220 	orrmi.w	r2, r2, #32
 8004ba6:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 8004ba8:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 8004baa:	bf42      	ittt	mi
 8004bac:	6962      	ldrmi	r2, [r4, #20]
 8004bae:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8004bb2:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 8004bb4:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 8004bb6:	bf42      	ittt	mi
 8004bb8:	6962      	ldrmi	r2, [r4, #20]
 8004bba:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8004bbe:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 8004bc0:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 8004bc2:	bf42      	ittt	mi
 8004bc4:	6962      	ldrmi	r2, [r4, #20]
 8004bc6:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 8004bca:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 8004bcc:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 8004bd0:	bf1e      	ittt	ne
 8004bd2:	6963      	ldrne	r3, [r4, #20]
 8004bd4:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 8004bd8:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 8004bda:	6963      	ldr	r3, [r4, #20]
 8004bdc:	b113      	cbz	r3, 8004be4 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 8004bde:	4620      	mov	r0, r4
 8004be0:	f7ff ff8e 	bl	8004b00 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 8004be4:	bd10      	pop	{r4, pc}

08004be6 <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004be6:	7c03      	ldrb	r3, [r0, #16]
 8004be8:	2b01      	cmp	r3, #1
 8004bea:	d00b      	beq.n	8004c04 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 8004bec:	6803      	ldr	r3, [r0, #0]
 8004bee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004bf0:	f022 0203 	bic.w	r2, r2, #3
 8004bf4:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 8004bf6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004bf8:	4311      	orrs	r1, r2
 8004bfa:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004bfc:	2300      	movs	r3, #0
 8004bfe:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004c00:	4618      	mov	r0, r3
 8004c02:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004c04:	2002      	movs	r0, #2
}
 8004c06:	4770      	bx	lr

08004c08 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 8004c08:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004c0a:	7c03      	ldrb	r3, [r0, #16]
 8004c0c:	2b01      	cmp	r3, #1
 8004c0e:	d06a      	beq.n	8004ce6 <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8004c10:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8004c12:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8004c14:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004c16:	f042 0201 	orr.w	r2, r2, #1
 8004c1a:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 8004c1c:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8004c20:	f022 0201 	bic.w	r2, r2, #1
 8004c24:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 8004c28:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8004c2c:	f042 0201 	orr.w	r2, r2, #1
 8004c30:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 8004c34:	68da      	ldr	r2, [r3, #12]
 8004c36:	f022 0203 	bic.w	r2, r2, #3
 8004c3a:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8004c3c:	68da      	ldr	r2, [r3, #12]
 8004c3e:	4322      	orrs	r2, r4
 8004c40:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 8004c42:	695a      	ldr	r2, [r3, #20]
 8004c44:	f022 0207 	bic.w	r2, r2, #7
 8004c48:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 8004c4a:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 8004c4e:	432a      	orrs	r2, r5
 8004c50:	694d      	ldr	r5, [r1, #20]
 8004c52:	695c      	ldr	r4, [r3, #20]
 8004c54:	432a      	orrs	r2, r5
 8004c56:	4322      	orrs	r2, r4
 8004c58:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 8004c5a:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8004c5c:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 8004c5e:	f022 020f 	bic.w	r2, r2, #15
 8004c62:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8004c64:	691c      	ldr	r4, [r3, #16]
 8004c66:	432c      	orrs	r4, r5
 8004c68:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 8004c6a:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8004c6e:	f024 040e 	bic.w	r4, r4, #14
 8004c72:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8004c76:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8004c7a:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8004c7c:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 8004c80:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 8004c84:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8004c86:	0c12      	lsrs	r2, r2, #16
 8004c88:	0412      	lsls	r2, r2, #16
 8004c8a:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8004c8c:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8004c8e:	4322      	orrs	r2, r4
 8004c90:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 8004c92:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8004c96:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8004c9a:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8004c9e:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 8004ca2:	432a      	orrs	r2, r5
 8004ca4:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8004ca6:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8004caa:	432a      	orrs	r2, r5
 8004cac:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8004cae:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8004cb0:	432a      	orrs	r2, r5
 8004cb2:	4322      	orrs	r2, r4
 8004cb4:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 8004cb8:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8004cba:	f022 0201 	bic.w	r2, r2, #1
 8004cbe:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8004cc0:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8004cc2:	430a      	orrs	r2, r1
 8004cc4:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 8004cc6:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004cca:	f042 0201 	orr.w	r2, r2, #1
 8004cce:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 8004cd2:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004cd6:	f042 0202 	orr.w	r2, r2, #2
 8004cda:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004cde:	2300      	movs	r3, #0
 8004ce0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004ce2:	4618      	mov	r0, r3
}
 8004ce4:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004ce6:	2002      	movs	r0, #2
 8004ce8:	e7fc      	b.n	8004ce4 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

08004cec <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 8004cec:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004cee:	7c03      	ldrb	r3, [r0, #16]
 8004cf0:	2b01      	cmp	r3, #1
 8004cf2:	d02a      	beq.n	8004d4a <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 8004cf4:	6802      	ldr	r2, [r0, #0]
 8004cf6:	4b16      	ldr	r3, [pc, #88]	; (8004d50 <HAL_DSI_ConfigCommand+0x64>)
 8004cf8:	6e94      	ldr	r4, [r2, #104]	; 0x68
 8004cfa:	4023      	ands	r3, r4
 8004cfc:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8004cfe:	e9d1 3500 	ldrd	r3, r5, [r1]
 8004d02:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 8004d04:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8004d06:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 8004d08:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 8004d0a:	68cd      	ldr	r5, [r1, #12]
 8004d0c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 8004d0e:	690d      	ldr	r5, [r1, #16]
 8004d10:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 8004d12:	694d      	ldr	r5, [r1, #20]
 8004d14:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 8004d16:	698d      	ldr	r5, [r1, #24]
 8004d18:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 8004d1a:	69cd      	ldr	r5, [r1, #28]
 8004d1c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 8004d1e:	6a0d      	ldr	r5, [r1, #32]
 8004d20:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 8004d22:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8004d24:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 8004d26:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8004d28:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 8004d2a:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8004d2c:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 8004d2e:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8004d30:	4323      	orrs	r3, r4
 8004d32:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 8004d34:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8004d36:	f023 0302 	bic.w	r3, r3, #2
 8004d3a:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8004d3c:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8004d3e:	430b      	orrs	r3, r1
 8004d40:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004d42:	2300      	movs	r3, #0
 8004d44:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004d46:	4618      	mov	r0, r3
}
 8004d48:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004d4a:	2002      	movs	r0, #2
 8004d4c:	e7fc      	b.n	8004d48 <HAL_DSI_ConfigCommand+0x5c>
 8004d4e:	bf00      	nop
 8004d50:	fef080ff 	.word	0xfef080ff

08004d54 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004d54:	7c03      	ldrb	r3, [r0, #16]
 8004d56:	2b01      	cmp	r3, #1
 8004d58:	d00b      	beq.n	8004d72 <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 8004d5a:	6803      	ldr	r3, [r0, #0]
 8004d5c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004d5e:	f022 021f 	bic.w	r2, r2, #31
 8004d62:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 8004d64:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004d66:	4311      	orrs	r1, r2
 8004d68:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004d6a:	2300      	movs	r3, #0
 8004d6c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004d6e:	4618      	mov	r0, r3
 8004d70:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004d72:	2002      	movs	r0, #2
}
 8004d74:	4770      	bx	lr

08004d76 <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 8004d76:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004d78:	7c03      	ldrb	r3, [r0, #16]
 8004d7a:	2b01      	cmp	r3, #1
 8004d7c:	d035      	beq.n	8004dea <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8004d7e:	e9d1 2400 	ldrd	r2, r4, [r1]
     This timings are configured by the HS2LP_TIME and LP2HS_TIME in the DSI Host Clock Lane Timer Configuration Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8004d82:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8004d84:	4294      	cmp	r4, r2
 8004d86:	bf38      	it	cc
 8004d88:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8004d8a:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8004d8e:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 8004d92:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 8004d96:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8004d9a:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8004d9e:	4322      	orrs	r2, r4
 8004da0:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 8004da4:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 8004da8:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 8004dac:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 8004db0:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 8004db4:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8004db6:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8004dba:	690d      	ldr	r5, [r1, #16]
 8004dbc:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8004dc0:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8004dc2:	432a      	orrs	r2, r5
 8004dc4:	4322      	orrs	r2, r4
 8004dc6:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 8004dca:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004dce:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8004dd2:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8004dd6:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004dda:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004dde:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004de2:	2300      	movs	r3, #0
 8004de4:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004de6:	4618      	mov	r0, r3
}
 8004de8:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004dea:	2002      	movs	r0, #2
 8004dec:	e7fc      	b.n	8004de8 <HAL_DSI_ConfigPhyTimer+0x72>
	...

08004df0 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 8004df0:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004df2:	7c03      	ldrb	r3, [r0, #16]
 8004df4:	2b01      	cmp	r3, #1
 8004df6:	d05c      	beq.n	8004eb2 <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004df8:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8004dfa:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004dfc:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8004dfe:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004e00:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8004e04:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8004e06:	689a      	ldr	r2, [r3, #8]
 8004e08:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 8004e0c:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8004e0e:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8004e10:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8004e12:	b292      	uxth	r2, r2
 8004e14:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8004e16:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 8004e18:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8004e1c:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 8004e1e:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8004e20:	4a25      	ldr	r2, [pc, #148]	; (8004eb8 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 8004e22:	4014      	ands	r4, r2
 8004e24:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8004e26:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8004e28:	432c      	orrs	r4, r5
 8004e2a:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8004e2c:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8004e2e:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8004e30:	4014      	ands	r4, r2
 8004e32:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8004e34:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 8004e36:	432c      	orrs	r4, r5
 8004e38:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8004e3a:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8004e3e:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8004e40:	4014      	ands	r4, r2
 8004e42:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8004e46:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 8004e4a:	432c      	orrs	r4, r5
 8004e4c:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8004e50:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8004e54:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8004e56:	4014      	ands	r4, r2
 8004e58:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8004e5c:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004e60:	432c      	orrs	r4, r5
 8004e62:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 8004e66:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004e6a:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 8004e6e:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 8004e72:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004e76:	698d      	ldr	r5, [r1, #24]
 8004e78:	432c      	orrs	r4, r5
 8004e7a:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 8004e7e:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8004e82:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8004e84:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 8004e86:	4014      	ands	r4, r2
 8004e88:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8004e8c:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 8004e90:	432c      	orrs	r4, r5
 8004e92:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 8004e96:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 8004e9a:	4022      	ands	r2, r4
 8004e9c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8004ea0:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8004ea4:	430a      	orrs	r2, r1
 8004ea6:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004eaa:	2300      	movs	r3, #0
 8004eac:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004eae:	4618      	mov	r0, r3
}
 8004eb0:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004eb2:	2002      	movs	r0, #2
 8004eb4:	e7fc      	b.n	8004eb0 <HAL_DSI_ConfigHostTimeouts+0xc0>
 8004eb6:	bf00      	nop
 8004eb8:	ffff0000 	.word	0xffff0000

08004ebc <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004ebc:	7c03      	ldrb	r3, [r0, #16]
 8004ebe:	2b01      	cmp	r3, #1
{
 8004ec0:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 8004ec2:	d01c      	beq.n	8004efe <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 8004ec4:	6802      	ldr	r2, [r0, #0]
 8004ec6:	2300      	movs	r3, #0
 8004ec8:	9300      	str	r3, [sp, #0]
 8004eca:	6851      	ldr	r1, [r2, #4]
 8004ecc:	f041 0101 	orr.w	r1, r1, #1
 8004ed0:	6051      	str	r1, [r2, #4]
 8004ed2:	6851      	ldr	r1, [r2, #4]
 8004ed4:	f001 0101 	and.w	r1, r1, #1
 8004ed8:	9100      	str	r1, [sp, #0]
 8004eda:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8004edc:	9301      	str	r3, [sp, #4]
 8004ede:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 8004ee2:	f041 0108 	orr.w	r1, r1, #8
 8004ee6:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 8004eea:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004eee:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8004ef0:	f002 0208 	and.w	r2, r2, #8
 8004ef4:	9201      	str	r2, [sp, #4]
 8004ef6:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 8004ef8:	4618      	mov	r0, r3
}
 8004efa:	b002      	add	sp, #8
 8004efc:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004efe:	2002      	movs	r0, #2
 8004f00:	e7fb      	b.n	8004efa <HAL_DSI_Start+0x3e>

08004f02 <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004f02:	7c03      	ldrb	r3, [r0, #16]
 8004f04:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 8004f06:	bf1f      	itttt	ne
 8004f08:	6802      	ldrne	r2, [r0, #0]
 8004f0a:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 8004f0e:	f043 0304 	orrne.w	r3, r3, #4
 8004f12:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004f16:	bf1d      	ittte	ne
 8004f18:	2300      	movne	r3, #0
 8004f1a:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 8004f1c:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 8004f1e:	2002      	moveq	r0, #2
}
 8004f20:	4770      	bx	lr

08004f22 <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 8004f22:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 8004f24:	7c05      	ldrb	r5, [r0, #16]
 8004f26:	2d01      	cmp	r5, #1
{
 8004f28:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 8004f2a:	d009      	beq.n	8004f40 <HAL_DSI_ShortWrite+0x1e>
 8004f2c:	2501      	movs	r5, #1
 8004f2e:	7405      	strb	r5, [r0, #16]

   status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 8004f30:	9d06      	ldr	r5, [sp, #24]
 8004f32:	9500      	str	r5, [sp, #0]
 8004f34:	f7ff fcb0 	bl	8004898 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004f38:	2300      	movs	r3, #0
 8004f3a:	7423      	strb	r3, [r4, #16]

  return status;
}
 8004f3c:	b003      	add	sp, #12
 8004f3e:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004f40:	2002      	movs	r0, #2
 8004f42:	e7fb      	b.n	8004f3c <HAL_DSI_ShortWrite+0x1a>

08004f44 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 8004f44:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004f48:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 8004f4a:	7c03      	ldrb	r3, [r0, #16]
 8004f4c:	2b01      	cmp	r3, #1
{
 8004f4e:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 8004f52:	4606      	mov	r6, r0
 8004f54:	460f      	mov	r7, r1
 8004f56:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 8004f58:	d053      	beq.n	8005002 <HAL_DSI_LongWrite+0xbe>
 8004f5a:	2301      	movs	r3, #1
 8004f5c:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 8004f5e:	f7ff f8f7 	bl	8004150 <HAL_GetTick>
 8004f62:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8004f64:	6831      	ldr	r1, [r6, #0]
 8004f66:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 8004f68:	f013 0a01 	ands.w	sl, r3, #1
 8004f6c:	d01a      	beq.n	8004fa4 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8004f6e:	2c03      	cmp	r4, #3
 8004f70:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 8004f72:	f04f 0200 	mov.w	r2, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8004f76:	bf28      	it	cs
 8004f78:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 8004f7a:	4282      	cmp	r2, r0
 8004f7c:	d11e      	bne.n	8004fbc <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 8004f7e:	1aa3      	subs	r3, r4, r2
  hdsi->Instance->GPDR = fifoword;
 8004f80:	f8c1 9070 	str.w	r9, [r1, #112]	; 0x70
  pparams += nbBytes;
 8004f84:	4442      	add	r2, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 8004f86:	bb1b      	cbnz	r3, 8004fd0 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 8004f88:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 8004f8a:	0222      	lsls	r2, r4, #8
 8004f8c:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
 8004f90:	b292      	uxth	r2, r2
 8004f92:	0224      	lsls	r4, r4, #8
 8004f94:	4315      	orrs	r5, r2
 8004f96:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8004f9a:	432c      	orrs	r4, r5
 8004f9c:	66cc      	str	r4, [r1, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 8004f9e:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 8004fa0:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 8004fa2:	e009      	b.n	8004fb8 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004fa4:	f7ff f8d4 	bl	8004150 <HAL_GetTick>
 8004fa8:	eba0 000b 	sub.w	r0, r0, fp
 8004fac:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004fb0:	d9d8      	bls.n	8004f64 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 8004fb2:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 8004fb6:	2003      	movs	r0, #3
}
 8004fb8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 8004fbc:	f818 3002 	ldrb.w	r3, [r8, r2]
 8004fc0:	3201      	adds	r2, #1
 8004fc2:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 8004fc6:	fa03 f30c 	lsl.w	r3, r3, ip
 8004fca:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 8004fce:	e7d4      	b.n	8004f7a <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004fd0:	2b04      	cmp	r3, #4
    fifoword = 0U;
 8004fd2:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004fd6:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 8004fd8:	4660      	mov	r0, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004fda:	bf28      	it	cs
 8004fdc:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004fe0:	f812 8000 	ldrb.w	r8, [r2, r0]
 8004fe4:	ea4f 09c0 	mov.w	r9, r0, lsl #3
    for (count = 0U; count < nbBytes; count++)
 8004fe8:	3001      	adds	r0, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004fea:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 8004fee:	4586      	cmp	lr, r0
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004ff0:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 8004ff4:	d1f4      	bne.n	8004fe0 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 8004ff6:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
    uicounter -= nbBytes;
 8004ffa:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 8004ffe:	4472      	add	r2, lr
 8005000:	e7c1      	b.n	8004f86 <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 8005002:	2002      	movs	r0, #2
 8005004:	e7d8      	b.n	8004fb8 <HAL_DSI_LongWrite+0x74>

08005006 <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005006:	7c03      	ldrb	r3, [r0, #16]
 8005008:	2b01      	cmp	r3, #1
 800500a:	d010      	beq.n	800502e <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 800500c:	6803      	ldr	r3, [r0, #0]
 800500e:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8005012:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 8005016:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 800501a:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800501e:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 8005022:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005026:	2300      	movs	r3, #0
 8005028:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800502a:	4618      	mov	r0, r3
 800502c:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800502e:	2002      	movs	r0, #2
}
 8005030:	4770      	bx	lr
	...

08005034 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8005034:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005038:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80051fc <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800503c:	4a6d      	ldr	r2, [pc, #436]	; (80051f4 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800503e:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8005200 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005042:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005044:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8005046:	2401      	movs	r4, #1
 8005048:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800504a:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800504e:	43ac      	bics	r4, r5
 8005050:	f040 80b7 	bne.w	80051c2 <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8005054:	684c      	ldr	r4, [r1, #4]
 8005056:	f024 0c10 	bic.w	ip, r4, #16
 800505a:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800505e:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8005060:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005064:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8005068:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800506a:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800506e:	d811      	bhi.n	8005094 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 8005070:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005072:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 8005076:	68cf      	ldr	r7, [r1, #12]
 8005078:	fa07 f70e 	lsl.w	r7, r7, lr
 800507c:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8005080:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8005082:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8005084:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8005088:	f3c4 1700 	ubfx	r7, r4, #4, #1
 800508c:	409f      	lsls	r7, r3
 800508e:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8005092:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8005094:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8005096:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 800509a:	688f      	ldr	r7, [r1, #8]
 800509c:	fa07 f70e 	lsl.w	r7, r7, lr
 80050a0:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80050a4:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 80050a8:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80050aa:	d116      	bne.n	80050da <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 80050ac:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80050b0:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80050b4:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80050b8:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80050bc:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80050c0:	f04f 0c0f 	mov.w	ip, #15
 80050c4:	fa0c fc0b 	lsl.w	ip, ip, fp
 80050c8:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80050cc:	690f      	ldr	r7, [r1, #16]
 80050ce:	fa07 f70b 	lsl.w	r7, r7, fp
 80050d2:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 80050d6:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 80050da:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80050dc:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80050de:	f004 0703 	and.w	r7, r4, #3
 80050e2:	fa07 f70e 	lsl.w	r7, r7, lr
 80050e6:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 80050e8:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80050ea:	00e5      	lsls	r5, r4, #3
 80050ec:	d569      	bpl.n	80051c2 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80050ee:	f04f 0b00 	mov.w	fp, #0
 80050f2:	f8cd b004 	str.w	fp, [sp, #4]
 80050f6:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80050fa:	4d3f      	ldr	r5, [pc, #252]	; (80051f8 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80050fc:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8005100:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8005104:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8005108:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 800510c:	9701      	str	r7, [sp, #4]
 800510e:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8005110:	f023 0703 	bic.w	r7, r3, #3
 8005114:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8005118:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800511c:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8005120:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005124:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8005128:	f04f 0c0f 	mov.w	ip, #15
 800512c:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005130:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005132:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005136:	d04b      	beq.n	80051d0 <HAL_GPIO_Init+0x19c>
 8005138:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800513c:	42a8      	cmp	r0, r5
 800513e:	d049      	beq.n	80051d4 <HAL_GPIO_Init+0x1a0>
 8005140:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005144:	42a8      	cmp	r0, r5
 8005146:	d047      	beq.n	80051d8 <HAL_GPIO_Init+0x1a4>
 8005148:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800514c:	42a8      	cmp	r0, r5
 800514e:	d045      	beq.n	80051dc <HAL_GPIO_Init+0x1a8>
 8005150:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005154:	42a8      	cmp	r0, r5
 8005156:	d043      	beq.n	80051e0 <HAL_GPIO_Init+0x1ac>
 8005158:	4548      	cmp	r0, r9
 800515a:	d043      	beq.n	80051e4 <HAL_GPIO_Init+0x1b0>
 800515c:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8005160:	42a8      	cmp	r0, r5
 8005162:	d041      	beq.n	80051e8 <HAL_GPIO_Init+0x1b4>
 8005164:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005168:	42a8      	cmp	r0, r5
 800516a:	d03f      	beq.n	80051ec <HAL_GPIO_Init+0x1b8>
 800516c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005170:	42a8      	cmp	r0, r5
 8005172:	d03d      	beq.n	80051f0 <HAL_GPIO_Init+0x1bc>
 8005174:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005178:	42a8      	cmp	r0, r5
 800517a:	bf0c      	ite	eq
 800517c:	2509      	moveq	r5, #9
 800517e:	250a      	movne	r5, #10
 8005180:	fa05 f50e 	lsl.w	r5, r5, lr
 8005184:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 8005188:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 800518a:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 800518c:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800518e:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8005192:	bf0c      	ite	eq
 8005194:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8005196:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 8005198:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 800519a:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 800519c:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80051a0:	bf0c      	ite	eq
 80051a2:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80051a4:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 80051a6:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80051a8:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80051aa:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80051ae:	bf0c      	ite	eq
 80051b0:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80051b2:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 80051b4:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 80051b6:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80051b8:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 80051ba:	bf54      	ite	pl
 80051bc:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 80051be:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 80051c0:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80051c2:	3301      	adds	r3, #1
 80051c4:	2b10      	cmp	r3, #16
 80051c6:	f47f af3d 	bne.w	8005044 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 80051ca:	b003      	add	sp, #12
 80051cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80051d0:	465d      	mov	r5, fp
 80051d2:	e7d5      	b.n	8005180 <HAL_GPIO_Init+0x14c>
 80051d4:	2501      	movs	r5, #1
 80051d6:	e7d3      	b.n	8005180 <HAL_GPIO_Init+0x14c>
 80051d8:	2502      	movs	r5, #2
 80051da:	e7d1      	b.n	8005180 <HAL_GPIO_Init+0x14c>
 80051dc:	2503      	movs	r5, #3
 80051de:	e7cf      	b.n	8005180 <HAL_GPIO_Init+0x14c>
 80051e0:	2504      	movs	r5, #4
 80051e2:	e7cd      	b.n	8005180 <HAL_GPIO_Init+0x14c>
 80051e4:	2505      	movs	r5, #5
 80051e6:	e7cb      	b.n	8005180 <HAL_GPIO_Init+0x14c>
 80051e8:	2506      	movs	r5, #6
 80051ea:	e7c9      	b.n	8005180 <HAL_GPIO_Init+0x14c>
 80051ec:	2507      	movs	r5, #7
 80051ee:	e7c7      	b.n	8005180 <HAL_GPIO_Init+0x14c>
 80051f0:	2508      	movs	r5, #8
 80051f2:	e7c5      	b.n	8005180 <HAL_GPIO_Init+0x14c>
 80051f4:	40013c00 	.word	0x40013c00
 80051f8:	40020000 	.word	0x40020000
 80051fc:	40023800 	.word	0x40023800
 8005200:	40021400 	.word	0x40021400

08005204 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8005204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8005208:	4c4a      	ldr	r4, [pc, #296]	; (8005334 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800520a:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800533c <HAL_GPIO_DeInit+0x138>
 800520e:	f8df a130 	ldr.w	sl, [pc, #304]	; 8005340 <HAL_GPIO_DeInit+0x13c>
 8005212:	f8df b130 	ldr.w	fp, [pc, #304]	; 8005344 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005216:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 8005218:	2301      	movs	r3, #1
 800521a:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 800521e:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8005222:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 8005226:	d16e      	bne.n	8005306 <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8005228:	f022 0503 	bic.w	r5, r2, #3
 800522c:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8005230:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8005234:	4b40      	ldr	r3, [pc, #256]	; (8005338 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 8005236:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800523a:	f002 0c03 	and.w	ip, r2, #3
 800523e:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8005242:	260f      	movs	r6, #15
 8005244:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8005248:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800524a:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800524e:	d05f      	beq.n	8005310 <HAL_GPIO_DeInit+0x10c>
 8005250:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005254:	4298      	cmp	r0, r3
 8005256:	d05d      	beq.n	8005314 <HAL_GPIO_DeInit+0x110>
 8005258:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800525c:	4298      	cmp	r0, r3
 800525e:	d05b      	beq.n	8005318 <HAL_GPIO_DeInit+0x114>
 8005260:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005264:	4298      	cmp	r0, r3
 8005266:	d059      	beq.n	800531c <HAL_GPIO_DeInit+0x118>
 8005268:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800526c:	4298      	cmp	r0, r3
 800526e:	d057      	beq.n	8005320 <HAL_GPIO_DeInit+0x11c>
 8005270:	4548      	cmp	r0, r9
 8005272:	d057      	beq.n	8005324 <HAL_GPIO_DeInit+0x120>
 8005274:	4550      	cmp	r0, sl
 8005276:	d057      	beq.n	8005328 <HAL_GPIO_DeInit+0x124>
 8005278:	4558      	cmp	r0, fp
 800527a:	d057      	beq.n	800532c <HAL_GPIO_DeInit+0x128>
 800527c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8005280:	4298      	cmp	r0, r3
 8005282:	d055      	beq.n	8005330 <HAL_GPIO_DeInit+0x12c>
 8005284:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005288:	4298      	cmp	r0, r3
 800528a:	bf0c      	ite	eq
 800528c:	2309      	moveq	r3, #9
 800528e:	230a      	movne	r3, #10
 8005290:	fa03 f30c 	lsl.w	r3, r3, ip
 8005294:	4543      	cmp	r3, r8
 8005296:	d113      	bne.n	80052c0 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8005298:	6823      	ldr	r3, [r4, #0]
 800529a:	ea23 0307 	bic.w	r3, r3, r7
 800529e:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 80052a0:	6863      	ldr	r3, [r4, #4]
 80052a2:	ea23 0307 	bic.w	r3, r3, r7
 80052a6:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 80052a8:	68a3      	ldr	r3, [r4, #8]
 80052aa:	ea23 0307 	bic.w	r3, r3, r7
 80052ae:	60a3      	str	r3, [r4, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 80052b0:	68e3      	ldr	r3, [r4, #12]
 80052b2:	ea23 0307 	bic.w	r3, r3, r7
 80052b6:	60e3      	str	r3, [r4, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 80052b8:	68ab      	ldr	r3, [r5, #8]
 80052ba:	ea23 0306 	bic.w	r3, r3, r6
 80052be:	60ab      	str	r3, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80052c0:	6805      	ldr	r5, [r0, #0]
 80052c2:	2603      	movs	r6, #3
 80052c4:	0053      	lsls	r3, r2, #1
 80052c6:	fa06 f303 	lsl.w	r3, r6, r3
 80052ca:	ea25 0503 	bic.w	r5, r5, r3
 80052ce:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80052d0:	fa22 f506 	lsr.w	r5, r2, r6
 80052d4:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 80052d8:	f002 0c07 	and.w	ip, r2, #7
 80052dc:	6a2e      	ldr	r6, [r5, #32]
 80052de:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 80052e2:	270f      	movs	r7, #15
 80052e4:	fa07 f70c 	lsl.w	r7, r7, ip
 80052e8:	ea26 0707 	bic.w	r7, r6, r7
 80052ec:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80052ee:	68c5      	ldr	r5, [r0, #12]
 80052f0:	ea25 0503 	bic.w	r5, r5, r3
 80052f4:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 80052f6:	6845      	ldr	r5, [r0, #4]
 80052f8:	ea25 050e 	bic.w	r5, r5, lr
 80052fc:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80052fe:	6885      	ldr	r5, [r0, #8]
 8005300:	ea25 0303 	bic.w	r3, r5, r3
 8005304:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005306:	3201      	adds	r2, #1
 8005308:	2a10      	cmp	r2, #16
 800530a:	d185      	bne.n	8005218 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 800530c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8005310:	2300      	movs	r3, #0
 8005312:	e7bd      	b.n	8005290 <HAL_GPIO_DeInit+0x8c>
 8005314:	2301      	movs	r3, #1
 8005316:	e7bb      	b.n	8005290 <HAL_GPIO_DeInit+0x8c>
 8005318:	2302      	movs	r3, #2
 800531a:	e7b9      	b.n	8005290 <HAL_GPIO_DeInit+0x8c>
 800531c:	2303      	movs	r3, #3
 800531e:	e7b7      	b.n	8005290 <HAL_GPIO_DeInit+0x8c>
 8005320:	2304      	movs	r3, #4
 8005322:	e7b5      	b.n	8005290 <HAL_GPIO_DeInit+0x8c>
 8005324:	2305      	movs	r3, #5
 8005326:	e7b3      	b.n	8005290 <HAL_GPIO_DeInit+0x8c>
 8005328:	2306      	movs	r3, #6
 800532a:	e7b1      	b.n	8005290 <HAL_GPIO_DeInit+0x8c>
 800532c:	2307      	movs	r3, #7
 800532e:	e7af      	b.n	8005290 <HAL_GPIO_DeInit+0x8c>
 8005330:	2308      	movs	r3, #8
 8005332:	e7ad      	b.n	8005290 <HAL_GPIO_DeInit+0x8c>
 8005334:	40013c00 	.word	0x40013c00
 8005338:	40020000 	.word	0x40020000
 800533c:	40021400 	.word	0x40021400
 8005340:	40021800 	.word	0x40021800
 8005344:	40021c00 	.word	0x40021c00

08005348 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8005348:	6903      	ldr	r3, [r0, #16]
 800534a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800534c:	bf14      	ite	ne
 800534e:	2001      	movne	r0, #1
 8005350:	2000      	moveq	r0, #0
 8005352:	4770      	bx	lr

08005354 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8005354:	b10a      	cbz	r2, 800535a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8005356:	6181      	str	r1, [r0, #24]
  }
}
 8005358:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800535a:	0409      	lsls	r1, r1, #16
 800535c:	e7fb      	b.n	8005356 <HAL_GPIO_WritePin+0x2>

0800535e <HAL_GPIO_TogglePin>:
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->ODR & GPIO_Pin) == GPIO_Pin)
 800535e:	6943      	ldr	r3, [r0, #20]
 8005360:	ea31 0303 	bics.w	r3, r1, r3
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8005364:	bf08      	it	eq
 8005366:	0409      	lsleq	r1, r1, #16
  }
  else
  {
    GPIOx->BSRR = GPIO_Pin;
 8005368:	6181      	str	r1, [r0, #24]
  }
}
 800536a:	4770      	bx	lr

0800536c <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800536c:	6801      	ldr	r1, [r0, #0]
 800536e:	694b      	ldr	r3, [r1, #20]
 8005370:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8005374:	f04f 0200 	mov.w	r2, #0
 8005378:	d010      	beq.n	800539c <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800537a:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800537e:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8005380:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8005382:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8005384:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005388:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800538c:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800538e:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005392:	f043 0304 	orr.w	r3, r3, #4
 8005396:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8005398:	2001      	movs	r0, #1
 800539a:	4770      	bx	lr
  }
  return HAL_OK;
 800539c:	4618      	mov	r0, r3
}
 800539e:	4770      	bx	lr

080053a0 <I2C_WaitOnFlagUntilTimeout>:
{
 80053a0:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 80053a4:	4606      	mov	r6, r0
 80053a6:	460f      	mov	r7, r1
 80053a8:	4691      	mov	r9, r2
 80053aa:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80053ac:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80053b0:	6833      	ldr	r3, [r6, #0]
 80053b2:	f1ba 0f01 	cmp.w	sl, #1
 80053b6:	bf0c      	ite	eq
 80053b8:	695c      	ldreq	r4, [r3, #20]
 80053ba:	699c      	ldrne	r4, [r3, #24]
 80053bc:	ea27 0404 	bic.w	r4, r7, r4
 80053c0:	b2a4      	uxth	r4, r4
 80053c2:	fab4 f484 	clz	r4, r4
 80053c6:	0964      	lsrs	r4, r4, #5
 80053c8:	45a1      	cmp	r9, r4
 80053ca:	d001      	beq.n	80053d0 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 80053cc:	2000      	movs	r0, #0
 80053ce:	e017      	b.n	8005400 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 80053d0:	1c6a      	adds	r2, r5, #1
 80053d2:	d0ee      	beq.n	80053b2 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80053d4:	f7fe febc 	bl	8004150 <HAL_GetTick>
 80053d8:	9b08      	ldr	r3, [sp, #32]
 80053da:	1ac0      	subs	r0, r0, r3
 80053dc:	42a8      	cmp	r0, r5
 80053de:	d801      	bhi.n	80053e4 <I2C_WaitOnFlagUntilTimeout+0x44>
 80053e0:	2d00      	cmp	r5, #0
 80053e2:	d1e5      	bne.n	80053b0 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80053e4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80053e6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80053e8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80053ea:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80053ee:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80053f2:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80053f4:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80053f8:	f042 0220 	orr.w	r2, r2, #32
 80053fc:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 80053fe:	2001      	movs	r0, #1
}
 8005400:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08005404 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8005404:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005408:	4604      	mov	r4, r0
 800540a:	460f      	mov	r7, r1
 800540c:	4616      	mov	r6, r2
 800540e:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8005410:	6825      	ldr	r5, [r4, #0]
 8005412:	6968      	ldr	r0, [r5, #20]
 8005414:	ea27 0000 	bic.w	r0, r7, r0
 8005418:	b280      	uxth	r0, r0
 800541a:	b1b8      	cbz	r0, 800544c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800541c:	696b      	ldr	r3, [r5, #20]
 800541e:	055a      	lsls	r2, r3, #21
 8005420:	d516      	bpl.n	8005450 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005422:	682b      	ldr	r3, [r5, #0]
 8005424:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005428:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800542a:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800542e:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8005430:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005432:	2300      	movs	r3, #0
 8005434:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005436:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800543a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800543e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005440:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005444:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005446:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800544a:	2001      	movs	r0, #1
}
 800544c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8005450:	1c73      	adds	r3, r6, #1
 8005452:	d0de      	beq.n	8005412 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005454:	f7fe fe7c 	bl	8004150 <HAL_GetTick>
 8005458:	eba0 0008 	sub.w	r0, r0, r8
 800545c:	42b0      	cmp	r0, r6
 800545e:	d801      	bhi.n	8005464 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8005460:	2e00      	cmp	r6, #0
 8005462:	d1d5      	bne.n	8005410 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005464:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005466:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005468:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800546a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800546e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005472:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005474:	f042 0220 	orr.w	r2, r2, #32
 8005478:	e7e4      	b.n	8005444 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800547a <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800547a:	b570      	push	{r4, r5, r6, lr}
 800547c:	4604      	mov	r4, r0
 800547e:	460d      	mov	r5, r1
 8005480:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005482:	6821      	ldr	r1, [r4, #0]
 8005484:	694b      	ldr	r3, [r1, #20]
 8005486:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800548a:	d001      	beq.n	8005490 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800548c:	2000      	movs	r0, #0
 800548e:	e010      	b.n	80054b2 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8005490:	694a      	ldr	r2, [r1, #20]
 8005492:	06d2      	lsls	r2, r2, #27
 8005494:	d50e      	bpl.n	80054b4 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005496:	f06f 0210 	mvn.w	r2, #16
 800549a:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800549c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800549e:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80054a0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80054a4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80054a8:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80054aa:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80054ac:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 80054b0:	2001      	movs	r0, #1
}
 80054b2:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80054b4:	f7fe fe4c 	bl	8004150 <HAL_GetTick>
 80054b8:	1b80      	subs	r0, r0, r6
 80054ba:	42a8      	cmp	r0, r5
 80054bc:	d801      	bhi.n	80054c2 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 80054be:	2d00      	cmp	r5, #0
 80054c0:	d1df      	bne.n	8005482 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 80054c2:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 80054c4:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80054c6:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80054c8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80054cc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80054d0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80054d2:	f042 0220 	orr.w	r2, r2, #32
 80054d6:	e7e8      	b.n	80054aa <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

080054d8 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80054d8:	b570      	push	{r4, r5, r6, lr}
 80054da:	4604      	mov	r4, r0
 80054dc:	460d      	mov	r5, r1
 80054de:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80054e0:	6823      	ldr	r3, [r4, #0]
 80054e2:	695b      	ldr	r3, [r3, #20]
 80054e4:	075b      	lsls	r3, r3, #29
 80054e6:	d501      	bpl.n	80054ec <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80054e8:	2000      	movs	r0, #0
}
 80054ea:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80054ec:	4620      	mov	r0, r4
 80054ee:	f7ff ff3d 	bl	800536c <I2C_IsAcknowledgeFailed>
 80054f2:	b9a8      	cbnz	r0, 8005520 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80054f4:	1c6a      	adds	r2, r5, #1
 80054f6:	d0f3      	beq.n	80054e0 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80054f8:	f7fe fe2a 	bl	8004150 <HAL_GetTick>
 80054fc:	1b80      	subs	r0, r0, r6
 80054fe:	42a8      	cmp	r0, r5
 8005500:	d801      	bhi.n	8005506 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8005502:	2d00      	cmp	r5, #0
 8005504:	d1ec      	bne.n	80054e0 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005506:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005508:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800550a:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800550c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005510:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005514:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005516:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800551a:	f042 0220 	orr.w	r2, r2, #32
 800551e:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005520:	2001      	movs	r0, #1
 8005522:	e7e2      	b.n	80054ea <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08005524 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8005524:	b570      	push	{r4, r5, r6, lr}
 8005526:	4604      	mov	r4, r0
 8005528:	460d      	mov	r5, r1
 800552a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800552c:	6823      	ldr	r3, [r4, #0]
 800552e:	695b      	ldr	r3, [r3, #20]
 8005530:	061b      	lsls	r3, r3, #24
 8005532:	d501      	bpl.n	8005538 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8005534:	2000      	movs	r0, #0
}
 8005536:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005538:	4620      	mov	r0, r4
 800553a:	f7ff ff17 	bl	800536c <I2C_IsAcknowledgeFailed>
 800553e:	b9a8      	cbnz	r0, 800556c <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8005540:	1c6a      	adds	r2, r5, #1
 8005542:	d0f3      	beq.n	800552c <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005544:	f7fe fe04 	bl	8004150 <HAL_GetTick>
 8005548:	1b80      	subs	r0, r0, r6
 800554a:	42a8      	cmp	r0, r5
 800554c:	d801      	bhi.n	8005552 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800554e:	2d00      	cmp	r5, #0
 8005550:	d1ec      	bne.n	800552c <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005552:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005554:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005556:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005558:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800555c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005560:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005562:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005566:	f042 0220 	orr.w	r2, r2, #32
 800556a:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800556c:	2001      	movs	r0, #1
 800556e:	e7e2      	b.n	8005536 <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08005570 <I2C_RequestMemoryWrite>:
{
 8005570:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005574:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005576:	6802      	ldr	r2, [r0, #0]
{
 8005578:	b085      	sub	sp, #20
 800557a:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800557e:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005580:	6813      	ldr	r3, [r2, #0]
 8005582:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005586:	6013      	str	r3, [r2, #0]
{
 8005588:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800558a:	463b      	mov	r3, r7
 800558c:	f8cd 8000 	str.w	r8, [sp]
 8005590:	2200      	movs	r2, #0
 8005592:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005596:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005598:	f7ff ff02 	bl	80053a0 <I2C_WaitOnFlagUntilTimeout>
 800559c:	6823      	ldr	r3, [r4, #0]
 800559e:	b138      	cbz	r0, 80055b0 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80055a0:	681b      	ldr	r3, [r3, #0]
 80055a2:	05db      	lsls	r3, r3, #23
 80055a4:	d502      	bpl.n	80055ac <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80055a6:	f44f 7300 	mov.w	r3, #512	; 0x200
 80055aa:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80055ac:	2003      	movs	r0, #3
 80055ae:	e00a      	b.n	80055c6 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80055b0:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80055b4:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80055b6:	4919      	ldr	r1, [pc, #100]	; (800561c <I2C_RequestMemoryWrite+0xac>)
 80055b8:	4643      	mov	r3, r8
 80055ba:	463a      	mov	r2, r7
 80055bc:	4620      	mov	r0, r4
 80055be:	f7ff ff21 	bl	8005404 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80055c2:	b118      	cbz	r0, 80055cc <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 80055c4:	2001      	movs	r0, #1
}
 80055c6:	b005      	add	sp, #20
 80055c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80055cc:	6823      	ldr	r3, [r4, #0]
 80055ce:	9003      	str	r0, [sp, #12]
 80055d0:	695a      	ldr	r2, [r3, #20]
 80055d2:	9203      	str	r2, [sp, #12]
 80055d4:	699b      	ldr	r3, [r3, #24]
 80055d6:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80055d8:	4642      	mov	r2, r8
 80055da:	4639      	mov	r1, r7
 80055dc:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80055de:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80055e0:	f7ff ffa0 	bl	8005524 <I2C_WaitOnTXEFlagUntilTimeout>
 80055e4:	b140      	cbz	r0, 80055f8 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80055e6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80055e8:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80055ea:	bf01      	itttt	eq
 80055ec:	6822      	ldreq	r2, [r4, #0]
 80055ee:	6813      	ldreq	r3, [r2, #0]
 80055f0:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80055f4:	6013      	streq	r3, [r2, #0]
 80055f6:	e7e5      	b.n	80055c4 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80055f8:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80055fc:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80055fe:	d102      	bne.n	8005606 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005600:	b2ed      	uxtb	r5, r5
 8005602:	611d      	str	r5, [r3, #16]
 8005604:	e7df      	b.n	80055c6 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005606:	0a2a      	lsrs	r2, r5, #8
 8005608:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800560a:	4639      	mov	r1, r7
 800560c:	4642      	mov	r2, r8
 800560e:	4620      	mov	r0, r4
 8005610:	f7ff ff88 	bl	8005524 <I2C_WaitOnTXEFlagUntilTimeout>
 8005614:	2800      	cmp	r0, #0
 8005616:	d1e6      	bne.n	80055e6 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005618:	6823      	ldr	r3, [r4, #0]
 800561a:	e7f1      	b.n	8005600 <I2C_RequestMemoryWrite+0x90>
 800561c:	00010002 	.word	0x00010002

08005620 <I2C_RequestMemoryRead>:
{
 8005620:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005624:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005626:	6803      	ldr	r3, [r0, #0]
{
 8005628:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800562a:	681a      	ldr	r2, [r3, #0]
 800562c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005630:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005632:	681a      	ldr	r2, [r3, #0]
{
 8005634:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005638:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800563c:	601a      	str	r2, [r3, #0]
{
 800563e:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005640:	463b      	mov	r3, r7
 8005642:	f8cd 8000 	str.w	r8, [sp]
 8005646:	2200      	movs	r2, #0
 8005648:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800564c:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800564e:	f7ff fea7 	bl	80053a0 <I2C_WaitOnFlagUntilTimeout>
 8005652:	6823      	ldr	r3, [r4, #0]
 8005654:	b148      	cbz	r0, 800566a <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005656:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005658:	05db      	lsls	r3, r3, #23
 800565a:	d502      	bpl.n	8005662 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800565c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005660:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8005662:	2003      	movs	r0, #3
}
 8005664:	b004      	add	sp, #16
 8005666:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800566a:	fa5f f986 	uxtb.w	r9, r6
 800566e:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8005672:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005674:	492a      	ldr	r1, [pc, #168]	; (8005720 <I2C_RequestMemoryRead+0x100>)
 8005676:	4643      	mov	r3, r8
 8005678:	463a      	mov	r2, r7
 800567a:	4620      	mov	r0, r4
 800567c:	f7ff fec2 	bl	8005404 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005680:	b108      	cbz	r0, 8005686 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8005682:	2001      	movs	r0, #1
 8005684:	e7ee      	b.n	8005664 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005686:	6823      	ldr	r3, [r4, #0]
 8005688:	9003      	str	r0, [sp, #12]
 800568a:	695a      	ldr	r2, [r3, #20]
 800568c:	9203      	str	r2, [sp, #12]
 800568e:	699b      	ldr	r3, [r3, #24]
 8005690:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005692:	4642      	mov	r2, r8
 8005694:	4639      	mov	r1, r7
 8005696:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005698:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800569a:	f7ff ff43 	bl	8005524 <I2C_WaitOnTXEFlagUntilTimeout>
 800569e:	b140      	cbz	r0, 80056b2 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80056a0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80056a2:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80056a4:	bf01      	itttt	eq
 80056a6:	6822      	ldreq	r2, [r4, #0]
 80056a8:	6813      	ldreq	r3, [r2, #0]
 80056aa:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80056ae:	6013      	streq	r3, [r2, #0]
 80056b0:	e7e7      	b.n	8005682 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80056b2:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80056b6:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80056b8:	d11a      	bne.n	80056f0 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80056ba:	b2ed      	uxtb	r5, r5
 80056bc:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80056be:	4642      	mov	r2, r8
 80056c0:	4639      	mov	r1, r7
 80056c2:	4620      	mov	r0, r4
 80056c4:	f7ff ff2e 	bl	8005524 <I2C_WaitOnTXEFlagUntilTimeout>
 80056c8:	2800      	cmp	r0, #0
 80056ca:	d1e9      	bne.n	80056a0 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80056cc:	6822      	ldr	r2, [r4, #0]
 80056ce:	6813      	ldr	r3, [r2, #0]
 80056d0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80056d4:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80056d6:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80056da:	4602      	mov	r2, r0
 80056dc:	f8cd 8000 	str.w	r8, [sp]
 80056e0:	463b      	mov	r3, r7
 80056e2:	4620      	mov	r0, r4
 80056e4:	f7ff fe5c 	bl	80053a0 <I2C_WaitOnFlagUntilTimeout>
 80056e8:	6822      	ldr	r2, [r4, #0]
 80056ea:	b160      	cbz	r0, 8005706 <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80056ec:	6813      	ldr	r3, [r2, #0]
 80056ee:	e7b3      	b.n	8005658 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80056f0:	0a2a      	lsrs	r2, r5, #8
 80056f2:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80056f4:	4639      	mov	r1, r7
 80056f6:	4642      	mov	r2, r8
 80056f8:	4620      	mov	r0, r4
 80056fa:	f7ff ff13 	bl	8005524 <I2C_WaitOnTXEFlagUntilTimeout>
 80056fe:	2800      	cmp	r0, #0
 8005700:	d1ce      	bne.n	80056a0 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005702:	6823      	ldr	r3, [r4, #0]
 8005704:	e7d9      	b.n	80056ba <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8005706:	f049 0301 	orr.w	r3, r9, #1
 800570a:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800570c:	4904      	ldr	r1, [pc, #16]	; (8005720 <I2C_RequestMemoryRead+0x100>)
 800570e:	4643      	mov	r3, r8
 8005710:	463a      	mov	r2, r7
 8005712:	4620      	mov	r0, r4
 8005714:	f7ff fe76 	bl	8005404 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8005718:	3800      	subs	r0, #0
 800571a:	bf18      	it	ne
 800571c:	2001      	movne	r0, #1
 800571e:	e7a1      	b.n	8005664 <I2C_RequestMemoryRead+0x44>
 8005720:	00010002 	.word	0x00010002

08005724 <HAL_I2C_Init>:
{
 8005724:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8005726:	4604      	mov	r4, r0
 8005728:	b908      	cbnz	r0, 800572e <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800572a:	2001      	movs	r0, #1
}
 800572c:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800572e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005732:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005736:	b91b      	cbnz	r3, 8005740 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8005738:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800573c:	f7fc f9f2 	bl	8001b24 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005740:	2324      	movs	r3, #36	; 0x24
 8005742:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005746:	6823      	ldr	r3, [r4, #0]
 8005748:	681a      	ldr	r2, [r3, #0]
 800574a:	f022 0201 	bic.w	r2, r2, #1
 800574e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8005750:	681a      	ldr	r2, [r3, #0]
 8005752:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005756:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8005758:	681a      	ldr	r2, [r3, #0]
 800575a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800575e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8005760:	f001 f80e 	bl	8006780 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005764:	4b3f      	ldr	r3, [pc, #252]	; (8005864 <HAL_I2C_Init+0x140>)
 8005766:	6865      	ldr	r5, [r4, #4]
 8005768:	429d      	cmp	r5, r3
 800576a:	bf94      	ite	ls
 800576c:	4b3e      	ldrls	r3, [pc, #248]	; (8005868 <HAL_I2C_Init+0x144>)
 800576e:	4b3f      	ldrhi	r3, [pc, #252]	; (800586c <HAL_I2C_Init+0x148>)
 8005770:	4298      	cmp	r0, r3
 8005772:	bf8c      	ite	hi
 8005774:	2300      	movhi	r3, #0
 8005776:	2301      	movls	r3, #1
 8005778:	2b00      	cmp	r3, #0
 800577a:	d1d6      	bne.n	800572a <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800577c:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800577e:	4e39      	ldr	r6, [pc, #228]	; (8005864 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005780:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8005782:	493b      	ldr	r1, [pc, #236]	; (8005870 <HAL_I2C_Init+0x14c>)
 8005784:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005788:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800578c:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800578e:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005790:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005792:	bf88      	it	hi
 8005794:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8005798:	6a13      	ldr	r3, [r2, #32]
 800579a:	bf88      	it	hi
 800579c:	4371      	mulhi	r1, r6
 800579e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80057a2:	bf84      	itt	hi
 80057a4:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 80057a8:	fbb1 f1f6 	udivhi	r1, r1, r6
 80057ac:	3101      	adds	r1, #1
 80057ae:	4319      	orrs	r1, r3
 80057b0:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80057b2:	69d1      	ldr	r1, [r2, #28]
 80057b4:	1e43      	subs	r3, r0, #1
 80057b6:	482b      	ldr	r0, [pc, #172]	; (8005864 <HAL_I2C_Init+0x140>)
 80057b8:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 80057bc:	4285      	cmp	r5, r0
 80057be:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80057c2:	d832      	bhi.n	800582a <HAL_I2C_Init+0x106>
 80057c4:	006d      	lsls	r5, r5, #1
 80057c6:	f640 70fc 	movw	r0, #4092	; 0xffc
 80057ca:	fbb3 f3f5 	udiv	r3, r3, r5
 80057ce:	3301      	adds	r3, #1
 80057d0:	4203      	tst	r3, r0
 80057d2:	d042      	beq.n	800585a <HAL_I2C_Init+0x136>
 80057d4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80057d8:	430b      	orrs	r3, r1
 80057da:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80057dc:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80057e0:	6811      	ldr	r1, [r2, #0]
 80057e2:	4303      	orrs	r3, r0
 80057e4:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80057e8:	430b      	orrs	r3, r1
 80057ea:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80057ec:	6891      	ldr	r1, [r2, #8]
 80057ee:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80057f2:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 80057f6:	4303      	orrs	r3, r0
 80057f8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80057fc:	430b      	orrs	r3, r1
 80057fe:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8005800:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8005804:	68d1      	ldr	r1, [r2, #12]
 8005806:	4303      	orrs	r3, r0
 8005808:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800580c:	430b      	orrs	r3, r1
 800580e:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8005810:	6813      	ldr	r3, [r2, #0]
 8005812:	f043 0301 	orr.w	r3, r3, #1
 8005816:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005818:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800581a:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800581c:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800581e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8005822:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005824:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8005828:	e780      	b.n	800572c <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800582a:	68a0      	ldr	r0, [r4, #8]
 800582c:	b950      	cbnz	r0, 8005844 <HAL_I2C_Init+0x120>
 800582e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005832:	fbb3 f3f5 	udiv	r3, r3, r5
 8005836:	3301      	adds	r3, #1
 8005838:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800583c:	b17b      	cbz	r3, 800585e <HAL_I2C_Init+0x13a>
 800583e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005842:	e7c9      	b.n	80057d8 <HAL_I2C_Init+0xb4>
 8005844:	2019      	movs	r0, #25
 8005846:	4345      	muls	r5, r0
 8005848:	fbb3 f3f5 	udiv	r3, r3, r5
 800584c:	3301      	adds	r3, #1
 800584e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005852:	b123      	cbz	r3, 800585e <HAL_I2C_Init+0x13a>
 8005854:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005858:	e7be      	b.n	80057d8 <HAL_I2C_Init+0xb4>
 800585a:	2304      	movs	r3, #4
 800585c:	e7bc      	b.n	80057d8 <HAL_I2C_Init+0xb4>
 800585e:	2301      	movs	r3, #1
 8005860:	e7ba      	b.n	80057d8 <HAL_I2C_Init+0xb4>
 8005862:	bf00      	nop
 8005864:	000186a0 	.word	0x000186a0
 8005868:	001e847f 	.word	0x001e847f
 800586c:	003d08ff 	.word	0x003d08ff
 8005870:	000f4240 	.word	0x000f4240

08005874 <HAL_I2C_DeInit>:
{
 8005874:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005876:	4604      	mov	r4, r0
 8005878:	b198      	cbz	r0, 80058a2 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 800587a:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800587c:	2324      	movs	r3, #36	; 0x24
 800587e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005882:	6813      	ldr	r3, [r2, #0]
 8005884:	f023 0301 	bic.w	r3, r3, #1
 8005888:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 800588a:	f7fc f98f 	bl	8001bac <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800588e:	2000      	movs	r0, #0
 8005890:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 8005892:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 8005896:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800589a:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 800589c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 80058a0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80058a2:	2001      	movs	r0, #1
 80058a4:	e7fc      	b.n	80058a0 <HAL_I2C_DeInit+0x2c>
	...

080058a8 <HAL_I2C_Mem_Write>:
{
 80058a8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80058ac:	4604      	mov	r4, r0
 80058ae:	4699      	mov	r9, r3
 80058b0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80058b2:	460f      	mov	r7, r1
 80058b4:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80058b6:	f7fe fc4b 	bl	8004150 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80058ba:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80058be:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80058c0:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80058c2:	d003      	beq.n	80058cc <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 80058c4:	2002      	movs	r0, #2
}
 80058c6:	b003      	add	sp, #12
 80058c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80058cc:	9000      	str	r0, [sp, #0]
 80058ce:	493c      	ldr	r1, [pc, #240]	; (80059c0 <HAL_I2C_Mem_Write+0x118>)
 80058d0:	2319      	movs	r3, #25
 80058d2:	2201      	movs	r2, #1
 80058d4:	4620      	mov	r0, r4
 80058d6:	f7ff fd63 	bl	80053a0 <I2C_WaitOnFlagUntilTimeout>
 80058da:	2800      	cmp	r0, #0
 80058dc:	d1f2      	bne.n	80058c4 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 80058de:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80058e2:	2b01      	cmp	r3, #1
 80058e4:	d0ee      	beq.n	80058c4 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80058e6:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80058e8:	2301      	movs	r3, #1
 80058ea:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80058ee:	6803      	ldr	r3, [r0, #0]
 80058f0:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80058f2:	bf5e      	ittt	pl
 80058f4:	6803      	ldrpl	r3, [r0, #0]
 80058f6:	f043 0301 	orrpl.w	r3, r3, #1
 80058fa:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80058fc:	6803      	ldr	r3, [r0, #0]
 80058fe:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005902:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005904:	2321      	movs	r3, #33	; 0x21
 8005906:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800590a:	2340      	movs	r3, #64	; 0x40
 800590c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005910:	2300      	movs	r3, #0
 8005912:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005914:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005916:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005918:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800591c:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800591e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005920:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005922:	4b28      	ldr	r3, [pc, #160]	; (80059c4 <HAL_I2C_Mem_Write+0x11c>)
 8005924:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005926:	e9cd 6500 	strd	r6, r5, [sp]
 800592a:	464b      	mov	r3, r9
 800592c:	4642      	mov	r2, r8
 800592e:	4639      	mov	r1, r7
 8005930:	4620      	mov	r0, r4
 8005932:	f7ff fe1d 	bl	8005570 <I2C_RequestMemoryWrite>
 8005936:	2800      	cmp	r0, #0
 8005938:	d02a      	beq.n	8005990 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800593a:	2001      	movs	r0, #1
 800593c:	e7c3      	b.n	80058c6 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800593e:	f7ff fdf1 	bl	8005524 <I2C_WaitOnTXEFlagUntilTimeout>
 8005942:	b140      	cbz	r0, 8005956 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005944:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005946:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005948:	bf01      	itttt	eq
 800594a:	6822      	ldreq	r2, [r4, #0]
 800594c:	6813      	ldreq	r3, [r2, #0]
 800594e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005952:	6013      	streq	r3, [r2, #0]
 8005954:	e7f1      	b.n	800593a <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005956:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005958:	6827      	ldr	r7, [r4, #0]
 800595a:	461a      	mov	r2, r3
 800595c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8005960:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8005962:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8005964:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8005966:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8005968:	3a01      	subs	r2, #1
 800596a:	b292      	uxth	r2, r2
 800596c:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800596e:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8005970:	1e48      	subs	r0, r1, #1
 8005972:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005974:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8005976:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005978:	d50a      	bpl.n	8005990 <HAL_I2C_Mem_Write+0xe8>
 800597a:	b148      	cbz	r0, 8005990 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800597c:	785a      	ldrb	r2, [r3, #1]
 800597e:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8005980:	3302      	adds	r3, #2
 8005982:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8005984:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005986:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8005988:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800598a:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800598c:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800598e:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005990:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005992:	462a      	mov	r2, r5
 8005994:	4631      	mov	r1, r6
 8005996:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8005998:	2b00      	cmp	r3, #0
 800599a:	d1d0      	bne.n	800593e <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800599c:	f7ff fd9c 	bl	80054d8 <I2C_WaitOnBTFFlagUntilTimeout>
 80059a0:	2800      	cmp	r0, #0
 80059a2:	d1cf      	bne.n	8005944 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80059a4:	6822      	ldr	r2, [r4, #0]
 80059a6:	6813      	ldr	r3, [r2, #0]
 80059a8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80059ac:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80059ae:	2320      	movs	r3, #32
 80059b0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80059b4:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80059b8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 80059bc:	e783      	b.n	80058c6 <HAL_I2C_Mem_Write+0x1e>
 80059be:	bf00      	nop
 80059c0:	00100002 	.word	0x00100002
 80059c4:	ffff0000 	.word	0xffff0000

080059c8 <HAL_I2C_Mem_Read>:
{
 80059c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80059cc:	4604      	mov	r4, r0
 80059ce:	b087      	sub	sp, #28
 80059d0:	4699      	mov	r9, r3
 80059d2:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80059d4:	460d      	mov	r5, r1
 80059d6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80059d8:	f7fe fbba 	bl	8004150 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80059dc:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80059e0:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80059e2:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80059e4:	d004      	beq.n	80059f0 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 80059e6:	2502      	movs	r5, #2
}
 80059e8:	4628      	mov	r0, r5
 80059ea:	b007      	add	sp, #28
 80059ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80059f0:	9000      	str	r0, [sp, #0]
 80059f2:	4976      	ldr	r1, [pc, #472]	; (8005bcc <HAL_I2C_Mem_Read+0x204>)
 80059f4:	2319      	movs	r3, #25
 80059f6:	2201      	movs	r2, #1
 80059f8:	4620      	mov	r0, r4
 80059fa:	f7ff fcd1 	bl	80053a0 <I2C_WaitOnFlagUntilTimeout>
 80059fe:	2800      	cmp	r0, #0
 8005a00:	d1f1      	bne.n	80059e6 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8005a02:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005a06:	2b01      	cmp	r3, #1
 8005a08:	d0ed      	beq.n	80059e6 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005a0a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005a0c:	2301      	movs	r3, #1
 8005a0e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005a12:	6803      	ldr	r3, [r0, #0]
 8005a14:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8005a16:	bf5e      	ittt	pl
 8005a18:	6803      	ldrpl	r3, [r0, #0]
 8005a1a:	f043 0301 	orrpl.w	r3, r3, #1
 8005a1e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005a20:	6803      	ldr	r3, [r0, #0]
 8005a22:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005a26:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005a28:	2322      	movs	r3, #34	; 0x22
 8005a2a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005a2e:	2340      	movs	r3, #64	; 0x40
 8005a30:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005a34:	2300      	movs	r3, #0
 8005a36:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005a38:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005a3a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005a3c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8005a40:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005a42:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005a44:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005a46:	4b62      	ldr	r3, [pc, #392]	; (8005bd0 <HAL_I2C_Mem_Read+0x208>)
 8005a48:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005a4a:	4629      	mov	r1, r5
 8005a4c:	e9cd 7600 	strd	r7, r6, [sp]
 8005a50:	464b      	mov	r3, r9
 8005a52:	4642      	mov	r2, r8
 8005a54:	4620      	mov	r0, r4
 8005a56:	f7ff fde3 	bl	8005620 <I2C_RequestMemoryRead>
 8005a5a:	4605      	mov	r5, r0
 8005a5c:	b108      	cbz	r0, 8005a62 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8005a5e:	2501      	movs	r5, #1
 8005a60:	e7c2      	b.n	80059e8 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8005a62:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005a64:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8005a66:	b9b2      	cbnz	r2, 8005a96 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005a68:	9002      	str	r0, [sp, #8]
 8005a6a:	695a      	ldr	r2, [r3, #20]
 8005a6c:	9202      	str	r2, [sp, #8]
 8005a6e:	699a      	ldr	r2, [r3, #24]
 8005a70:	9202      	str	r2, [sp, #8]
 8005a72:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005a74:	681a      	ldr	r2, [r3, #0]
 8005a76:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005a7a:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005a7c:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8005bd4 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8005a80:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005a82:	2b00      	cmp	r3, #0
 8005a84:	d12c      	bne.n	8005ae0 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8005a86:	2220      	movs	r2, #32
 8005a88:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005a8c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005a90:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8005a94:	e7a8      	b.n	80059e8 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8005a96:	2a01      	cmp	r2, #1
 8005a98:	d10a      	bne.n	8005ab0 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005a9a:	681a      	ldr	r2, [r3, #0]
 8005a9c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005aa0:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005aa2:	9003      	str	r0, [sp, #12]
 8005aa4:	695a      	ldr	r2, [r3, #20]
 8005aa6:	9203      	str	r2, [sp, #12]
 8005aa8:	699a      	ldr	r2, [r3, #24]
 8005aaa:	9203      	str	r2, [sp, #12]
 8005aac:	9a03      	ldr	r2, [sp, #12]
 8005aae:	e7e1      	b.n	8005a74 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8005ab0:	2a02      	cmp	r2, #2
 8005ab2:	d10e      	bne.n	8005ad2 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005ab4:	681a      	ldr	r2, [r3, #0]
 8005ab6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005aba:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005abc:	681a      	ldr	r2, [r3, #0]
 8005abe:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005ac2:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005ac4:	9004      	str	r0, [sp, #16]
 8005ac6:	695a      	ldr	r2, [r3, #20]
 8005ac8:	9204      	str	r2, [sp, #16]
 8005aca:	699b      	ldr	r3, [r3, #24]
 8005acc:	9304      	str	r3, [sp, #16]
 8005ace:	9b04      	ldr	r3, [sp, #16]
 8005ad0:	e7d4      	b.n	8005a7c <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005ad2:	9005      	str	r0, [sp, #20]
 8005ad4:	695a      	ldr	r2, [r3, #20]
 8005ad6:	9205      	str	r2, [sp, #20]
 8005ad8:	699b      	ldr	r3, [r3, #24]
 8005ada:	9305      	str	r3, [sp, #20]
 8005adc:	9b05      	ldr	r3, [sp, #20]
 8005ade:	e7cd      	b.n	8005a7c <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8005ae0:	2b03      	cmp	r3, #3
 8005ae2:	d856      	bhi.n	8005b92 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8005ae4:	2b01      	cmp	r3, #1
 8005ae6:	d115      	bne.n	8005b14 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005ae8:	4632      	mov	r2, r6
 8005aea:	4639      	mov	r1, r7
 8005aec:	4620      	mov	r0, r4
 8005aee:	f7ff fcc4 	bl	800547a <I2C_WaitOnRXNEFlagUntilTimeout>
 8005af2:	2800      	cmp	r0, #0
 8005af4:	d1b3      	bne.n	8005a5e <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005af6:	6823      	ldr	r3, [r4, #0]
 8005af8:	691a      	ldr	r2, [r3, #16]
 8005afa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005afc:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005afe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005b00:	3301      	adds	r3, #1
 8005b02:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005b04:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005b06:	3b01      	subs	r3, #1
 8005b08:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005b0a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005b0c:	3b01      	subs	r3, #1
 8005b0e:	b29b      	uxth	r3, r3
 8005b10:	8563      	strh	r3, [r4, #42]	; 0x2a
 8005b12:	e7b5      	b.n	8005a80 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8005b14:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005b16:	9600      	str	r6, [sp, #0]
 8005b18:	463b      	mov	r3, r7
 8005b1a:	f04f 0200 	mov.w	r2, #0
 8005b1e:	4641      	mov	r1, r8
 8005b20:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8005b22:	d119      	bne.n	8005b58 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005b24:	f7ff fc3c 	bl	80053a0 <I2C_WaitOnFlagUntilTimeout>
 8005b28:	2800      	cmp	r0, #0
 8005b2a:	d198      	bne.n	8005a5e <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005b2c:	6823      	ldr	r3, [r4, #0]
 8005b2e:	681a      	ldr	r2, [r3, #0]
 8005b30:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005b34:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005b36:	691a      	ldr	r2, [r3, #16]
 8005b38:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005b3a:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005b3c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005b3e:	1c53      	adds	r3, r2, #1
 8005b40:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005b42:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005b44:	3b01      	subs	r3, #1
 8005b46:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005b48:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005b4a:	3b01      	subs	r3, #1
 8005b4c:	b29b      	uxth	r3, r3
 8005b4e:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005b50:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005b52:	691b      	ldr	r3, [r3, #16]
 8005b54:	7053      	strb	r3, [r2, #1]
 8005b56:	e7d2      	b.n	8005afe <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005b58:	f7ff fc22 	bl	80053a0 <I2C_WaitOnFlagUntilTimeout>
 8005b5c:	2800      	cmp	r0, #0
 8005b5e:	f47f af7e 	bne.w	8005a5e <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005b62:	6823      	ldr	r3, [r4, #0]
 8005b64:	681a      	ldr	r2, [r3, #0]
 8005b66:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005b6a:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005b6c:	691a      	ldr	r2, [r3, #16]
 8005b6e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005b70:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005b72:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005b74:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8005b76:	3301      	adds	r3, #1
 8005b78:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005b7a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005b7c:	3b01      	subs	r3, #1
 8005b7e:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005b80:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005b82:	3b01      	subs	r3, #1
 8005b84:	b29b      	uxth	r3, r3
 8005b86:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005b88:	4602      	mov	r2, r0
 8005b8a:	463b      	mov	r3, r7
 8005b8c:	4641      	mov	r1, r8
 8005b8e:	4620      	mov	r0, r4
 8005b90:	e7c8      	b.n	8005b24 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005b92:	4632      	mov	r2, r6
 8005b94:	4639      	mov	r1, r7
 8005b96:	4620      	mov	r0, r4
 8005b98:	f7ff fc6f 	bl	800547a <I2C_WaitOnRXNEFlagUntilTimeout>
 8005b9c:	2800      	cmp	r0, #0
 8005b9e:	f47f af5e 	bne.w	8005a5e <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005ba2:	6823      	ldr	r3, [r4, #0]
 8005ba4:	691a      	ldr	r2, [r3, #16]
 8005ba6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005ba8:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8005baa:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005bac:	1c53      	adds	r3, r2, #1
 8005bae:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8005bb0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005bb2:	3b01      	subs	r3, #1
 8005bb4:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8005bb6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005bb8:	3b01      	subs	r3, #1
 8005bba:	b29b      	uxth	r3, r3
 8005bbc:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005bbe:	6823      	ldr	r3, [r4, #0]
 8005bc0:	6959      	ldr	r1, [r3, #20]
 8005bc2:	0749      	lsls	r1, r1, #29
 8005bc4:	f57f af5c 	bpl.w	8005a80 <HAL_I2C_Mem_Read+0xb8>
 8005bc8:	e7c3      	b.n	8005b52 <HAL_I2C_Mem_Read+0x18a>
 8005bca:	bf00      	nop
 8005bcc:	00100002 	.word	0x00100002
 8005bd0:	ffff0000 	.word	0xffff0000
 8005bd4:	00010004 	.word	0x00010004

08005bd8 <HAL_I2C_GetState>:
  return hi2c->State;
 8005bd8:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 8005bdc:	4770      	bx	lr

08005bde <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005bde:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005be0:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005be4:	01d2      	lsls	r2, r2, #7
 8005be6:	3284      	adds	r2, #132	; 0x84
 8005be8:	1883      	adds	r3, r0, r2
{
 8005bea:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005bee:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005bf0:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005bf2:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005bf4:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005bf8:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8005bfc:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005bfe:	68c5      	ldr	r5, [r0, #12]
 8005c00:	f10c 0701 	add.w	r7, ip, #1
 8005c04:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005c08:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005c0c:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005c0e:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005c10:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8005c14:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005c16:	68c5      	ldr	r5, [r0, #12]
 8005c18:	68ce      	ldr	r6, [r1, #12]
 8005c1a:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8005c1e:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005c20:	689d      	ldr	r5, [r3, #8]
 8005c22:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8005c26:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005c28:	68c7      	ldr	r7, [r0, #12]
 8005c2a:	688d      	ldr	r5, [r1, #8]
 8005c2c:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005c30:	3501      	adds	r5, #1
 8005c32:	443d      	add	r5, r7
 8005c34:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8005c38:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005c3a:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005c3c:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005c3e:	f025 0507 	bic.w	r5, r5, #7
 8005c42:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005c44:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005c48:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005c4a:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005c4c:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005c50:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005c54:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005c58:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8005c5c:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005c60:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005c64:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8005c68:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005c6a:	695d      	ldr	r5, [r3, #20]
 8005c6c:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8005c70:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005c72:	694d      	ldr	r5, [r1, #20]
 8005c74:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005c76:	69dd      	ldr	r5, [r3, #28]
 8005c78:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8005c7c:	f025 0507 	bic.w	r5, r5, #7
 8005c80:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005c82:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8005c86:	433d      	orrs	r5, r7
 8005c88:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005c8a:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005c8c:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005c8e:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005c92:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005c94:	b31e      	cbz	r6, 8005cde <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005c96:	2e01      	cmp	r6, #1
 8005c98:	d023      	beq.n	8005ce2 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005c9a:	1eb5      	subs	r5, r6, #2
 8005c9c:	2d02      	cmp	r5, #2
 8005c9e:	d922      	bls.n	8005ce6 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8005ca0:	2e07      	cmp	r6, #7
 8005ca2:	bf0c      	ite	eq
 8005ca4:	2502      	moveq	r5, #2
 8005ca6:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005ca8:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8005caa:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8005cae:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005cb0:	eba4 040c 	sub.w	r4, r4, ip
 8005cb4:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005cb6:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005cb8:	436c      	muls	r4, r5
 8005cba:	436e      	muls	r6, r5
 8005cbc:	3403      	adds	r4, #3
 8005cbe:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8005cc2:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005cc4:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8005cc6:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8005cca:	f024 0407 	bic.w	r4, r4, #7
 8005cce:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005cd0:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005cd2:	5883      	ldr	r3, [r0, r2]
 8005cd4:	f043 0301 	orr.w	r3, r3, #1
 8005cd8:	5083      	str	r3, [r0, r2]
}
 8005cda:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005cde:	2504      	movs	r5, #4
 8005ce0:	e7e2      	b.n	8005ca8 <LTDC_SetConfig+0xca>
    tmp = 3U;
 8005ce2:	2503      	movs	r5, #3
 8005ce4:	e7e0      	b.n	8005ca8 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8005ce6:	2502      	movs	r5, #2
 8005ce8:	e7de      	b.n	8005ca8 <LTDC_SetConfig+0xca>
	...

08005cec <HAL_LTDC_Init>:
{
 8005cec:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005cee:	4604      	mov	r4, r0
 8005cf0:	2800      	cmp	r0, #0
 8005cf2:	d063      	beq.n	8005dbc <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005cf4:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8005cf8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005cfc:	b91b      	cbnz	r3, 8005d06 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005cfe:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005d02:	f7fb ff71 	bl	8001be8 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005d06:	2302      	movs	r3, #2
 8005d08:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005d0c:	6823      	ldr	r3, [r4, #0]
 8005d0e:	699a      	ldr	r2, [r3, #24]
 8005d10:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005d14:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005d16:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005d1a:	4302      	orrs	r2, r0
 8005d1c:	68e0      	ldr	r0, [r4, #12]
 8005d1e:	6999      	ldr	r1, [r3, #24]
 8005d20:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005d22:	6920      	ldr	r0, [r4, #16]
 8005d24:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005d26:	430a      	orrs	r2, r1
 8005d28:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005d2a:	689a      	ldr	r2, [r3, #8]
 8005d2c:	4924      	ldr	r1, [pc, #144]	; (8005dc0 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005d2e:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005d30:	400a      	ands	r2, r1
 8005d32:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005d34:	689a      	ldr	r2, [r3, #8]
 8005d36:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005d3a:	69a0      	ldr	r0, [r4, #24]
 8005d3c:	4302      	orrs	r2, r0
 8005d3e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005d40:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005d42:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005d44:	400a      	ands	r2, r1
 8005d46:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005d48:	68da      	ldr	r2, [r3, #12]
 8005d4a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005d4e:	6a20      	ldr	r0, [r4, #32]
 8005d50:	4302      	orrs	r2, r0
 8005d52:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005d54:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005d56:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005d58:	400a      	ands	r2, r1
 8005d5a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005d5c:	691a      	ldr	r2, [r3, #16]
 8005d5e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005d62:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005d64:	4302      	orrs	r2, r0
 8005d66:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005d68:	695a      	ldr	r2, [r3, #20]
 8005d6a:	4011      	ands	r1, r2
 8005d6c:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005d6e:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005d70:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005d72:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005d76:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005d78:	430a      	orrs	r2, r1
 8005d7a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005d7c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005d7e:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005d82:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005d86:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8005d8a:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005d8c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005d8e:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8005d92:	430a      	orrs	r2, r1
 8005d94:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8005d98:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005d9c:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005d9e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005da0:	f042 0206 	orr.w	r2, r2, #6
 8005da4:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005da6:	699a      	ldr	r2, [r3, #24]
 8005da8:	f042 0201 	orr.w	r2, r2, #1
 8005dac:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005dae:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005db0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005db2:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005db6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8005dba:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005dbc:	2001      	movs	r0, #1
 8005dbe:	e7fc      	b.n	8005dba <HAL_LTDC_Init+0xce>
 8005dc0:	f000f800 	.word	0xf000f800

08005dc4 <HAL_LTDC_ErrorCallback>:
 8005dc4:	4770      	bx	lr

08005dc6 <HAL_LTDC_LineEventCallback>:
 8005dc6:	4770      	bx	lr

08005dc8 <HAL_LTDC_ReloadEventCallback>:
 8005dc8:	4770      	bx	lr

08005dca <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005dca:	6803      	ldr	r3, [r0, #0]
{
 8005dcc:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005dce:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005dd0:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005dd2:	0772      	lsls	r2, r6, #29
{
 8005dd4:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005dd6:	d514      	bpl.n	8005e02 <HAL_LTDC_IRQHandler+0x38>
 8005dd8:	0769      	lsls	r1, r5, #29
 8005dda:	d512      	bpl.n	8005e02 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005ddc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005dde:	f022 0204 	bic.w	r2, r2, #4
 8005de2:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005de4:	2204      	movs	r2, #4
 8005de6:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005de8:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8005dec:	f043 0301 	orr.w	r3, r3, #1
 8005df0:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8005df4:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005df6:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005dfa:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005dfe:	f7ff ffe1 	bl	8005dc4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005e02:	07b2      	lsls	r2, r6, #30
 8005e04:	d516      	bpl.n	8005e34 <HAL_LTDC_IRQHandler+0x6a>
 8005e06:	07ab      	lsls	r3, r5, #30
 8005e08:	d514      	bpl.n	8005e34 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005e0a:	6823      	ldr	r3, [r4, #0]
 8005e0c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005e0e:	f022 0202 	bic.w	r2, r2, #2
 8005e12:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005e14:	2202      	movs	r2, #2
 8005e16:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005e18:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8005e1c:	4313      	orrs	r3, r2
 8005e1e:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005e22:	2304      	movs	r3, #4
 8005e24:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005e28:	2300      	movs	r3, #0
 8005e2a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005e2e:	4620      	mov	r0, r4
 8005e30:	f7ff ffc8 	bl	8005dc4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005e34:	07f0      	lsls	r0, r6, #31
 8005e36:	d510      	bpl.n	8005e5a <HAL_LTDC_IRQHandler+0x90>
 8005e38:	07e9      	lsls	r1, r5, #31
 8005e3a:	d50e      	bpl.n	8005e5a <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005e3c:	6823      	ldr	r3, [r4, #0]
 8005e3e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005e40:	f022 0201 	bic.w	r2, r2, #1
 8005e44:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005e46:	2201      	movs	r2, #1
 8005e48:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8005e4a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005e4c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005e50:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005e54:	4620      	mov	r0, r4
 8005e56:	f7ff ffb6 	bl	8005dc6 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005e5a:	0732      	lsls	r2, r6, #28
 8005e5c:	d511      	bpl.n	8005e82 <HAL_LTDC_IRQHandler+0xb8>
 8005e5e:	072b      	lsls	r3, r5, #28
 8005e60:	d50f      	bpl.n	8005e82 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005e62:	6823      	ldr	r3, [r4, #0]
 8005e64:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005e66:	f022 0208 	bic.w	r2, r2, #8
 8005e6a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005e6c:	2208      	movs	r2, #8
 8005e6e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005e70:	2301      	movs	r3, #1
 8005e72:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005e76:	2300      	movs	r3, #0
 8005e78:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005e7c:	4620      	mov	r0, r4
 8005e7e:	f7ff ffa3 	bl	8005dc8 <HAL_LTDC_ReloadEventCallback>
}
 8005e82:	bd70      	pop	{r4, r5, r6, pc}

08005e84 <HAL_LTDC_ConfigLayer>:
{
 8005e84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8005e88:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005e8c:	2b01      	cmp	r3, #1
{
 8005e8e:	4606      	mov	r6, r0
 8005e90:	460f      	mov	r7, r1
 8005e92:	4694      	mov	ip, r2
 8005e94:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005e98:	d01f      	beq.n	8005eda <HAL_LTDC_ConfigLayer+0x56>
 8005e9a:	f04f 0801 	mov.w	r8, #1
 8005e9e:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005ea2:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005ea6:	2434      	movs	r4, #52	; 0x34
 8005ea8:	460d      	mov	r5, r1
 8005eaa:	fb04 6402 	mla	r4, r4, r2, r6
 8005eae:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005eb0:	3438      	adds	r4, #56	; 0x38
 8005eb2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005eb4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005eb6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005eb8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005eba:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005ebc:	682b      	ldr	r3, [r5, #0]
 8005ebe:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005ec0:	4630      	mov	r0, r6
 8005ec2:	4662      	mov	r2, ip
 8005ec4:	4639      	mov	r1, r7
 8005ec6:	f7ff fe8a 	bl	8005bde <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005eca:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005ecc:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005ece:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005ed2:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005ed6:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8005eda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08005ee0 <HAL_LTDC_SetPitch>:
{
 8005ee0:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 8005ee2:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005ee6:	2b01      	cmp	r3, #1
 8005ee8:	f04f 0302 	mov.w	r3, #2
 8005eec:	d02c      	beq.n	8005f48 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8005eee:	2434      	movs	r4, #52	; 0x34
 8005ef0:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005ef4:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8005ef8:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005efa:	b33c      	cbz	r4, 8005f4c <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005efc:	2c01      	cmp	r4, #1
 8005efe:	d027      	beq.n	8005f50 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005f00:	1ea5      	subs	r5, r4, #2
 8005f02:	429d      	cmp	r5, r3
 8005f04:	d902      	bls.n	8005f0c <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 8005f06:	2c07      	cmp	r4, #7
 8005f08:	bf18      	it	ne
 8005f0a:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8005f0c:	6804      	ldr	r4, [r0, #0]
 8005f0e:	01d2      	lsls	r2, r2, #7
 8005f10:	3284      	adds	r2, #132	; 0x84
 8005f12:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 8005f14:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8005f16:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 8005f18:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 8005f1c:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 8005f20:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8005f22:	4c0c      	ldr	r4, [pc, #48]	; (8005f54 <HAL_LTDC_SetPitch+0x74>)
 8005f24:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8005f26:	f045 0501 	orr.w	r5, r5, #1
 8005f2a:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 8005f2c:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 8005f2e:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8005f32:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8005f34:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005f36:	f043 0301 	orr.w	r3, r3, #1
 8005f3a:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 8005f3c:	2301      	movs	r3, #1
 8005f3e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005f42:	2300      	movs	r3, #0
 8005f44:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 8005f48:	4618      	mov	r0, r3
 8005f4a:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 8005f4c:	2304      	movs	r3, #4
 8005f4e:	e7dd      	b.n	8005f0c <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 8005f50:	2303      	movs	r3, #3
 8005f52:	e7db      	b.n	8005f0c <HAL_LTDC_SetPitch+0x2c>
 8005f54:	40016800 	.word	0x40016800

08005f58 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8005f58:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 8005f5a:	2300      	movs	r3, #0
 8005f5c:	9301      	str	r3, [sp, #4]
 8005f5e:	4b18      	ldr	r3, [pc, #96]	; (8005fc0 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005f60:	4d18      	ldr	r5, [pc, #96]	; (8005fc4 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8005f62:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005f64:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005f68:	641a      	str	r2, [r3, #64]	; 0x40
 8005f6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005f6c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005f70:	9301      	str	r3, [sp, #4]
 8005f72:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8005f74:	4b14      	ldr	r3, [pc, #80]	; (8005fc8 <HAL_PWREx_EnableOverDrive+0x70>)
 8005f76:	2201      	movs	r2, #1
 8005f78:	641a      	str	r2, [r3, #64]	; 0x40
  tickstart = HAL_GetTick();
 8005f7a:	f7fe f8e9 	bl	8004150 <HAL_GetTick>
 8005f7e:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005f80:	686b      	ldr	r3, [r5, #4]
 8005f82:	03da      	lsls	r2, r3, #15
 8005f84:	d50b      	bpl.n	8005f9e <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005f86:	4b10      	ldr	r3, [pc, #64]	; (8005fc8 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005f88:	4d0e      	ldr	r5, [pc, #56]	; (8005fc4 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005f8a:	2201      	movs	r2, #1
 8005f8c:	645a      	str	r2, [r3, #68]	; 0x44
  tickstart = HAL_GetTick();
 8005f8e:	f7fe f8df 	bl	8004150 <HAL_GetTick>
 8005f92:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005f94:	686b      	ldr	r3, [r5, #4]
 8005f96:	039b      	lsls	r3, r3, #14
 8005f98:	d50a      	bpl.n	8005fb0 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8005f9a:	2000      	movs	r0, #0
 8005f9c:	e006      	b.n	8005fac <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005f9e:	f7fe f8d7 	bl	8004150 <HAL_GetTick>
 8005fa2:	1b00      	subs	r0, r0, r4
 8005fa4:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005fa8:	d9ea      	bls.n	8005f80 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 8005faa:	2003      	movs	r0, #3
}
 8005fac:	b003      	add	sp, #12
 8005fae:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005fb0:	f7fe f8ce 	bl	8004150 <HAL_GetTick>
 8005fb4:	1b00      	subs	r0, r0, r4
 8005fb6:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005fba:	d9eb      	bls.n	8005f94 <HAL_PWREx_EnableOverDrive+0x3c>
 8005fbc:	e7f5      	b.n	8005faa <HAL_PWREx_EnableOverDrive+0x52>
 8005fbe:	bf00      	nop
 8005fc0:	40023800 	.word	0x40023800
 8005fc4:	40007000 	.word	0x40007000
 8005fc8:	420e0000 	.word	0x420e0000

08005fcc <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8005fcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8005fd0:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 8005fd2:	b13e      	cbz	r6, 8005fe4 <QSPI_Config+0x18>
 8005fd4:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005fd8:	bf1f      	itttt	ne
 8005fda:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 8005fdc:	6804      	ldrne	r4, [r0, #0]
 8005fde:	f103 33ff 	addne.w	r3, r3, #4294967295
 8005fe2:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005fe4:	f8d1 9018 	ldr.w	r9, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005fe8:	e9d1 7507 	ldrd	r7, r5, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005fec:	f1b9 0f00 	cmp.w	r9, #0
 8005ff0:	d04f      	beq.n	8006092 <QSPI_Config+0xc6>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005ff2:	694b      	ldr	r3, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005ff4:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005ff6:	f8d1 a000 	ldr.w	sl, [r1]
 8005ffa:	f8d1 e034 	ldr.w	lr, [r1, #52]	; 0x34
 8005ffe:	ea46 0909 	orr.w	r9, r6, r9
 8006002:	e9d1 480b 	ldrd	r4, r8, [r1, #44]	; 0x2c
 8006006:	ea4f 4c83 	mov.w	ip, r3, lsl #18
 800600a:	ea49 0902 	orr.w	r9, r9, r2
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800600e:	b335      	cbz	r5, 800605e <QSPI_Config+0x92>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8006010:	688b      	ldr	r3, [r1, #8]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006012:	690e      	ldr	r6, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8006014:	61c3      	str	r3, [r0, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006016:	ea49 0505 	orr.w	r5, r9, r5
 800601a:	b19f      	cbz	r7, 8006044 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800601c:	ea4a 0307 	orr.w	r3, sl, r7
 8006020:	4323      	orrs	r3, r4
 8006022:	ea43 0308 	orr.w	r3, r3, r8
 8006026:	68cc      	ldr	r4, [r1, #12]
 8006028:	ea43 030e 	orr.w	r3, r3, lr
 800602c:	4333      	orrs	r3, r6
 800602e:	4323      	orrs	r3, r4
 8006030:	ea43 030c 	orr.w	r3, r3, ip
 8006034:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize |
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006036:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800603a:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800603c:	d00d      	beq.n	800605a <QSPI_Config+0x8e>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800603e:	684b      	ldr	r3, [r1, #4]
 8006040:	6183      	str	r3, [r0, #24]
 8006042:	e00a      	b.n	800605a <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006044:	ea4a 0304 	orr.w	r3, sl, r4
 8006048:	ea43 0308 	orr.w	r3, r3, r8
 800604c:	ea43 030e 	orr.w	r3, r3, lr
 8006050:	4333      	orrs	r3, r6
 8006052:	ea43 030c 	orr.w	r3, r3, ip
 8006056:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006058:	6143      	str	r3, [r0, #20]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 800605a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800605e:	b16f      	cbz	r7, 800607c <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006060:	ea4a 0307 	orr.w	r3, sl, r7
 8006064:	4323      	orrs	r3, r4
 8006066:	ea43 0308 	orr.w	r3, r3, r8
 800606a:	68cc      	ldr	r4, [r1, #12]
 800606c:	ea43 030e 	orr.w	r3, r3, lr
 8006070:	4323      	orrs	r3, r4
 8006072:	ea43 030c 	orr.w	r3, r3, ip
 8006076:	ea43 0309 	orr.w	r3, r3, r9
 800607a:	e7dc      	b.n	8006036 <QSPI_Config+0x6a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800607c:	ea4a 0304 	orr.w	r3, sl, r4
 8006080:	ea43 0308 	orr.w	r3, r3, r8
 8006084:	ea43 030e 	orr.w	r3, r3, lr
 8006088:	ea43 030c 	orr.w	r3, r3, ip
 800608c:	ea43 0309 	orr.w	r3, r3, r9
 8006090:	e7e2      	b.n	8006058 <QSPI_Config+0x8c>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8006092:	b345      	cbz	r5, 80060e6 <QSPI_Config+0x11a>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8006094:	6804      	ldr	r4, [r0, #0]
 8006096:	688b      	ldr	r3, [r1, #8]
 8006098:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800609a:	ea46 0305 	orr.w	r3, r6, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800609e:	694e      	ldr	r6, [r1, #20]
 80060a0:	6908      	ldr	r0, [r1, #16]
 80060a2:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 80060a6:	ea43 0502 	orr.w	r5, r3, r2
 80060aa:	04b6      	lsls	r6, r6, #18
 80060ac:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80060b0:	b187      	cbz	r7, 80060d4 <QSPI_Config+0x108>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80060b2:	4338      	orrs	r0, r7
 80060b4:	ea40 0008 	orr.w	r0, r0, r8
 80060b8:	4303      	orrs	r3, r0
 80060ba:	68c8      	ldr	r0, [r1, #12]
 80060bc:	ea43 030c 	orr.w	r3, r3, ip
 80060c0:	4303      	orrs	r3, r0
 80060c2:	4333      	orrs	r3, r6
 80060c4:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80060c6:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80060ca:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80060cc:	d0c5      	beq.n	800605a <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80060ce:	684b      	ldr	r3, [r1, #4]
 80060d0:	61a3      	str	r3, [r4, #24]
 80060d2:	e7c2      	b.n	800605a <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80060d4:	ea40 0008 	orr.w	r0, r0, r8
 80060d8:	4303      	orrs	r3, r0
 80060da:	ea43 030c 	orr.w	r3, r3, ip
 80060de:	4333      	orrs	r3, r6
 80060e0:	432b      	orrs	r3, r5
 80060e2:	6163      	str	r3, [r4, #20]
 80060e4:	e7b9      	b.n	800605a <QSPI_Config+0x8e>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80060e6:	b17f      	cbz	r7, 8006108 <QSPI_Config+0x13c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80060e8:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 80060ea:	6800      	ldr	r0, [r0, #0]
 80060ec:	ea46 0307 	orr.w	r3, r6, r7
 80060f0:	4313      	orrs	r3, r2
 80060f2:	4323      	orrs	r3, r4
 80060f4:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 80060f6:	4323      	orrs	r3, r4
 80060f8:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 80060fa:	4323      	orrs	r3, r4
 80060fc:	68cc      	ldr	r4, [r1, #12]
 80060fe:	4323      	orrs	r3, r4
 8006100:	694c      	ldr	r4, [r1, #20]
 8006102:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 8006106:	e796      	b.n	8006036 <QSPI_Config+0x6a>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8006108:	2e00      	cmp	r6, #0
 800610a:	d0a6      	beq.n	800605a <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800610c:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 800610e:	6800      	ldr	r0, [r0, #0]
 8006110:	4333      	orrs	r3, r6
 8006112:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 8006114:	431a      	orrs	r2, r3
 8006116:	4332      	orrs	r2, r6
 8006118:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 800611a:	694b      	ldr	r3, [r1, #20]
 800611c:	4332      	orrs	r2, r6
 800611e:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 8006122:	6142      	str	r2, [r0, #20]
}
 8006124:	e799      	b.n	800605a <QSPI_Config+0x8e>

08006126 <QSPI_WaitFlagStateUntilTimeout>:
{
 8006126:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800612a:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800612e:	4604      	mov	r4, r0
 8006130:	460e      	mov	r6, r1
 8006132:	4615      	mov	r5, r2
 8006134:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8006136:	6822      	ldr	r2, [r4, #0]
 8006138:	6893      	ldr	r3, [r2, #8]
 800613a:	4233      	tst	r3, r6
 800613c:	bf14      	ite	ne
 800613e:	2301      	movne	r3, #1
 8006140:	2300      	moveq	r3, #0
 8006142:	42ab      	cmp	r3, r5
 8006144:	d101      	bne.n	800614a <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8006146:	2000      	movs	r0, #0
 8006148:	e012      	b.n	8006170 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 800614a:	f1b8 3fff 	cmp.w	r8, #4294967295
 800614e:	d0f3      	beq.n	8006138 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006150:	f7fd fffe 	bl	8004150 <HAL_GetTick>
 8006154:	1bc0      	subs	r0, r0, r7
 8006156:	4540      	cmp	r0, r8
 8006158:	d802      	bhi.n	8006160 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 800615a:	f1b8 0f00 	cmp.w	r8, #0
 800615e:	d1ea      	bne.n	8006136 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8006160:	2304      	movs	r3, #4
 8006162:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8006166:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006168:	f043 0301 	orr.w	r3, r3, #1
 800616c:	6463      	str	r3, [r4, #68]	; 0x44
 800616e:	2001      	movs	r0, #1
}
 8006170:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006174 <HAL_QSPI_Init>:
{
 8006174:	b530      	push	{r4, r5, lr}
 8006176:	b085      	sub	sp, #20
 8006178:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800617a:	f7fd ffe9 	bl	8004150 <HAL_GetTick>
 800617e:	4603      	mov	r3, r0
  if(hqspi == NULL)
 8006180:	2c00      	cmp	r4, #0
 8006182:	d047      	beq.n	8006214 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8006184:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006188:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 800618c:	b94a      	cbnz	r2, 80061a2 <HAL_QSPI_Init+0x2e>
 800618e:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 8006190:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 8006194:	4620      	mov	r0, r4
 8006196:	f7fb fd49 	bl	8001c2c <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 800619a:	f241 3288 	movw	r2, #5000	; 0x1388
 800619e:	9b03      	ldr	r3, [sp, #12]
 80061a0:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 80061a2:	6820      	ldr	r0, [r4, #0]
 80061a4:	68a1      	ldr	r1, [r4, #8]
 80061a6:	6802      	ldr	r2, [r0, #0]
 80061a8:	3901      	subs	r1, #1
 80061aa:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 80061ae:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80061b2:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80061b4:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80061b6:	9200      	str	r2, [sp, #0]
 80061b8:	2120      	movs	r1, #32
 80061ba:	2200      	movs	r2, #0
 80061bc:	4620      	mov	r0, r4
 80061be:	f7ff ffb2 	bl	8006126 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 80061c2:	bb10      	cbnz	r0, 800620a <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 80061c4:	69e5      	ldr	r5, [r4, #28]
 80061c6:	68e3      	ldr	r3, [r4, #12]
 80061c8:	6822      	ldr	r2, [r4, #0]
 80061ca:	432b      	orrs	r3, r5
 80061cc:	6a25      	ldr	r5, [r4, #32]
 80061ce:	6811      	ldr	r1, [r2, #0]
 80061d0:	432b      	orrs	r3, r5
 80061d2:	6865      	ldr	r5, [r4, #4]
 80061d4:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 80061d8:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 80061dc:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 80061e0:	430b      	orrs	r3, r1
 80061e2:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 80061e4:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 80061e8:	430b      	orrs	r3, r1
 80061ea:	6921      	ldr	r1, [r4, #16]
 80061ec:	6855      	ldr	r5, [r2, #4]
 80061ee:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80061f2:	4909      	ldr	r1, [pc, #36]	; (8006218 <HAL_QSPI_Init+0xa4>)
 80061f4:	4029      	ands	r1, r5
 80061f6:	430b      	orrs	r3, r1
 80061f8:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 80061fa:	6813      	ldr	r3, [r2, #0]
 80061fc:	f043 0301 	orr.w	r3, r3, #1
 8006200:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8006202:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006204:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 8006206:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800620a:	2300      	movs	r3, #0
 800620c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006210:	b005      	add	sp, #20
 8006212:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8006214:	2001      	movs	r0, #1
 8006216:	e7fb      	b.n	8006210 <HAL_QSPI_Init+0x9c>
 8006218:	ffe0f8fe 	.word	0xffe0f8fe

0800621c <HAL_QSPI_DeInit>:
{
 800621c:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 800621e:	4604      	mov	r4, r0
 8006220:	b168      	cbz	r0, 800623e <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 8006222:	6802      	ldr	r2, [r0, #0]
 8006224:	6813      	ldr	r3, [r2, #0]
 8006226:	f023 0301 	bic.w	r3, r3, #1
 800622a:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 800622c:	f7fb fd58 	bl	8001ce0 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006230:	2000      	movs	r0, #0
 8006232:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 8006234:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006238:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 800623c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800623e:	2001      	movs	r0, #1
 8006240:	e7fc      	b.n	800623c <HAL_QSPI_DeInit+0x20>

08006242 <HAL_QSPI_Command>:
{
 8006242:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006246:	4604      	mov	r4, r0
 8006248:	b085      	sub	sp, #20
 800624a:	4617      	mov	r7, r2
 800624c:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 800624e:	f7fd ff7f 	bl	8004150 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006252:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8006256:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8006258:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800625a:	d034      	beq.n	80062c6 <HAL_QSPI_Command+0x84>
 800625c:	2201      	movs	r2, #1
 800625e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006262:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006266:	2a01      	cmp	r2, #1
 8006268:	fa5f f882 	uxtb.w	r8, r2
 800626c:	f04f 0602 	mov.w	r6, #2
 8006270:	d127      	bne.n	80062c2 <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006272:	2200      	movs	r2, #0
 8006274:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006276:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8006278:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800627c:	9700      	str	r7, [sp, #0]
 800627e:	2120      	movs	r1, #32
 8006280:	4620      	mov	r0, r4
 8006282:	f7ff ff50 	bl	8006126 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8006286:	4605      	mov	r5, r0
 8006288:	b9a0      	cbnz	r0, 80062b4 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800628a:	4602      	mov	r2, r0
 800628c:	4649      	mov	r1, r9
 800628e:	4620      	mov	r0, r4
 8006290:	f7ff fe9c 	bl	8005fcc <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8006294:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 8006298:	9b03      	ldr	r3, [sp, #12]
 800629a:	b94a      	cbnz	r2, 80062b0 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800629c:	9700      	str	r7, [sp, #0]
 800629e:	4642      	mov	r2, r8
 80062a0:	4631      	mov	r1, r6
 80062a2:	4620      	mov	r0, r4
 80062a4:	f7ff ff3f 	bl	8006126 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80062a8:	4605      	mov	r5, r0
 80062aa:	b918      	cbnz	r0, 80062b4 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80062ac:	6823      	ldr	r3, [r4, #0]
 80062ae:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 80062b0:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80062b4:	2300      	movs	r3, #0
 80062b6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80062ba:	4628      	mov	r0, r5
 80062bc:	b005      	add	sp, #20
 80062be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 80062c2:	4635      	mov	r5, r6
 80062c4:	e7f6      	b.n	80062b4 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 80062c6:	2502      	movs	r5, #2
 80062c8:	e7f7      	b.n	80062ba <HAL_QSPI_Command+0x78>

080062ca <HAL_QSPI_AutoPolling>:
{
 80062ca:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80062ce:	4604      	mov	r4, r0
 80062d0:	4615      	mov	r5, r2
 80062d2:	461e      	mov	r6, r3
 80062d4:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 80062d6:	f7fd ff3b 	bl	8004150 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80062da:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80062de:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80062e0:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80062e2:	d040      	beq.n	8006366 <HAL_QSPI_AutoPolling+0x9c>
 80062e4:	2201      	movs	r2, #1
 80062e6:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80062ea:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80062ee:	2a01      	cmp	r2, #1
 80062f0:	b2d7      	uxtb	r7, r2
 80062f2:	d136      	bne.n	8006362 <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 80062f4:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80062f6:	2200      	movs	r2, #0
 80062f8:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80062fa:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 80062fc:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006300:	9600      	str	r6, [sp, #0]
 8006302:	2120      	movs	r1, #32
 8006304:	4620      	mov	r0, r4
 8006306:	f7ff ff0e 	bl	8006126 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800630a:	bb20      	cbnz	r0, 8006356 <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 800630c:	6821      	ldr	r1, [r4, #0]
 800630e:	682a      	ldr	r2, [r5, #0]
 8006310:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8006312:	686a      	ldr	r2, [r5, #4]
 8006314:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8006316:	68aa      	ldr	r2, [r5, #8]
 8006318:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800631a:	680a      	ldr	r2, [r1, #0]
 800631c:	6928      	ldr	r0, [r5, #16]
 800631e:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8006322:	4302      	orrs	r2, r0
 8006324:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8006328:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 800632a:	68ea      	ldr	r2, [r5, #12]
 800632c:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8006330:	4641      	mov	r1, r8
 8006332:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8006336:	4620      	mov	r0, r4
 8006338:	f7ff fe48 	bl	8005fcc <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 800633c:	9b03      	ldr	r3, [sp, #12]
 800633e:	9600      	str	r6, [sp, #0]
 8006340:	463a      	mov	r2, r7
 8006342:	2108      	movs	r1, #8
 8006344:	4620      	mov	r0, r4
 8006346:	f7ff feee 	bl	8006126 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800634a:	b920      	cbnz	r0, 8006356 <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 800634c:	6823      	ldr	r3, [r4, #0]
 800634e:	2208      	movs	r2, #8
 8006350:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8006352:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006356:	2300      	movs	r3, #0
 8006358:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800635c:	b004      	add	sp, #16
 800635e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 8006362:	2002      	movs	r0, #2
 8006364:	e7f7      	b.n	8006356 <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 8006366:	2002      	movs	r0, #2
 8006368:	e7f8      	b.n	800635c <HAL_QSPI_AutoPolling+0x92>

0800636a <HAL_QSPI_MemoryMapped>:
{
 800636a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800636c:	4604      	mov	r4, r0
 800636e:	4616      	mov	r6, r2
 8006370:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8006372:	f7fd feed 	bl	8004150 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006376:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800637a:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800637c:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800637e:	d032      	beq.n	80063e6 <HAL_QSPI_MemoryMapped+0x7c>
 8006380:	2201      	movs	r2, #1
 8006382:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006386:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800638a:	2a01      	cmp	r2, #1
 800638c:	d129      	bne.n	80063e2 <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800638e:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8006390:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006392:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8006394:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006398:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800639a:	9100      	str	r1, [sp, #0]
 800639c:	4620      	mov	r0, r4
 800639e:	2120      	movs	r1, #32
 80063a0:	f7ff fec1 	bl	8006126 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80063a4:	4605      	mov	r5, r0
 80063a6:	b9b0      	cbnz	r0, 80063d6 <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80063a8:	6823      	ldr	r3, [r4, #0]
 80063aa:	6872      	ldr	r2, [r6, #4]
 80063ac:	6818      	ldr	r0, [r3, #0]
 80063ae:	f020 0008 	bic.w	r0, r0, #8
 80063b2:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80063b4:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80063b6:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80063b8:	d107      	bne.n	80063ca <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 80063ba:	6832      	ldr	r2, [r6, #0]
 80063bc:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 80063be:	2210      	movs	r2, #16
 80063c0:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 80063c2:	681a      	ldr	r2, [r3, #0]
 80063c4:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80063c8:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 80063ca:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 80063ce:	4639      	mov	r1, r7
 80063d0:	4620      	mov	r0, r4
 80063d2:	f7ff fdfb 	bl	8005fcc <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 80063d6:	2300      	movs	r3, #0
 80063d8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80063dc:	4628      	mov	r0, r5
 80063de:	b003      	add	sp, #12
 80063e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 80063e2:	2502      	movs	r5, #2
 80063e4:	e7f7      	b.n	80063d6 <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 80063e6:	2502      	movs	r5, #2
 80063e8:	e7f8      	b.n	80063dc <HAL_QSPI_MemoryMapped+0x72>

080063ea <HAL_QSPI_Abort>:
{
 80063ea:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80063ec:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80063ee:	f7fd feaf 	bl	8004150 <HAL_GetTick>
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 80063f2:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
  uint32_t tickstart = HAL_GetTick();
 80063f6:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 80063f8:	f012 0002 	ands.w	r0, r2, #2
 80063fc:	d036      	beq.n	800646c <HAL_QSPI_Abort+0x82>
    __HAL_UNLOCK(hqspi);
 80063fe:	2200      	movs	r2, #0
 8006400:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8006404:	6822      	ldr	r2, [r4, #0]
 8006406:	6811      	ldr	r1, [r2, #0]
 8006408:	0749      	lsls	r1, r1, #29
 800640a:	d50d      	bpl.n	8006428 <HAL_QSPI_Abort+0x3e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800640c:	6811      	ldr	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800640e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8006410:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8006412:	f021 0104 	bic.w	r1, r1, #4
 8006416:	6011      	str	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8006418:	f7fd ffea 	bl	80043f0 <HAL_DMA_Abort>
      if(status != HAL_OK)
 800641c:	9b03      	ldr	r3, [sp, #12]
 800641e:	b118      	cbz	r0, 8006428 <HAL_QSPI_Abort+0x3e>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 8006420:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8006422:	f042 0204 	orr.w	r2, r2, #4
 8006426:	6462      	str	r2, [r4, #68]	; 0x44
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8006428:	6821      	ldr	r1, [r4, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800642a:	9303      	str	r3, [sp, #12]
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800642c:	680a      	ldr	r2, [r1, #0]
 800642e:	f042 0202 	orr.w	r2, r2, #2
 8006432:	600a      	str	r2, [r1, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8006434:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006436:	9200      	str	r2, [sp, #0]
 8006438:	2102      	movs	r1, #2
 800643a:	2201      	movs	r2, #1
 800643c:	4620      	mov	r0, r4
 800643e:	f7ff fe72 	bl	8006126 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8006442:	9b03      	ldr	r3, [sp, #12]
 8006444:	b990      	cbnz	r0, 800646c <HAL_QSPI_Abort+0x82>
      __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006446:	6822      	ldr	r2, [r4, #0]
 8006448:	2102      	movs	r1, #2
 800644a:	60d1      	str	r1, [r2, #12]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800644c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800644e:	9200      	str	r2, [sp, #0]
 8006450:	2120      	movs	r1, #32
 8006452:	4602      	mov	r2, r0
 8006454:	4620      	mov	r0, r4
 8006456:	f7ff fe66 	bl	8006126 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800645a:	b938      	cbnz	r0, 800646c <HAL_QSPI_Abort+0x82>
      CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 800645c:	6822      	ldr	r2, [r4, #0]
 800645e:	6953      	ldr	r3, [r2, #20]
 8006460:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8006464:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 8006466:	2301      	movs	r3, #1
 8006468:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 800646c:	b004      	add	sp, #16
 800646e:	bd10      	pop	{r4, pc}

08006470 <HAL_QSPI_Transmit>:
{
 8006470:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006472:	4604      	mov	r4, r0
 8006474:	b085      	sub	sp, #20
 8006476:	4616      	mov	r6, r2
 8006478:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800647a:	f7fd fe69 	bl	8004150 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800647e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8006482:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 8006484:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8006486:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8006488:	d04c      	beq.n	8006524 <HAL_QSPI_Transmit+0xb4>
 800648a:	2201      	movs	r2, #1
 800648c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006490:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006494:	2a01      	cmp	r2, #1
 8006496:	b2d0      	uxtb	r0, r2
 8006498:	d142      	bne.n	8006520 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800649a:	2200      	movs	r2, #0
 800649c:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800649e:	2f00      	cmp	r7, #0
 80064a0:	d039      	beq.n	8006516 <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 80064a2:	2212      	movs	r2, #18
 80064a4:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 80064a8:	692a      	ldr	r2, [r5, #16]
 80064aa:	3201      	adds	r2, #1
 80064ac:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80064ae:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 80064b0:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80064b2:	3201      	adds	r2, #1
 80064b4:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80064b6:	696a      	ldr	r2, [r5, #20]
 80064b8:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 80064bc:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 80064be:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80064c0:	b9a2      	cbnz	r2, 80064ec <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80064c2:	9600      	str	r6, [sp, #0]
 80064c4:	2201      	movs	r2, #1
 80064c6:	2102      	movs	r1, #2
 80064c8:	4620      	mov	r0, r4
 80064ca:	f7ff fe2c 	bl	8006126 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80064ce:	b928      	cbnz	r0, 80064dc <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80064d0:	6823      	ldr	r3, [r4, #0]
 80064d2:	2202      	movs	r2, #2
 80064d4:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 80064d6:	4620      	mov	r0, r4
 80064d8:	f7ff ff87 	bl	80063ea <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 80064dc:	2301      	movs	r3, #1
 80064de:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80064e2:	2300      	movs	r3, #0
 80064e4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80064e8:	b005      	add	sp, #20
 80064ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 80064ec:	9600      	str	r6, [sp, #0]
 80064ee:	2201      	movs	r2, #1
 80064f0:	2104      	movs	r1, #4
 80064f2:	4620      	mov	r0, r4
 80064f4:	9303      	str	r3, [sp, #12]
 80064f6:	f7ff fe16 	bl	8006126 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 80064fa:	2800      	cmp	r0, #0
 80064fc:	d1ee      	bne.n	80064dc <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 80064fe:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8006500:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8006502:	7812      	ldrb	r2, [r2, #0]
 8006504:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 8006508:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800650a:	3201      	adds	r2, #1
 800650c:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800650e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006510:	3a01      	subs	r2, #1
 8006512:	62e2      	str	r2, [r4, #44]	; 0x2c
 8006514:	e7d3      	b.n	80064be <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8006516:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006518:	f043 0308 	orr.w	r3, r3, #8
 800651c:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800651e:	e7e0      	b.n	80064e2 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8006520:	2002      	movs	r0, #2
 8006522:	e7de      	b.n	80064e2 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 8006524:	2002      	movs	r0, #2
 8006526:	e7df      	b.n	80064e8 <HAL_QSPI_Transmit+0x78>

08006528 <HAL_QSPI_Receive>:
{
 8006528:	b5f0      	push	{r4, r5, r6, r7, lr}
 800652a:	4604      	mov	r4, r0
 800652c:	b085      	sub	sp, #20
 800652e:	4616      	mov	r6, r2
 8006530:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8006532:	f7fd fe0d 	bl	8004150 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8006536:	6825      	ldr	r5, [r4, #0]
 8006538:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 800653c:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8006540:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8006542:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8006544:	d050      	beq.n	80065e8 <HAL_QSPI_Receive+0xc0>
 8006546:	2201      	movs	r2, #1
 8006548:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800654c:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006550:	2a01      	cmp	r2, #1
 8006552:	b2d0      	uxtb	r0, r2
 8006554:	d146      	bne.n	80065e4 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006556:	2200      	movs	r2, #0
 8006558:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800655a:	2f00      	cmp	r7, #0
 800655c:	d03d      	beq.n	80065da <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 800655e:	2222      	movs	r2, #34	; 0x22
 8006560:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8006564:	692a      	ldr	r2, [r5, #16]
 8006566:	3201      	adds	r2, #1
 8006568:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800656a:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 800656c:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800656e:	3201      	adds	r2, #1
 8006570:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8006572:	6969      	ldr	r1, [r5, #20]
 8006574:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8006578:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 800657c:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 800657e:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8006582:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006584:	b9a2      	cbnz	r2, 80065b0 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006586:	9600      	str	r6, [sp, #0]
 8006588:	2201      	movs	r2, #1
 800658a:	2102      	movs	r1, #2
 800658c:	4620      	mov	r0, r4
 800658e:	f7ff fdca 	bl	8006126 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 8006592:	b928      	cbnz	r0, 80065a0 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006594:	6823      	ldr	r3, [r4, #0]
 8006596:	2202      	movs	r2, #2
 8006598:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800659a:	4620      	mov	r0, r4
 800659c:	f7ff ff25 	bl	80063ea <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 80065a0:	2301      	movs	r3, #1
 80065a2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80065a6:	2300      	movs	r3, #0
 80065a8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80065ac:	b005      	add	sp, #20
 80065ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 80065b0:	9600      	str	r6, [sp, #0]
 80065b2:	2201      	movs	r2, #1
 80065b4:	2106      	movs	r1, #6
 80065b6:	4620      	mov	r0, r4
 80065b8:	9303      	str	r3, [sp, #12]
 80065ba:	f7ff fdb4 	bl	8006126 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 80065be:	2800      	cmp	r0, #0
 80065c0:	d1ee      	bne.n	80065a0 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 80065c2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80065c4:	f895 1020 	ldrb.w	r1, [r5, #32]
 80065c8:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 80065ca:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 80065cc:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 80065ce:	3201      	adds	r2, #1
 80065d0:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 80065d2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80065d4:	3a01      	subs	r2, #1
 80065d6:	63a2      	str	r2, [r4, #56]	; 0x38
 80065d8:	e7d3      	b.n	8006582 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 80065da:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80065dc:	f043 0308 	orr.w	r3, r3, #8
 80065e0:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 80065e2:	e7e0      	b.n	80065a6 <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 80065e4:	2002      	movs	r0, #2
 80065e6:	e7de      	b.n	80065a6 <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 80065e8:	2002      	movs	r0, #2
 80065ea:	e7df      	b.n	80065ac <HAL_QSPI_Receive+0x84>

080065ec <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80065ec:	4913      	ldr	r1, [pc, #76]	; (800663c <HAL_RCC_GetSysClockFreq+0x50>)
{
 80065ee:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80065f0:	688b      	ldr	r3, [r1, #8]
 80065f2:	f003 030c 	and.w	r3, r3, #12
 80065f6:	2b04      	cmp	r3, #4
 80065f8:	d01c      	beq.n	8006634 <HAL_RCC_GetSysClockFreq+0x48>
 80065fa:	2b08      	cmp	r3, #8
 80065fc:	d11c      	bne.n	8006638 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80065fe:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006600:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006602:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006604:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006608:	bf14      	ite	ne
 800660a:	480d      	ldrne	r0, [pc, #52]	; (8006640 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800660c:	480d      	ldreq	r0, [pc, #52]	; (8006644 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800660e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8006612:	bf18      	it	ne
 8006614:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006616:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800661a:	fba1 0100 	umull	r0, r1, r1, r0
 800661e:	f7f9 fe3f 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8006622:	4b06      	ldr	r3, [pc, #24]	; (800663c <HAL_RCC_GetSysClockFreq+0x50>)
 8006624:	685b      	ldr	r3, [r3, #4]
 8006626:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800662a:	3301      	adds	r3, #1
 800662c:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800662e:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8006632:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006634:	4802      	ldr	r0, [pc, #8]	; (8006640 <HAL_RCC_GetSysClockFreq+0x54>)
 8006636:	e7fc      	b.n	8006632 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8006638:	4802      	ldr	r0, [pc, #8]	; (8006644 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800663a:	e7fa      	b.n	8006632 <HAL_RCC_GetSysClockFreq+0x46>
 800663c:	40023800 	.word	0x40023800
 8006640:	007a1200 	.word	0x007a1200
 8006644:	00f42400 	.word	0x00f42400

08006648 <HAL_RCC_ClockConfig>:
{
 8006648:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800664c:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800664e:	4604      	mov	r4, r0
 8006650:	b910      	cbnz	r0, 8006658 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8006652:	2001      	movs	r0, #1
}
 8006654:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8006658:	4b44      	ldr	r3, [pc, #272]	; (800676c <HAL_RCC_ClockConfig+0x124>)
 800665a:	681a      	ldr	r2, [r3, #0]
 800665c:	f002 020f 	and.w	r2, r2, #15
 8006660:	428a      	cmp	r2, r1
 8006662:	d328      	bcc.n	80066b6 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006664:	6822      	ldr	r2, [r4, #0]
 8006666:	0797      	lsls	r7, r2, #30
 8006668:	d42d      	bmi.n	80066c6 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800666a:	07d0      	lsls	r0, r2, #31
 800666c:	d441      	bmi.n	80066f2 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800666e:	4b3f      	ldr	r3, [pc, #252]	; (800676c <HAL_RCC_ClockConfig+0x124>)
 8006670:	681a      	ldr	r2, [r3, #0]
 8006672:	f002 020f 	and.w	r2, r2, #15
 8006676:	42aa      	cmp	r2, r5
 8006678:	d866      	bhi.n	8006748 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800667a:	6822      	ldr	r2, [r4, #0]
 800667c:	0751      	lsls	r1, r2, #29
 800667e:	d46c      	bmi.n	800675a <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006680:	0713      	lsls	r3, r2, #28
 8006682:	d507      	bpl.n	8006694 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006684:	4a3a      	ldr	r2, [pc, #232]	; (8006770 <HAL_RCC_ClockConfig+0x128>)
 8006686:	6921      	ldr	r1, [r4, #16]
 8006688:	6893      	ldr	r3, [r2, #8]
 800668a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800668e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006692:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8006694:	f7ff ffaa 	bl	80065ec <HAL_RCC_GetSysClockFreq>
 8006698:	4b35      	ldr	r3, [pc, #212]	; (8006770 <HAL_RCC_ClockConfig+0x128>)
 800669a:	4a36      	ldr	r2, [pc, #216]	; (8006774 <HAL_RCC_ClockConfig+0x12c>)
 800669c:	689b      	ldr	r3, [r3, #8]
 800669e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80066a2:	5cd3      	ldrb	r3, [r2, r3]
 80066a4:	40d8      	lsrs	r0, r3
 80066a6:	4b34      	ldr	r3, [pc, #208]	; (8006778 <HAL_RCC_ClockConfig+0x130>)
 80066a8:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 80066aa:	4b34      	ldr	r3, [pc, #208]	; (800677c <HAL_RCC_ClockConfig+0x134>)
 80066ac:	6818      	ldr	r0, [r3, #0]
 80066ae:	f7fb fbef 	bl	8001e90 <HAL_InitTick>
  return HAL_OK;
 80066b2:	2000      	movs	r0, #0
 80066b4:	e7ce      	b.n	8006654 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80066b6:	b2ca      	uxtb	r2, r1
 80066b8:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80066ba:	681b      	ldr	r3, [r3, #0]
 80066bc:	f003 030f 	and.w	r3, r3, #15
 80066c0:	428b      	cmp	r3, r1
 80066c2:	d1c6      	bne.n	8006652 <HAL_RCC_ClockConfig+0xa>
 80066c4:	e7ce      	b.n	8006664 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80066c6:	4b2a      	ldr	r3, [pc, #168]	; (8006770 <HAL_RCC_ClockConfig+0x128>)
 80066c8:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80066cc:	bf1e      	ittt	ne
 80066ce:	6899      	ldrne	r1, [r3, #8]
 80066d0:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 80066d4:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80066d6:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80066d8:	bf42      	ittt	mi
 80066da:	6899      	ldrmi	r1, [r3, #8]
 80066dc:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 80066e0:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80066e2:	4923      	ldr	r1, [pc, #140]	; (8006770 <HAL_RCC_ClockConfig+0x128>)
 80066e4:	68a0      	ldr	r0, [r4, #8]
 80066e6:	688b      	ldr	r3, [r1, #8]
 80066e8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80066ec:	4303      	orrs	r3, r0
 80066ee:	608b      	str	r3, [r1, #8]
 80066f0:	e7bb      	b.n	800666a <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80066f2:	6862      	ldr	r2, [r4, #4]
 80066f4:	4b1e      	ldr	r3, [pc, #120]	; (8006770 <HAL_RCC_ClockConfig+0x128>)
 80066f6:	2a01      	cmp	r2, #1
 80066f8:	d11c      	bne.n	8006734 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80066fa:	681b      	ldr	r3, [r3, #0]
 80066fc:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006700:	d0a7      	beq.n	8006652 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006702:	4e1b      	ldr	r6, [pc, #108]	; (8006770 <HAL_RCC_ClockConfig+0x128>)
 8006704:	68b3      	ldr	r3, [r6, #8]
 8006706:	f023 0303 	bic.w	r3, r3, #3
 800670a:	4313      	orrs	r3, r2
 800670c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800670e:	f7fd fd1f 	bl	8004150 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006712:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8006716:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006718:	68b3      	ldr	r3, [r6, #8]
 800671a:	6862      	ldr	r2, [r4, #4]
 800671c:	f003 030c 	and.w	r3, r3, #12
 8006720:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8006724:	d0a3      	beq.n	800666e <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006726:	f7fd fd13 	bl	8004150 <HAL_GetTick>
 800672a:	1bc0      	subs	r0, r0, r7
 800672c:	4540      	cmp	r0, r8
 800672e:	d9f3      	bls.n	8006718 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8006730:	2003      	movs	r0, #3
 8006732:	e78f      	b.n	8006654 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006734:	1e91      	subs	r1, r2, #2
 8006736:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006738:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800673a:	d802      	bhi.n	8006742 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800673c:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8006740:	e7de      	b.n	8006700 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006742:	f013 0f02 	tst.w	r3, #2
 8006746:	e7db      	b.n	8006700 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006748:	b2ea      	uxtb	r2, r5
 800674a:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800674c:	681b      	ldr	r3, [r3, #0]
 800674e:	f003 030f 	and.w	r3, r3, #15
 8006752:	42ab      	cmp	r3, r5
 8006754:	f47f af7d 	bne.w	8006652 <HAL_RCC_ClockConfig+0xa>
 8006758:	e78f      	b.n	800667a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800675a:	4905      	ldr	r1, [pc, #20]	; (8006770 <HAL_RCC_ClockConfig+0x128>)
 800675c:	68e0      	ldr	r0, [r4, #12]
 800675e:	688b      	ldr	r3, [r1, #8]
 8006760:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8006764:	4303      	orrs	r3, r0
 8006766:	608b      	str	r3, [r1, #8]
 8006768:	e78a      	b.n	8006680 <HAL_RCC_ClockConfig+0x38>
 800676a:	bf00      	nop
 800676c:	40023c00 	.word	0x40023c00
 8006770:	40023800 	.word	0x40023800
 8006774:	0801d865 	.word	0x0801d865
 8006778:	20000050 	.word	0x20000050
 800677c:	20000058 	.word	0x20000058

08006780 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006780:	4b04      	ldr	r3, [pc, #16]	; (8006794 <HAL_RCC_GetPCLK1Freq+0x14>)
 8006782:	4a05      	ldr	r2, [pc, #20]	; (8006798 <HAL_RCC_GetPCLK1Freq+0x18>)
 8006784:	689b      	ldr	r3, [r3, #8]
 8006786:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800678a:	5cd3      	ldrb	r3, [r2, r3]
 800678c:	4a03      	ldr	r2, [pc, #12]	; (800679c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800678e:	6810      	ldr	r0, [r2, #0]
}
 8006790:	40d8      	lsrs	r0, r3
 8006792:	4770      	bx	lr
 8006794:	40023800 	.word	0x40023800
 8006798:	0801d875 	.word	0x0801d875
 800679c:	20000050 	.word	0x20000050

080067a0 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80067a0:	230f      	movs	r3, #15
 80067a2:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80067a4:	4b0b      	ldr	r3, [pc, #44]	; (80067d4 <HAL_RCC_GetClockConfig+0x34>)
 80067a6:	689a      	ldr	r2, [r3, #8]
 80067a8:	f002 0203 	and.w	r2, r2, #3
 80067ac:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80067ae:	689a      	ldr	r2, [r3, #8]
 80067b0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80067b4:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80067b6:	689a      	ldr	r2, [r3, #8]
 80067b8:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 80067bc:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80067be:	689b      	ldr	r3, [r3, #8]
 80067c0:	08db      	lsrs	r3, r3, #3
 80067c2:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80067c6:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80067c8:	4b03      	ldr	r3, [pc, #12]	; (80067d8 <HAL_RCC_GetClockConfig+0x38>)
 80067ca:	681b      	ldr	r3, [r3, #0]
 80067cc:	f003 030f 	and.w	r3, r3, #15
 80067d0:	600b      	str	r3, [r1, #0]
}
 80067d2:	4770      	bx	lr
 80067d4:	40023800 	.word	0x40023800
 80067d8:	40023c00 	.word	0x40023c00

080067dc <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80067dc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 80067de:	6802      	ldr	r2, [r0, #0]
{
 80067e0:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 80067e2:	0610      	lsls	r0, r2, #24
 80067e4:	d508      	bpl.n	80067f8 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 80067e6:	49aa      	ldr	r1, [pc, #680]	; (8006a90 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80067e8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80067ea:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 80067ee:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 80067f2:	4303      	orrs	r3, r0
 80067f4:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 80067f8:	05d1      	lsls	r1, r2, #23
 80067fa:	d508      	bpl.n	800680e <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 80067fc:	49a4      	ldr	r1, [pc, #656]	; (8006a90 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80067fe:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8006800:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8006804:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006808:	4303      	orrs	r3, r0
 800680a:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800680e:	f012 0f43 	tst.w	r2, #67	; 0x43
 8006812:	d173      	bne.n	80068fc <HAL_RCCEx_PeriphCLKConfig+0x120>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8006814:	6823      	ldr	r3, [r4, #0]
 8006816:	f013 0f0c 	tst.w	r3, #12
 800681a:	f000 80c1 	beq.w	80069a0 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800681e:	4b9d      	ldr	r3, [pc, #628]	; (8006a94 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006820:	4d9b      	ldr	r5, [pc, #620]	; (8006a90 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_DISABLE();
 8006822:	2200      	movs	r2, #0
 8006824:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8006826:	f7fd fc93 	bl	8004150 <HAL_GetTick>
 800682a:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800682c:	682b      	ldr	r3, [r5, #0]
 800682e:	009b      	lsls	r3, r3, #2
 8006830:	f100 80fc 	bmi.w	8006a2c <HAL_RCCEx_PeriphCLKConfig+0x250>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8006834:	6821      	ldr	r1, [r4, #0]
 8006836:	074f      	lsls	r7, r1, #29
 8006838:	d51a      	bpl.n	8006870 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800683a:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800683e:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 8006842:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8006846:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800684a:	4313      	orrs	r3, r2
 800684c:	6922      	ldr	r2, [r4, #16]
 800684e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006852:	69a2      	ldr	r2, [r4, #24]
 8006854:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006858:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800685c:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8006860:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006862:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8006866:	3a01      	subs	r2, #1
 8006868:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800686c:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006870:	070e      	lsls	r6, r1, #28
 8006872:	d519      	bpl.n	80068a8 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8006874:	4a86      	ldr	r2, [pc, #536]	; (8006a90 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006876:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800687a:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 800687e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8006882:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 8006886:	4303      	orrs	r3, r0
 8006888:	6920      	ldr	r0, [r4, #16]
 800688a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800688e:	69e0      	ldr	r0, [r4, #28]
 8006890:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 8006894:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8006898:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800689c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800689e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80068a2:	4303      	orrs	r3, r0
 80068a4:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 80068a8:	060d      	lsls	r5, r1, #24
 80068aa:	d517      	bpl.n	80068dc <HAL_RCCEx_PeriphCLKConfig+0x100>
 80068ac:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80068ae:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80068b2:	d113      	bne.n	80068dc <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80068b4:	4976      	ldr	r1, [pc, #472]	; (8006a90 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80068b6:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80068ba:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 80068be:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 80068c2:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 80068c6:	4313      	orrs	r3, r2
 80068c8:	6922      	ldr	r2, [r4, #16]
 80068ca:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80068ce:	6962      	ldr	r2, [r4, #20]
 80068d0:	0852      	lsrs	r2, r2, #1
 80068d2:	3a01      	subs	r2, #1
 80068d4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80068d8:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80068dc:	4b6d      	ldr	r3, [pc, #436]	; (8006a94 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80068de:	4e6c      	ldr	r6, [pc, #432]	; (8006a90 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_ENABLE();
 80068e0:	2201      	movs	r2, #1
 80068e2:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80068e4:	f7fd fc34 	bl	8004150 <HAL_GetTick>
 80068e8:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80068ea:	6833      	ldr	r3, [r6, #0]
 80068ec:	0098      	lsls	r0, r3, #2
 80068ee:	d459      	bmi.n	80069a4 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80068f0:	f7fd fc2e 	bl	8004150 <HAL_GetTick>
 80068f4:	1b40      	subs	r0, r0, r5
 80068f6:	2802      	cmp	r0, #2
 80068f8:	d9f7      	bls.n	80068ea <HAL_RCCEx_PeriphCLKConfig+0x10e>
 80068fa:	e04e      	b.n	800699a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 80068fc:	4b65      	ldr	r3, [pc, #404]	; (8006a94 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80068fe:	4e64      	ldr	r6, [pc, #400]	; (8006a90 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_DISABLE();
 8006900:	2200      	movs	r2, #0
 8006902:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8006904:	f7fd fc24 	bl	8004150 <HAL_GetTick>
 8006908:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800690a:	6833      	ldr	r3, [r6, #0]
 800690c:	011b      	lsls	r3, r3, #4
 800690e:	d43f      	bmi.n	8006990 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006910:	6821      	ldr	r1, [r4, #0]
 8006912:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8006914:	bf41      	itttt	mi
 8006916:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800691a:	071b      	lslmi	r3, r3, #28
 800691c:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8006920:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006924:	078e      	lsls	r6, r1, #30
 8006926:	d515      	bpl.n	8006954 <HAL_RCCEx_PeriphCLKConfig+0x178>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006928:	4a59      	ldr	r2, [pc, #356]	; (8006a90 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800692a:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800692c:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006930:	6865      	ldr	r5, [r4, #4]
 8006932:	061b      	lsls	r3, r3, #24
 8006934:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8006938:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800693c:	4303      	orrs	r3, r0
 800693e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006942:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8006946:	6a23      	ldr	r3, [r4, #32]
 8006948:	f020 001f 	bic.w	r0, r0, #31
 800694c:	3b01      	subs	r3, #1
 800694e:	4303      	orrs	r3, r0
 8006950:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006954:	064d      	lsls	r5, r1, #25
 8006956:	d50a      	bpl.n	800696e <HAL_RCCEx_PeriphCLKConfig+0x192>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8006958:	68e3      	ldr	r3, [r4, #12]
 800695a:	6862      	ldr	r2, [r4, #4]
 800695c:	061b      	lsls	r3, r3, #24
 800695e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006962:	68a2      	ldr	r2, [r4, #8]
 8006964:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006968:	4a49      	ldr	r2, [pc, #292]	; (8006a90 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800696a:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800696e:	4b49      	ldr	r3, [pc, #292]	; (8006a94 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006970:	4e47      	ldr	r6, [pc, #284]	; (8006a90 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_ENABLE();
 8006972:	2201      	movs	r2, #1
 8006974:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8006976:	f7fd fbeb 	bl	8004150 <HAL_GetTick>
 800697a:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800697c:	6833      	ldr	r3, [r6, #0]
 800697e:	0118      	lsls	r0, r3, #4
 8006980:	f53f af48 	bmi.w	8006814 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006984:	f7fd fbe4 	bl	8004150 <HAL_GetTick>
 8006988:	1b40      	subs	r0, r0, r5
 800698a:	2802      	cmp	r0, #2
 800698c:	d9f6      	bls.n	800697c <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 800698e:	e004      	b.n	800699a <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006990:	f7fd fbde 	bl	8004150 <HAL_GetTick>
 8006994:	1b40      	subs	r0, r0, r5
 8006996:	2802      	cmp	r0, #2
 8006998:	d9b7      	bls.n	800690a <HAL_RCCEx_PeriphCLKConfig+0x12e>
        return HAL_TIMEOUT;
 800699a:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 800699c:	b003      	add	sp, #12
 800699e:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 80069a0:	0619      	lsls	r1, r3, #24
 80069a2:	d43e      	bmi.n	8006a22 <HAL_RCCEx_PeriphCLKConfig+0x246>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80069a4:	6823      	ldr	r3, [r4, #0]
 80069a6:	069a      	lsls	r2, r3, #26
 80069a8:	d530      	bpl.n	8006a0c <HAL_RCCEx_PeriphCLKConfig+0x230>
    __HAL_RCC_PWR_CLK_ENABLE();
 80069aa:	2300      	movs	r3, #0
 80069ac:	9301      	str	r3, [sp, #4]
 80069ae:	4b38      	ldr	r3, [pc, #224]	; (8006a90 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    PWR->CR |= PWR_CR_DBP;
 80069b0:	4d39      	ldr	r5, [pc, #228]	; (8006a98 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80069b2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80069b4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80069b8:	641a      	str	r2, [r3, #64]	; 0x40
 80069ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80069bc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80069c0:	9301      	str	r3, [sp, #4]
 80069c2:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 80069c4:	682b      	ldr	r3, [r5, #0]
 80069c6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80069ca:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80069cc:	f7fd fbc0 	bl	8004150 <HAL_GetTick>
 80069d0:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 80069d2:	682b      	ldr	r3, [r5, #0]
 80069d4:	05d9      	lsls	r1, r3, #23
 80069d6:	d530      	bpl.n	8006a3a <HAL_RCCEx_PeriphCLKConfig+0x25e>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80069d8:	4d2d      	ldr	r5, [pc, #180]	; (8006a90 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80069da:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80069dc:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 80069e0:	d131      	bne.n	8006a46 <HAL_RCCEx_PeriphCLKConfig+0x26a>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80069e2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80069e4:	f403 7240 	and.w	r2, r3, #768	; 0x300
 80069e8:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 80069ec:	4a28      	ldr	r2, [pc, #160]	; (8006a90 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80069ee:	d14b      	bne.n	8006a88 <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 80069f0:	6891      	ldr	r1, [r2, #8]
 80069f2:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 80069f6:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80069fa:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 80069fe:	4301      	orrs	r1, r0
 8006a00:	6091      	str	r1, [r2, #8]
 8006a02:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8006a04:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006a08:	430b      	orrs	r3, r1
 8006a0a:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006a0c:	6820      	ldr	r0, [r4, #0]
 8006a0e:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006a12:	bf1f      	itttt	ne
 8006a14:	4b21      	ldrne	r3, [pc, #132]	; (8006a9c <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8006a16:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 8006a1a:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  return HAL_OK;
 8006a1e:	2000      	movne	r0, #0
 8006a20:	e7bc      	b.n	800699c <HAL_RCCEx_PeriphCLKConfig+0x1c0>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 8006a22:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006a24:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8006a28:	d1bc      	bne.n	80069a4 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 8006a2a:	e6f8      	b.n	800681e <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006a2c:	f7fd fb90 	bl	8004150 <HAL_GetTick>
 8006a30:	1b80      	subs	r0, r0, r6
 8006a32:	2802      	cmp	r0, #2
 8006a34:	f67f aefa 	bls.w	800682c <HAL_RCCEx_PeriphCLKConfig+0x50>
 8006a38:	e7af      	b.n	800699a <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8006a3a:	f7fd fb89 	bl	8004150 <HAL_GetTick>
 8006a3e:	1b80      	subs	r0, r0, r6
 8006a40:	2802      	cmp	r0, #2
 8006a42:	d9c6      	bls.n	80069d2 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8006a44:	e7a9      	b.n	800699a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006a46:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006a48:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8006a4c:	4293      	cmp	r3, r2
 8006a4e:	d0c8      	beq.n	80069e2 <HAL_RCCEx_PeriphCLKConfig+0x206>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006a50:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006a52:	4a10      	ldr	r2, [pc, #64]	; (8006a94 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
 8006a54:	2101      	movs	r1, #1
 8006a56:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006a5a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006a5e:	2100      	movs	r1, #0
 8006a60:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8006a64:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006a66:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006a68:	07da      	lsls	r2, r3, #31
 8006a6a:	d5ba      	bpl.n	80069e2 <HAL_RCCEx_PeriphCLKConfig+0x206>
        tickstart = HAL_GetTick();
 8006a6c:	f7fd fb70 	bl	8004150 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006a70:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8006a74:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006a76:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006a78:	079b      	lsls	r3, r3, #30
 8006a7a:	d4b2      	bmi.n	80069e2 <HAL_RCCEx_PeriphCLKConfig+0x206>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006a7c:	f7fd fb68 	bl	8004150 <HAL_GetTick>
 8006a80:	1b80      	subs	r0, r0, r6
 8006a82:	42b8      	cmp	r0, r7
 8006a84:	d9f7      	bls.n	8006a76 <HAL_RCCEx_PeriphCLKConfig+0x29a>
 8006a86:	e788      	b.n	800699a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006a88:	6891      	ldr	r1, [r2, #8]
 8006a8a:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006a8e:	e7b7      	b.n	8006a00 <HAL_RCCEx_PeriphCLKConfig+0x224>
 8006a90:	40023800 	.word	0x40023800
 8006a94:	42470000 	.word	0x42470000
 8006a98:	40007000 	.word	0x40007000
 8006a9c:	42471000 	.word	0x42471000

08006aa0 <HAL_RCC_OscConfig>:
  uint32_t tickstart = 0U;

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006aa0:	6803      	ldr	r3, [r0, #0]
{
 8006aa2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006aa6:	07dd      	lsls	r5, r3, #31
{
 8006aa8:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006aaa:	d410      	bmi.n	8006ace <HAL_RCC_OscConfig+0x2e>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006aac:	6823      	ldr	r3, [r4, #0]
 8006aae:	0798      	lsls	r0, r3, #30
 8006ab0:	d45e      	bmi.n	8006b70 <HAL_RCC_OscConfig+0xd0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006ab2:	6823      	ldr	r3, [r4, #0]
 8006ab4:	071a      	lsls	r2, r3, #28
 8006ab6:	f100 80a0 	bmi.w	8006bfa <HAL_RCC_OscConfig+0x15a>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006aba:	6823      	ldr	r3, [r4, #0]
 8006abc:	075b      	lsls	r3, r3, #29
 8006abe:	f100 80c0 	bmi.w	8006c42 <HAL_RCC_OscConfig+0x1a2>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006ac2:	69a2      	ldr	r2, [r4, #24]
 8006ac4:	2a00      	cmp	r2, #0
 8006ac6:	f040 8127 	bne.w	8006d18 <HAL_RCC_OscConfig+0x278>
    else
    {
      return HAL_ERROR;
    }
  }
  return HAL_OK;
 8006aca:	2000      	movs	r0, #0
 8006acc:	e015      	b.n	8006afa <HAL_RCC_OscConfig+0x5a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006ace:	4b8f      	ldr	r3, [pc, #572]	; (8006d0c <HAL_RCC_OscConfig+0x26c>)
 8006ad0:	689a      	ldr	r2, [r3, #8]
 8006ad2:	f002 020c 	and.w	r2, r2, #12
 8006ad6:	2a04      	cmp	r2, #4
 8006ad8:	d007      	beq.n	8006aea <HAL_RCC_OscConfig+0x4a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006ada:	689a      	ldr	r2, [r3, #8]
 8006adc:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006ae0:	2a08      	cmp	r2, #8
 8006ae2:	d10d      	bne.n	8006b00 <HAL_RCC_OscConfig+0x60>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006ae4:	685a      	ldr	r2, [r3, #4]
 8006ae6:	0251      	lsls	r1, r2, #9
 8006ae8:	d50a      	bpl.n	8006b00 <HAL_RCC_OscConfig+0x60>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006aea:	4b88      	ldr	r3, [pc, #544]	; (8006d0c <HAL_RCC_OscConfig+0x26c>)
 8006aec:	681b      	ldr	r3, [r3, #0]
 8006aee:	039a      	lsls	r2, r3, #14
 8006af0:	d5dc      	bpl.n	8006aac <HAL_RCC_OscConfig+0xc>
 8006af2:	6863      	ldr	r3, [r4, #4]
 8006af4:	2b00      	cmp	r3, #0
 8006af6:	d1d9      	bne.n	8006aac <HAL_RCC_OscConfig+0xc>
        return HAL_ERROR;
 8006af8:	2001      	movs	r0, #1
}
 8006afa:	b002      	add	sp, #8
 8006afc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006b00:	6862      	ldr	r2, [r4, #4]
 8006b02:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8006b06:	d111      	bne.n	8006b2c <HAL_RCC_OscConfig+0x8c>
 8006b08:	681a      	ldr	r2, [r3, #0]
 8006b0a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8006b0e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006b10:	f7fd fb1e 	bl	8004150 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006b14:	4e7d      	ldr	r6, [pc, #500]	; (8006d0c <HAL_RCC_OscConfig+0x26c>)
        tickstart = HAL_GetTick();
 8006b16:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006b18:	6833      	ldr	r3, [r6, #0]
 8006b1a:	039b      	lsls	r3, r3, #14
 8006b1c:	d4c6      	bmi.n	8006aac <HAL_RCC_OscConfig+0xc>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006b1e:	f7fd fb17 	bl	8004150 <HAL_GetTick>
 8006b22:	1b40      	subs	r0, r0, r5
 8006b24:	2864      	cmp	r0, #100	; 0x64
 8006b26:	d9f7      	bls.n	8006b18 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8006b28:	2003      	movs	r0, #3
 8006b2a:	e7e6      	b.n	8006afa <HAL_RCC_OscConfig+0x5a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006b2c:	4d77      	ldr	r5, [pc, #476]	; (8006d0c <HAL_RCC_OscConfig+0x26c>)
 8006b2e:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8006b32:	682b      	ldr	r3, [r5, #0]
 8006b34:	d107      	bne.n	8006b46 <HAL_RCC_OscConfig+0xa6>
 8006b36:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006b3a:	602b      	str	r3, [r5, #0]
 8006b3c:	682b      	ldr	r3, [r5, #0]
 8006b3e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006b42:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006b44:	e7e4      	b.n	8006b10 <HAL_RCC_OscConfig+0x70>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006b46:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006b4a:	602b      	str	r3, [r5, #0]
 8006b4c:	682b      	ldr	r3, [r5, #0]
 8006b4e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006b52:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006b54:	2a00      	cmp	r2, #0
 8006b56:	d1db      	bne.n	8006b10 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8006b58:	f7fd fafa 	bl	8004150 <HAL_GetTick>
 8006b5c:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8006b5e:	682b      	ldr	r3, [r5, #0]
 8006b60:	039f      	lsls	r7, r3, #14
 8006b62:	d5a3      	bpl.n	8006aac <HAL_RCC_OscConfig+0xc>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006b64:	f7fd faf4 	bl	8004150 <HAL_GetTick>
 8006b68:	1b80      	subs	r0, r0, r6
 8006b6a:	2864      	cmp	r0, #100	; 0x64
 8006b6c:	d9f7      	bls.n	8006b5e <HAL_RCC_OscConfig+0xbe>
 8006b6e:	e7db      	b.n	8006b28 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8006b70:	4b66      	ldr	r3, [pc, #408]	; (8006d0c <HAL_RCC_OscConfig+0x26c>)
 8006b72:	689a      	ldr	r2, [r3, #8]
 8006b74:	f012 0f0c 	tst.w	r2, #12
 8006b78:	d007      	beq.n	8006b8a <HAL_RCC_OscConfig+0xea>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006b7a:	689a      	ldr	r2, [r3, #8]
 8006b7c:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8006b80:	2a08      	cmp	r2, #8
 8006b82:	d111      	bne.n	8006ba8 <HAL_RCC_OscConfig+0x108>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006b84:	685b      	ldr	r3, [r3, #4]
 8006b86:	025e      	lsls	r6, r3, #9
 8006b88:	d40e      	bmi.n	8006ba8 <HAL_RCC_OscConfig+0x108>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006b8a:	4a60      	ldr	r2, [pc, #384]	; (8006d0c <HAL_RCC_OscConfig+0x26c>)
 8006b8c:	6813      	ldr	r3, [r2, #0]
 8006b8e:	079d      	lsls	r5, r3, #30
 8006b90:	d502      	bpl.n	8006b98 <HAL_RCC_OscConfig+0xf8>
 8006b92:	68e3      	ldr	r3, [r4, #12]
 8006b94:	2b01      	cmp	r3, #1
 8006b96:	d1af      	bne.n	8006af8 <HAL_RCC_OscConfig+0x58>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006b98:	6813      	ldr	r3, [r2, #0]
 8006b9a:	6921      	ldr	r1, [r4, #16]
 8006b9c:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006ba0:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006ba4:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006ba6:	e784      	b.n	8006ab2 <HAL_RCC_OscConfig+0x12>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8006ba8:	68e2      	ldr	r2, [r4, #12]
 8006baa:	4b59      	ldr	r3, [pc, #356]	; (8006d10 <HAL_RCC_OscConfig+0x270>)
 8006bac:	b1b2      	cbz	r2, 8006bdc <HAL_RCC_OscConfig+0x13c>
        __HAL_RCC_HSI_ENABLE();
 8006bae:	2201      	movs	r2, #1
 8006bb0:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006bb2:	f7fd facd 	bl	8004150 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006bb6:	4d55      	ldr	r5, [pc, #340]	; (8006d0c <HAL_RCC_OscConfig+0x26c>)
        tickstart = HAL_GetTick();
 8006bb8:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006bba:	682b      	ldr	r3, [r5, #0]
 8006bbc:	0798      	lsls	r0, r3, #30
 8006bbe:	d507      	bpl.n	8006bd0 <HAL_RCC_OscConfig+0x130>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006bc0:	682b      	ldr	r3, [r5, #0]
 8006bc2:	6922      	ldr	r2, [r4, #16]
 8006bc4:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006bc8:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006bcc:	602b      	str	r3, [r5, #0]
 8006bce:	e770      	b.n	8006ab2 <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006bd0:	f7fd fabe 	bl	8004150 <HAL_GetTick>
 8006bd4:	1b80      	subs	r0, r0, r6
 8006bd6:	2802      	cmp	r0, #2
 8006bd8:	d9ef      	bls.n	8006bba <HAL_RCC_OscConfig+0x11a>
 8006bda:	e7a5      	b.n	8006b28 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8006bdc:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006bde:	f7fd fab7 	bl	8004150 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006be2:	4e4a      	ldr	r6, [pc, #296]	; (8006d0c <HAL_RCC_OscConfig+0x26c>)
        tickstart = HAL_GetTick();
 8006be4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006be6:	6833      	ldr	r3, [r6, #0]
 8006be8:	0799      	lsls	r1, r3, #30
 8006bea:	f57f af62 	bpl.w	8006ab2 <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006bee:	f7fd faaf 	bl	8004150 <HAL_GetTick>
 8006bf2:	1b40      	subs	r0, r0, r5
 8006bf4:	2802      	cmp	r0, #2
 8006bf6:	d9f6      	bls.n	8006be6 <HAL_RCC_OscConfig+0x146>
 8006bf8:	e796      	b.n	8006b28 <HAL_RCC_OscConfig+0x88>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8006bfa:	6962      	ldr	r2, [r4, #20]
 8006bfc:	4b44      	ldr	r3, [pc, #272]	; (8006d10 <HAL_RCC_OscConfig+0x270>)
 8006bfe:	b182      	cbz	r2, 8006c22 <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_ENABLE();
 8006c00:	2201      	movs	r2, #1
 8006c02:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8006c06:	f7fd faa3 	bl	8004150 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006c0a:	4e40      	ldr	r6, [pc, #256]	; (8006d0c <HAL_RCC_OscConfig+0x26c>)
      tickstart = HAL_GetTick();
 8006c0c:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006c0e:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006c10:	079f      	lsls	r7, r3, #30
 8006c12:	f53f af52 	bmi.w	8006aba <HAL_RCC_OscConfig+0x1a>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006c16:	f7fd fa9b 	bl	8004150 <HAL_GetTick>
 8006c1a:	1b40      	subs	r0, r0, r5
 8006c1c:	2802      	cmp	r0, #2
 8006c1e:	d9f6      	bls.n	8006c0e <HAL_RCC_OscConfig+0x16e>
 8006c20:	e782      	b.n	8006b28 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 8006c22:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8006c26:	f7fd fa93 	bl	8004150 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006c2a:	4e38      	ldr	r6, [pc, #224]	; (8006d0c <HAL_RCC_OscConfig+0x26c>)
      tickstart = HAL_GetTick();
 8006c2c:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006c2e:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006c30:	0798      	lsls	r0, r3, #30
 8006c32:	f57f af42 	bpl.w	8006aba <HAL_RCC_OscConfig+0x1a>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006c36:	f7fd fa8b 	bl	8004150 <HAL_GetTick>
 8006c3a:	1b40      	subs	r0, r0, r5
 8006c3c:	2802      	cmp	r0, #2
 8006c3e:	d9f6      	bls.n	8006c2e <HAL_RCC_OscConfig+0x18e>
 8006c40:	e772      	b.n	8006b28 <HAL_RCC_OscConfig+0x88>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006c42:	4b32      	ldr	r3, [pc, #200]	; (8006d0c <HAL_RCC_OscConfig+0x26c>)
 8006c44:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006c46:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8006c4a:	d128      	bne.n	8006c9e <HAL_RCC_OscConfig+0x1fe>
      __HAL_RCC_PWR_CLK_ENABLE();
 8006c4c:	9201      	str	r2, [sp, #4]
 8006c4e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006c50:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006c54:	641a      	str	r2, [r3, #64]	; 0x40
 8006c56:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c58:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006c5c:	9301      	str	r3, [sp, #4]
 8006c5e:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8006c60:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006c62:	4d2c      	ldr	r5, [pc, #176]	; (8006d14 <HAL_RCC_OscConfig+0x274>)
 8006c64:	682b      	ldr	r3, [r5, #0]
 8006c66:	05d9      	lsls	r1, r3, #23
 8006c68:	d51b      	bpl.n	8006ca2 <HAL_RCC_OscConfig+0x202>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006c6a:	68a3      	ldr	r3, [r4, #8]
 8006c6c:	4d27      	ldr	r5, [pc, #156]	; (8006d0c <HAL_RCC_OscConfig+0x26c>)
 8006c6e:	2b01      	cmp	r3, #1
 8006c70:	d127      	bne.n	8006cc2 <HAL_RCC_OscConfig+0x222>
 8006c72:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006c74:	f043 0301 	orr.w	r3, r3, #1
 8006c78:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8006c7a:	f7fd fa69 	bl	8004150 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006c7e:	4e23      	ldr	r6, [pc, #140]	; (8006d0c <HAL_RCC_OscConfig+0x26c>)
      tickstart = HAL_GetTick();
 8006c80:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006c82:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006c86:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8006c88:	079b      	lsls	r3, r3, #30
 8006c8a:	d539      	bpl.n	8006d00 <HAL_RCC_OscConfig+0x260>
    if(pwrclkchanged == SET)
 8006c8c:	2f00      	cmp	r7, #0
 8006c8e:	f43f af18 	beq.w	8006ac2 <HAL_RCC_OscConfig+0x22>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006c92:	4a1e      	ldr	r2, [pc, #120]	; (8006d0c <HAL_RCC_OscConfig+0x26c>)
 8006c94:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006c96:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006c9a:	6413      	str	r3, [r2, #64]	; 0x40
 8006c9c:	e711      	b.n	8006ac2 <HAL_RCC_OscConfig+0x22>
    FlagStatus       pwrclkchanged = RESET;
 8006c9e:	2700      	movs	r7, #0
 8006ca0:	e7df      	b.n	8006c62 <HAL_RCC_OscConfig+0x1c2>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8006ca2:	682b      	ldr	r3, [r5, #0]
 8006ca4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006ca8:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006caa:	f7fd fa51 	bl	8004150 <HAL_GetTick>
 8006cae:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006cb0:	682b      	ldr	r3, [r5, #0]
 8006cb2:	05da      	lsls	r2, r3, #23
 8006cb4:	d4d9      	bmi.n	8006c6a <HAL_RCC_OscConfig+0x1ca>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006cb6:	f7fd fa4b 	bl	8004150 <HAL_GetTick>
 8006cba:	1b80      	subs	r0, r0, r6
 8006cbc:	2802      	cmp	r0, #2
 8006cbe:	d9f7      	bls.n	8006cb0 <HAL_RCC_OscConfig+0x210>
 8006cc0:	e732      	b.n	8006b28 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006cc2:	2b05      	cmp	r3, #5
 8006cc4:	d104      	bne.n	8006cd0 <HAL_RCC_OscConfig+0x230>
 8006cc6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006cc8:	f043 0304 	orr.w	r3, r3, #4
 8006ccc:	672b      	str	r3, [r5, #112]	; 0x70
 8006cce:	e7d0      	b.n	8006c72 <HAL_RCC_OscConfig+0x1d2>
 8006cd0:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006cd2:	f022 0201 	bic.w	r2, r2, #1
 8006cd6:	672a      	str	r2, [r5, #112]	; 0x70
 8006cd8:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006cda:	f022 0204 	bic.w	r2, r2, #4
 8006cde:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8006ce0:	2b00      	cmp	r3, #0
 8006ce2:	d1ca      	bne.n	8006c7a <HAL_RCC_OscConfig+0x1da>
      tickstart = HAL_GetTick();
 8006ce4:	f7fd fa34 	bl	8004150 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006ce8:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8006cec:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006cee:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006cf0:	0798      	lsls	r0, r3, #30
 8006cf2:	d5cb      	bpl.n	8006c8c <HAL_RCC_OscConfig+0x1ec>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006cf4:	f7fd fa2c 	bl	8004150 <HAL_GetTick>
 8006cf8:	1b80      	subs	r0, r0, r6
 8006cfa:	4540      	cmp	r0, r8
 8006cfc:	d9f7      	bls.n	8006cee <HAL_RCC_OscConfig+0x24e>
 8006cfe:	e713      	b.n	8006b28 <HAL_RCC_OscConfig+0x88>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006d00:	f7fd fa26 	bl	8004150 <HAL_GetTick>
 8006d04:	1b40      	subs	r0, r0, r5
 8006d06:	4540      	cmp	r0, r8
 8006d08:	d9bd      	bls.n	8006c86 <HAL_RCC_OscConfig+0x1e6>
 8006d0a:	e70d      	b.n	8006b28 <HAL_RCC_OscConfig+0x88>
 8006d0c:	40023800 	.word	0x40023800
 8006d10:	42470000 	.word	0x42470000
 8006d14:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8006d18:	4d24      	ldr	r5, [pc, #144]	; (8006dac <HAL_RCC_OscConfig+0x30c>)
 8006d1a:	68ab      	ldr	r3, [r5, #8]
 8006d1c:	f003 030c 	and.w	r3, r3, #12
 8006d20:	2b08      	cmp	r3, #8
 8006d22:	f43f aee9 	beq.w	8006af8 <HAL_RCC_OscConfig+0x58>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006d26:	4b22      	ldr	r3, [pc, #136]	; (8006db0 <HAL_RCC_OscConfig+0x310>)
 8006d28:	2a02      	cmp	r2, #2
 8006d2a:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 8006d2e:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006d30:	d12e      	bne.n	8006d90 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 8006d32:	f7fd fa0d 	bl	8004150 <HAL_GetTick>
 8006d36:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006d38:	682b      	ldr	r3, [r5, #0]
 8006d3a:	0199      	lsls	r1, r3, #6
 8006d3c:	d422      	bmi.n	8006d84 <HAL_RCC_OscConfig+0x2e4>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8006d3e:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8006d42:	4313      	orrs	r3, r2
 8006d44:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006d46:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006d4a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006d4c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006d50:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006d52:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006d56:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006d58:	0852      	lsrs	r2, r2, #1
 8006d5a:	3a01      	subs	r2, #1
 8006d5c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006d60:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8006d62:	4b13      	ldr	r3, [pc, #76]	; (8006db0 <HAL_RCC_OscConfig+0x310>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006d64:	4d11      	ldr	r5, [pc, #68]	; (8006dac <HAL_RCC_OscConfig+0x30c>)
        __HAL_RCC_PLL_ENABLE();
 8006d66:	2201      	movs	r2, #1
 8006d68:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 8006d6a:	f7fd f9f1 	bl	8004150 <HAL_GetTick>
 8006d6e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006d70:	682b      	ldr	r3, [r5, #0]
 8006d72:	019a      	lsls	r2, r3, #6
 8006d74:	f53f aea9 	bmi.w	8006aca <HAL_RCC_OscConfig+0x2a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006d78:	f7fd f9ea 	bl	8004150 <HAL_GetTick>
 8006d7c:	1b00      	subs	r0, r0, r4
 8006d7e:	2802      	cmp	r0, #2
 8006d80:	d9f6      	bls.n	8006d70 <HAL_RCC_OscConfig+0x2d0>
 8006d82:	e6d1      	b.n	8006b28 <HAL_RCC_OscConfig+0x88>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006d84:	f7fd f9e4 	bl	8004150 <HAL_GetTick>
 8006d88:	1b80      	subs	r0, r0, r6
 8006d8a:	2802      	cmp	r0, #2
 8006d8c:	d9d4      	bls.n	8006d38 <HAL_RCC_OscConfig+0x298>
 8006d8e:	e6cb      	b.n	8006b28 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8006d90:	f7fd f9de 	bl	8004150 <HAL_GetTick>
 8006d94:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006d96:	682b      	ldr	r3, [r5, #0]
 8006d98:	019b      	lsls	r3, r3, #6
 8006d9a:	f57f ae96 	bpl.w	8006aca <HAL_RCC_OscConfig+0x2a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006d9e:	f7fd f9d7 	bl	8004150 <HAL_GetTick>
 8006da2:	1b00      	subs	r0, r0, r4
 8006da4:	2802      	cmp	r0, #2
 8006da6:	d9f6      	bls.n	8006d96 <HAL_RCC_OscConfig+0x2f6>
 8006da8:	e6be      	b.n	8006b28 <HAL_RCC_OscConfig+0x88>
 8006daa:	bf00      	nop
 8006dac:	40023800 	.word	0x40023800
 8006db0:	42470000 	.word	0x42470000

08006db4 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8006db4:	b538      	push	{r3, r4, r5, lr}
 8006db6:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8006db8:	4604      	mov	r4, r0
 8006dba:	b1c8      	cbz	r0, 8006df0 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8006dbc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006dc0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006dc4:	b91b      	cbnz	r3, 8006dce <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006dc6:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006dca:	f7fa ffa7 	bl	8001d1c <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006dce:	2302      	movs	r3, #2
 8006dd0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006dd4:	1d21      	adds	r1, r4, #4
 8006dd6:	6820      	ldr	r0, [r4, #0]
 8006dd8:	f000 f97c 	bl	80070d4 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8006ddc:	6862      	ldr	r2, [r4, #4]
 8006dde:	6820      	ldr	r0, [r4, #0]
 8006de0:	4629      	mov	r1, r5
 8006de2:	f000 f9ad 	bl	8007140 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006de6:	2301      	movs	r3, #1
 8006de8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8006dec:	2000      	movs	r0, #0
}
 8006dee:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006df0:	2001      	movs	r0, #1
 8006df2:	e7fc      	b.n	8006dee <HAL_SDRAM_Init+0x3a>

08006df4 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 8006df4:	b510      	push	{r4, lr}
 8006df6:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 8006df8:	f7fb f808 	bl	8001e0c <HAL_SDRAM_MspDeInit>
#endif

  /* Configure the SDRAM registers with their reset values */
  FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 8006dfc:	e9d4 0100 	ldrd	r0, r1, [r4]
 8006e00:	f000 f9da 	bl	80071b8 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 8006e04:	2000      	movs	r0, #0
 8006e06:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 8006e0a:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 8006e0e:	bd10      	pop	{r4, pc}

08006e10 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006e10:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006e12:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006e16:	2b02      	cmp	r3, #2
{
 8006e18:	4604      	mov	r4, r0
 8006e1a:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006e1c:	b2d8      	uxtb	r0, r3
 8006e1e:	d00d      	beq.n	8006e3c <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006e20:	2302      	movs	r3, #2
 8006e22:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006e26:	6820      	ldr	r0, [r4, #0]
 8006e28:	f000 f9d5 	bl	80071d6 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006e2c:	682b      	ldr	r3, [r5, #0]
 8006e2e:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006e30:	bf0c      	ite	eq
 8006e32:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006e34:	2301      	movne	r3, #1
 8006e36:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8006e3a:	2000      	movs	r0, #0
}
 8006e3c:	bd38      	pop	{r3, r4, r5, pc}

08006e3e <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006e3e:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006e40:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006e44:	2b02      	cmp	r3, #2
{
 8006e46:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006e48:	b2d8      	uxtb	r0, r3
 8006e4a:	d009      	beq.n	8006e60 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006e4c:	2302      	movs	r3, #2
 8006e4e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8006e52:	6820      	ldr	r0, [r4, #0]
 8006e54:	f000 f9e6 	bl	8007224 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006e58:	2301      	movs	r3, #1
 8006e5a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8006e5e:	2000      	movs	r0, #0
}
 8006e60:	bd10      	pop	{r4, pc}

08006e62 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8006e62:	4770      	bx	lr

08006e64 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006e64:	6803      	ldr	r3, [r0, #0]
 8006e66:	68da      	ldr	r2, [r3, #12]
 8006e68:	f042 0201 	orr.w	r2, r2, #1
 8006e6c:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006e6e:	689a      	ldr	r2, [r3, #8]
 8006e70:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006e74:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 8006e76:	bf1e      	ittt	ne
 8006e78:	681a      	ldrne	r2, [r3, #0]
 8006e7a:	f042 0201 	orrne.w	r2, r2, #1
 8006e7e:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 8006e80:	2000      	movs	r0, #0
 8006e82:	4770      	bx	lr

08006e84 <HAL_TIM_OC_DelayElapsedCallback>:
 8006e84:	4770      	bx	lr

08006e86 <HAL_TIM_IC_CaptureCallback>:
 8006e86:	4770      	bx	lr

08006e88 <HAL_TIM_PWM_PulseFinishedCallback>:
 8006e88:	4770      	bx	lr

08006e8a <HAL_TIM_TriggerCallback>:
 8006e8a:	4770      	bx	lr

08006e8c <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006e8c:	6803      	ldr	r3, [r0, #0]
 8006e8e:	691a      	ldr	r2, [r3, #16]
 8006e90:	0791      	lsls	r1, r2, #30
{
 8006e92:	b510      	push	{r4, lr}
 8006e94:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006e96:	d50e      	bpl.n	8006eb6 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006e98:	68da      	ldr	r2, [r3, #12]
 8006e9a:	0792      	lsls	r2, r2, #30
 8006e9c:	d50b      	bpl.n	8006eb6 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8006e9e:	f06f 0202 	mvn.w	r2, #2
 8006ea2:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006ea4:	2201      	movs	r2, #1
 8006ea6:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006ea8:	699b      	ldr	r3, [r3, #24]
 8006eaa:	079b      	lsls	r3, r3, #30
 8006eac:	d077      	beq.n	8006f9e <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8006eae:	f7ff ffea 	bl	8006e86 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006eb2:	2300      	movs	r3, #0
 8006eb4:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006eb6:	6823      	ldr	r3, [r4, #0]
 8006eb8:	691a      	ldr	r2, [r3, #16]
 8006eba:	0750      	lsls	r0, r2, #29
 8006ebc:	d510      	bpl.n	8006ee0 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8006ebe:	68da      	ldr	r2, [r3, #12]
 8006ec0:	0751      	lsls	r1, r2, #29
 8006ec2:	d50d      	bpl.n	8006ee0 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006ec4:	f06f 0204 	mvn.w	r2, #4
 8006ec8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006eca:	2202      	movs	r2, #2
 8006ecc:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006ece:	699b      	ldr	r3, [r3, #24]
 8006ed0:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006ed4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006ed6:	d068      	beq.n	8006faa <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8006ed8:	f7ff ffd5 	bl	8006e86 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006edc:	2300      	movs	r3, #0
 8006ede:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8006ee0:	6823      	ldr	r3, [r4, #0]
 8006ee2:	691a      	ldr	r2, [r3, #16]
 8006ee4:	0712      	lsls	r2, r2, #28
 8006ee6:	d50f      	bpl.n	8006f08 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8006ee8:	68da      	ldr	r2, [r3, #12]
 8006eea:	0710      	lsls	r0, r2, #28
 8006eec:	d50c      	bpl.n	8006f08 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8006eee:	f06f 0208 	mvn.w	r2, #8
 8006ef2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006ef4:	2204      	movs	r2, #4
 8006ef6:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006ef8:	69db      	ldr	r3, [r3, #28]
 8006efa:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006efc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006efe:	d05a      	beq.n	8006fb6 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006f00:	f7ff ffc1 	bl	8006e86 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006f04:	2300      	movs	r3, #0
 8006f06:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8006f08:	6823      	ldr	r3, [r4, #0]
 8006f0a:	691a      	ldr	r2, [r3, #16]
 8006f0c:	06d2      	lsls	r2, r2, #27
 8006f0e:	d510      	bpl.n	8006f32 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8006f10:	68da      	ldr	r2, [r3, #12]
 8006f12:	06d0      	lsls	r0, r2, #27
 8006f14:	d50d      	bpl.n	8006f32 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8006f16:	f06f 0210 	mvn.w	r2, #16
 8006f1a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006f1c:	2208      	movs	r2, #8
 8006f1e:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006f20:	69db      	ldr	r3, [r3, #28]
 8006f22:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006f26:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006f28:	d04b      	beq.n	8006fc2 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8006f2a:	f7ff ffac 	bl	8006e86 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006f2e:	2300      	movs	r3, #0
 8006f30:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8006f32:	6823      	ldr	r3, [r4, #0]
 8006f34:	691a      	ldr	r2, [r3, #16]
 8006f36:	07d1      	lsls	r1, r2, #31
 8006f38:	d508      	bpl.n	8006f4c <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8006f3a:	68da      	ldr	r2, [r3, #12]
 8006f3c:	07d2      	lsls	r2, r2, #31
 8006f3e:	d505      	bpl.n	8006f4c <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006f40:	f06f 0201 	mvn.w	r2, #1
 8006f44:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8006f46:	4620      	mov	r0, r4
 8006f48:	f7fa fd3a 	bl	80019c0 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006f4c:	6823      	ldr	r3, [r4, #0]
 8006f4e:	691a      	ldr	r2, [r3, #16]
 8006f50:	0610      	lsls	r0, r2, #24
 8006f52:	d508      	bpl.n	8006f66 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006f54:	68da      	ldr	r2, [r3, #12]
 8006f56:	0611      	lsls	r1, r2, #24
 8006f58:	d505      	bpl.n	8006f66 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006f5a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8006f5e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8006f60:	4620      	mov	r0, r4
 8006f62:	f000 f8b6 	bl	80070d2 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8006f66:	6823      	ldr	r3, [r4, #0]
 8006f68:	691a      	ldr	r2, [r3, #16]
 8006f6a:	0652      	lsls	r2, r2, #25
 8006f6c:	d508      	bpl.n	8006f80 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8006f6e:	68da      	ldr	r2, [r3, #12]
 8006f70:	0650      	lsls	r0, r2, #25
 8006f72:	d505      	bpl.n	8006f80 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006f74:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8006f78:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8006f7a:	4620      	mov	r0, r4
 8006f7c:	f7ff ff85 	bl	8006e8a <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006f80:	6823      	ldr	r3, [r4, #0]
 8006f82:	691a      	ldr	r2, [r3, #16]
 8006f84:	0691      	lsls	r1, r2, #26
 8006f86:	d522      	bpl.n	8006fce <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006f88:	68da      	ldr	r2, [r3, #12]
 8006f8a:	0692      	lsls	r2, r2, #26
 8006f8c:	d51f      	bpl.n	8006fce <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006f8e:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8006f92:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006f94:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8006f96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8006f9a:	f000 b899 	b.w	80070d0 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006f9e:	f7ff ff71 	bl	8006e84 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006fa2:	4620      	mov	r0, r4
 8006fa4:	f7ff ff70 	bl	8006e88 <HAL_TIM_PWM_PulseFinishedCallback>
 8006fa8:	e783      	b.n	8006eb2 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006faa:	f7ff ff6b 	bl	8006e84 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006fae:	4620      	mov	r0, r4
 8006fb0:	f7ff ff6a 	bl	8006e88 <HAL_TIM_PWM_PulseFinishedCallback>
 8006fb4:	e792      	b.n	8006edc <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006fb6:	f7ff ff65 	bl	8006e84 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006fba:	4620      	mov	r0, r4
 8006fbc:	f7ff ff64 	bl	8006e88 <HAL_TIM_PWM_PulseFinishedCallback>
 8006fc0:	e7a0      	b.n	8006f04 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006fc2:	f7ff ff5f 	bl	8006e84 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006fc6:	4620      	mov	r0, r4
 8006fc8:	f7ff ff5e 	bl	8006e88 <HAL_TIM_PWM_PulseFinishedCallback>
 8006fcc:	e7af      	b.n	8006f2e <HAL_TIM_IRQHandler+0xa2>
}
 8006fce:	bd10      	pop	{r4, pc}

08006fd0 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006fd0:	4a30      	ldr	r2, [pc, #192]	; (8007094 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8006fd2:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006fd4:	4290      	cmp	r0, r2
 8006fd6:	d012      	beq.n	8006ffe <TIM_Base_SetConfig+0x2e>
 8006fd8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006fdc:	d00f      	beq.n	8006ffe <TIM_Base_SetConfig+0x2e>
 8006fde:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006fe2:	4290      	cmp	r0, r2
 8006fe4:	d00b      	beq.n	8006ffe <TIM_Base_SetConfig+0x2e>
 8006fe6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006fea:	4290      	cmp	r0, r2
 8006fec:	d007      	beq.n	8006ffe <TIM_Base_SetConfig+0x2e>
 8006fee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006ff2:	4290      	cmp	r0, r2
 8006ff4:	d003      	beq.n	8006ffe <TIM_Base_SetConfig+0x2e>
 8006ff6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006ffa:	4290      	cmp	r0, r2
 8006ffc:	d119      	bne.n	8007032 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006ffe:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007000:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8007004:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007006:	4a23      	ldr	r2, [pc, #140]	; (8007094 <TIM_Base_SetConfig+0xc4>)
 8007008:	4290      	cmp	r0, r2
 800700a:	d029      	beq.n	8007060 <TIM_Base_SetConfig+0x90>
 800700c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007010:	d026      	beq.n	8007060 <TIM_Base_SetConfig+0x90>
 8007012:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8007016:	4290      	cmp	r0, r2
 8007018:	d022      	beq.n	8007060 <TIM_Base_SetConfig+0x90>
 800701a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800701e:	4290      	cmp	r0, r2
 8007020:	d01e      	beq.n	8007060 <TIM_Base_SetConfig+0x90>
 8007022:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007026:	4290      	cmp	r0, r2
 8007028:	d01a      	beq.n	8007060 <TIM_Base_SetConfig+0x90>
 800702a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800702e:	4290      	cmp	r0, r2
 8007030:	d016      	beq.n	8007060 <TIM_Base_SetConfig+0x90>
 8007032:	4a19      	ldr	r2, [pc, #100]	; (8007098 <TIM_Base_SetConfig+0xc8>)
 8007034:	4290      	cmp	r0, r2
 8007036:	d013      	beq.n	8007060 <TIM_Base_SetConfig+0x90>
 8007038:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800703c:	4290      	cmp	r0, r2
 800703e:	d00f      	beq.n	8007060 <TIM_Base_SetConfig+0x90>
 8007040:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007044:	4290      	cmp	r0, r2
 8007046:	d00b      	beq.n	8007060 <TIM_Base_SetConfig+0x90>
 8007048:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800704c:	4290      	cmp	r0, r2
 800704e:	d007      	beq.n	8007060 <TIM_Base_SetConfig+0x90>
 8007050:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007054:	4290      	cmp	r0, r2
 8007056:	d003      	beq.n	8007060 <TIM_Base_SetConfig+0x90>
 8007058:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800705c:	4290      	cmp	r0, r2
 800705e:	d103      	bne.n	8007068 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007060:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8007062:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007066:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007068:	694a      	ldr	r2, [r1, #20]
 800706a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800706e:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8007070:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8007072:	688b      	ldr	r3, [r1, #8]
 8007074:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8007076:	680b      	ldr	r3, [r1, #0]
 8007078:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800707a:	4b06      	ldr	r3, [pc, #24]	; (8007094 <TIM_Base_SetConfig+0xc4>)
 800707c:	4298      	cmp	r0, r3
 800707e:	d003      	beq.n	8007088 <TIM_Base_SetConfig+0xb8>
 8007080:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007084:	4298      	cmp	r0, r3
 8007086:	d101      	bne.n	800708c <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8007088:	690b      	ldr	r3, [r1, #16]
 800708a:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800708c:	2301      	movs	r3, #1
 800708e:	6143      	str	r3, [r0, #20]
}
 8007090:	4770      	bx	lr
 8007092:	bf00      	nop
 8007094:	40010000 	.word	0x40010000
 8007098:	40014000 	.word	0x40014000

0800709c <HAL_TIM_Base_Init>:
{
 800709c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800709e:	4604      	mov	r4, r0
 80070a0:	b1a0      	cbz	r0, 80070cc <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 80070a2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80070a6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80070aa:	b91b      	cbnz	r3, 80070b4 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80070ac:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80070b0:	f7ff fed7 	bl	8006e62 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80070b4:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80070b6:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80070b8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80070bc:	1d21      	adds	r1, r4, #4
 80070be:	f7ff ff87 	bl	8006fd0 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80070c2:	2301      	movs	r3, #1
 80070c4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80070c8:	2000      	movs	r0, #0
}
 80070ca:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80070cc:	2001      	movs	r0, #1
 80070ce:	e7fc      	b.n	80070ca <HAL_TIM_Base_Init+0x2e>

080070d0 <HAL_TIMEx_CommutCallback>:
 80070d0:	4770      	bx	lr

080070d2 <HAL_TIMEx_BreakCallback>:
 80070d2:	4770      	bx	lr

080070d4 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80070d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 80070d8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 80070da:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 80070de:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 80070e2:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 80070e6:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80070ea:	6809      	ldr	r1, [r1, #0]
 80070ec:	2901      	cmp	r1, #1
 80070ee:	ea43 0304 	orr.w	r3, r3, r4
 80070f2:	4912      	ldr	r1, [pc, #72]	; (800713c <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 80070f4:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80070f6:	d00f      	beq.n	8007118 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80070f8:	431a      	orrs	r2, r3
 80070fa:	432a      	orrs	r2, r5
 80070fc:	ea42 0308 	orr.w	r3, r2, r8
 8007100:	ea43 030e 	orr.w	r3, r3, lr
 8007104:	ea43 030c 	orr.w	r3, r3, ip
 8007108:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800710a:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800710c:	4333      	orrs	r3, r6
 800710e:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8007110:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8007112:	2000      	movs	r0, #0
 8007114:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007118:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 800711a:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800711c:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800711e:	ea45 0208 	orr.w	r2, r5, r8
 8007122:	ea42 020e 	orr.w	r2, r2, lr
 8007126:	ea42 020c 	orr.w	r2, r2, ip
 800712a:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 800712c:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007130:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007132:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007134:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8007136:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8007138:	6042      	str	r2, [r0, #4]
 800713a:	e7ea      	b.n	8007112 <FMC_SDRAM_Init+0x3e>
 800713c:	ffff8000 	.word	0xffff8000

08007140 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007140:	68cb      	ldr	r3, [r1, #12]
{
 8007142:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007144:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8007146:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8007148:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 800714a:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 800714c:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800714e:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8007152:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 8007154:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8007156:	3b01      	subs	r3, #1
 8007158:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 800715a:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 800715c:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800715e:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 8007160:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 8007162:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8007164:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8007168:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800716c:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 8007170:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8007174:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 8007178:	d00c      	beq.n	8007194 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800717a:	ea43 030c 	orr.w	r3, r3, ip
 800717e:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007180:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007182:	4333      	orrs	r3, r6
 8007184:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007186:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800718a:	430b      	orrs	r3, r1
 800718c:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800718e:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8007190:	2000      	movs	r0, #0
 8007192:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007194:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8007196:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 800719a:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800719e:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 80071a0:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80071a2:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 80071a6:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80071a8:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80071aa:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80071ac:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80071b0:	430a      	orrs	r2, r1
 80071b2:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 80071b4:	60c2      	str	r2, [r0, #12]
 80071b6:	e7eb      	b.n	8007190 <FMC_SDRAM_Timing_Init+0x50>

080071b8 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 80071b8:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 80071bc:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 80071c0:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;    
 80071c4:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 80071c8:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 80071ca:	2300      	movs	r3, #0
 80071cc:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 80071ce:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 80071d0:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 80071d2:	4618      	mov	r0, r3
 80071d4:	4770      	bx	lr

080071d6 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80071d6:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 80071d8:	2300      	movs	r3, #0
 80071da:	9301      	str	r3, [sp, #4]
{
 80071dc:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80071de:	e9d1 3200 	ldrd	r3, r2, [r1]
 80071e2:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 80071e4:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80071e6:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 80071ea:	688a      	ldr	r2, [r1, #8]
 80071ec:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80071ee:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80071f2:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 80071f4:	9b01      	ldr	r3, [sp, #4]
 80071f6:	6103      	str	r3, [r0, #16]
{
 80071f8:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 80071fa:	f7fc ffa9 	bl	8004150 <HAL_GetTick>
 80071fe:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007200:	69a3      	ldr	r3, [r4, #24]
 8007202:	f013 0320 	ands.w	r3, r3, #32
 8007206:	d101      	bne.n	800720c <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007208:	4618      	mov	r0, r3
 800720a:	e003      	b.n	8007214 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800720c:	1c6b      	adds	r3, r5, #1
 800720e:	d0f7      	beq.n	8007200 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007210:	b915      	cbnz	r5, 8007218 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8007212:	2003      	movs	r0, #3
}
 8007214:	b002      	add	sp, #8
 8007216:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007218:	f7fc ff9a 	bl	8004150 <HAL_GetTick>
 800721c:	1b80      	subs	r0, r0, r6
 800721e:	42a8      	cmp	r0, r5
 8007220:	d9ee      	bls.n	8007200 <FMC_SDRAM_SendCommand+0x2a>
 8007222:	e7f6      	b.n	8007212 <FMC_SDRAM_SendCommand+0x3c>

08007224 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8007224:	6943      	ldr	r3, [r0, #20]
 8007226:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800722a:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 800722c:	2000      	movs	r0, #0
 800722e:	4770      	bx	lr

08007230 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007230:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007234:	b113      	cbz	r3, 800723c <osKernelInitialize+0xc>
    stat = osErrorISR;
 8007236:	f06f 0005 	mvn.w	r0, #5
 800723a:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800723c:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8007240:	4b07      	ldr	r3, [pc, #28]	; (8007260 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8007242:	b912      	cbnz	r2, 800724a <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007244:	f3ef 8211 	mrs	r2, BASEPRI
 8007248:	b112      	cbz	r2, 8007250 <osKernelInitialize+0x20>
 800724a:	681a      	ldr	r2, [r3, #0]
 800724c:	2a02      	cmp	r2, #2
 800724e:	d0f2      	beq.n	8007236 <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8007250:	6818      	ldr	r0, [r3, #0]
 8007252:	b910      	cbnz	r0, 800725a <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007254:	2201      	movs	r2, #1
 8007256:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8007258:	4770      	bx	lr
    } else {
      stat = osError;
 800725a:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800725e:	4770      	bx	lr
 8007260:	20001934 	.word	0x20001934

08007264 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007264:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007266:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800726a:	b113      	cbz	r3, 8007272 <osKernelStart+0xe>
    stat = osErrorISR;
 800726c:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8007270:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007272:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8007276:	4b0a      	ldr	r3, [pc, #40]	; (80072a0 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8007278:	b912      	cbnz	r2, 8007280 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800727a:	f3ef 8211 	mrs	r2, BASEPRI
 800727e:	b112      	cbz	r2, 8007286 <osKernelStart+0x22>
 8007280:	681a      	ldr	r2, [r3, #0]
 8007282:	2a02      	cmp	r2, #2
 8007284:	d0f2      	beq.n	800726c <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8007286:	681a      	ldr	r2, [r3, #0]
 8007288:	2a01      	cmp	r2, #1
 800728a:	d105      	bne.n	8007298 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 800728c:	2202      	movs	r2, #2
 800728e:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8007290:	f001 fce0 	bl	8008c54 <vTaskStartScheduler>
      stat = osOK;
 8007294:	2000      	movs	r0, #0
 8007296:	e7eb      	b.n	8007270 <osKernelStart+0xc>
      stat = osError;
 8007298:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800729c:	e7e8      	b.n	8007270 <osKernelStart+0xc>
 800729e:	bf00      	nop
 80072a0:	20001934 	.word	0x20001934

080072a4 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80072a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80072a6:	b087      	sub	sp, #28
 80072a8:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80072aa:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80072ac:	460b      	mov	r3, r1
  hTask = NULL;
 80072ae:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80072b0:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80072b4:	bb22      	cbnz	r2, 8007300 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80072b6:	f3ef 8210 	mrs	r2, PRIMASK
 80072ba:	b912      	cbnz	r2, 80072c2 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80072bc:	f3ef 8211 	mrs	r2, BASEPRI
 80072c0:	b11a      	cbz	r2, 80072ca <osThreadNew+0x26>
 80072c2:	4a22      	ldr	r2, [pc, #136]	; (800734c <osThreadNew+0xa8>)
 80072c4:	6812      	ldr	r2, [r2, #0]
 80072c6:	2a02      	cmp	r2, #2
 80072c8:	d01a      	beq.n	8007300 <osThreadNew+0x5c>
 80072ca:	b1c8      	cbz	r0, 8007300 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80072cc:	2c00      	cmp	r4, #0
 80072ce:	d02f      	beq.n	8007330 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80072d0:	69a5      	ldr	r5, [r4, #24]
 80072d2:	2d00      	cmp	r5, #0
 80072d4:	bf08      	it	eq
 80072d6:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80072d8:	1e6a      	subs	r2, r5, #1
 80072da:	2a37      	cmp	r2, #55	; 0x37
 80072dc:	46ac      	mov	ip, r5
 80072de:	d82b      	bhi.n	8007338 <osThreadNew+0x94>
 80072e0:	6862      	ldr	r2, [r4, #4]
 80072e2:	07d2      	lsls	r2, r2, #31
 80072e4:	d428      	bmi.n	8007338 <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 80072e6:	6966      	ldr	r6, [r4, #20]
 80072e8:	b16e      	cbz	r6, 8007306 <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80072ea:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80072ec:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 80072f0:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80072f2:	b157      	cbz	r7, 800730a <osThreadNew+0x66>
 80072f4:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 80072f8:	d902      	bls.n	8007300 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80072fa:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80072fc:	b104      	cbz	r4, 8007300 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80072fe:	b9ee      	cbnz	r6, 800733c <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8007300:	9805      	ldr	r0, [sp, #20]
}
 8007302:	b007      	add	sp, #28
 8007304:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007306:	2280      	movs	r2, #128	; 0x80
 8007308:	e7f0      	b.n	80072ec <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800730a:	f1be 0f00 	cmp.w	lr, #0
 800730e:	d1f7      	bne.n	8007300 <osThreadNew+0x5c>
      if (mem == 0) {
 8007310:	6924      	ldr	r4, [r4, #16]
 8007312:	2c00      	cmp	r4, #0
 8007314:	d1f4      	bne.n	8007300 <osThreadNew+0x5c>
 8007316:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007318:	a905      	add	r1, sp, #20
 800731a:	e9cd c100 	strd	ip, r1, [sp]
 800731e:	b292      	uxth	r2, r2
 8007320:	4621      	mov	r1, r4
 8007322:	f001 fb36 	bl	8008992 <xTaskCreate>
 8007326:	2801      	cmp	r0, #1
          hTask = NULL;
 8007328:	bf1c      	itt	ne
 800732a:	2300      	movne	r3, #0
 800732c:	9305      	strne	r3, [sp, #20]
 800732e:	e7e7      	b.n	8007300 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 8007330:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8007334:	2280      	movs	r2, #128	; 0x80
 8007336:	e7ef      	b.n	8007318 <osThreadNew+0x74>
        return (NULL);
 8007338:	2000      	movs	r0, #0
 800733a:	e7e2      	b.n	8007302 <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800733c:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8007340:	9500      	str	r5, [sp, #0]
 8007342:	f001 faee 	bl	8008922 <xTaskCreateStatic>
 8007346:	9005      	str	r0, [sp, #20]
 8007348:	e7da      	b.n	8007300 <osThreadNew+0x5c>
 800734a:	bf00      	nop
 800734c:	20001934 	.word	0x20001934

08007350 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007350:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007352:	460e      	mov	r6, r1
 8007354:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007356:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800735a:	b11b      	cbz	r3, 8007364 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800735c:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800735e:	4620      	mov	r0, r4
 8007360:	b002      	add	sp, #8
 8007362:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007364:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007368:	b913      	cbnz	r3, 8007370 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800736a:	f3ef 8311 	mrs	r3, BASEPRI
 800736e:	b11b      	cbz	r3, 8007378 <osSemaphoreNew+0x28>
 8007370:	4b21      	ldr	r3, [pc, #132]	; (80073f8 <osSemaphoreNew+0xa8>)
 8007372:	681b      	ldr	r3, [r3, #0]
 8007374:	2b02      	cmp	r3, #2
 8007376:	d0f1      	beq.n	800735c <osSemaphoreNew+0xc>
 8007378:	2800      	cmp	r0, #0
 800737a:	d0ef      	beq.n	800735c <osSemaphoreNew+0xc>
 800737c:	42b0      	cmp	r0, r6
 800737e:	d3ed      	bcc.n	800735c <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8007380:	b1ed      	cbz	r5, 80073be <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8007382:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8007386:	b1c3      	cbz	r3, 80073ba <osSemaphoreNew+0x6a>
 8007388:	2a4f      	cmp	r2, #79	; 0x4f
 800738a:	d9e7      	bls.n	800735c <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 800738c:	2801      	cmp	r0, #1
 800738e:	d129      	bne.n	80073e4 <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8007390:	2203      	movs	r2, #3
 8007392:	9200      	str	r2, [sp, #0]
 8007394:	2200      	movs	r2, #0
 8007396:	4611      	mov	r1, r2
 8007398:	f000 fd2d 	bl	8007df6 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 800739c:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800739e:	2800      	cmp	r0, #0
 80073a0:	d0dc      	beq.n	800735c <osSemaphoreNew+0xc>
 80073a2:	b1ce      	cbz	r6, 80073d8 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80073a4:	2300      	movs	r3, #0
 80073a6:	461a      	mov	r2, r3
 80073a8:	4619      	mov	r1, r3
 80073aa:	f000 fdd9 	bl	8007f60 <xQueueGenericSend>
 80073ae:	2801      	cmp	r0, #1
 80073b0:	d012      	beq.n	80073d8 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 80073b2:	4620      	mov	r0, r4
 80073b4:	f001 f914 	bl	80085e0 <vQueueDelete>
 80073b8:	e7d0      	b.n	800735c <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80073ba:	2a00      	cmp	r2, #0
 80073bc:	d1ce      	bne.n	800735c <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 80073be:	2801      	cmp	r0, #1
 80073c0:	d104      	bne.n	80073cc <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 80073c2:	2203      	movs	r2, #3
 80073c4:	2100      	movs	r1, #0
 80073c6:	f000 fd64 	bl	8007e92 <xQueueGenericCreate>
 80073ca:	e7e7      	b.n	800739c <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 80073cc:	4631      	mov	r1, r6
 80073ce:	f000 fda9 	bl	8007f24 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80073d2:	4604      	mov	r4, r0
 80073d4:	2800      	cmp	r0, #0
 80073d6:	d0c1      	beq.n	800735c <osSemaphoreNew+0xc>
        if (attr != NULL) {
 80073d8:	b95d      	cbnz	r5, 80073f2 <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 80073da:	4629      	mov	r1, r5
 80073dc:	4620      	mov	r0, r4
 80073de:	f001 f8d9 	bl	8008594 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80073e2:	e7bc      	b.n	800735e <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80073e4:	461a      	mov	r2, r3
 80073e6:	4631      	mov	r1, r6
 80073e8:	f000 fd7a 	bl	8007ee0 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80073ec:	4604      	mov	r4, r0
 80073ee:	2800      	cmp	r0, #0
 80073f0:	d0b4      	beq.n	800735c <osSemaphoreNew+0xc>
          name = attr->name;
 80073f2:	682d      	ldr	r5, [r5, #0]
 80073f4:	e7f1      	b.n	80073da <osSemaphoreNew+0x8a>
 80073f6:	bf00      	nop
 80073f8:	20001934 	.word	0x20001934

080073fc <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80073fc:	b513      	push	{r0, r1, r4, lr}
 80073fe:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007400:	b918      	cbnz	r0, 800740a <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8007402:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007406:	b002      	add	sp, #8
 8007408:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800740a:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 800740e:	b163      	cbz	r3, 800742a <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 8007410:	2c00      	cmp	r4, #0
 8007412:	d1f6      	bne.n	8007402 <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007414:	aa01      	add	r2, sp, #4
 8007416:	4621      	mov	r1, r4
      yield = pdFALSE;
 8007418:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800741a:	f001 f86b 	bl	80084f4 <xQueueReceiveFromISR>
 800741e:	2801      	cmp	r0, #1
 8007420:	d113      	bne.n	800744a <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 8007422:	9b01      	ldr	r3, [sp, #4]
 8007424:	b9a3      	cbnz	r3, 8007450 <osSemaphoreAcquire+0x54>
  stat = osOK;
 8007426:	2000      	movs	r0, #0
 8007428:	e7ed      	b.n	8007406 <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800742a:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800742e:	b913      	cbnz	r3, 8007436 <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007430:	f3ef 8311 	mrs	r3, BASEPRI
 8007434:	b11b      	cbz	r3, 800743e <osSemaphoreAcquire+0x42>
 8007436:	4b0d      	ldr	r3, [pc, #52]	; (800746c <osSemaphoreAcquire+0x70>)
 8007438:	681b      	ldr	r3, [r3, #0]
 800743a:	2b02      	cmp	r3, #2
 800743c:	d0e8      	beq.n	8007410 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800743e:	4621      	mov	r1, r4
 8007440:	f000 ff95 	bl	800836e <xQueueSemaphoreTake>
 8007444:	2801      	cmp	r0, #1
 8007446:	d0ee      	beq.n	8007426 <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 8007448:	b96c      	cbnz	r4, 8007466 <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 800744a:	f06f 0002 	mvn.w	r0, #2
 800744e:	e7da      	b.n	8007406 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8007450:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007454:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007458:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800745c:	f3bf 8f4f 	dsb	sy
 8007460:	f3bf 8f6f 	isb	sy
 8007464:	e7df      	b.n	8007426 <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 8007466:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800746a:	e7cc      	b.n	8007406 <osSemaphoreAcquire+0xa>
 800746c:	20001934 	.word	0x20001934

08007470 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8007470:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007472:	b370      	cbz	r0, 80074d2 <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007474:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007478:	b14b      	cbz	r3, 800748e <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 800747a:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800747c:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800747e:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007480:	f000 fe82 	bl	8008188 <xQueueGiveFromISR>
 8007484:	2801      	cmp	r0, #1
 8007486:	d014      	beq.n	80074b2 <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8007488:	f06f 0002 	mvn.w	r0, #2
 800748c:	e014      	b.n	80074b8 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800748e:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8007492:	b913      	cbnz	r3, 800749a <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007494:	f3ef 8311 	mrs	r3, BASEPRI
 8007498:	b11b      	cbz	r3, 80074a2 <osSemaphoreRelease+0x32>
 800749a:	4b0f      	ldr	r3, [pc, #60]	; (80074d8 <osSemaphoreRelease+0x68>)
 800749c:	681b      	ldr	r3, [r3, #0]
 800749e:	2b02      	cmp	r3, #2
 80074a0:	d0eb      	beq.n	800747a <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80074a2:	2300      	movs	r3, #0
 80074a4:	461a      	mov	r2, r3
 80074a6:	4619      	mov	r1, r3
 80074a8:	f000 fd5a 	bl	8007f60 <xQueueGenericSend>
 80074ac:	2801      	cmp	r0, #1
 80074ae:	d002      	beq.n	80074b6 <osSemaphoreRelease+0x46>
 80074b0:	e7ea      	b.n	8007488 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 80074b2:	9b01      	ldr	r3, [sp, #4]
 80074b4:	b913      	cbnz	r3, 80074bc <osSemaphoreRelease+0x4c>
  stat = osOK;
 80074b6:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 80074b8:	b002      	add	sp, #8
 80074ba:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 80074bc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80074c0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80074c4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80074c8:	f3bf 8f4f 	dsb	sy
 80074cc:	f3bf 8f6f 	isb	sy
 80074d0:	e7f1      	b.n	80074b6 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 80074d2:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80074d6:	e7ef      	b.n	80074b8 <osSemaphoreRelease+0x48>
 80074d8:	20001934 	.word	0x20001934

080074dc <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 80074dc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80074de:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80074e0:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80074e4:	b11b      	cbz	r3, 80074ee <osMessageQueueNew+0x12>
  hQueue = NULL;
 80074e6:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80074e8:	4628      	mov	r0, r5
 80074ea:	b002      	add	sp, #8
 80074ec:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80074ee:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80074f2:	b913      	cbnz	r3, 80074fa <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80074f4:	f3ef 8311 	mrs	r3, BASEPRI
 80074f8:	b11b      	cbz	r3, 8007502 <osMessageQueueNew+0x26>
 80074fa:	4b1a      	ldr	r3, [pc, #104]	; (8007564 <osMessageQueueNew+0x88>)
 80074fc:	681b      	ldr	r3, [r3, #0]
 80074fe:	2b02      	cmp	r3, #2
 8007500:	d0f1      	beq.n	80074e6 <osMessageQueueNew+0xa>
 8007502:	2800      	cmp	r0, #0
 8007504:	d0ef      	beq.n	80074e6 <osMessageQueueNew+0xa>
 8007506:	2900      	cmp	r1, #0
 8007508:	d0ed      	beq.n	80074e6 <osMessageQueueNew+0xa>
    if (attr != NULL) {
 800750a:	b1ec      	cbz	r4, 8007548 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800750c:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8007510:	b193      	cbz	r3, 8007538 <osMessageQueueNew+0x5c>
 8007512:	2a4f      	cmp	r2, #79	; 0x4f
 8007514:	d9e7      	bls.n	80074e6 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007516:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007518:	2a00      	cmp	r2, #0
 800751a:	d0e4      	beq.n	80074e6 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800751c:	6966      	ldr	r6, [r4, #20]
 800751e:	fb01 f500 	mul.w	r5, r1, r0
 8007522:	42ae      	cmp	r6, r5
 8007524:	d3df      	bcc.n	80074e6 <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8007526:	2500      	movs	r5, #0
 8007528:	9500      	str	r5, [sp, #0]
 800752a:	f000 fc64 	bl	8007df6 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800752e:	4605      	mov	r5, r0
 8007530:	2800      	cmp	r0, #0
 8007532:	d0d8      	beq.n	80074e6 <osMessageQueueNew+0xa>
        name = attr->name;
 8007534:	6824      	ldr	r4, [r4, #0]
 8007536:	e00f      	b.n	8007558 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8007538:	2a00      	cmp	r2, #0
 800753a:	d1d4      	bne.n	80074e6 <osMessageQueueNew+0xa>
 800753c:	6923      	ldr	r3, [r4, #16]
 800753e:	2b00      	cmp	r3, #0
 8007540:	d1d1      	bne.n	80074e6 <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8007542:	6963      	ldr	r3, [r4, #20]
 8007544:	2b00      	cmp	r3, #0
 8007546:	d1ce      	bne.n	80074e6 <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8007548:	2200      	movs	r2, #0
 800754a:	f000 fca2 	bl	8007e92 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800754e:	4605      	mov	r5, r0
 8007550:	2800      	cmp	r0, #0
 8007552:	d0c8      	beq.n	80074e6 <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8007554:	2c00      	cmp	r4, #0
 8007556:	d1ed      	bne.n	8007534 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 8007558:	4621      	mov	r1, r4
 800755a:	4628      	mov	r0, r5
 800755c:	f001 f81a 	bl	8008594 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8007560:	e7c2      	b.n	80074e8 <osMessageQueueNew+0xc>
 8007562:	bf00      	nop
 8007564:	20001934 	.word	0x20001934

08007568 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8007568:	b513      	push	{r0, r1, r4, lr}
 800756a:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800756c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007570:	b123      	cbz	r3, 800757c <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007572:	b9d8      	cbnz	r0, 80075ac <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8007574:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007578:	b002      	add	sp, #8
 800757a:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800757c:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007580:	b913      	cbnz	r3, 8007588 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007582:	f3ef 8311 	mrs	r3, BASEPRI
 8007586:	b11b      	cbz	r3, 8007590 <osMessageQueuePut+0x28>
 8007588:	4b17      	ldr	r3, [pc, #92]	; (80075e8 <osMessageQueuePut+0x80>)
 800758a:	681b      	ldr	r3, [r3, #0]
 800758c:	2b02      	cmp	r3, #2
 800758e:	d0f0      	beq.n	8007572 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007590:	2800      	cmp	r0, #0
 8007592:	d0ef      	beq.n	8007574 <osMessageQueuePut+0xc>
 8007594:	2900      	cmp	r1, #0
 8007596:	d0ed      	beq.n	8007574 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007598:	2300      	movs	r3, #0
 800759a:	4622      	mov	r2, r4
 800759c:	f000 fce0 	bl	8007f60 <xQueueGenericSend>
 80075a0:	2801      	cmp	r0, #1
 80075a2:	d010      	beq.n	80075c6 <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 80075a4:	b9e4      	cbnz	r4, 80075e0 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 80075a6:	f06f 0002 	mvn.w	r0, #2
 80075aa:	e7e5      	b.n	8007578 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80075ac:	2900      	cmp	r1, #0
 80075ae:	d0e1      	beq.n	8007574 <osMessageQueuePut+0xc>
 80075b0:	2c00      	cmp	r4, #0
 80075b2:	d1df      	bne.n	8007574 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80075b4:	4623      	mov	r3, r4
 80075b6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80075b8:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80075ba:	f000 fd84 	bl	80080c6 <xQueueGenericSendFromISR>
 80075be:	2801      	cmp	r0, #1
 80075c0:	d1f1      	bne.n	80075a6 <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 80075c2:	9b01      	ldr	r3, [sp, #4]
 80075c4:	b90b      	cbnz	r3, 80075ca <osMessageQueuePut+0x62>
  stat = osOK;
 80075c6:	2000      	movs	r0, #0
 80075c8:	e7d6      	b.n	8007578 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 80075ca:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80075ce:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80075d2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80075d6:	f3bf 8f4f 	dsb	sy
 80075da:	f3bf 8f6f 	isb	sy
 80075de:	e7f2      	b.n	80075c6 <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 80075e0:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80075e4:	e7c8      	b.n	8007578 <osMessageQueuePut+0x10>
 80075e6:	bf00      	nop
 80075e8:	20001934 	.word	0x20001934

080075ec <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 80075ec:	b513      	push	{r0, r1, r4, lr}
 80075ee:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80075f0:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80075f4:	b123      	cbz	r3, 8007600 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80075f6:	b9d0      	cbnz	r0, 800762e <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 80075f8:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80075fc:	b002      	add	sp, #8
 80075fe:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007600:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007604:	b913      	cbnz	r3, 800760c <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007606:	f3ef 8311 	mrs	r3, BASEPRI
 800760a:	b11b      	cbz	r3, 8007614 <osMessageQueueGet+0x28>
 800760c:	4b16      	ldr	r3, [pc, #88]	; (8007668 <osMessageQueueGet+0x7c>)
 800760e:	681b      	ldr	r3, [r3, #0]
 8007610:	2b02      	cmp	r3, #2
 8007612:	d0f0      	beq.n	80075f6 <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007614:	2800      	cmp	r0, #0
 8007616:	d0ef      	beq.n	80075f8 <osMessageQueueGet+0xc>
 8007618:	2900      	cmp	r1, #0
 800761a:	d0ed      	beq.n	80075f8 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800761c:	4622      	mov	r2, r4
 800761e:	f000 fe07 	bl	8008230 <xQueueReceive>
 8007622:	2801      	cmp	r0, #1
 8007624:	d00f      	beq.n	8007646 <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 8007626:	b9dc      	cbnz	r4, 8007660 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 8007628:	f06f 0002 	mvn.w	r0, #2
 800762c:	e7e6      	b.n	80075fc <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800762e:	2900      	cmp	r1, #0
 8007630:	d0e2      	beq.n	80075f8 <osMessageQueueGet+0xc>
 8007632:	2c00      	cmp	r4, #0
 8007634:	d1e0      	bne.n	80075f8 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007636:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007638:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800763a:	f000 ff5b 	bl	80084f4 <xQueueReceiveFromISR>
 800763e:	2801      	cmp	r0, #1
 8007640:	d1f2      	bne.n	8007628 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8007642:	9b01      	ldr	r3, [sp, #4]
 8007644:	b90b      	cbnz	r3, 800764a <osMessageQueueGet+0x5e>
  stat = osOK;
 8007646:	2000      	movs	r0, #0
 8007648:	e7d8      	b.n	80075fc <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 800764a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800764e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007652:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007656:	f3bf 8f4f 	dsb	sy
 800765a:	f3bf 8f6f 	isb	sy
 800765e:	e7f2      	b.n	8007646 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 8007660:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007664:	e7ca      	b.n	80075fc <osMessageQueueGet+0x10>
 8007666:	bf00      	nop
 8007668:	20001934 	.word	0x20001934

0800766c <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800766c:	4b03      	ldr	r3, [pc, #12]	; (800767c <vApplicationGetIdleTaskMemory+0x10>)
 800766e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8007670:	4b03      	ldr	r3, [pc, #12]	; (8007680 <vApplicationGetIdleTaskMemory+0x14>)
 8007672:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8007674:	2380      	movs	r3, #128	; 0x80
 8007676:	6013      	str	r3, [r2, #0]
}
 8007678:	4770      	bx	lr
 800767a:	bf00      	nop
 800767c:	200018d4 	.word	0x200018d4
 8007680:	200016d4 	.word	0x200016d4

08007684 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8007684:	4b03      	ldr	r3, [pc, #12]	; (8007694 <vApplicationGetTimerTaskMemory+0x10>)
 8007686:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8007688:	4b03      	ldr	r3, [pc, #12]	; (8007698 <vApplicationGetTimerTaskMemory+0x14>)
 800768a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800768c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007690:	6013      	str	r3, [r2, #0]
}
 8007692:	4770      	bx	lr
 8007694:	20001d38 	.word	0x20001d38
 8007698:	20001938 	.word	0x20001938

0800769c <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800769c:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800769e:	4b0f      	ldr	r3, [pc, #60]	; (80076dc <prvInsertBlockIntoFreeList+0x40>)
 80076a0:	461a      	mov	r2, r3
 80076a2:	681b      	ldr	r3, [r3, #0]
 80076a4:	4283      	cmp	r3, r0
 80076a6:	d3fb      	bcc.n	80076a0 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80076a8:	6854      	ldr	r4, [r2, #4]
 80076aa:	1911      	adds	r1, r2, r4
 80076ac:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80076ae:	bf01      	itttt	eq
 80076b0:	6841      	ldreq	r1, [r0, #4]
 80076b2:	4610      	moveq	r0, r2
 80076b4:	1909      	addeq	r1, r1, r4
 80076b6:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80076b8:	6844      	ldr	r4, [r0, #4]
 80076ba:	1901      	adds	r1, r0, r4
 80076bc:	428b      	cmp	r3, r1
 80076be:	d107      	bne.n	80076d0 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80076c0:	4907      	ldr	r1, [pc, #28]	; (80076e0 <prvInsertBlockIntoFreeList+0x44>)
 80076c2:	6809      	ldr	r1, [r1, #0]
 80076c4:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80076c6:	bf1f      	itttt	ne
 80076c8:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80076ca:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80076cc:	1909      	addne	r1, r1, r4
 80076ce:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80076d0:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 80076d2:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80076d4:	bf18      	it	ne
 80076d6:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80076d8:	bd10      	pop	{r4, pc}
 80076da:	bf00      	nop
 80076dc:	20009da8 	.word	0x20009da8
 80076e0:	20001d98 	.word	0x20001d98

080076e4 <pvPortMalloc>:
{
 80076e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80076e8:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80076ea:	f001 f97f 	bl	80089ec <vTaskSuspendAll>
		if( pxEnd == NULL )
 80076ee:	4840      	ldr	r0, [pc, #256]	; (80077f0 <pvPortMalloc+0x10c>)
 80076f0:	4d40      	ldr	r5, [pc, #256]	; (80077f4 <pvPortMalloc+0x110>)
 80076f2:	6803      	ldr	r3, [r0, #0]
 80076f4:	bb0b      	cbnz	r3, 800773a <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 80076f6:	4940      	ldr	r1, [pc, #256]	; (80077f8 <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 80076f8:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 80076fa:	bf1f      	itttt	ne
 80076fc:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80076fe:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8007702:	f501 4200 	addne.w	r2, r1, #32768	; 0x8000
 8007706:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007708:	bf14      	ite	ne
 800770a:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800770c:	f44f 4200 	moveq.w	r2, #32768	; 0x8000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8007710:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007712:	4e3a      	ldr	r6, [pc, #232]	; (80077fc <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 8007714:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007716:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800771a:	2300      	movs	r3, #0
 800771c:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800771e:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8007720:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007724:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8007726:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 800772a:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800772c:	4a34      	ldr	r2, [pc, #208]	; (8007800 <pvPortMalloc+0x11c>)
 800772e:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007730:	4a34      	ldr	r2, [pc, #208]	; (8007804 <pvPortMalloc+0x120>)
 8007732:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007734:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8007738:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800773a:	682f      	ldr	r7, [r5, #0]
 800773c:	4227      	tst	r7, r4
 800773e:	d151      	bne.n	80077e4 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 8007740:	2c00      	cmp	r4, #0
 8007742:	d042      	beq.n	80077ca <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 8007744:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8007748:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800774a:	bf1c      	itt	ne
 800774c:	f023 0307 	bicne.w	r3, r3, #7
 8007750:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8007752:	2b00      	cmp	r3, #0
 8007754:	d046      	beq.n	80077e4 <pvPortMalloc+0x100>
 8007756:	4c2b      	ldr	r4, [pc, #172]	; (8007804 <pvPortMalloc+0x120>)
 8007758:	6826      	ldr	r6, [r4, #0]
 800775a:	429e      	cmp	r6, r3
 800775c:	d342      	bcc.n	80077e4 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 800775e:	4a27      	ldr	r2, [pc, #156]	; (80077fc <pvPortMalloc+0x118>)
 8007760:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8007762:	6869      	ldr	r1, [r5, #4]
 8007764:	4299      	cmp	r1, r3
 8007766:	d204      	bcs.n	8007772 <pvPortMalloc+0x8e>
 8007768:	f8d5 c000 	ldr.w	ip, [r5]
 800776c:	f1bc 0f00 	cmp.w	ip, #0
 8007770:	d115      	bne.n	800779e <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8007772:	6800      	ldr	r0, [r0, #0]
 8007774:	42a8      	cmp	r0, r5
 8007776:	d035      	beq.n	80077e4 <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007778:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800777a:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800777c:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007780:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007782:	2910      	cmp	r1, #16
 8007784:	d912      	bls.n	80077ac <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8007786:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8007788:	0742      	lsls	r2, r0, #29
 800778a:	d00b      	beq.n	80077a4 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800778c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007790:	f383 8811 	msr	BASEPRI, r3
 8007794:	f3bf 8f6f 	isb	sy
 8007798:	f3bf 8f4f 	dsb	sy
 800779c:	e7fe      	b.n	800779c <pvPortMalloc+0xb8>
 800779e:	462a      	mov	r2, r5
 80077a0:	4665      	mov	r5, ip
 80077a2:	e7de      	b.n	8007762 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80077a4:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80077a6:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80077a8:	f7ff ff78 	bl	800769c <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80077ac:	4914      	ldr	r1, [pc, #80]	; (8007800 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80077ae:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80077b0:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80077b2:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80077b4:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80077b6:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 80077b8:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80077bc:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 80077be:	bf38      	it	cc
 80077c0:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80077c2:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80077c6:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 80077c8:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 80077ca:	f001 f9b3 	bl	8008b34 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 80077ce:	0763      	lsls	r3, r4, #29
 80077d0:	d00a      	beq.n	80077e8 <pvPortMalloc+0x104>
 80077d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80077d6:	f383 8811 	msr	BASEPRI, r3
 80077da:	f3bf 8f6f 	isb	sy
 80077de:	f3bf 8f4f 	dsb	sy
 80077e2:	e7fe      	b.n	80077e2 <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 80077e4:	2400      	movs	r4, #0
 80077e6:	e7f0      	b.n	80077ca <pvPortMalloc+0xe6>
}
 80077e8:	4620      	mov	r0, r4
 80077ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80077ee:	bf00      	nop
 80077f0:	20001d98 	.word	0x20001d98
 80077f4:	20009d9c 	.word	0x20009d9c
 80077f8:	20001d9c 	.word	0x20001d9c
 80077fc:	20009da8 	.word	0x20009da8
 8007800:	20009da4 	.word	0x20009da4
 8007804:	20009da0 	.word	0x20009da0

08007808 <vPortFree>:
{
 8007808:	b510      	push	{r4, lr}
	if( pv != NULL )
 800780a:	4604      	mov	r4, r0
 800780c:	b370      	cbz	r0, 800786c <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800780e:	4a18      	ldr	r2, [pc, #96]	; (8007870 <vPortFree+0x68>)
 8007810:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007814:	6812      	ldr	r2, [r2, #0]
 8007816:	4213      	tst	r3, r2
 8007818:	d108      	bne.n	800782c <vPortFree+0x24>
 800781a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800781e:	f383 8811 	msr	BASEPRI, r3
 8007822:	f3bf 8f6f 	isb	sy
 8007826:	f3bf 8f4f 	dsb	sy
 800782a:	e7fe      	b.n	800782a <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800782c:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8007830:	b141      	cbz	r1, 8007844 <vPortFree+0x3c>
 8007832:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007836:	f383 8811 	msr	BASEPRI, r3
 800783a:	f3bf 8f6f 	isb	sy
 800783e:	f3bf 8f4f 	dsb	sy
 8007842:	e7fe      	b.n	8007842 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8007844:	ea23 0302 	bic.w	r3, r3, r2
 8007848:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800784c:	f001 f8ce 	bl	80089ec <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007850:	4a08      	ldr	r2, [pc, #32]	; (8007874 <vPortFree+0x6c>)
 8007852:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8007856:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007858:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800785c:	440b      	add	r3, r1
 800785e:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007860:	f7ff ff1c 	bl	800769c <prvInsertBlockIntoFreeList>
}
 8007864:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8007868:	f001 b964 	b.w	8008b34 <xTaskResumeAll>
}
 800786c:	bd10      	pop	{r4, pc}
 800786e:	bf00      	nop
 8007870:	20009d9c 	.word	0x20009d9c
 8007874:	20009da0 	.word	0x20009da0

08007878 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007878:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800787c:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007880:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007884:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007886:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007888:	2300      	movs	r3, #0
 800788a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800788c:	4770      	bx	lr

0800788e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800788e:	2300      	movs	r3, #0
 8007890:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8007892:	4770      	bx	lr

08007894 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8007894:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8007896:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007898:	689a      	ldr	r2, [r3, #8]
 800789a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800789c:	689a      	ldr	r2, [r3, #8]
 800789e:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80078a0:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80078a2:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80078a4:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80078a6:	3301      	adds	r3, #1
 80078a8:	6003      	str	r3, [r0, #0]
}
 80078aa:	4770      	bx	lr

080078ac <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 80078ac:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80078ae:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80078b0:	1c63      	adds	r3, r4, #1
 80078b2:	d10a      	bne.n	80078ca <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 80078b4:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 80078b6:	685a      	ldr	r2, [r3, #4]
 80078b8:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80078ba:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 80078bc:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 80078be:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80078c0:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80078c2:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80078c4:	3301      	adds	r3, #1
 80078c6:	6003      	str	r3, [r0, #0]
}
 80078c8:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 80078ca:	f100 0208 	add.w	r2, r0, #8
 80078ce:	4613      	mov	r3, r2
 80078d0:	6852      	ldr	r2, [r2, #4]
 80078d2:	6815      	ldr	r5, [r2, #0]
 80078d4:	42a5      	cmp	r5, r4
 80078d6:	d9fa      	bls.n	80078ce <vListInsert+0x22>
 80078d8:	e7ed      	b.n	80078b6 <vListInsert+0xa>

080078da <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80078da:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 80078de:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80078e0:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 80078e2:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 80078e4:	6859      	ldr	r1, [r3, #4]
 80078e6:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 80078e8:	bf08      	it	eq
 80078ea:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 80078ec:	2200      	movs	r2, #0
 80078ee:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 80078f0:	681a      	ldr	r2, [r3, #0]
 80078f2:	3a01      	subs	r2, #1
 80078f4:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 80078f6:	6818      	ldr	r0, [r3, #0]
}
 80078f8:	4770      	bx	lr
	...

080078fc <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 80078fc:	4808      	ldr	r0, [pc, #32]	; (8007920 <prvPortStartFirstTask+0x24>)
 80078fe:	6800      	ldr	r0, [r0, #0]
 8007900:	6800      	ldr	r0, [r0, #0]
 8007902:	f380 8808 	msr	MSP, r0
 8007906:	f04f 0000 	mov.w	r0, #0
 800790a:	f380 8814 	msr	CONTROL, r0
 800790e:	b662      	cpsie	i
 8007910:	b661      	cpsie	f
 8007912:	f3bf 8f4f 	dsb	sy
 8007916:	f3bf 8f6f 	isb	sy
 800791a:	df00      	svc	0
 800791c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800791e:	0000      	.short	0x0000
 8007920:	e000ed08 	.word	0xe000ed08

08007924 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8007924:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8007934 <vPortEnableVFP+0x10>
 8007928:	6801      	ldr	r1, [r0, #0]
 800792a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800792e:	6001      	str	r1, [r0, #0]
 8007930:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8007932:	0000      	.short	0x0000
 8007934:	e000ed88 	.word	0xe000ed88

08007938 <prvTaskExitError>:
{
 8007938:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800793a:	2300      	movs	r3, #0
 800793c:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800793e:	4b0d      	ldr	r3, [pc, #52]	; (8007974 <prvTaskExitError+0x3c>)
 8007940:	681b      	ldr	r3, [r3, #0]
 8007942:	3301      	adds	r3, #1
 8007944:	d008      	beq.n	8007958 <prvTaskExitError+0x20>
 8007946:	f04f 0350 	mov.w	r3, #80	; 0x50
 800794a:	f383 8811 	msr	BASEPRI, r3
 800794e:	f3bf 8f6f 	isb	sy
 8007952:	f3bf 8f4f 	dsb	sy
 8007956:	e7fe      	b.n	8007956 <prvTaskExitError+0x1e>
 8007958:	f04f 0350 	mov.w	r3, #80	; 0x50
 800795c:	f383 8811 	msr	BASEPRI, r3
 8007960:	f3bf 8f6f 	isb	sy
 8007964:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8007968:	9b01      	ldr	r3, [sp, #4]
 800796a:	2b00      	cmp	r3, #0
 800796c:	d0fc      	beq.n	8007968 <prvTaskExitError+0x30>
}
 800796e:	b002      	add	sp, #8
 8007970:	4770      	bx	lr
 8007972:	bf00      	nop
 8007974:	2000005c 	.word	0x2000005c

08007978 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8007978:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800797c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007980:	4b07      	ldr	r3, [pc, #28]	; (80079a0 <pxPortInitialiseStack+0x28>)
 8007982:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007986:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800798a:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800798e:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8007992:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007996:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800799a:	3844      	subs	r0, #68	; 0x44
 800799c:	4770      	bx	lr
 800799e:	bf00      	nop
 80079a0:	08007939 	.word	0x08007939
	...

080079b0 <SVC_Handler>:
	__asm volatile (
 80079b0:	4b07      	ldr	r3, [pc, #28]	; (80079d0 <pxCurrentTCBConst2>)
 80079b2:	6819      	ldr	r1, [r3, #0]
 80079b4:	6808      	ldr	r0, [r1, #0]
 80079b6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80079ba:	f380 8809 	msr	PSP, r0
 80079be:	f3bf 8f6f 	isb	sy
 80079c2:	f04f 0000 	mov.w	r0, #0
 80079c6:	f380 8811 	msr	BASEPRI, r0
 80079ca:	4770      	bx	lr
 80079cc:	f3af 8000 	nop.w

080079d0 <pxCurrentTCBConst2>:
 80079d0:	20009df8 	.word	0x20009df8

080079d4 <vPortEnterCritical>:
 80079d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079d8:	f383 8811 	msr	BASEPRI, r3
 80079dc:	f3bf 8f6f 	isb	sy
 80079e0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 80079e4:	4a0a      	ldr	r2, [pc, #40]	; (8007a10 <vPortEnterCritical+0x3c>)
 80079e6:	6813      	ldr	r3, [r2, #0]
 80079e8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 80079ea:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 80079ec:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 80079ee:	d10e      	bne.n	8007a0e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 80079f0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80079f4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 80079f8:	b2db      	uxtb	r3, r3
 80079fa:	b143      	cbz	r3, 8007a0e <vPortEnterCritical+0x3a>
 80079fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a00:	f383 8811 	msr	BASEPRI, r3
 8007a04:	f3bf 8f6f 	isb	sy
 8007a08:	f3bf 8f4f 	dsb	sy
 8007a0c:	e7fe      	b.n	8007a0c <vPortEnterCritical+0x38>
}
 8007a0e:	4770      	bx	lr
 8007a10:	2000005c 	.word	0x2000005c

08007a14 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007a14:	4a08      	ldr	r2, [pc, #32]	; (8007a38 <vPortExitCritical+0x24>)
 8007a16:	6813      	ldr	r3, [r2, #0]
 8007a18:	b943      	cbnz	r3, 8007a2c <vPortExitCritical+0x18>
 8007a1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a1e:	f383 8811 	msr	BASEPRI, r3
 8007a22:	f3bf 8f6f 	isb	sy
 8007a26:	f3bf 8f4f 	dsb	sy
 8007a2a:	e7fe      	b.n	8007a2a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8007a2c:	3b01      	subs	r3, #1
 8007a2e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007a30:	b90b      	cbnz	r3, 8007a36 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007a32:	f383 8811 	msr	BASEPRI, r3
}
 8007a36:	4770      	bx	lr
 8007a38:	2000005c 	.word	0x2000005c
 8007a3c:	00000000 	.word	0x00000000

08007a40 <PendSV_Handler>:
	__asm volatile
 8007a40:	f3ef 8009 	mrs	r0, PSP
 8007a44:	f3bf 8f6f 	isb	sy
 8007a48:	4b15      	ldr	r3, [pc, #84]	; (8007aa0 <pxCurrentTCBConst>)
 8007a4a:	681a      	ldr	r2, [r3, #0]
 8007a4c:	f01e 0f10 	tst.w	lr, #16
 8007a50:	bf08      	it	eq
 8007a52:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007a56:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a5a:	6010      	str	r0, [r2, #0]
 8007a5c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007a60:	f04f 0050 	mov.w	r0, #80	; 0x50
 8007a64:	f380 8811 	msr	BASEPRI, r0
 8007a68:	f3bf 8f4f 	dsb	sy
 8007a6c:	f3bf 8f6f 	isb	sy
 8007a70:	f001 f93e 	bl	8008cf0 <vTaskSwitchContext>
 8007a74:	f04f 0000 	mov.w	r0, #0
 8007a78:	f380 8811 	msr	BASEPRI, r0
 8007a7c:	bc09      	pop	{r0, r3}
 8007a7e:	6819      	ldr	r1, [r3, #0]
 8007a80:	6808      	ldr	r0, [r1, #0]
 8007a82:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a86:	f01e 0f10 	tst.w	lr, #16
 8007a8a:	bf08      	it	eq
 8007a8c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007a90:	f380 8809 	msr	PSP, r0
 8007a94:	f3bf 8f6f 	isb	sy
 8007a98:	4770      	bx	lr
 8007a9a:	bf00      	nop
 8007a9c:	f3af 8000 	nop.w

08007aa0 <pxCurrentTCBConst>:
 8007aa0:	20009df8 	.word	0x20009df8

08007aa4 <SysTick_Handler>:
{
 8007aa4:	b508      	push	{r3, lr}
	__asm volatile
 8007aa6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007aaa:	f383 8811 	msr	BASEPRI, r3
 8007aae:	f3bf 8f6f 	isb	sy
 8007ab2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007ab6:	f000 ffa7 	bl	8008a08 <xTaskIncrementTick>
 8007aba:	b128      	cbz	r0, 8007ac8 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8007abc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007ac0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007ac4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8007ac8:	2300      	movs	r3, #0
 8007aca:	f383 8811 	msr	BASEPRI, r3
}
 8007ace:	bd08      	pop	{r3, pc}

08007ad0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007ad0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8007ad4:	2300      	movs	r3, #0
 8007ad6:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007ad8:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8007ada:	4b05      	ldr	r3, [pc, #20]	; (8007af0 <vPortSetupTimerInterrupt+0x20>)
 8007adc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007ae0:	681b      	ldr	r3, [r3, #0]
 8007ae2:	fbb3 f3f1 	udiv	r3, r3, r1
 8007ae6:	3b01      	subs	r3, #1
 8007ae8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8007aea:	2307      	movs	r3, #7
 8007aec:	6113      	str	r3, [r2, #16]
}
 8007aee:	4770      	bx	lr
 8007af0:	20000050 	.word	0x20000050

08007af4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007af4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8007af8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007afa:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8007afe:	4a3a      	ldr	r2, [pc, #232]	; (8007be8 <xPortStartScheduler+0xf4>)
 8007b00:	4291      	cmp	r1, r2
 8007b02:	d108      	bne.n	8007b16 <xPortStartScheduler+0x22>
	__asm volatile
 8007b04:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b08:	f383 8811 	msr	BASEPRI, r3
 8007b0c:	f3bf 8f6f 	isb	sy
 8007b10:	f3bf 8f4f 	dsb	sy
 8007b14:	e7fe      	b.n	8007b14 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007b16:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8007b1a:	4b34      	ldr	r3, [pc, #208]	; (8007bec <xPortStartScheduler+0xf8>)
 8007b1c:	429a      	cmp	r2, r3
 8007b1e:	d108      	bne.n	8007b32 <xPortStartScheduler+0x3e>
 8007b20:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b24:	f383 8811 	msr	BASEPRI, r3
 8007b28:	f3bf 8f6f 	isb	sy
 8007b2c:	f3bf 8f4f 	dsb	sy
 8007b30:	e7fe      	b.n	8007b30 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007b32:	4b2f      	ldr	r3, [pc, #188]	; (8007bf0 <xPortStartScheduler+0xfc>)
 8007b34:	781a      	ldrb	r2, [r3, #0]
 8007b36:	b2d2      	uxtb	r2, r2
 8007b38:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8007b3a:	22ff      	movs	r2, #255	; 0xff
 8007b3c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007b3e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007b40:	4a2c      	ldr	r2, [pc, #176]	; (8007bf4 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007b42:	b2db      	uxtb	r3, r3
 8007b44:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007b48:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007b4c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8007b50:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8007b52:	4a29      	ldr	r2, [pc, #164]	; (8007bf8 <xPortStartScheduler+0x104>)
 8007b54:	2307      	movs	r3, #7
 8007b56:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007b58:	2100      	movs	r1, #0
 8007b5a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8007b5e:	0600      	lsls	r0, r0, #24
 8007b60:	f103 34ff 	add.w	r4, r3, #4294967295
 8007b64:	d40c      	bmi.n	8007b80 <xPortStartScheduler+0x8c>
 8007b66:	b111      	cbz	r1, 8007b6e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007b68:	2b03      	cmp	r3, #3
 8007b6a:	6013      	str	r3, [r2, #0]
 8007b6c:	d011      	beq.n	8007b92 <xPortStartScheduler+0x9e>
 8007b6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b72:	f383 8811 	msr	BASEPRI, r3
 8007b76:	f3bf 8f6f 	isb	sy
 8007b7a:	f3bf 8f4f 	dsb	sy
 8007b7e:	e7fe      	b.n	8007b7e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8007b80:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007b84:	005b      	lsls	r3, r3, #1
 8007b86:	b2db      	uxtb	r3, r3
 8007b88:	f88d 3003 	strb.w	r3, [sp, #3]
 8007b8c:	2101      	movs	r1, #1
 8007b8e:	4623      	mov	r3, r4
 8007b90:	e7e3      	b.n	8007b5a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007b92:	f44f 7340 	mov.w	r3, #768	; 0x300
 8007b96:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007b98:	9b01      	ldr	r3, [sp, #4]
 8007b9a:	4a15      	ldr	r2, [pc, #84]	; (8007bf0 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007b9c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007ba0:	b2db      	uxtb	r3, r3
 8007ba2:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007ba4:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8007ba8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8007bac:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007bb0:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8007bb4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8007bb8:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8007bbc:	f7ff ff88 	bl	8007ad0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007bc0:	4b0e      	ldr	r3, [pc, #56]	; (8007bfc <xPortStartScheduler+0x108>)
 8007bc2:	2500      	movs	r5, #0
 8007bc4:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8007bc6:	f7ff fead 	bl	8007924 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8007bca:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 8007bce:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007bd2:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8007bd6:	f7ff fe91 	bl	80078fc <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007bda:	f001 f889 	bl	8008cf0 <vTaskSwitchContext>
	prvTaskExitError();
 8007bde:	f7ff feab 	bl	8007938 <prvTaskExitError>
}
 8007be2:	4628      	mov	r0, r5
 8007be4:	b003      	add	sp, #12
 8007be6:	bd30      	pop	{r4, r5, pc}
 8007be8:	410fc271 	.word	0x410fc271
 8007bec:	410fc270 	.word	0x410fc270
 8007bf0:	e000e400 	.word	0xe000e400
 8007bf4:	20009db0 	.word	0x20009db0
 8007bf8:	20009db4 	.word	0x20009db4
 8007bfc:	2000005c 	.word	0x2000005c

08007c00 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007c00:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007c04:	2b0f      	cmp	r3, #15
 8007c06:	d90e      	bls.n	8007c26 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007c08:	4a11      	ldr	r2, [pc, #68]	; (8007c50 <vPortValidateInterruptPriority+0x50>)
 8007c0a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007c0c:	4a11      	ldr	r2, [pc, #68]	; (8007c54 <vPortValidateInterruptPriority+0x54>)
 8007c0e:	7812      	ldrb	r2, [r2, #0]
 8007c10:	429a      	cmp	r2, r3
 8007c12:	d908      	bls.n	8007c26 <vPortValidateInterruptPriority+0x26>
 8007c14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c18:	f383 8811 	msr	BASEPRI, r3
 8007c1c:	f3bf 8f6f 	isb	sy
 8007c20:	f3bf 8f4f 	dsb	sy
 8007c24:	e7fe      	b.n	8007c24 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007c26:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007c2a:	4a0b      	ldr	r2, [pc, #44]	; (8007c58 <vPortValidateInterruptPriority+0x58>)
 8007c2c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8007c30:	6812      	ldr	r2, [r2, #0]
 8007c32:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8007c36:	4293      	cmp	r3, r2
 8007c38:	d908      	bls.n	8007c4c <vPortValidateInterruptPriority+0x4c>
 8007c3a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c3e:	f383 8811 	msr	BASEPRI, r3
 8007c42:	f3bf 8f6f 	isb	sy
 8007c46:	f3bf 8f4f 	dsb	sy
 8007c4a:	e7fe      	b.n	8007c4a <vPortValidateInterruptPriority+0x4a>
	}
 8007c4c:	4770      	bx	lr
 8007c4e:	bf00      	nop
 8007c50:	e000e3f0 	.word	0xe000e3f0
 8007c54:	20009db0 	.word	0x20009db0
 8007c58:	20009db4 	.word	0x20009db4

08007c5c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8007c5c:	b510      	push	{r4, lr}
 8007c5e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007c60:	f7ff feb8 	bl	80079d4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007c64:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007c66:	f7ff fed5 	bl	8007a14 <vPortExitCritical>

	return xReturn;
}
 8007c6a:	fab4 f084 	clz	r0, r4
 8007c6e:	0940      	lsrs	r0, r0, #5
 8007c70:	bd10      	pop	{r4, pc}

08007c72 <prvCopyDataToQueue>:
{
 8007c72:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007c74:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007c76:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007c78:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8007c7a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007c7c:	b952      	cbnz	r2, 8007c94 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007c7e:	6807      	ldr	r7, [r0, #0]
 8007c80:	bb47      	cbnz	r7, 8007cd4 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007c82:	6880      	ldr	r0, [r0, #8]
 8007c84:	f001 f994 	bl	8008fb0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007c88:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007c8a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007c8c:	3601      	adds	r6, #1
 8007c8e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8007c90:	4628      	mov	r0, r5
 8007c92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007c94:	b965      	cbnz	r5, 8007cb0 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007c96:	6840      	ldr	r0, [r0, #4]
 8007c98:	f013 fc36 	bl	801b508 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007c9c:	6863      	ldr	r3, [r4, #4]
 8007c9e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007ca0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007ca2:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007ca4:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007ca6:	4293      	cmp	r3, r2
 8007ca8:	d3f0      	bcc.n	8007c8c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007caa:	6823      	ldr	r3, [r4, #0]
 8007cac:	6063      	str	r3, [r4, #4]
 8007cae:	e7ed      	b.n	8007c8c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007cb0:	68c0      	ldr	r0, [r0, #12]
 8007cb2:	f013 fc29 	bl	801b508 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007cb6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007cb8:	68e3      	ldr	r3, [r4, #12]
 8007cba:	4251      	negs	r1, r2
 8007cbc:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007cbe:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007cc0:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007cc2:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007cc4:	bf3e      	ittt	cc
 8007cc6:	68a3      	ldrcc	r3, [r4, #8]
 8007cc8:	185b      	addcc	r3, r3, r1
 8007cca:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007ccc:	2d02      	cmp	r5, #2
 8007cce:	d101      	bne.n	8007cd4 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007cd0:	b116      	cbz	r6, 8007cd8 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8007cd2:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8007cd4:	2500      	movs	r5, #0
 8007cd6:	e7d9      	b.n	8007c8c <prvCopyDataToQueue+0x1a>
 8007cd8:	4635      	mov	r5, r6
 8007cda:	e7d7      	b.n	8007c8c <prvCopyDataToQueue+0x1a>

08007cdc <prvCopyDataFromQueue>:
{
 8007cdc:	4603      	mov	r3, r0
 8007cde:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007ce0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8007ce2:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007ce4:	b16a      	cbz	r2, 8007d02 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007ce6:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007ce8:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007cea:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007cec:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007cee:	bf28      	it	cs
 8007cf0:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007cf2:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007cf4:	bf28      	it	cs
 8007cf6:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007cf8:	68d9      	ldr	r1, [r3, #12]
}
 8007cfa:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007cfe:	f013 bc03 	b.w	801b508 <memcpy>
}
 8007d02:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007d06:	4770      	bx	lr

08007d08 <prvUnlockQueue>:
{
 8007d08:	b570      	push	{r4, r5, r6, lr}
 8007d0a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007d0c:	f7ff fe62 	bl	80079d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007d10:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007d14:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007d18:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007d1a:	2d00      	cmp	r5, #0
 8007d1c:	dc14      	bgt.n	8007d48 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8007d1e:	23ff      	movs	r3, #255	; 0xff
 8007d20:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8007d24:	f7ff fe76 	bl	8007a14 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007d28:	f7ff fe54 	bl	80079d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007d2c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007d30:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007d34:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007d36:	2d00      	cmp	r5, #0
 8007d38:	dc12      	bgt.n	8007d60 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8007d3a:	23ff      	movs	r3, #255	; 0xff
 8007d3c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8007d40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007d44:	f7ff be66 	b.w	8007a14 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007d48:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007d4a:	2b00      	cmp	r3, #0
 8007d4c:	d0e7      	beq.n	8007d1e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007d4e:	4630      	mov	r0, r6
 8007d50:	f001 f84a 	bl	8008de8 <xTaskRemoveFromEventList>
 8007d54:	b108      	cbz	r0, 8007d5a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8007d56:	f001 f8d3 	bl	8008f00 <vTaskMissedYield>
			--cTxLock;
 8007d5a:	3d01      	subs	r5, #1
 8007d5c:	b26d      	sxtb	r5, r5
 8007d5e:	e7dc      	b.n	8007d1a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007d60:	6923      	ldr	r3, [r4, #16]
 8007d62:	2b00      	cmp	r3, #0
 8007d64:	d0e9      	beq.n	8007d3a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007d66:	4630      	mov	r0, r6
 8007d68:	f001 f83e 	bl	8008de8 <xTaskRemoveFromEventList>
 8007d6c:	b108      	cbz	r0, 8007d72 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8007d6e:	f001 f8c7 	bl	8008f00 <vTaskMissedYield>
				--cRxLock;
 8007d72:	3d01      	subs	r5, #1
 8007d74:	b26d      	sxtb	r5, r5
 8007d76:	e7de      	b.n	8007d36 <prvUnlockQueue+0x2e>

08007d78 <xQueueGenericReset>:
{
 8007d78:	b538      	push	{r3, r4, r5, lr}
 8007d7a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007d7c:	4604      	mov	r4, r0
 8007d7e:	b940      	cbnz	r0, 8007d92 <xQueueGenericReset+0x1a>
 8007d80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d84:	f383 8811 	msr	BASEPRI, r3
 8007d88:	f3bf 8f6f 	isb	sy
 8007d8c:	f3bf 8f4f 	dsb	sy
 8007d90:	e7fe      	b.n	8007d90 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007d92:	f7ff fe1f 	bl	80079d4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007d96:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 8007d9a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007d9c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007d9e:	434b      	muls	r3, r1
 8007da0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007da2:	1a5b      	subs	r3, r3, r1
 8007da4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007da6:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007da8:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007daa:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8007dac:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007dae:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8007db0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007db4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8007db8:	b9a5      	cbnz	r5, 8007de4 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007dba:	6923      	ldr	r3, [r4, #16]
 8007dbc:	b173      	cbz	r3, 8007ddc <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007dbe:	f104 0010 	add.w	r0, r4, #16
 8007dc2:	f001 f811 	bl	8008de8 <xTaskRemoveFromEventList>
 8007dc6:	b148      	cbz	r0, 8007ddc <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8007dc8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007dcc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007dd0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007dd4:	f3bf 8f4f 	dsb	sy
 8007dd8:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007ddc:	f7ff fe1a 	bl	8007a14 <vPortExitCritical>
}
 8007de0:	2001      	movs	r0, #1
 8007de2:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007de4:	f104 0010 	add.w	r0, r4, #16
 8007de8:	f7ff fd46 	bl	8007878 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007dec:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007df0:	f7ff fd42 	bl	8007878 <vListInitialise>
 8007df4:	e7f2      	b.n	8007ddc <xQueueGenericReset+0x64>

08007df6 <xQueueGenericCreateStatic>:
	{
 8007df6:	b513      	push	{r0, r1, r4, lr}
 8007df8:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007dfa:	b940      	cbnz	r0, 8007e0e <xQueueGenericCreateStatic+0x18>
 8007dfc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e00:	f383 8811 	msr	BASEPRI, r3
 8007e04:	f3bf 8f6f 	isb	sy
 8007e08:	f3bf 8f4f 	dsb	sy
 8007e0c:	e7fe      	b.n	8007e0c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 8007e0e:	b943      	cbnz	r3, 8007e22 <xQueueGenericCreateStatic+0x2c>
 8007e10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e14:	f383 8811 	msr	BASEPRI, r3
 8007e18:	f3bf 8f6f 	isb	sy
 8007e1c:	f3bf 8f4f 	dsb	sy
 8007e20:	e7fe      	b.n	8007e20 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007e22:	b14a      	cbz	r2, 8007e38 <xQueueGenericCreateStatic+0x42>
 8007e24:	b991      	cbnz	r1, 8007e4c <xQueueGenericCreateStatic+0x56>
 8007e26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e2a:	f383 8811 	msr	BASEPRI, r3
 8007e2e:	f3bf 8f6f 	isb	sy
 8007e32:	f3bf 8f4f 	dsb	sy
 8007e36:	e7fe      	b.n	8007e36 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8007e38:	b141      	cbz	r1, 8007e4c <xQueueGenericCreateStatic+0x56>
 8007e3a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e3e:	f383 8811 	msr	BASEPRI, r3
 8007e42:	f3bf 8f6f 	isb	sy
 8007e46:	f3bf 8f4f 	dsb	sy
 8007e4a:	e7fe      	b.n	8007e4a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8007e4c:	2350      	movs	r3, #80	; 0x50
 8007e4e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8007e50:	9b01      	ldr	r3, [sp, #4]
 8007e52:	2b50      	cmp	r3, #80	; 0x50
 8007e54:	d008      	beq.n	8007e68 <xQueueGenericCreateStatic+0x72>
 8007e56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e5a:	f383 8811 	msr	BASEPRI, r3
 8007e5e:	f3bf 8f6f 	isb	sy
 8007e62:	f3bf 8f4f 	dsb	sy
 8007e66:	e7fe      	b.n	8007e66 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007e68:	2900      	cmp	r1, #0
 8007e6a:	bf08      	it	eq
 8007e6c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8007e6e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007e70:	6022      	str	r2, [r4, #0]
 8007e72:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8007e74:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007e78:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007e7c:	4619      	mov	r1, r3
 8007e7e:	4620      	mov	r0, r4
 8007e80:	f7ff ff7a 	bl	8007d78 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007e84:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8007e88:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 8007e8c:	4620      	mov	r0, r4
 8007e8e:	b002      	add	sp, #8
 8007e90:	bd10      	pop	{r4, pc}

08007e92 <xQueueGenericCreate>:
	{
 8007e92:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007e94:	460d      	mov	r5, r1
 8007e96:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007e98:	4606      	mov	r6, r0
 8007e9a:	b940      	cbnz	r0, 8007eae <xQueueGenericCreate+0x1c>
 8007e9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ea0:	f383 8811 	msr	BASEPRI, r3
 8007ea4:	f3bf 8f6f 	isb	sy
 8007ea8:	f3bf 8f4f 	dsb	sy
 8007eac:	e7fe      	b.n	8007eac <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007eae:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8007eb0:	3050      	adds	r0, #80	; 0x50
 8007eb2:	f7ff fc17 	bl	80076e4 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007eb6:	4604      	mov	r4, r0
 8007eb8:	b170      	cbz	r0, 8007ed8 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8007eba:	2300      	movs	r3, #0
 8007ebc:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007ec0:	b165      	cbz	r5, 8007edc <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007ec2:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007ec6:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 8007eca:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007ecc:	2101      	movs	r1, #1
 8007ece:	4620      	mov	r0, r4
 8007ed0:	f7ff ff52 	bl	8007d78 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007ed4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8007ed8:	4620      	mov	r0, r4
 8007eda:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007edc:	4603      	mov	r3, r0
 8007ede:	e7f2      	b.n	8007ec6 <xQueueGenericCreate+0x34>

08007ee0 <xQueueCreateCountingSemaphoreStatic>:
	{
 8007ee0:	b513      	push	{r0, r1, r4, lr}
 8007ee2:	4613      	mov	r3, r2
 8007ee4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007ee6:	b940      	cbnz	r0, 8007efa <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007ee8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007eec:	f383 8811 	msr	BASEPRI, r3
 8007ef0:	f3bf 8f6f 	isb	sy
 8007ef4:	f3bf 8f4f 	dsb	sy
 8007ef8:	e7fe      	b.n	8007ef8 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007efa:	4288      	cmp	r0, r1
 8007efc:	d208      	bcs.n	8007f10 <xQueueCreateCountingSemaphoreStatic+0x30>
 8007efe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f02:	f383 8811 	msr	BASEPRI, r3
 8007f06:	f3bf 8f6f 	isb	sy
 8007f0a:	f3bf 8f4f 	dsb	sy
 8007f0e:	e7fe      	b.n	8007f0e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007f10:	2202      	movs	r2, #2
 8007f12:	9200      	str	r2, [sp, #0]
 8007f14:	2200      	movs	r2, #0
 8007f16:	4611      	mov	r1, r2
 8007f18:	f7ff ff6d 	bl	8007df6 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8007f1c:	b100      	cbz	r0, 8007f20 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007f1e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8007f20:	b002      	add	sp, #8
 8007f22:	bd10      	pop	{r4, pc}

08007f24 <xQueueCreateCountingSemaphore>:
	{
 8007f24:	b510      	push	{r4, lr}
 8007f26:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007f28:	b940      	cbnz	r0, 8007f3c <xQueueCreateCountingSemaphore+0x18>
 8007f2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f2e:	f383 8811 	msr	BASEPRI, r3
 8007f32:	f3bf 8f6f 	isb	sy
 8007f36:	f3bf 8f4f 	dsb	sy
 8007f3a:	e7fe      	b.n	8007f3a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007f3c:	4288      	cmp	r0, r1
 8007f3e:	d208      	bcs.n	8007f52 <xQueueCreateCountingSemaphore+0x2e>
 8007f40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f44:	f383 8811 	msr	BASEPRI, r3
 8007f48:	f3bf 8f6f 	isb	sy
 8007f4c:	f3bf 8f4f 	dsb	sy
 8007f50:	e7fe      	b.n	8007f50 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007f52:	2202      	movs	r2, #2
 8007f54:	2100      	movs	r1, #0
 8007f56:	f7ff ff9c 	bl	8007e92 <xQueueGenericCreate>
		if( xHandle != NULL )
 8007f5a:	b100      	cbz	r0, 8007f5e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007f5c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8007f5e:	bd10      	pop	{r4, pc}

08007f60 <xQueueGenericSend>:
{
 8007f60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007f64:	b085      	sub	sp, #20
 8007f66:	4688      	mov	r8, r1
 8007f68:	9201      	str	r2, [sp, #4]
 8007f6a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8007f6c:	4604      	mov	r4, r0
 8007f6e:	b940      	cbnz	r0, 8007f82 <xQueueGenericSend+0x22>
 8007f70:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f74:	f383 8811 	msr	BASEPRI, r3
 8007f78:	f3bf 8f6f 	isb	sy
 8007f7c:	f3bf 8f4f 	dsb	sy
 8007f80:	e7fe      	b.n	8007f80 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007f82:	b951      	cbnz	r1, 8007f9a <xQueueGenericSend+0x3a>
 8007f84:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007f86:	b143      	cbz	r3, 8007f9a <xQueueGenericSend+0x3a>
 8007f88:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f8c:	f383 8811 	msr	BASEPRI, r3
 8007f90:	f3bf 8f6f 	isb	sy
 8007f94:	f3bf 8f4f 	dsb	sy
 8007f98:	e7fe      	b.n	8007f98 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007f9a:	2f02      	cmp	r7, #2
 8007f9c:	d10b      	bne.n	8007fb6 <xQueueGenericSend+0x56>
 8007f9e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007fa0:	2b01      	cmp	r3, #1
 8007fa2:	d008      	beq.n	8007fb6 <xQueueGenericSend+0x56>
 8007fa4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fa8:	f383 8811 	msr	BASEPRI, r3
 8007fac:	f3bf 8f6f 	isb	sy
 8007fb0:	f3bf 8f4f 	dsb	sy
 8007fb4:	e7fe      	b.n	8007fb4 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007fb6:	f000 ffa9 	bl	8008f0c <xTaskGetSchedulerState>
 8007fba:	4606      	mov	r6, r0
 8007fbc:	b950      	cbnz	r0, 8007fd4 <xQueueGenericSend+0x74>
 8007fbe:	9b01      	ldr	r3, [sp, #4]
 8007fc0:	b14b      	cbz	r3, 8007fd6 <xQueueGenericSend+0x76>
 8007fc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fc6:	f383 8811 	msr	BASEPRI, r3
 8007fca:	f3bf 8f6f 	isb	sy
 8007fce:	f3bf 8f4f 	dsb	sy
 8007fd2:	e7fe      	b.n	8007fd2 <xQueueGenericSend+0x72>
 8007fd4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007fd6:	f04f 0900 	mov.w	r9, #0
 8007fda:	e037      	b.n	800804c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007fdc:	9d01      	ldr	r5, [sp, #4]
 8007fde:	b91d      	cbnz	r5, 8007fe8 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8007fe0:	f7ff fd18 	bl	8007a14 <vPortExitCritical>
			return errQUEUE_FULL;
 8007fe4:	2000      	movs	r0, #0
 8007fe6:	e052      	b.n	800808e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8007fe8:	b916      	cbnz	r6, 8007ff0 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007fea:	a802      	add	r0, sp, #8
 8007fec:	f000 ff40 	bl	8008e70 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007ff0:	f7ff fd10 	bl	8007a14 <vPortExitCritical>
		vTaskSuspendAll();
 8007ff4:	f000 fcfa 	bl	80089ec <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007ff8:	f7ff fcec 	bl	80079d4 <vPortEnterCritical>
 8007ffc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008000:	2bff      	cmp	r3, #255	; 0xff
 8008002:	bf08      	it	eq
 8008004:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8008008:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800800c:	2bff      	cmp	r3, #255	; 0xff
 800800e:	bf08      	it	eq
 8008010:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8008014:	f7ff fcfe 	bl	8007a14 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008018:	a901      	add	r1, sp, #4
 800801a:	a802      	add	r0, sp, #8
 800801c:	f000 ff34 	bl	8008e88 <xTaskCheckForTimeOut>
 8008020:	2800      	cmp	r0, #0
 8008022:	d14a      	bne.n	80080ba <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008024:	f7ff fcd6 	bl	80079d4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8008028:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800802a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800802c:	429a      	cmp	r2, r3
 800802e:	d131      	bne.n	8008094 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008030:	f7ff fcf0 	bl	8007a14 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8008034:	9901      	ldr	r1, [sp, #4]
 8008036:	f104 0010 	add.w	r0, r4, #16
 800803a:	f000 fe9d 	bl	8008d78 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800803e:	4620      	mov	r0, r4
 8008040:	f7ff fe62 	bl	8007d08 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008044:	f000 fd76 	bl	8008b34 <xTaskResumeAll>
 8008048:	b360      	cbz	r0, 80080a4 <xQueueGenericSend+0x144>
 800804a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800804c:	f7ff fcc2 	bl	80079d4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008050:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008052:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008054:	429a      	cmp	r2, r3
 8008056:	d301      	bcc.n	800805c <xQueueGenericSend+0xfc>
 8008058:	2f02      	cmp	r7, #2
 800805a:	d1bf      	bne.n	8007fdc <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800805c:	463a      	mov	r2, r7
 800805e:	4641      	mov	r1, r8
 8008060:	4620      	mov	r0, r4
 8008062:	f7ff fe06 	bl	8007c72 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008066:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008068:	b11b      	cbz	r3, 8008072 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800806a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800806e:	f000 febb 	bl	8008de8 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008072:	b148      	cbz	r0, 8008088 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8008074:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008078:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800807c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008080:	f3bf 8f4f 	dsb	sy
 8008084:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008088:	f7ff fcc4 	bl	8007a14 <vPortExitCritical>
				return pdPASS;
 800808c:	2001      	movs	r0, #1
}
 800808e:	b005      	add	sp, #20
 8008090:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8008094:	f7ff fcbe 	bl	8007a14 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008098:	4620      	mov	r0, r4
 800809a:	f7ff fe35 	bl	8007d08 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800809e:	f000 fd49 	bl	8008b34 <xTaskResumeAll>
 80080a2:	e7d2      	b.n	800804a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 80080a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80080a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80080ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80080b0:	f3bf 8f4f 	dsb	sy
 80080b4:	f3bf 8f6f 	isb	sy
 80080b8:	e7c7      	b.n	800804a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 80080ba:	4620      	mov	r0, r4
 80080bc:	f7ff fe24 	bl	8007d08 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80080c0:	f000 fd38 	bl	8008b34 <xTaskResumeAll>
 80080c4:	e78e      	b.n	8007fe4 <xQueueGenericSend+0x84>

080080c6 <xQueueGenericSendFromISR>:
{
 80080c6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80080ca:	4689      	mov	r9, r1
 80080cc:	4690      	mov	r8, r2
 80080ce:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80080d0:	4604      	mov	r4, r0
 80080d2:	b940      	cbnz	r0, 80080e6 <xQueueGenericSendFromISR+0x20>
 80080d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080d8:	f383 8811 	msr	BASEPRI, r3
 80080dc:	f3bf 8f6f 	isb	sy
 80080e0:	f3bf 8f4f 	dsb	sy
 80080e4:	e7fe      	b.n	80080e4 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80080e6:	b951      	cbnz	r1, 80080fe <xQueueGenericSendFromISR+0x38>
 80080e8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80080ea:	b143      	cbz	r3, 80080fe <xQueueGenericSendFromISR+0x38>
 80080ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080f0:	f383 8811 	msr	BASEPRI, r3
 80080f4:	f3bf 8f6f 	isb	sy
 80080f8:	f3bf 8f4f 	dsb	sy
 80080fc:	e7fe      	b.n	80080fc <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80080fe:	2f02      	cmp	r7, #2
 8008100:	d10b      	bne.n	800811a <xQueueGenericSendFromISR+0x54>
 8008102:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008104:	2b01      	cmp	r3, #1
 8008106:	d008      	beq.n	800811a <xQueueGenericSendFromISR+0x54>
 8008108:	f04f 0350 	mov.w	r3, #80	; 0x50
 800810c:	f383 8811 	msr	BASEPRI, r3
 8008110:	f3bf 8f6f 	isb	sy
 8008114:	f3bf 8f4f 	dsb	sy
 8008118:	e7fe      	b.n	8008118 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800811a:	f7ff fd71 	bl	8007c00 <vPortValidateInterruptPriority>
	__asm volatile
 800811e:	f3ef 8611 	mrs	r6, BASEPRI
 8008122:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008126:	f383 8811 	msr	BASEPRI, r3
 800812a:	f3bf 8f6f 	isb	sy
 800812e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008132:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008134:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008136:	429a      	cmp	r2, r3
 8008138:	d301      	bcc.n	800813e <xQueueGenericSendFromISR+0x78>
 800813a:	2f02      	cmp	r7, #2
 800813c:	d122      	bne.n	8008184 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 800813e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008142:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 8008144:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008146:	4649      	mov	r1, r9
 8008148:	4620      	mov	r0, r4
 800814a:	f7ff fd92 	bl	8007c72 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800814e:	1c6b      	adds	r3, r5, #1
 8008150:	d113      	bne.n	800817a <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008152:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008154:	b90b      	cbnz	r3, 800815a <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8008156:	2001      	movs	r0, #1
 8008158:	e00b      	b.n	8008172 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800815a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800815e:	f000 fe43 	bl	8008de8 <xTaskRemoveFromEventList>
 8008162:	2800      	cmp	r0, #0
 8008164:	d0f7      	beq.n	8008156 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8008166:	f1b8 0f00 	cmp.w	r8, #0
 800816a:	d0f4      	beq.n	8008156 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800816c:	2001      	movs	r0, #1
 800816e:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008172:	f386 8811 	msr	BASEPRI, r6
}
 8008176:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800817a:	3501      	adds	r5, #1
 800817c:	b26d      	sxtb	r5, r5
 800817e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8008182:	e7e8      	b.n	8008156 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8008184:	2000      	movs	r0, #0
 8008186:	e7f4      	b.n	8008172 <xQueueGenericSendFromISR+0xac>

08008188 <xQueueGiveFromISR>:
{
 8008188:	b570      	push	{r4, r5, r6, lr}
 800818a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800818c:	4604      	mov	r4, r0
 800818e:	b940      	cbnz	r0, 80081a2 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8008190:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008194:	f383 8811 	msr	BASEPRI, r3
 8008198:	f3bf 8f6f 	isb	sy
 800819c:	f3bf 8f4f 	dsb	sy
 80081a0:	e7fe      	b.n	80081a0 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 80081a2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80081a4:	b143      	cbz	r3, 80081b8 <xQueueGiveFromISR+0x30>
 80081a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081aa:	f383 8811 	msr	BASEPRI, r3
 80081ae:	f3bf 8f6f 	isb	sy
 80081b2:	f3bf 8f4f 	dsb	sy
 80081b6:	e7fe      	b.n	80081b6 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80081b8:	6803      	ldr	r3, [r0, #0]
 80081ba:	b953      	cbnz	r3, 80081d2 <xQueueGiveFromISR+0x4a>
 80081bc:	6883      	ldr	r3, [r0, #8]
 80081be:	b143      	cbz	r3, 80081d2 <xQueueGiveFromISR+0x4a>
 80081c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081c4:	f383 8811 	msr	BASEPRI, r3
 80081c8:	f3bf 8f6f 	isb	sy
 80081cc:	f3bf 8f4f 	dsb	sy
 80081d0:	e7fe      	b.n	80081d0 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80081d2:	f7ff fd15 	bl	8007c00 <vPortValidateInterruptPriority>
	__asm volatile
 80081d6:	f3ef 8611 	mrs	r6, BASEPRI
 80081da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081de:	f383 8811 	msr	BASEPRI, r3
 80081e2:	f3bf 8f6f 	isb	sy
 80081e6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80081ea:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 80081ec:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80081ee:	4293      	cmp	r3, r2
 80081f0:	d91c      	bls.n	800822c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 80081f2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80081f6:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 80081f8:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 80081fa:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80081fc:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 80081fe:	d110      	bne.n	8008222 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008200:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008202:	b90b      	cbnz	r3, 8008208 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8008204:	2001      	movs	r0, #1
 8008206:	e009      	b.n	800821c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008208:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800820c:	f000 fdec 	bl	8008de8 <xTaskRemoveFromEventList>
 8008210:	2800      	cmp	r0, #0
 8008212:	d0f7      	beq.n	8008204 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008214:	2d00      	cmp	r5, #0
 8008216:	d0f5      	beq.n	8008204 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008218:	2001      	movs	r0, #1
 800821a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800821c:	f386 8811 	msr	BASEPRI, r6
}
 8008220:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008222:	3301      	adds	r3, #1
 8008224:	b25b      	sxtb	r3, r3
 8008226:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800822a:	e7eb      	b.n	8008204 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800822c:	2000      	movs	r0, #0
 800822e:	e7f5      	b.n	800821c <xQueueGiveFromISR+0x94>

08008230 <xQueueReceive>:
{
 8008230:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008234:	460f      	mov	r7, r1
 8008236:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008238:	4604      	mov	r4, r0
 800823a:	b940      	cbnz	r0, 800824e <xQueueReceive+0x1e>
	__asm volatile
 800823c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008240:	f383 8811 	msr	BASEPRI, r3
 8008244:	f3bf 8f6f 	isb	sy
 8008248:	f3bf 8f4f 	dsb	sy
 800824c:	e7fe      	b.n	800824c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800824e:	b951      	cbnz	r1, 8008266 <xQueueReceive+0x36>
 8008250:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008252:	b143      	cbz	r3, 8008266 <xQueueReceive+0x36>
 8008254:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008258:	f383 8811 	msr	BASEPRI, r3
 800825c:	f3bf 8f6f 	isb	sy
 8008260:	f3bf 8f4f 	dsb	sy
 8008264:	e7fe      	b.n	8008264 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008266:	f000 fe51 	bl	8008f0c <xTaskGetSchedulerState>
 800826a:	4606      	mov	r6, r0
 800826c:	b950      	cbnz	r0, 8008284 <xQueueReceive+0x54>
 800826e:	9b01      	ldr	r3, [sp, #4]
 8008270:	b14b      	cbz	r3, 8008286 <xQueueReceive+0x56>
 8008272:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008276:	f383 8811 	msr	BASEPRI, r3
 800827a:	f3bf 8f6f 	isb	sy
 800827e:	f3bf 8f4f 	dsb	sy
 8008282:	e7fe      	b.n	8008282 <xQueueReceive+0x52>
 8008284:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008286:	f04f 0800 	mov.w	r8, #0
 800828a:	e03d      	b.n	8008308 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800828c:	9d01      	ldr	r5, [sp, #4]
 800828e:	b91d      	cbnz	r5, 8008298 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8008290:	f7ff fbc0 	bl	8007a14 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8008294:	2000      	movs	r0, #0
 8008296:	e056      	b.n	8008346 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8008298:	b916      	cbnz	r6, 80082a0 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800829a:	a802      	add	r0, sp, #8
 800829c:	f000 fde8 	bl	8008e70 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80082a0:	f7ff fbb8 	bl	8007a14 <vPortExitCritical>
		vTaskSuspendAll();
 80082a4:	f000 fba2 	bl	80089ec <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80082a8:	f7ff fb94 	bl	80079d4 <vPortEnterCritical>
 80082ac:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80082b0:	2bff      	cmp	r3, #255	; 0xff
 80082b2:	bf08      	it	eq
 80082b4:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 80082b8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80082bc:	2bff      	cmp	r3, #255	; 0xff
 80082be:	bf08      	it	eq
 80082c0:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 80082c4:	f7ff fba6 	bl	8007a14 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80082c8:	a901      	add	r1, sp, #4
 80082ca:	a802      	add	r0, sp, #8
 80082cc:	f000 fddc 	bl	8008e88 <xTaskCheckForTimeOut>
 80082d0:	2800      	cmp	r0, #0
 80082d2:	d141      	bne.n	8008358 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80082d4:	4620      	mov	r0, r4
 80082d6:	f7ff fcc1 	bl	8007c5c <prvIsQueueEmpty>
 80082da:	b3b8      	cbz	r0, 800834c <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80082dc:	9901      	ldr	r1, [sp, #4]
 80082de:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80082e2:	f000 fd49 	bl	8008d78 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80082e6:	4620      	mov	r0, r4
 80082e8:	f7ff fd0e 	bl	8007d08 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80082ec:	f000 fc22 	bl	8008b34 <xTaskResumeAll>
 80082f0:	b948      	cbnz	r0, 8008306 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 80082f2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80082f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80082fa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80082fe:	f3bf 8f4f 	dsb	sy
 8008302:	f3bf 8f6f 	isb	sy
 8008306:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008308:	f7ff fb64 	bl	80079d4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800830c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800830e:	2d00      	cmp	r5, #0
 8008310:	d0bc      	beq.n	800828c <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008312:	4639      	mov	r1, r7
 8008314:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008316:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008318:	f7ff fce0 	bl	8007cdc <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800831c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800831e:	6923      	ldr	r3, [r4, #16]
 8008320:	b173      	cbz	r3, 8008340 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008322:	f104 0010 	add.w	r0, r4, #16
 8008326:	f000 fd5f 	bl	8008de8 <xTaskRemoveFromEventList>
 800832a:	b148      	cbz	r0, 8008340 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800832c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008330:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008334:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008338:	f3bf 8f4f 	dsb	sy
 800833c:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008340:	f7ff fb68 	bl	8007a14 <vPortExitCritical>
				return pdPASS;
 8008344:	2001      	movs	r0, #1
}
 8008346:	b004      	add	sp, #16
 8008348:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800834c:	4620      	mov	r0, r4
 800834e:	f7ff fcdb 	bl	8007d08 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008352:	f000 fbef 	bl	8008b34 <xTaskResumeAll>
 8008356:	e7d6      	b.n	8008306 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8008358:	4620      	mov	r0, r4
 800835a:	f7ff fcd5 	bl	8007d08 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800835e:	f000 fbe9 	bl	8008b34 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008362:	4620      	mov	r0, r4
 8008364:	f7ff fc7a 	bl	8007c5c <prvIsQueueEmpty>
 8008368:	2800      	cmp	r0, #0
 800836a:	d0cc      	beq.n	8008306 <xQueueReceive+0xd6>
 800836c:	e792      	b.n	8008294 <xQueueReceive+0x64>

0800836e <xQueueSemaphoreTake>:
{
 800836e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008370:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8008372:	4604      	mov	r4, r0
{
 8008374:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008376:	b940      	cbnz	r0, 800838a <xQueueSemaphoreTake+0x1c>
 8008378:	f04f 0350 	mov.w	r3, #80	; 0x50
 800837c:	f383 8811 	msr	BASEPRI, r3
 8008380:	f3bf 8f6f 	isb	sy
 8008384:	f3bf 8f4f 	dsb	sy
 8008388:	e7fe      	b.n	8008388 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800838a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800838c:	b145      	cbz	r5, 80083a0 <xQueueSemaphoreTake+0x32>
 800838e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008392:	f383 8811 	msr	BASEPRI, r3
 8008396:	f3bf 8f6f 	isb	sy
 800839a:	f3bf 8f4f 	dsb	sy
 800839e:	e7fe      	b.n	800839e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80083a0:	f000 fdb4 	bl	8008f0c <xTaskGetSchedulerState>
 80083a4:	4606      	mov	r6, r0
 80083a6:	b950      	cbnz	r0, 80083be <xQueueSemaphoreTake+0x50>
 80083a8:	9b01      	ldr	r3, [sp, #4]
 80083aa:	b15b      	cbz	r3, 80083c4 <xQueueSemaphoreTake+0x56>
 80083ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083b0:	f383 8811 	msr	BASEPRI, r3
 80083b4:	f3bf 8f6f 	isb	sy
 80083b8:	f3bf 8f4f 	dsb	sy
 80083bc:	e7fe      	b.n	80083bc <xQueueSemaphoreTake+0x4e>
 80083be:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 80083c0:	2700      	movs	r7, #0
 80083c2:	e053      	b.n	800846c <xQueueSemaphoreTake+0xfe>
 80083c4:	4605      	mov	r5, r0
 80083c6:	e7fb      	b.n	80083c0 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 80083c8:	9b01      	ldr	r3, [sp, #4]
 80083ca:	b963      	cbnz	r3, 80083e6 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 80083cc:	b145      	cbz	r5, 80083e0 <xQueueSemaphoreTake+0x72>
 80083ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083d2:	f383 8811 	msr	BASEPRI, r3
 80083d6:	f3bf 8f6f 	isb	sy
 80083da:	f3bf 8f4f 	dsb	sy
 80083de:	e7fe      	b.n	80083de <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 80083e0:	f7ff fb18 	bl	8007a14 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80083e4:	e062      	b.n	80084ac <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 80083e6:	b916      	cbnz	r6, 80083ee <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80083e8:	a802      	add	r0, sp, #8
 80083ea:	f000 fd41 	bl	8008e70 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80083ee:	f7ff fb11 	bl	8007a14 <vPortExitCritical>
		vTaskSuspendAll();
 80083f2:	f000 fafb 	bl	80089ec <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80083f6:	f7ff faed 	bl	80079d4 <vPortEnterCritical>
 80083fa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80083fe:	2bff      	cmp	r3, #255	; 0xff
 8008400:	bf08      	it	eq
 8008402:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8008406:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800840a:	2bff      	cmp	r3, #255	; 0xff
 800840c:	bf08      	it	eq
 800840e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8008412:	f7ff faff 	bl	8007a14 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008416:	a901      	add	r1, sp, #4
 8008418:	a802      	add	r0, sp, #8
 800841a:	f000 fd35 	bl	8008e88 <xTaskCheckForTimeOut>
 800841e:	2800      	cmp	r0, #0
 8008420:	d14d      	bne.n	80084be <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008422:	4620      	mov	r0, r4
 8008424:	f7ff fc1a 	bl	8007c5c <prvIsQueueEmpty>
 8008428:	2800      	cmp	r0, #0
 800842a:	d042      	beq.n	80084b2 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800842c:	6823      	ldr	r3, [r4, #0]
 800842e:	b93b      	cbnz	r3, 8008440 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8008430:	f7ff fad0 	bl	80079d4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008434:	68a0      	ldr	r0, [r4, #8]
 8008436:	f000 fd79 	bl	8008f2c <xTaskPriorityInherit>
 800843a:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800843c:	f7ff faea 	bl	8007a14 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008440:	9901      	ldr	r1, [sp, #4]
 8008442:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008446:	f000 fc97 	bl	8008d78 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800844a:	4620      	mov	r0, r4
 800844c:	f7ff fc5c 	bl	8007d08 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008450:	f000 fb70 	bl	8008b34 <xTaskResumeAll>
 8008454:	b948      	cbnz	r0, 800846a <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8008456:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800845a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800845e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008462:	f3bf 8f4f 	dsb	sy
 8008466:	f3bf 8f6f 	isb	sy
 800846a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800846c:	f7ff fab2 	bl	80079d4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8008470:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008472:	2b00      	cmp	r3, #0
 8008474:	d0a8      	beq.n	80083c8 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008476:	3b01      	subs	r3, #1
 8008478:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800847a:	6823      	ldr	r3, [r4, #0]
 800847c:	b913      	cbnz	r3, 8008484 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800847e:	f000 fe2d 	bl	80090dc <pvTaskIncrementMutexHeldCount>
 8008482:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008484:	6923      	ldr	r3, [r4, #16]
 8008486:	b173      	cbz	r3, 80084a6 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008488:	f104 0010 	add.w	r0, r4, #16
 800848c:	f000 fcac 	bl	8008de8 <xTaskRemoveFromEventList>
 8008490:	b148      	cbz	r0, 80084a6 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8008492:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008496:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800849a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800849e:	f3bf 8f4f 	dsb	sy
 80084a2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80084a6:	f7ff fab5 	bl	8007a14 <vPortExitCritical>
				return pdPASS;
 80084aa:	2501      	movs	r5, #1
}
 80084ac:	4628      	mov	r0, r5
 80084ae:	b005      	add	sp, #20
 80084b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 80084b2:	4620      	mov	r0, r4
 80084b4:	f7ff fc28 	bl	8007d08 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80084b8:	f000 fb3c 	bl	8008b34 <xTaskResumeAll>
 80084bc:	e7d5      	b.n	800846a <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 80084be:	4620      	mov	r0, r4
 80084c0:	f7ff fc22 	bl	8007d08 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80084c4:	f000 fb36 	bl	8008b34 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80084c8:	4620      	mov	r0, r4
 80084ca:	f7ff fbc7 	bl	8007c5c <prvIsQueueEmpty>
 80084ce:	2800      	cmp	r0, #0
 80084d0:	d0cb      	beq.n	800846a <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 80084d2:	2d00      	cmp	r5, #0
 80084d4:	d0ea      	beq.n	80084ac <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 80084d6:	f7ff fa7d 	bl	80079d4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80084da:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80084dc:	b119      	cbz	r1, 80084e6 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80084de:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80084e0:	6819      	ldr	r1, [r3, #0]
 80084e2:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80084e6:	68a0      	ldr	r0, [r4, #8]
 80084e8:	f000 fda6 	bl	8009038 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 80084ec:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 80084ee:	f7ff fa91 	bl	8007a14 <vPortExitCritical>
 80084f2:	e7db      	b.n	80084ac <xQueueSemaphoreTake+0x13e>

080084f4 <xQueueReceiveFromISR>:
{
 80084f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80084f8:	4689      	mov	r9, r1
 80084fa:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 80084fc:	4605      	mov	r5, r0
 80084fe:	b940      	cbnz	r0, 8008512 <xQueueReceiveFromISR+0x1e>
 8008500:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008504:	f383 8811 	msr	BASEPRI, r3
 8008508:	f3bf 8f6f 	isb	sy
 800850c:	f3bf 8f4f 	dsb	sy
 8008510:	e7fe      	b.n	8008510 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008512:	b951      	cbnz	r1, 800852a <xQueueReceiveFromISR+0x36>
 8008514:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008516:	b143      	cbz	r3, 800852a <xQueueReceiveFromISR+0x36>
 8008518:	f04f 0350 	mov.w	r3, #80	; 0x50
 800851c:	f383 8811 	msr	BASEPRI, r3
 8008520:	f3bf 8f6f 	isb	sy
 8008524:	f3bf 8f4f 	dsb	sy
 8008528:	e7fe      	b.n	8008528 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800852a:	f7ff fb69 	bl	8007c00 <vPortValidateInterruptPriority>
	__asm volatile
 800852e:	f3ef 8711 	mrs	r7, BASEPRI
 8008532:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008536:	f383 8811 	msr	BASEPRI, r3
 800853a:	f3bf 8f6f 	isb	sy
 800853e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008542:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008544:	b31c      	cbz	r4, 800858e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8008546:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800854a:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800854c:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800854e:	4628      	mov	r0, r5
 8008550:	f7ff fbc4 	bl	8007cdc <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008554:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8008556:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008558:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800855a:	d113      	bne.n	8008584 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800855c:	692b      	ldr	r3, [r5, #16]
 800855e:	b90b      	cbnz	r3, 8008564 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8008560:	2001      	movs	r0, #1
 8008562:	e00b      	b.n	800857c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008564:	f105 0010 	add.w	r0, r5, #16
 8008568:	f000 fc3e 	bl	8008de8 <xTaskRemoveFromEventList>
 800856c:	2800      	cmp	r0, #0
 800856e:	d0f7      	beq.n	8008560 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8008570:	f1b8 0f00 	cmp.w	r8, #0
 8008574:	d0f4      	beq.n	8008560 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8008576:	2001      	movs	r0, #1
 8008578:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800857c:	f387 8811 	msr	BASEPRI, r7
}
 8008580:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008584:	3601      	adds	r6, #1
 8008586:	b276      	sxtb	r6, r6
 8008588:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800858c:	e7e8      	b.n	8008560 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800858e:	4620      	mov	r0, r4
 8008590:	e7f4      	b.n	800857c <xQueueReceiveFromISR+0x88>
	...

08008594 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8008594:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008596:	4a07      	ldr	r2, [pc, #28]	; (80085b4 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008598:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800859a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800859e:	b92c      	cbnz	r4, 80085ac <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80085a0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80085a4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80085a8:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80085aa:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80085ac:	3301      	adds	r3, #1
 80085ae:	2b08      	cmp	r3, #8
 80085b0:	d1f3      	bne.n	800859a <vQueueAddToRegistry+0x6>
 80085b2:	e7fa      	b.n	80085aa <vQueueAddToRegistry+0x16>
 80085b4:	20009db8 	.word	0x20009db8

080085b8 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 80085b8:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80085ba:	4a08      	ldr	r2, [pc, #32]	; (80085dc <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80085bc:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80085be:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 80085c2:	684c      	ldr	r4, [r1, #4]
 80085c4:	4284      	cmp	r4, r0
 80085c6:	d104      	bne.n	80085d2 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80085c8:	2000      	movs	r0, #0
 80085ca:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80085ce:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80085d0:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80085d2:	3301      	adds	r3, #1
 80085d4:	2b08      	cmp	r3, #8
 80085d6:	d1f2      	bne.n	80085be <vQueueUnregisterQueue+0x6>
 80085d8:	e7fa      	b.n	80085d0 <vQueueUnregisterQueue+0x18>
 80085da:	bf00      	nop
 80085dc:	20009db8 	.word	0x20009db8

080085e0 <vQueueDelete>:
{
 80085e0:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 80085e2:	4604      	mov	r4, r0
 80085e4:	b940      	cbnz	r0, 80085f8 <vQueueDelete+0x18>
	__asm volatile
 80085e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085ea:	f383 8811 	msr	BASEPRI, r3
 80085ee:	f3bf 8f6f 	isb	sy
 80085f2:	f3bf 8f4f 	dsb	sy
 80085f6:	e7fe      	b.n	80085f6 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 80085f8:	f7ff ffde 	bl	80085b8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 80085fc:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8008600:	b923      	cbnz	r3, 800860c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8008602:	4620      	mov	r0, r4
}
 8008604:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008608:	f7ff b8fe 	b.w	8007808 <vPortFree>
}
 800860c:	bd10      	pop	{r4, pc}

0800860e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800860e:	b570      	push	{r4, r5, r6, lr}
 8008610:	4604      	mov	r4, r0
 8008612:	460d      	mov	r5, r1
 8008614:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008616:	f7ff f9dd 	bl	80079d4 <vPortEnterCritical>
 800861a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800861e:	2bff      	cmp	r3, #255	; 0xff
 8008620:	bf04      	itt	eq
 8008622:	2300      	moveq	r3, #0
 8008624:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8008628:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800862c:	2bff      	cmp	r3, #255	; 0xff
 800862e:	bf04      	itt	eq
 8008630:	2300      	moveq	r3, #0
 8008632:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8008636:	f7ff f9ed 	bl	8007a14 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800863a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800863c:	b92b      	cbnz	r3, 800864a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800863e:	4632      	mov	r2, r6
 8008640:	4629      	mov	r1, r5
 8008642:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008646:	f000 fbb1 	bl	8008dac <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800864a:	4620      	mov	r0, r4
	}
 800864c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008650:	f7ff bb5a 	b.w	8007d08 <prvUnlockQueue>

08008654 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008654:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008658:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800865a:	f7ff f9bb 	bl	80079d4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800865e:	4b30      	ldr	r3, [pc, #192]	; (8008720 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8008660:	4e30      	ldr	r6, [pc, #192]	; (8008724 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8008662:	681a      	ldr	r2, [r3, #0]
 8008664:	4f30      	ldr	r7, [pc, #192]	; (8008728 <prvAddNewTaskToReadyList+0xd4>)
 8008666:	3201      	adds	r2, #1
 8008668:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800866a:	6835      	ldr	r5, [r6, #0]
 800866c:	2d00      	cmp	r5, #0
 800866e:	d14b      	bne.n	8008708 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8008670:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8008672:	681b      	ldr	r3, [r3, #0]
 8008674:	2b01      	cmp	r3, #1
 8008676:	d11f      	bne.n	80086b8 <prvAddNewTaskToReadyList+0x64>
 8008678:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800867a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800867c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800867e:	f7ff f8fb 	bl	8007878 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008682:	2d38      	cmp	r5, #56	; 0x38
 8008684:	f108 0814 	add.w	r8, r8, #20
 8008688:	d1f7      	bne.n	800867a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800868a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8008750 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800868e:	4d27      	ldr	r5, [pc, #156]	; (800872c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8008690:	4640      	mov	r0, r8
 8008692:	f7ff f8f1 	bl	8007878 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8008696:	4628      	mov	r0, r5
 8008698:	f7ff f8ee 	bl	8007878 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800869c:	4824      	ldr	r0, [pc, #144]	; (8008730 <prvAddNewTaskToReadyList+0xdc>)
 800869e:	f7ff f8eb 	bl	8007878 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80086a2:	4824      	ldr	r0, [pc, #144]	; (8008734 <prvAddNewTaskToReadyList+0xe0>)
 80086a4:	f7ff f8e8 	bl	8007878 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80086a8:	4823      	ldr	r0, [pc, #140]	; (8008738 <prvAddNewTaskToReadyList+0xe4>)
 80086aa:	f7ff f8e5 	bl	8007878 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80086ae:	4b23      	ldr	r3, [pc, #140]	; (800873c <prvAddNewTaskToReadyList+0xe8>)
 80086b0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80086b4:	4b22      	ldr	r3, [pc, #136]	; (8008740 <prvAddNewTaskToReadyList+0xec>)
 80086b6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 80086b8:	4a22      	ldr	r2, [pc, #136]	; (8008744 <prvAddNewTaskToReadyList+0xf0>)
 80086ba:	6813      	ldr	r3, [r2, #0]
 80086bc:	3301      	adds	r3, #1
 80086be:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80086c0:	4a21      	ldr	r2, [pc, #132]	; (8008748 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80086c2:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80086c4:	6811      	ldr	r1, [r2, #0]
 80086c6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80086c8:	2014      	movs	r0, #20
 80086ca:	428b      	cmp	r3, r1
 80086cc:	fb00 7003 	mla	r0, r0, r3, r7
 80086d0:	f104 0104 	add.w	r1, r4, #4
 80086d4:	bf88      	it	hi
 80086d6:	6013      	strhi	r3, [r2, #0]
 80086d8:	f7ff f8dc 	bl	8007894 <vListInsertEnd>
	taskEXIT_CRITICAL();
 80086dc:	f7ff f99a 	bl	8007a14 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 80086e0:	4b1a      	ldr	r3, [pc, #104]	; (800874c <prvAddNewTaskToReadyList+0xf8>)
 80086e2:	681b      	ldr	r3, [r3, #0]
 80086e4:	b173      	cbz	r3, 8008704 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80086e6:	6833      	ldr	r3, [r6, #0]
 80086e8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80086ea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80086ec:	429a      	cmp	r2, r3
 80086ee:	d209      	bcs.n	8008704 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 80086f0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80086f4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80086f8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80086fc:	f3bf 8f4f 	dsb	sy
 8008700:	f3bf 8f6f 	isb	sy
}
 8008704:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8008708:	4b10      	ldr	r3, [pc, #64]	; (800874c <prvAddNewTaskToReadyList+0xf8>)
 800870a:	681b      	ldr	r3, [r3, #0]
 800870c:	2b00      	cmp	r3, #0
 800870e:	d1d3      	bne.n	80086b8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008710:	6833      	ldr	r3, [r6, #0]
 8008712:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008714:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008716:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8008718:	bf98      	it	ls
 800871a:	6034      	strls	r4, [r6, #0]
 800871c:	e7cc      	b.n	80086b8 <prvAddNewTaskToReadyList+0x64>
 800871e:	bf00      	nop
 8008720:	2000a264 	.word	0x2000a264
 8008724:	20009df8 	.word	0x20009df8
 8008728:	20009e04 	.word	0x20009e04
 800872c:	2000a290 	.word	0x2000a290
 8008730:	2000a2ac 	.word	0x2000a2ac
 8008734:	2000a2d8 	.word	0x2000a2d8
 8008738:	2000a2c4 	.word	0x2000a2c4
 800873c:	20009dfc 	.word	0x20009dfc
 8008740:	20009e00 	.word	0x20009e00
 8008744:	2000a274 	.word	0x2000a274
 8008748:	2000a278 	.word	0x2000a278
 800874c:	2000a2c0 	.word	0x2000a2c0
 8008750:	2000a27c 	.word	0x2000a27c

08008754 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8008756:	4b15      	ldr	r3, [pc, #84]	; (80087ac <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008758:	4e15      	ldr	r6, [pc, #84]	; (80087b0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800875a:	681d      	ldr	r5, [r3, #0]
{
 800875c:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800875e:	6830      	ldr	r0, [r6, #0]
 8008760:	3004      	adds	r0, #4
{
 8008762:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008764:	f7ff f8b9 	bl	80078da <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8008768:	1c63      	adds	r3, r4, #1
 800876a:	d107      	bne.n	800877c <prvAddCurrentTaskToDelayedList+0x28>
 800876c:	b137      	cbz	r7, 800877c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800876e:	6831      	ldr	r1, [r6, #0]
 8008770:	4810      	ldr	r0, [pc, #64]	; (80087b4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8008772:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008776:	3104      	adds	r1, #4
 8008778:	f7ff b88c 	b.w	8007894 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800877c:	6833      	ldr	r3, [r6, #0]
 800877e:	192c      	adds	r4, r5, r4
 8008780:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8008782:	d307      	bcc.n	8008794 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008784:	4b0c      	ldr	r3, [pc, #48]	; (80087b8 <prvAddCurrentTaskToDelayedList+0x64>)
 8008786:	6818      	ldr	r0, [r3, #0]
 8008788:	6831      	ldr	r1, [r6, #0]
}
 800878a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800878e:	3104      	adds	r1, #4
 8008790:	f7ff b88c 	b.w	80078ac <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008794:	4b09      	ldr	r3, [pc, #36]	; (80087bc <prvAddCurrentTaskToDelayedList+0x68>)
 8008796:	6818      	ldr	r0, [r3, #0]
 8008798:	6831      	ldr	r1, [r6, #0]
 800879a:	3104      	adds	r1, #4
 800879c:	f7ff f886 	bl	80078ac <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80087a0:	4b07      	ldr	r3, [pc, #28]	; (80087c0 <prvAddCurrentTaskToDelayedList+0x6c>)
 80087a2:	681a      	ldr	r2, [r3, #0]
 80087a4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80087a6:	bf88      	it	hi
 80087a8:	601c      	strhi	r4, [r3, #0]
}
 80087aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80087ac:	2000a2ec 	.word	0x2000a2ec
 80087b0:	20009df8 	.word	0x20009df8
 80087b4:	2000a2c4 	.word	0x2000a2c4
 80087b8:	20009e00 	.word	0x20009e00
 80087bc:	20009dfc 	.word	0x20009dfc
 80087c0:	2000a2a4 	.word	0x2000a2a4

080087c4 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80087c4:	4a06      	ldr	r2, [pc, #24]	; (80087e0 <prvResetNextTaskUnblockTime+0x1c>)
 80087c6:	6813      	ldr	r3, [r2, #0]
 80087c8:	6819      	ldr	r1, [r3, #0]
 80087ca:	4b06      	ldr	r3, [pc, #24]	; (80087e4 <prvResetNextTaskUnblockTime+0x20>)
 80087cc:	b919      	cbnz	r1, 80087d6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 80087ce:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80087d2:	601a      	str	r2, [r3, #0]
}
 80087d4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80087d6:	6812      	ldr	r2, [r2, #0]
 80087d8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80087da:	68d2      	ldr	r2, [r2, #12]
 80087dc:	6852      	ldr	r2, [r2, #4]
 80087de:	e7f8      	b.n	80087d2 <prvResetNextTaskUnblockTime+0xe>
 80087e0:	20009dfc 	.word	0x20009dfc
 80087e4:	2000a2a4 	.word	0x2000a2a4

080087e8 <prvDeleteTCB>:
	{
 80087e8:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80087ea:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 80087ee:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80087f0:	b93b      	cbnz	r3, 8008802 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 80087f2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80087f4:	f7ff f808 	bl	8007808 <vPortFree>
				vPortFree( pxTCB );
 80087f8:	4620      	mov	r0, r4
	}
 80087fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 80087fe:	f7ff b803 	b.w	8007808 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008802:	2b01      	cmp	r3, #1
 8008804:	d0f9      	beq.n	80087fa <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008806:	2b02      	cmp	r3, #2
 8008808:	d008      	beq.n	800881c <prvDeleteTCB+0x34>
 800880a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800880e:	f383 8811 	msr	BASEPRI, r3
 8008812:	f3bf 8f6f 	isb	sy
 8008816:	f3bf 8f4f 	dsb	sy
 800881a:	e7fe      	b.n	800881a <prvDeleteTCB+0x32>
	}
 800881c:	bd10      	pop	{r4, pc}
	...

08008820 <prvIdleTask>:
{
 8008820:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008822:	4c14      	ldr	r4, [pc, #80]	; (8008874 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008824:	4f14      	ldr	r7, [pc, #80]	; (8008878 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 8008826:	4d15      	ldr	r5, [pc, #84]	; (800887c <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008828:	6823      	ldr	r3, [r4, #0]
 800882a:	b983      	cbnz	r3, 800884e <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800882c:	4b14      	ldr	r3, [pc, #80]	; (8008880 <prvIdleTask+0x60>)
 800882e:	681b      	ldr	r3, [r3, #0]
 8008830:	2b01      	cmp	r3, #1
 8008832:	d909      	bls.n	8008848 <prvIdleTask+0x28>
				taskYIELD();
 8008834:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008838:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800883c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008840:	f3bf 8f4f 	dsb	sy
 8008844:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8008848:	f7f8 fde2 	bl	8001410 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800884c:	e7eb      	b.n	8008826 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800884e:	f7ff f8c1 	bl	80079d4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008852:	68fb      	ldr	r3, [r7, #12]
 8008854:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008856:	1d30      	adds	r0, r6, #4
 8008858:	f7ff f83f 	bl	80078da <uxListRemove>
				--uxCurrentNumberOfTasks;
 800885c:	682b      	ldr	r3, [r5, #0]
 800885e:	3b01      	subs	r3, #1
 8008860:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8008862:	6823      	ldr	r3, [r4, #0]
 8008864:	3b01      	subs	r3, #1
 8008866:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8008868:	f7ff f8d4 	bl	8007a14 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800886c:	4630      	mov	r0, r6
 800886e:	f7ff ffbb 	bl	80087e8 <prvDeleteTCB>
 8008872:	e7d9      	b.n	8008828 <prvIdleTask+0x8>
 8008874:	2000a268 	.word	0x2000a268
 8008878:	2000a2d8 	.word	0x2000a2d8
 800887c:	2000a264 	.word	0x2000a264
 8008880:	20009e04 	.word	0x20009e04

08008884 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008884:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008888:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800888c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8008890:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008892:	4606      	mov	r6, r0
 8008894:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008896:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8008898:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800889a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800889c:	f012 fe42 	bl	801b524 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80088a0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80088a2:	f1a9 0904 	sub.w	r9, r9, #4
 80088a6:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80088a8:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 80088ac:	b3b5      	cbz	r5, 800891c <prvInitialiseNewTask.constprop.0+0x98>
 80088ae:	1e6b      	subs	r3, r5, #1
 80088b0:	f104 0234 	add.w	r2, r4, #52	; 0x34
 80088b4:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80088b6:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 80088ba:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 80088be:	b108      	cbz	r0, 80088c4 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 80088c0:	42ab      	cmp	r3, r5
 80088c2:	d1f8      	bne.n	80088b6 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80088c4:	2300      	movs	r3, #0
 80088c6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80088ca:	9d08      	ldr	r5, [sp, #32]
 80088cc:	2d37      	cmp	r5, #55	; 0x37
 80088ce:	bf28      	it	cs
 80088d0:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 80088d2:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 80088d6:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 80088d8:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80088da:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 80088dc:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80088e0:	f7fe ffd5 	bl	800788e <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80088e4:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80088e8:	f104 0018 	add.w	r0, r4, #24
 80088ec:	f7fe ffcf 	bl	800788e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 80088f0:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 80088f4:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80088f6:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 80088f8:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 80088fa:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80088fe:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008902:	463a      	mov	r2, r7
 8008904:	4631      	mov	r1, r6
 8008906:	4648      	mov	r0, r9
 8008908:	f7ff f836 	bl	8007978 <pxPortInitialiseStack>
 800890c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800890e:	f1b8 0f00 	cmp.w	r8, #0
 8008912:	d001      	beq.n	8008918 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008914:	f8c8 4000 	str.w	r4, [r8]
}
 8008918:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800891c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8008920:	e7d3      	b.n	80088ca <prvInitialiseNewTask.constprop.0+0x46>

08008922 <xTaskCreateStatic>:
	{
 8008922:	b570      	push	{r4, r5, r6, lr}
 8008924:	b086      	sub	sp, #24
 8008926:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800892a:	b945      	cbnz	r5, 800893e <xTaskCreateStatic+0x1c>
 800892c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008930:	f383 8811 	msr	BASEPRI, r3
 8008934:	f3bf 8f6f 	isb	sy
 8008938:	f3bf 8f4f 	dsb	sy
 800893c:	e7fe      	b.n	800893c <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800893e:	b944      	cbnz	r4, 8008952 <xTaskCreateStatic+0x30>
 8008940:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008944:	f383 8811 	msr	BASEPRI, r3
 8008948:	f3bf 8f6f 	isb	sy
 800894c:	f3bf 8f4f 	dsb	sy
 8008950:	e7fe      	b.n	8008950 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8008952:	2660      	movs	r6, #96	; 0x60
 8008954:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8008956:	9e05      	ldr	r6, [sp, #20]
 8008958:	2e60      	cmp	r6, #96	; 0x60
 800895a:	d008      	beq.n	800896e <xTaskCreateStatic+0x4c>
 800895c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008960:	f383 8811 	msr	BASEPRI, r3
 8008964:	f3bf 8f6f 	isb	sy
 8008968:	f3bf 8f4f 	dsb	sy
 800896c:	e7fe      	b.n	800896c <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800896e:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8008970:	2502      	movs	r5, #2
 8008972:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008976:	ad04      	add	r5, sp, #16
 8008978:	9501      	str	r5, [sp, #4]
 800897a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800897c:	9402      	str	r4, [sp, #8]
 800897e:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8008980:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008982:	f7ff ff7f 	bl	8008884 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008986:	4620      	mov	r0, r4
 8008988:	f7ff fe64 	bl	8008654 <prvAddNewTaskToReadyList>
	}
 800898c:	9804      	ldr	r0, [sp, #16]
 800898e:	b006      	add	sp, #24
 8008990:	bd70      	pop	{r4, r5, r6, pc}

08008992 <xTaskCreate>:
	{
 8008992:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008996:	4607      	mov	r7, r0
 8008998:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800899a:	0090      	lsls	r0, r2, #2
	{
 800899c:	4688      	mov	r8, r1
 800899e:	4616      	mov	r6, r2
 80089a0:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80089a2:	f7fe fe9f 	bl	80076e4 <pvPortMalloc>
			if( pxStack != NULL )
 80089a6:	4605      	mov	r5, r0
 80089a8:	b1e8      	cbz	r0, 80089e6 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80089aa:	2060      	movs	r0, #96	; 0x60
 80089ac:	f7fe fe9a 	bl	80076e4 <pvPortMalloc>
				if( pxNewTCB != NULL )
 80089b0:	4604      	mov	r4, r0
 80089b2:	b1a8      	cbz	r0, 80089e0 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80089b4:	2300      	movs	r3, #0
 80089b6:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80089ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 80089bc:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80089be:	9301      	str	r3, [sp, #4]
 80089c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80089c2:	9002      	str	r0, [sp, #8]
 80089c4:	9300      	str	r3, [sp, #0]
 80089c6:	4632      	mov	r2, r6
 80089c8:	464b      	mov	r3, r9
 80089ca:	4641      	mov	r1, r8
 80089cc:	4638      	mov	r0, r7
 80089ce:	f7ff ff59 	bl	8008884 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80089d2:	4620      	mov	r0, r4
 80089d4:	f7ff fe3e 	bl	8008654 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80089d8:	2001      	movs	r0, #1
	}
 80089da:	b005      	add	sp, #20
 80089dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 80089e0:	4628      	mov	r0, r5
 80089e2:	f7fe ff11 	bl	8007808 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80089e6:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 80089ea:	e7f6      	b.n	80089da <xTaskCreate+0x48>

080089ec <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 80089ec:	4a02      	ldr	r2, [pc, #8]	; (80089f8 <vTaskSuspendAll+0xc>)
 80089ee:	6813      	ldr	r3, [r2, #0]
 80089f0:	3301      	adds	r3, #1
 80089f2:	6013      	str	r3, [r2, #0]
}
 80089f4:	4770      	bx	lr
 80089f6:	bf00      	nop
 80089f8:	2000a270 	.word	0x2000a270

080089fc <xTaskGetTickCount>:
		xTicks = xTickCount;
 80089fc:	4b01      	ldr	r3, [pc, #4]	; (8008a04 <xTaskGetTickCount+0x8>)
 80089fe:	6818      	ldr	r0, [r3, #0]
}
 8008a00:	4770      	bx	lr
 8008a02:	bf00      	nop
 8008a04:	2000a2ec 	.word	0x2000a2ec

08008a08 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008a08:	4b3f      	ldr	r3, [pc, #252]	; (8008b08 <xTaskIncrementTick+0x100>)
 8008a0a:	681b      	ldr	r3, [r3, #0]
{
 8008a0c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008a10:	2b00      	cmp	r3, #0
 8008a12:	d173      	bne.n	8008afc <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008a14:	4b3d      	ldr	r3, [pc, #244]	; (8008b0c <xTaskIncrementTick+0x104>)
 8008a16:	681d      	ldr	r5, [r3, #0]
 8008a18:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8008a1a:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008a1c:	b9bd      	cbnz	r5, 8008a4e <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8008a1e:	4b3c      	ldr	r3, [pc, #240]	; (8008b10 <xTaskIncrementTick+0x108>)
 8008a20:	681a      	ldr	r2, [r3, #0]
 8008a22:	6812      	ldr	r2, [r2, #0]
 8008a24:	b142      	cbz	r2, 8008a38 <xTaskIncrementTick+0x30>
 8008a26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a2a:	f383 8811 	msr	BASEPRI, r3
 8008a2e:	f3bf 8f6f 	isb	sy
 8008a32:	f3bf 8f4f 	dsb	sy
 8008a36:	e7fe      	b.n	8008a36 <xTaskIncrementTick+0x2e>
 8008a38:	4a36      	ldr	r2, [pc, #216]	; (8008b14 <xTaskIncrementTick+0x10c>)
 8008a3a:	6819      	ldr	r1, [r3, #0]
 8008a3c:	6810      	ldr	r0, [r2, #0]
 8008a3e:	6018      	str	r0, [r3, #0]
 8008a40:	6011      	str	r1, [r2, #0]
 8008a42:	4a35      	ldr	r2, [pc, #212]	; (8008b18 <xTaskIncrementTick+0x110>)
 8008a44:	6813      	ldr	r3, [r2, #0]
 8008a46:	3301      	adds	r3, #1
 8008a48:	6013      	str	r3, [r2, #0]
 8008a4a:	f7ff febb 	bl	80087c4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008a4e:	4e33      	ldr	r6, [pc, #204]	; (8008b1c <xTaskIncrementTick+0x114>)
 8008a50:	4f33      	ldr	r7, [pc, #204]	; (8008b20 <xTaskIncrementTick+0x118>)
 8008a52:	6833      	ldr	r3, [r6, #0]
 8008a54:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8008b2c <xTaskIncrementTick+0x124>
 8008a58:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8008a5a:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008a5e:	d911      	bls.n	8008a84 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008a60:	f8d8 3000 	ldr.w	r3, [r8]
 8008a64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a66:	2214      	movs	r2, #20
 8008a68:	4353      	muls	r3, r2
 8008a6a:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8008a6c:	2b02      	cmp	r3, #2
 8008a6e:	bf28      	it	cs
 8008a70:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 8008a72:	4b2c      	ldr	r3, [pc, #176]	; (8008b24 <xTaskIncrementTick+0x11c>)
 8008a74:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 8008a76:	2b00      	cmp	r3, #0
}
 8008a78:	bf0c      	ite	eq
 8008a7a:	4620      	moveq	r0, r4
 8008a7c:	2001      	movne	r0, #1
 8008a7e:	b003      	add	sp, #12
 8008a80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008a84:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8008b10 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008a88:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8008b30 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008a8c:	f8d9 3000 	ldr.w	r3, [r9]
 8008a90:	681b      	ldr	r3, [r3, #0]
 8008a92:	b91b      	cbnz	r3, 8008a9c <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008a94:	f04f 33ff 	mov.w	r3, #4294967295
 8008a98:	6033      	str	r3, [r6, #0]
					break;
 8008a9a:	e7e1      	b.n	8008a60 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008a9c:	f8d9 3000 	ldr.w	r3, [r9]
 8008aa0:	68db      	ldr	r3, [r3, #12]
 8008aa2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008aa6:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8008aaa:	4295      	cmp	r5, r2
 8008aac:	d201      	bcs.n	8008ab2 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008aae:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008ab0:	e7d6      	b.n	8008a60 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008ab2:	f10b 0104 	add.w	r1, fp, #4
 8008ab6:	4608      	mov	r0, r1
 8008ab8:	9101      	str	r1, [sp, #4]
 8008aba:	f7fe ff0e 	bl	80078da <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008abe:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8008ac2:	9901      	ldr	r1, [sp, #4]
 8008ac4:	b122      	cbz	r2, 8008ad0 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008ac6:	f10b 0018 	add.w	r0, fp, #24
 8008aca:	f7fe ff06 	bl	80078da <uxListRemove>
 8008ace:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8008ad0:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8008ad4:	f8da 2000 	ldr.w	r2, [sl]
 8008ad8:	2314      	movs	r3, #20
 8008ada:	4290      	cmp	r0, r2
 8008adc:	bf88      	it	hi
 8008ade:	f8ca 0000 	strhi.w	r0, [sl]
 8008ae2:	fb03 7000 	mla	r0, r3, r0, r7
 8008ae6:	f7fe fed5 	bl	8007894 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008aea:	f8d8 1000 	ldr.w	r1, [r8]
 8008aee:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8008af2:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8008af4:	429a      	cmp	r2, r3
 8008af6:	bf28      	it	cs
 8008af8:	2401      	movcs	r4, #1
 8008afa:	e7c7      	b.n	8008a8c <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8008afc:	4a0a      	ldr	r2, [pc, #40]	; (8008b28 <xTaskIncrementTick+0x120>)
 8008afe:	6813      	ldr	r3, [r2, #0]
 8008b00:	3301      	adds	r3, #1
 8008b02:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008b04:	2400      	movs	r4, #0
 8008b06:	e7b4      	b.n	8008a72 <xTaskIncrementTick+0x6a>
 8008b08:	2000a270 	.word	0x2000a270
 8008b0c:	2000a2ec 	.word	0x2000a2ec
 8008b10:	20009dfc 	.word	0x20009dfc
 8008b14:	20009e00 	.word	0x20009e00
 8008b18:	2000a2a8 	.word	0x2000a2a8
 8008b1c:	2000a2a4 	.word	0x2000a2a4
 8008b20:	20009e04 	.word	0x20009e04
 8008b24:	2000a2f0 	.word	0x2000a2f0
 8008b28:	2000a26c 	.word	0x2000a26c
 8008b2c:	20009df8 	.word	0x20009df8
 8008b30:	2000a278 	.word	0x2000a278

08008b34 <xTaskResumeAll>:
{
 8008b34:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8008b36:	4c31      	ldr	r4, [pc, #196]	; (8008bfc <xTaskResumeAll+0xc8>)
 8008b38:	6823      	ldr	r3, [r4, #0]
 8008b3a:	b943      	cbnz	r3, 8008b4e <xTaskResumeAll+0x1a>
 8008b3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b40:	f383 8811 	msr	BASEPRI, r3
 8008b44:	f3bf 8f6f 	isb	sy
 8008b48:	f3bf 8f4f 	dsb	sy
 8008b4c:	e7fe      	b.n	8008b4c <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8008b4e:	f7fe ff41 	bl	80079d4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008b52:	6823      	ldr	r3, [r4, #0]
 8008b54:	3b01      	subs	r3, #1
 8008b56:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008b58:	6824      	ldr	r4, [r4, #0]
 8008b5a:	b12c      	cbz	r4, 8008b68 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8008b5c:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008b5e:	f7fe ff59 	bl	8007a14 <vPortExitCritical>
}
 8008b62:	4620      	mov	r0, r4
 8008b64:	b003      	add	sp, #12
 8008b66:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008b68:	4b25      	ldr	r3, [pc, #148]	; (8008c00 <xTaskResumeAll+0xcc>)
 8008b6a:	681b      	ldr	r3, [r3, #0]
 8008b6c:	2b00      	cmp	r3, #0
 8008b6e:	d0f5      	beq.n	8008b5c <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008b70:	4d24      	ldr	r5, [pc, #144]	; (8008c04 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8008b72:	4e25      	ldr	r6, [pc, #148]	; (8008c08 <xTaskResumeAll+0xd4>)
 8008b74:	4f25      	ldr	r7, [pc, #148]	; (8008c0c <xTaskResumeAll+0xd8>)
 8008b76:	e01e      	b.n	8008bb6 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008b78:	68eb      	ldr	r3, [r5, #12]
 8008b7a:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008b7c:	f104 0018 	add.w	r0, r4, #24
 8008b80:	f7fe feab 	bl	80078da <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008b84:	1d21      	adds	r1, r4, #4
 8008b86:	4608      	mov	r0, r1
 8008b88:	9101      	str	r1, [sp, #4]
 8008b8a:	f7fe fea6 	bl	80078da <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008b8e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008b90:	6832      	ldr	r2, [r6, #0]
 8008b92:	9901      	ldr	r1, [sp, #4]
 8008b94:	2014      	movs	r0, #20
 8008b96:	4293      	cmp	r3, r2
 8008b98:	fb00 7003 	mla	r0, r0, r3, r7
 8008b9c:	bf88      	it	hi
 8008b9e:	6033      	strhi	r3, [r6, #0]
 8008ba0:	f7fe fe78 	bl	8007894 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008ba4:	4b1a      	ldr	r3, [pc, #104]	; (8008c10 <xTaskResumeAll+0xdc>)
 8008ba6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008ba8:	681b      	ldr	r3, [r3, #0]
 8008baa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008bac:	429a      	cmp	r2, r3
 8008bae:	d302      	bcc.n	8008bb6 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8008bb0:	4b18      	ldr	r3, [pc, #96]	; (8008c14 <xTaskResumeAll+0xe0>)
 8008bb2:	2201      	movs	r2, #1
 8008bb4:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008bb6:	682b      	ldr	r3, [r5, #0]
 8008bb8:	2b00      	cmp	r3, #0
 8008bba:	d1dd      	bne.n	8008b78 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8008bbc:	b10c      	cbz	r4, 8008bc2 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8008bbe:	f7ff fe01 	bl	80087c4 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8008bc2:	4d15      	ldr	r5, [pc, #84]	; (8008c18 <xTaskResumeAll+0xe4>)
 8008bc4:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8008bc6:	b144      	cbz	r4, 8008bda <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8008bc8:	4e12      	ldr	r6, [pc, #72]	; (8008c14 <xTaskResumeAll+0xe0>)
 8008bca:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008bcc:	f7ff ff1c 	bl	8008a08 <xTaskIncrementTick>
 8008bd0:	b100      	cbz	r0, 8008bd4 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8008bd2:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8008bd4:	3c01      	subs	r4, #1
 8008bd6:	d1f9      	bne.n	8008bcc <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8008bd8:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8008bda:	4b0e      	ldr	r3, [pc, #56]	; (8008c14 <xTaskResumeAll+0xe0>)
 8008bdc:	681b      	ldr	r3, [r3, #0]
 8008bde:	2b00      	cmp	r3, #0
 8008be0:	d0bc      	beq.n	8008b5c <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8008be2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008be6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008bea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008bee:	f3bf 8f4f 	dsb	sy
 8008bf2:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008bf6:	2401      	movs	r4, #1
 8008bf8:	e7b1      	b.n	8008b5e <xTaskResumeAll+0x2a>
 8008bfa:	bf00      	nop
 8008bfc:	2000a270 	.word	0x2000a270
 8008c00:	2000a264 	.word	0x2000a264
 8008c04:	2000a2ac 	.word	0x2000a2ac
 8008c08:	2000a278 	.word	0x2000a278
 8008c0c:	20009e04 	.word	0x20009e04
 8008c10:	20009df8 	.word	0x20009df8
 8008c14:	2000a2f0 	.word	0x2000a2f0
 8008c18:	2000a26c 	.word	0x2000a26c

08008c1c <vTaskSetApplicationTaskTag>:
	{
 8008c1c:	b538      	push	{r3, r4, r5, lr}
 8008c1e:	460d      	mov	r5, r1
		if( xTask == NULL )
 8008c20:	4604      	mov	r4, r0
 8008c22:	b908      	cbnz	r0, 8008c28 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 8008c24:	4b04      	ldr	r3, [pc, #16]	; (8008c38 <vTaskSetApplicationTaskTag+0x1c>)
 8008c26:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 8008c28:	f7fe fed4 	bl	80079d4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 8008c2c:	6565      	str	r5, [r4, #84]	; 0x54
	}
 8008c2e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 8008c32:	f7fe beef 	b.w	8007a14 <vPortExitCritical>
 8008c36:	bf00      	nop
 8008c38:	20009df8 	.word	0x20009df8

08008c3c <xTaskCallApplicationTaskHook>:
	{
 8008c3c:	4603      	mov	r3, r0
 8008c3e:	4608      	mov	r0, r1
		if( xTask == NULL )
 8008c40:	b90b      	cbnz	r3, 8008c46 <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 8008c42:	4b03      	ldr	r3, [pc, #12]	; (8008c50 <xTaskCallApplicationTaskHook+0x14>)
 8008c44:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 8008c46:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008c48:	b103      	cbz	r3, 8008c4c <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 8008c4a:	4718      	bx	r3
	}
 8008c4c:	4618      	mov	r0, r3
 8008c4e:	4770      	bx	lr
 8008c50:	20009df8 	.word	0x20009df8

08008c54 <vTaskStartScheduler>:
{
 8008c54:	b510      	push	{r4, lr}
 8008c56:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008c58:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008c5a:	aa07      	add	r2, sp, #28
 8008c5c:	a906      	add	r1, sp, #24
 8008c5e:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008c60:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008c64:	f7fe fd02 	bl	800766c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008c68:	9b05      	ldr	r3, [sp, #20]
 8008c6a:	9302      	str	r3, [sp, #8]
 8008c6c:	9b06      	ldr	r3, [sp, #24]
 8008c6e:	9a07      	ldr	r2, [sp, #28]
 8008c70:	4919      	ldr	r1, [pc, #100]	; (8008cd8 <vTaskStartScheduler+0x84>)
 8008c72:	481a      	ldr	r0, [pc, #104]	; (8008cdc <vTaskStartScheduler+0x88>)
 8008c74:	e9cd 4300 	strd	r4, r3, [sp]
 8008c78:	4623      	mov	r3, r4
 8008c7a:	f7ff fe52 	bl	8008922 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008c7e:	b340      	cbz	r0, 8008cd2 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8008c80:	f000 fa8a 	bl	8009198 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8008c84:	2801      	cmp	r0, #1
 8008c86:	d119      	bne.n	8008cbc <vTaskStartScheduler+0x68>
 8008c88:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c8c:	f383 8811 	msr	BASEPRI, r3
 8008c90:	f3bf 8f6f 	isb	sy
 8008c94:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8008c98:	4b11      	ldr	r3, [pc, #68]	; (8008ce0 <vTaskStartScheduler+0x8c>)
 8008c9a:	f04f 32ff 	mov.w	r2, #4294967295
 8008c9e:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008ca0:	4b10      	ldr	r3, [pc, #64]	; (8008ce4 <vTaskStartScheduler+0x90>)
 8008ca2:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008ca4:	4b10      	ldr	r3, [pc, #64]	; (8008ce8 <vTaskStartScheduler+0x94>)
 8008ca6:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8008ca8:	4b10      	ldr	r3, [pc, #64]	; (8008cec <vTaskStartScheduler+0x98>)
 8008caa:	4621      	mov	r1, r4
 8008cac:	6818      	ldr	r0, [r3, #0]
 8008cae:	f7ff ffc5 	bl	8008c3c <xTaskCallApplicationTaskHook>
}
 8008cb2:	b008      	add	sp, #32
 8008cb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8008cb8:	f7fe bf1c 	b.w	8007af4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008cbc:	3001      	adds	r0, #1
 8008cbe:	d108      	bne.n	8008cd2 <vTaskStartScheduler+0x7e>
 8008cc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cc4:	f383 8811 	msr	BASEPRI, r3
 8008cc8:	f3bf 8f6f 	isb	sy
 8008ccc:	f3bf 8f4f 	dsb	sy
 8008cd0:	e7fe      	b.n	8008cd0 <vTaskStartScheduler+0x7c>
}
 8008cd2:	b008      	add	sp, #32
 8008cd4:	bd10      	pop	{r4, pc}
 8008cd6:	bf00      	nop
 8008cd8:	0801d885 	.word	0x0801d885
 8008cdc:	08008821 	.word	0x08008821
 8008ce0:	2000a2a4 	.word	0x2000a2a4
 8008ce4:	2000a2c0 	.word	0x2000a2c0
 8008ce8:	2000a2ec 	.word	0x2000a2ec
 8008cec:	20009df8 	.word	0x20009df8

08008cf0 <vTaskSwitchContext>:
{
 8008cf0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008cf2:	4b1c      	ldr	r3, [pc, #112]	; (8008d64 <vTaskSwitchContext+0x74>)
 8008cf4:	681a      	ldr	r2, [r3, #0]
 8008cf6:	4b1c      	ldr	r3, [pc, #112]	; (8008d68 <vTaskSwitchContext+0x78>)
 8008cf8:	b112      	cbz	r2, 8008d00 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008cfa:	2201      	movs	r2, #1
 8008cfc:	601a      	str	r2, [r3, #0]
}
 8008cfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8008d00:	4c1a      	ldr	r4, [pc, #104]	; (8008d6c <vTaskSwitchContext+0x7c>)
		xYieldPending = pdFALSE;
 8008d02:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d04:	4e1a      	ldr	r6, [pc, #104]	; (8008d70 <vTaskSwitchContext+0x80>)
		traceTASK_SWITCHED_OUT();
 8008d06:	6820      	ldr	r0, [r4, #0]
 8008d08:	2101      	movs	r1, #1
 8008d0a:	f7ff ff97 	bl	8008c3c <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d0e:	6832      	ldr	r2, [r6, #0]
 8008d10:	4918      	ldr	r1, [pc, #96]	; (8008d74 <vTaskSwitchContext+0x84>)
 8008d12:	2714      	movs	r7, #20
 8008d14:	fb07 f302 	mul.w	r3, r7, r2
 8008d18:	18c8      	adds	r0, r1, r3
 8008d1a:	58cd      	ldr	r5, [r1, r3]
 8008d1c:	b1ad      	cbz	r5, 8008d4a <vTaskSwitchContext+0x5a>
 8008d1e:	6845      	ldr	r5, [r0, #4]
 8008d20:	3308      	adds	r3, #8
 8008d22:	686d      	ldr	r5, [r5, #4]
 8008d24:	6045      	str	r5, [r0, #4]
 8008d26:	440b      	add	r3, r1
 8008d28:	429d      	cmp	r5, r3
 8008d2a:	bf04      	itt	eq
 8008d2c:	686b      	ldreq	r3, [r5, #4]
 8008d2e:	6043      	streq	r3, [r0, #4]
 8008d30:	2314      	movs	r3, #20
 8008d32:	fb03 1102 	mla	r1, r3, r2, r1
 8008d36:	684b      	ldr	r3, [r1, #4]
 8008d38:	68db      	ldr	r3, [r3, #12]
 8008d3a:	6023      	str	r3, [r4, #0]
 8008d3c:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 8008d3e:	6820      	ldr	r0, [r4, #0]
 8008d40:	2100      	movs	r1, #0
}
 8008d42:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 8008d46:	f7ff bf79 	b.w	8008c3c <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d4a:	b942      	cbnz	r2, 8008d5e <vTaskSwitchContext+0x6e>
 8008d4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d50:	f383 8811 	msr	BASEPRI, r3
 8008d54:	f3bf 8f6f 	isb	sy
 8008d58:	f3bf 8f4f 	dsb	sy
 8008d5c:	e7fe      	b.n	8008d5c <vTaskSwitchContext+0x6c>
 8008d5e:	3a01      	subs	r2, #1
 8008d60:	e7d8      	b.n	8008d14 <vTaskSwitchContext+0x24>
 8008d62:	bf00      	nop
 8008d64:	2000a270 	.word	0x2000a270
 8008d68:	2000a2f0 	.word	0x2000a2f0
 8008d6c:	20009df8 	.word	0x20009df8
 8008d70:	2000a278 	.word	0x2000a278
 8008d74:	20009e04 	.word	0x20009e04

08008d78 <vTaskPlaceOnEventList>:
{
 8008d78:	b510      	push	{r4, lr}
 8008d7a:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008d7c:	b940      	cbnz	r0, 8008d90 <vTaskPlaceOnEventList+0x18>
 8008d7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d82:	f383 8811 	msr	BASEPRI, r3
 8008d86:	f3bf 8f6f 	isb	sy
 8008d8a:	f3bf 8f4f 	dsb	sy
 8008d8e:	e7fe      	b.n	8008d8e <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008d90:	4b05      	ldr	r3, [pc, #20]	; (8008da8 <vTaskPlaceOnEventList+0x30>)
 8008d92:	6819      	ldr	r1, [r3, #0]
 8008d94:	3118      	adds	r1, #24
 8008d96:	f7fe fd89 	bl	80078ac <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008d9a:	4620      	mov	r0, r4
 8008d9c:	2101      	movs	r1, #1
}
 8008d9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008da2:	f7ff bcd7 	b.w	8008754 <prvAddCurrentTaskToDelayedList>
 8008da6:	bf00      	nop
 8008da8:	20009df8 	.word	0x20009df8

08008dac <vTaskPlaceOnEventListRestricted>:
	{
 8008dac:	b538      	push	{r3, r4, r5, lr}
 8008dae:	460d      	mov	r5, r1
 8008db0:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8008db2:	b940      	cbnz	r0, 8008dc6 <vTaskPlaceOnEventListRestricted+0x1a>
 8008db4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008db8:	f383 8811 	msr	BASEPRI, r3
 8008dbc:	f3bf 8f6f 	isb	sy
 8008dc0:	f3bf 8f4f 	dsb	sy
 8008dc4:	e7fe      	b.n	8008dc4 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008dc6:	4b07      	ldr	r3, [pc, #28]	; (8008de4 <vTaskPlaceOnEventListRestricted+0x38>)
 8008dc8:	6819      	ldr	r1, [r3, #0]
 8008dca:	3118      	adds	r1, #24
 8008dcc:	f7fe fd62 	bl	8007894 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008dd0:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008dd2:	4621      	mov	r1, r4
 8008dd4:	bf0c      	ite	eq
 8008dd6:	4628      	moveq	r0, r5
 8008dd8:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008ddc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008de0:	f7ff bcb8 	b.w	8008754 <prvAddCurrentTaskToDelayedList>
 8008de4:	20009df8 	.word	0x20009df8

08008de8 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008de8:	68c3      	ldr	r3, [r0, #12]
{
 8008dea:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008dec:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8008dee:	b944      	cbnz	r4, 8008e02 <xTaskRemoveFromEventList+0x1a>
 8008df0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008df4:	f383 8811 	msr	BASEPRI, r3
 8008df8:	f3bf 8f6f 	isb	sy
 8008dfc:	f3bf 8f4f 	dsb	sy
 8008e00:	e7fe      	b.n	8008e00 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8008e02:	f104 0118 	add.w	r1, r4, #24
 8008e06:	4608      	mov	r0, r1
 8008e08:	9101      	str	r1, [sp, #4]
 8008e0a:	f7fe fd66 	bl	80078da <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008e0e:	4b12      	ldr	r3, [pc, #72]	; (8008e58 <xTaskRemoveFromEventList+0x70>)
 8008e10:	9901      	ldr	r1, [sp, #4]
 8008e12:	681b      	ldr	r3, [r3, #0]
 8008e14:	b9eb      	cbnz	r3, 8008e52 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8008e16:	1d21      	adds	r1, r4, #4
 8008e18:	4608      	mov	r0, r1
 8008e1a:	9101      	str	r1, [sp, #4]
 8008e1c:	f7fe fd5d 	bl	80078da <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008e20:	4a0e      	ldr	r2, [pc, #56]	; (8008e5c <xTaskRemoveFromEventList+0x74>)
 8008e22:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008e24:	6810      	ldr	r0, [r2, #0]
 8008e26:	9901      	ldr	r1, [sp, #4]
 8008e28:	4283      	cmp	r3, r0
 8008e2a:	bf88      	it	hi
 8008e2c:	6013      	strhi	r3, [r2, #0]
 8008e2e:	4a0c      	ldr	r2, [pc, #48]	; (8008e60 <xTaskRemoveFromEventList+0x78>)
 8008e30:	2014      	movs	r0, #20
 8008e32:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008e36:	f7fe fd2d 	bl	8007894 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008e3a:	4b0a      	ldr	r3, [pc, #40]	; (8008e64 <xTaskRemoveFromEventList+0x7c>)
 8008e3c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008e3e:	681b      	ldr	r3, [r3, #0]
 8008e40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e42:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8008e44:	bf85      	ittet	hi
 8008e46:	4b08      	ldrhi	r3, [pc, #32]	; (8008e68 <xTaskRemoveFromEventList+0x80>)
 8008e48:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8008e4a:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8008e4c:	6018      	strhi	r0, [r3, #0]
}
 8008e4e:	b002      	add	sp, #8
 8008e50:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008e52:	4806      	ldr	r0, [pc, #24]	; (8008e6c <xTaskRemoveFromEventList+0x84>)
 8008e54:	e7ef      	b.n	8008e36 <xTaskRemoveFromEventList+0x4e>
 8008e56:	bf00      	nop
 8008e58:	2000a270 	.word	0x2000a270
 8008e5c:	2000a278 	.word	0x2000a278
 8008e60:	20009e04 	.word	0x20009e04
 8008e64:	20009df8 	.word	0x20009df8
 8008e68:	2000a2f0 	.word	0x2000a2f0
 8008e6c:	2000a2ac 	.word	0x2000a2ac

08008e70 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008e70:	4b03      	ldr	r3, [pc, #12]	; (8008e80 <vTaskInternalSetTimeOutState+0x10>)
 8008e72:	681b      	ldr	r3, [r3, #0]
 8008e74:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8008e76:	4b03      	ldr	r3, [pc, #12]	; (8008e84 <vTaskInternalSetTimeOutState+0x14>)
 8008e78:	681b      	ldr	r3, [r3, #0]
 8008e7a:	6043      	str	r3, [r0, #4]
}
 8008e7c:	4770      	bx	lr
 8008e7e:	bf00      	nop
 8008e80:	2000a2a8 	.word	0x2000a2a8
 8008e84:	2000a2ec 	.word	0x2000a2ec

08008e88 <xTaskCheckForTimeOut>:
{
 8008e88:	b570      	push	{r4, r5, r6, lr}
 8008e8a:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008e8c:	4605      	mov	r5, r0
 8008e8e:	b940      	cbnz	r0, 8008ea2 <xTaskCheckForTimeOut+0x1a>
 8008e90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e94:	f383 8811 	msr	BASEPRI, r3
 8008e98:	f3bf 8f6f 	isb	sy
 8008e9c:	f3bf 8f4f 	dsb	sy
 8008ea0:	e7fe      	b.n	8008ea0 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8008ea2:	b941      	cbnz	r1, 8008eb6 <xTaskCheckForTimeOut+0x2e>
 8008ea4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ea8:	f383 8811 	msr	BASEPRI, r3
 8008eac:	f3bf 8f6f 	isb	sy
 8008eb0:	f3bf 8f4f 	dsb	sy
 8008eb4:	e7fe      	b.n	8008eb4 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8008eb6:	f7fe fd8d 	bl	80079d4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008eba:	4b0f      	ldr	r3, [pc, #60]	; (8008ef8 <xTaskCheckForTimeOut+0x70>)
 8008ebc:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008ebe:	6823      	ldr	r3, [r4, #0]
 8008ec0:	1c5a      	adds	r2, r3, #1
 8008ec2:	d010      	beq.n	8008ee6 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008ec4:	480d      	ldr	r0, [pc, #52]	; (8008efc <xTaskCheckForTimeOut+0x74>)
 8008ec6:	682e      	ldr	r6, [r5, #0]
 8008ec8:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008eca:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008ecc:	4286      	cmp	r6, r0
 8008ece:	d001      	beq.n	8008ed4 <xTaskCheckForTimeOut+0x4c>
 8008ed0:	428a      	cmp	r2, r1
 8008ed2:	d90f      	bls.n	8008ef4 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008ed4:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8008ed6:	4283      	cmp	r3, r0
 8008ed8:	d90a      	bls.n	8008ef0 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008eda:	1a5b      	subs	r3, r3, r1
 8008edc:	4413      	add	r3, r2
 8008ede:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008ee0:	4628      	mov	r0, r5
 8008ee2:	f7ff ffc5 	bl	8008e70 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8008ee6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008ee8:	f7fe fd94 	bl	8007a14 <vPortExitCritical>
}
 8008eec:	4620      	mov	r0, r4
 8008eee:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008ef0:	2300      	movs	r3, #0
 8008ef2:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8008ef4:	2401      	movs	r4, #1
 8008ef6:	e7f7      	b.n	8008ee8 <xTaskCheckForTimeOut+0x60>
 8008ef8:	2000a2ec 	.word	0x2000a2ec
 8008efc:	2000a2a8 	.word	0x2000a2a8

08008f00 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008f00:	4b01      	ldr	r3, [pc, #4]	; (8008f08 <vTaskMissedYield+0x8>)
 8008f02:	2201      	movs	r2, #1
 8008f04:	601a      	str	r2, [r3, #0]
}
 8008f06:	4770      	bx	lr
 8008f08:	2000a2f0 	.word	0x2000a2f0

08008f0c <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008f0c:	4b05      	ldr	r3, [pc, #20]	; (8008f24 <xTaskGetSchedulerState+0x18>)
 8008f0e:	681b      	ldr	r3, [r3, #0]
 8008f10:	b133      	cbz	r3, 8008f20 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008f12:	4b05      	ldr	r3, [pc, #20]	; (8008f28 <xTaskGetSchedulerState+0x1c>)
 8008f14:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 8008f16:	2b00      	cmp	r3, #0
 8008f18:	bf0c      	ite	eq
 8008f1a:	2002      	moveq	r0, #2
 8008f1c:	2000      	movne	r0, #0
 8008f1e:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008f20:	2001      	movs	r0, #1
	}
 8008f22:	4770      	bx	lr
 8008f24:	2000a2c0 	.word	0x2000a2c0
 8008f28:	2000a270 	.word	0x2000a270

08008f2c <xTaskPriorityInherit>:
	{
 8008f2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8008f2e:	4604      	mov	r4, r0
 8008f30:	b348      	cbz	r0, 8008f86 <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8008f32:	4d1c      	ldr	r5, [pc, #112]	; (8008fa4 <xTaskPriorityInherit+0x78>)
 8008f34:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008f36:	682a      	ldr	r2, [r5, #0]
 8008f38:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8008f3a:	4293      	cmp	r3, r2
 8008f3c:	d229      	bcs.n	8008f92 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008f3e:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008f40:	4e19      	ldr	r6, [pc, #100]	; (8008fa8 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008f42:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008f44:	bfa1      	itttt	ge
 8008f46:	682a      	ldrge	r2, [r5, #0]
 8008f48:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8008f4a:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8008f4e:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008f50:	2214      	movs	r2, #20
 8008f52:	fb02 6303 	mla	r3, r2, r3, r6
 8008f56:	6942      	ldr	r2, [r0, #20]
 8008f58:	429a      	cmp	r2, r3
 8008f5a:	d116      	bne.n	8008f8a <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008f5c:	1d01      	adds	r1, r0, #4
 8008f5e:	4608      	mov	r0, r1
 8008f60:	9101      	str	r1, [sp, #4]
 8008f62:	f7fe fcba 	bl	80078da <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008f66:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008f68:	4a10      	ldr	r2, [pc, #64]	; (8008fac <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008f6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008f6c:	6810      	ldr	r0, [r2, #0]
 8008f6e:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008f70:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008f72:	4283      	cmp	r3, r0
 8008f74:	f04f 0014 	mov.w	r0, #20
 8008f78:	fb00 6003 	mla	r0, r0, r3, r6
 8008f7c:	bf88      	it	hi
 8008f7e:	6013      	strhi	r3, [r2, #0]
 8008f80:	f7fe fc88 	bl	8007894 <vListInsertEnd>
				xReturn = pdTRUE;
 8008f84:	2001      	movs	r0, #1
	}
 8008f86:	b002      	add	sp, #8
 8008f88:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008f8a:	682b      	ldr	r3, [r5, #0]
 8008f8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008f8e:	62c3      	str	r3, [r0, #44]	; 0x2c
 8008f90:	e7f8      	b.n	8008f84 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8008f92:	682b      	ldr	r3, [r5, #0]
 8008f94:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8008f96:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8008f98:	42a0      	cmp	r0, r4
 8008f9a:	bf2c      	ite	cs
 8008f9c:	2000      	movcs	r0, #0
 8008f9e:	2001      	movcc	r0, #1
 8008fa0:	e7f1      	b.n	8008f86 <xTaskPriorityInherit+0x5a>
 8008fa2:	bf00      	nop
 8008fa4:	20009df8 	.word	0x20009df8
 8008fa8:	20009e04 	.word	0x20009e04
 8008fac:	2000a278 	.word	0x2000a278

08008fb0 <xTaskPriorityDisinherit>:
	{
 8008fb0:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8008fb2:	b910      	cbnz	r0, 8008fba <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8008fb4:	2000      	movs	r0, #0
	}
 8008fb6:	b002      	add	sp, #8
 8008fb8:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008fba:	4b1c      	ldr	r3, [pc, #112]	; (800902c <xTaskPriorityDisinherit+0x7c>)
 8008fbc:	681c      	ldr	r4, [r3, #0]
 8008fbe:	4284      	cmp	r4, r0
 8008fc0:	d008      	beq.n	8008fd4 <xTaskPriorityDisinherit+0x24>
 8008fc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fc6:	f383 8811 	msr	BASEPRI, r3
 8008fca:	f3bf 8f6f 	isb	sy
 8008fce:	f3bf 8f4f 	dsb	sy
 8008fd2:	e7fe      	b.n	8008fd2 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8008fd4:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8008fd6:	b943      	cbnz	r3, 8008fea <xTaskPriorityDisinherit+0x3a>
 8008fd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fdc:	f383 8811 	msr	BASEPRI, r3
 8008fe0:	f3bf 8f6f 	isb	sy
 8008fe4:	f3bf 8f4f 	dsb	sy
 8008fe8:	e7fe      	b.n	8008fe8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008fea:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8008fec:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8008fee:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008ff0:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8008ff2:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008ff4:	d0de      	beq.n	8008fb4 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8008ff6:	2b00      	cmp	r3, #0
 8008ff8:	d1dc      	bne.n	8008fb4 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008ffa:	1d21      	adds	r1, r4, #4
 8008ffc:	4608      	mov	r0, r1
 8008ffe:	9101      	str	r1, [sp, #4]
 8009000:	f7fe fc6b 	bl	80078da <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009004:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8009006:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009008:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800900a:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800900e:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009010:	4a07      	ldr	r2, [pc, #28]	; (8009030 <xTaskPriorityDisinherit+0x80>)
 8009012:	6810      	ldr	r0, [r2, #0]
 8009014:	4283      	cmp	r3, r0
 8009016:	bf88      	it	hi
 8009018:	6013      	strhi	r3, [r2, #0]
 800901a:	4a06      	ldr	r2, [pc, #24]	; (8009034 <xTaskPriorityDisinherit+0x84>)
 800901c:	2014      	movs	r0, #20
 800901e:	fb00 2003 	mla	r0, r0, r3, r2
 8009022:	f7fe fc37 	bl	8007894 <vListInsertEnd>
					xReturn = pdTRUE;
 8009026:	2001      	movs	r0, #1
		return xReturn;
 8009028:	e7c5      	b.n	8008fb6 <xTaskPriorityDisinherit+0x6>
 800902a:	bf00      	nop
 800902c:	20009df8 	.word	0x20009df8
 8009030:	2000a278 	.word	0x2000a278
 8009034:	20009e04 	.word	0x20009e04

08009038 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009038:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800903a:	4604      	mov	r4, r0
 800903c:	2800      	cmp	r0, #0
 800903e:	d044      	beq.n	80090ca <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8009040:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009042:	b942      	cbnz	r2, 8009056 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009044:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009048:	f383 8811 	msr	BASEPRI, r3
 800904c:	f3bf 8f6f 	isb	sy
 8009050:	f3bf 8f4f 	dsb	sy
 8009054:	e7fe      	b.n	8009054 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8009056:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8009058:	4299      	cmp	r1, r3
 800905a:	bf38      	it	cc
 800905c:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800905e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009060:	428b      	cmp	r3, r1
 8009062:	d032      	beq.n	80090ca <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009064:	2a01      	cmp	r2, #1
 8009066:	d130      	bne.n	80090ca <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8009068:	4a19      	ldr	r2, [pc, #100]	; (80090d0 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800906a:	6812      	ldr	r2, [r2, #0]
 800906c:	4282      	cmp	r2, r0
 800906e:	d108      	bne.n	8009082 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8009070:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009074:	f383 8811 	msr	BASEPRI, r3
 8009078:	f3bf 8f6f 	isb	sy
 800907c:	f3bf 8f4f 	dsb	sy
 8009080:	e7fe      	b.n	8009080 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009082:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009084:	4d13      	ldr	r5, [pc, #76]	; (80090d4 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 8009086:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009088:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800908a:	f04f 0214 	mov.w	r2, #20
 800908e:	fb02 5303 	mla	r3, r2, r3, r5
 8009092:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009094:	bfa4      	itt	ge
 8009096:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800909a:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800909c:	429a      	cmp	r2, r3
 800909e:	d114      	bne.n	80090ca <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80090a0:	1d01      	adds	r1, r0, #4
 80090a2:	4608      	mov	r0, r1
 80090a4:	9101      	str	r1, [sp, #4]
 80090a6:	f7fe fc18 	bl	80078da <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80090aa:	4a0b      	ldr	r2, [pc, #44]	; (80090d8 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 80090ac:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80090ae:	6810      	ldr	r0, [r2, #0]
 80090b0:	9901      	ldr	r1, [sp, #4]
 80090b2:	4283      	cmp	r3, r0
 80090b4:	f04f 0014 	mov.w	r0, #20
 80090b8:	fb00 5003 	mla	r0, r0, r3, r5
 80090bc:	bf88      	it	hi
 80090be:	6013      	strhi	r3, [r2, #0]
	}
 80090c0:	b003      	add	sp, #12
 80090c2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 80090c6:	f7fe bbe5 	b.w	8007894 <vListInsertEnd>
	}
 80090ca:	b003      	add	sp, #12
 80090cc:	bd30      	pop	{r4, r5, pc}
 80090ce:	bf00      	nop
 80090d0:	20009df8 	.word	0x20009df8
 80090d4:	20009e04 	.word	0x20009e04
 80090d8:	2000a278 	.word	0x2000a278

080090dc <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 80090dc:	4b04      	ldr	r3, [pc, #16]	; (80090f0 <pvTaskIncrementMutexHeldCount+0x14>)
 80090de:	681a      	ldr	r2, [r3, #0]
 80090e0:	b11a      	cbz	r2, 80090ea <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 80090e2:	6819      	ldr	r1, [r3, #0]
 80090e4:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 80090e6:	3201      	adds	r2, #1
 80090e8:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 80090ea:	6818      	ldr	r0, [r3, #0]
	}
 80090ec:	4770      	bx	lr
 80090ee:	bf00      	nop
 80090f0:	20009df8 	.word	0x20009df8

080090f4 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 80090f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80090f6:	4c11      	ldr	r4, [pc, #68]	; (800913c <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 80090f8:	f7fe fc6c 	bl	80079d4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 80090fc:	6825      	ldr	r5, [r4, #0]
 80090fe:	b9bd      	cbnz	r5, 8009130 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009100:	4f0f      	ldr	r7, [pc, #60]	; (8009140 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009102:	4e10      	ldr	r6, [pc, #64]	; (8009144 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009104:	4638      	mov	r0, r7
 8009106:	f7fe fbb7 	bl	8007878 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800910a:	4630      	mov	r0, r6
 800910c:	f7fe fbb4 	bl	8007878 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009110:	4b0d      	ldr	r3, [pc, #52]	; (8009148 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009112:	4a0e      	ldr	r2, [pc, #56]	; (800914c <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8009114:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8009116:	4b0e      	ldr	r3, [pc, #56]	; (8009150 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009118:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800911a:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800911c:	200a      	movs	r0, #10
 800911e:	4b0d      	ldr	r3, [pc, #52]	; (8009154 <prvCheckForValidListAndQueue+0x60>)
 8009120:	9500      	str	r5, [sp, #0]
 8009122:	f7fe fe68 	bl	8007df6 <xQueueGenericCreateStatic>
 8009126:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009128:	b110      	cbz	r0, 8009130 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800912a:	490b      	ldr	r1, [pc, #44]	; (8009158 <prvCheckForValidListAndQueue+0x64>)
 800912c:	f7ff fa32 	bl	8008594 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009130:	b003      	add	sp, #12
 8009132:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009136:	f7fe bc6d 	b.w	8007a14 <vPortExitCritical>
 800913a:	bf00      	nop
 800913c:	2000a418 	.word	0x2000a418
 8009140:	2000a39c 	.word	0x2000a39c
 8009144:	2000a3b0 	.word	0x2000a3b0
 8009148:	2000a2f4 	.word	0x2000a2f4
 800914c:	2000a2fc 	.word	0x2000a2fc
 8009150:	2000a2f8 	.word	0x2000a2f8
 8009154:	2000a3c8 	.word	0x2000a3c8
 8009158:	0801d88a 	.word	0x0801d88a

0800915c <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800915c:	4291      	cmp	r1, r2
{
 800915e:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009160:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009162:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009164:	d80a      	bhi.n	800917c <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009166:	1ad2      	subs	r2, r2, r3
 8009168:	6983      	ldr	r3, [r0, #24]
 800916a:	429a      	cmp	r2, r3
 800916c:	d20d      	bcs.n	800918a <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800916e:	4b08      	ldr	r3, [pc, #32]	; (8009190 <prvInsertTimerInActiveList+0x34>)
 8009170:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009172:	6818      	ldr	r0, [r3, #0]
 8009174:	f7fe fb9a 	bl	80078ac <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009178:	2000      	movs	r0, #0
}
 800917a:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800917c:	429a      	cmp	r2, r3
 800917e:	d201      	bcs.n	8009184 <prvInsertTimerInActiveList+0x28>
 8009180:	4299      	cmp	r1, r3
 8009182:	d202      	bcs.n	800918a <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009184:	4b03      	ldr	r3, [pc, #12]	; (8009194 <prvInsertTimerInActiveList+0x38>)
 8009186:	1d01      	adds	r1, r0, #4
 8009188:	e7f3      	b.n	8009172 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800918a:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800918c:	e7f5      	b.n	800917a <prvInsertTimerInActiveList+0x1e>
 800918e:	bf00      	nop
 8009190:	2000a2f8 	.word	0x2000a2f8
 8009194:	2000a2f4 	.word	0x2000a2f4

08009198 <xTimerCreateTimerTask>:
{
 8009198:	b510      	push	{r4, lr}
 800919a:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800919c:	f7ff ffaa 	bl	80090f4 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 80091a0:	4b12      	ldr	r3, [pc, #72]	; (80091ec <xTimerCreateTimerTask+0x54>)
 80091a2:	681b      	ldr	r3, [r3, #0]
 80091a4:	b1b3      	cbz	r3, 80091d4 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80091a6:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80091a8:	aa07      	add	r2, sp, #28
 80091aa:	a906      	add	r1, sp, #24
 80091ac:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80091ae:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80091b2:	f7fe fa67 	bl	8007684 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80091b6:	9b05      	ldr	r3, [sp, #20]
 80091b8:	9302      	str	r3, [sp, #8]
 80091ba:	9b06      	ldr	r3, [sp, #24]
 80091bc:	9301      	str	r3, [sp, #4]
 80091be:	2302      	movs	r3, #2
 80091c0:	9300      	str	r3, [sp, #0]
 80091c2:	9a07      	ldr	r2, [sp, #28]
 80091c4:	490a      	ldr	r1, [pc, #40]	; (80091f0 <xTimerCreateTimerTask+0x58>)
 80091c6:	480b      	ldr	r0, [pc, #44]	; (80091f4 <xTimerCreateTimerTask+0x5c>)
 80091c8:	4623      	mov	r3, r4
 80091ca:	f7ff fbaa 	bl	8008922 <xTaskCreateStatic>
 80091ce:	4b0a      	ldr	r3, [pc, #40]	; (80091f8 <xTimerCreateTimerTask+0x60>)
 80091d0:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80091d2:	b940      	cbnz	r0, 80091e6 <xTimerCreateTimerTask+0x4e>
 80091d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091d8:	f383 8811 	msr	BASEPRI, r3
 80091dc:	f3bf 8f6f 	isb	sy
 80091e0:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80091e4:	e7fe      	b.n	80091e4 <xTimerCreateTimerTask+0x4c>
}
 80091e6:	2001      	movs	r0, #1
 80091e8:	b008      	add	sp, #32
 80091ea:	bd10      	pop	{r4, pc}
 80091ec:	2000a418 	.word	0x2000a418
 80091f0:	0801d88f 	.word	0x0801d88f
 80091f4:	08009301 	.word	0x08009301
 80091f8:	2000a41c 	.word	0x2000a41c

080091fc <xTimerGenericCommand>:
{
 80091fc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80091fe:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009200:	4604      	mov	r4, r0
{
 8009202:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009204:	b940      	cbnz	r0, 8009218 <xTimerGenericCommand+0x1c>
 8009206:	f04f 0350 	mov.w	r3, #80	; 0x50
 800920a:	f383 8811 	msr	BASEPRI, r3
 800920e:	f3bf 8f6f 	isb	sy
 8009212:	f3bf 8f4f 	dsb	sy
 8009216:	e7fe      	b.n	8009216 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009218:	4d0d      	ldr	r5, [pc, #52]	; (8009250 <xTimerGenericCommand+0x54>)
 800921a:	6828      	ldr	r0, [r5, #0]
 800921c:	b180      	cbz	r0, 8009240 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800921e:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009220:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009224:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009226:	dc0d      	bgt.n	8009244 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009228:	f7ff fe70 	bl	8008f0c <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800922c:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800922e:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009230:	bf08      	it	eq
 8009232:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009234:	6828      	ldr	r0, [r5, #0]
 8009236:	bf18      	it	ne
 8009238:	461a      	movne	r2, r3
 800923a:	4669      	mov	r1, sp
 800923c:	f7fe fe90 	bl	8007f60 <xQueueGenericSend>
}
 8009240:	b004      	add	sp, #16
 8009242:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009244:	2300      	movs	r3, #0
 8009246:	4669      	mov	r1, sp
 8009248:	f7fe ff3d 	bl	80080c6 <xQueueGenericSendFromISR>
 800924c:	e7f8      	b.n	8009240 <xTimerGenericCommand+0x44>
 800924e:	bf00      	nop
 8009250:	2000a418 	.word	0x2000a418

08009254 <prvSampleTimeNow>:
{
 8009254:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8009258:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 80092fc <prvSampleTimeNow+0xa8>
{
 800925c:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800925e:	f7ff fbcd 	bl	80089fc <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8009262:	f8d8 3000 	ldr.w	r3, [r8]
 8009266:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8009268:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800926a:	d940      	bls.n	80092ee <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800926c:	4f21      	ldr	r7, [pc, #132]	; (80092f4 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800926e:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009272:	683b      	ldr	r3, [r7, #0]
 8009274:	681a      	ldr	r2, [r3, #0]
 8009276:	b95a      	cbnz	r2, 8009290 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8009278:	4a1f      	ldr	r2, [pc, #124]	; (80092f8 <prvSampleTimeNow+0xa4>)
 800927a:	6811      	ldr	r1, [r2, #0]
 800927c:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800927e:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8009280:	2301      	movs	r3, #1
}
 8009282:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 8009284:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8009286:	f8c8 5000 	str.w	r5, [r8]
}
 800928a:	b004      	add	sp, #16
 800928c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009290:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009292:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009294:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009298:	1d21      	adds	r1, r4, #4
 800929a:	4608      	mov	r0, r1
 800929c:	9103      	str	r1, [sp, #12]
 800929e:	f7fe fb1c 	bl	80078da <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80092a2:	6a23      	ldr	r3, [r4, #32]
 80092a4:	4620      	mov	r0, r4
 80092a6:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80092a8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80092ac:	9903      	ldr	r1, [sp, #12]
 80092ae:	f013 0f04 	tst.w	r3, #4
 80092b2:	d0de      	beq.n	8009272 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80092b4:	69a3      	ldr	r3, [r4, #24]
 80092b6:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 80092b8:	459a      	cmp	sl, r3
 80092ba:	d205      	bcs.n	80092c8 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80092bc:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80092be:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80092c0:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80092c2:	f7fe faf3 	bl	80078ac <vListInsert>
 80092c6:	e7d4      	b.n	8009272 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80092c8:	2300      	movs	r3, #0
 80092ca:	f8cd 9000 	str.w	r9, [sp]
 80092ce:	4652      	mov	r2, sl
 80092d0:	4619      	mov	r1, r3
 80092d2:	4620      	mov	r0, r4
 80092d4:	f7ff ff92 	bl	80091fc <xTimerGenericCommand>
				configASSERT( xResult );
 80092d8:	2800      	cmp	r0, #0
 80092da:	d1ca      	bne.n	8009272 <prvSampleTimeNow+0x1e>
 80092dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092e0:	f383 8811 	msr	BASEPRI, r3
 80092e4:	f3bf 8f6f 	isb	sy
 80092e8:	f3bf 8f4f 	dsb	sy
 80092ec:	e7fe      	b.n	80092ec <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 80092ee:	2300      	movs	r3, #0
 80092f0:	e7c7      	b.n	8009282 <prvSampleTimeNow+0x2e>
 80092f2:	bf00      	nop
 80092f4:	2000a2f4 	.word	0x2000a2f4
 80092f8:	2000a2f8 	.word	0x2000a2f8
 80092fc:	2000a3c4 	.word	0x2000a3c4

08009300 <prvTimerTask>:
{
 8009300:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009304:	4d6e      	ldr	r5, [pc, #440]	; (80094c0 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009306:	4e6f      	ldr	r6, [pc, #444]	; (80094c4 <prvTimerTask+0x1c4>)
{
 8009308:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800930a:	682b      	ldr	r3, [r5, #0]
 800930c:	f8d3 8000 	ldr.w	r8, [r3]
 8009310:	f1b8 0f00 	cmp.w	r8, #0
 8009314:	d035      	beq.n	8009382 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009316:	68db      	ldr	r3, [r3, #12]
 8009318:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800931c:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800931e:	f7ff fb65 	bl	80089ec <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009322:	a804      	add	r0, sp, #16
 8009324:	f7ff ff96 	bl	8009254 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8009328:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800932a:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800932c:	2b00      	cmp	r3, #0
 800932e:	d169      	bne.n	8009404 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009330:	2c00      	cmp	r4, #0
 8009332:	d14c      	bne.n	80093ce <prvTimerTask+0xce>
 8009334:	4540      	cmp	r0, r8
 8009336:	d350      	bcc.n	80093da <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8009338:	f7ff fbfc 	bl	8008b34 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800933c:	682b      	ldr	r3, [r5, #0]
 800933e:	68db      	ldr	r3, [r3, #12]
 8009340:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009342:	1d38      	adds	r0, r7, #4
 8009344:	f7fe fac9 	bl	80078da <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009348:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800934c:	0758      	lsls	r0, r3, #29
 800934e:	d51a      	bpl.n	8009386 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8009350:	69b9      	ldr	r1, [r7, #24]
 8009352:	4643      	mov	r3, r8
 8009354:	464a      	mov	r2, r9
 8009356:	4441      	add	r1, r8
 8009358:	4638      	mov	r0, r7
 800935a:	f7ff feff 	bl	800915c <prvInsertTimerInActiveList>
 800935e:	b1b0      	cbz	r0, 800938e <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009360:	9400      	str	r4, [sp, #0]
 8009362:	4623      	mov	r3, r4
 8009364:	4642      	mov	r2, r8
 8009366:	4621      	mov	r1, r4
 8009368:	4638      	mov	r0, r7
 800936a:	f7ff ff47 	bl	80091fc <xTimerGenericCommand>
			configASSERT( xResult );
 800936e:	b970      	cbnz	r0, 800938e <prvTimerTask+0x8e>
 8009370:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009374:	f383 8811 	msr	BASEPRI, r3
 8009378:	f3bf 8f6f 	isb	sy
 800937c:	f3bf 8f4f 	dsb	sy
 8009380:	e7fe      	b.n	8009380 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009382:	2401      	movs	r4, #1
 8009384:	e7cb      	b.n	800931e <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009386:	f023 0301 	bic.w	r3, r3, #1
 800938a:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800938e:	6a3b      	ldr	r3, [r7, #32]
 8009390:	4638      	mov	r0, r7
 8009392:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8009394:	6830      	ldr	r0, [r6, #0]
 8009396:	2200      	movs	r2, #0
 8009398:	a904      	add	r1, sp, #16
 800939a:	f7fe ff49 	bl	8008230 <xQueueReceive>
 800939e:	2800      	cmp	r0, #0
 80093a0:	d0b3      	beq.n	800930a <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80093a2:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80093a4:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80093a6:	2b00      	cmp	r3, #0
 80093a8:	db2f      	blt.n	800940a <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80093aa:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80093ac:	6963      	ldr	r3, [r4, #20]
 80093ae:	2b00      	cmp	r3, #0
 80093b0:	d132      	bne.n	8009418 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80093b2:	a803      	add	r0, sp, #12
 80093b4:	f7ff ff4e 	bl	8009254 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 80093b8:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80093ba:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 80093bc:	2b09      	cmp	r3, #9
 80093be:	d8e9      	bhi.n	8009394 <prvTimerTask+0x94>
 80093c0:	e8df f003 	tbb	[pc, r3]
 80093c4:	572e2e2e 	.word	0x572e2e2e
 80093c8:	2e2e765e 	.word	0x2e2e765e
 80093cc:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80093ce:	4b3e      	ldr	r3, [pc, #248]	; (80094c8 <prvTimerTask+0x1c8>)
 80093d0:	681b      	ldr	r3, [r3, #0]
 80093d2:	681c      	ldr	r4, [r3, #0]
 80093d4:	fab4 f484 	clz	r4, r4
 80093d8:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80093da:	6830      	ldr	r0, [r6, #0]
 80093dc:	4622      	mov	r2, r4
 80093de:	eba8 0109 	sub.w	r1, r8, r9
 80093e2:	f7ff f914 	bl	800860e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80093e6:	f7ff fba5 	bl	8008b34 <xTaskResumeAll>
 80093ea:	2800      	cmp	r0, #0
 80093ec:	d1d2      	bne.n	8009394 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 80093ee:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80093f2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80093f6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80093fa:	f3bf 8f4f 	dsb	sy
 80093fe:	f3bf 8f6f 	isb	sy
 8009402:	e7c7      	b.n	8009394 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8009404:	f7ff fb96 	bl	8008b34 <xTaskResumeAll>
}
 8009408:	e7c4      	b.n	8009394 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800940a:	9b05      	ldr	r3, [sp, #20]
 800940c:	9907      	ldr	r1, [sp, #28]
 800940e:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009410:	9b04      	ldr	r3, [sp, #16]
 8009412:	2b00      	cmp	r3, #0
 8009414:	dbbe      	blt.n	8009394 <prvTimerTask+0x94>
 8009416:	e7c8      	b.n	80093aa <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009418:	1d20      	adds	r0, r4, #4
 800941a:	f7fe fa5e 	bl	80078da <uxListRemove>
 800941e:	e7c8      	b.n	80093b2 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009420:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009424:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009426:	f043 0301 	orr.w	r3, r3, #1
 800942a:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800942e:	9b05      	ldr	r3, [sp, #20]
 8009430:	4620      	mov	r0, r4
 8009432:	4419      	add	r1, r3
 8009434:	f7ff fe92 	bl	800915c <prvInsertTimerInActiveList>
 8009438:	2800      	cmp	r0, #0
 800943a:	d0ab      	beq.n	8009394 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800943c:	6a23      	ldr	r3, [r4, #32]
 800943e:	4620      	mov	r0, r4
 8009440:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009442:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009446:	0759      	lsls	r1, r3, #29
 8009448:	d5a4      	bpl.n	8009394 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800944a:	69a2      	ldr	r2, [r4, #24]
 800944c:	9905      	ldr	r1, [sp, #20]
 800944e:	2300      	movs	r3, #0
 8009450:	440a      	add	r2, r1
 8009452:	9300      	str	r3, [sp, #0]
 8009454:	4619      	mov	r1, r3
 8009456:	4620      	mov	r0, r4
 8009458:	f7ff fed0 	bl	80091fc <xTimerGenericCommand>
							configASSERT( xResult );
 800945c:	2800      	cmp	r0, #0
 800945e:	d199      	bne.n	8009394 <prvTimerTask+0x94>
 8009460:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009464:	f383 8811 	msr	BASEPRI, r3
 8009468:	f3bf 8f6f 	isb	sy
 800946c:	f3bf 8f4f 	dsb	sy
 8009470:	e7fe      	b.n	8009470 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009472:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009476:	f023 0301 	bic.w	r3, r3, #1
 800947a:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800947e:	e789      	b.n	8009394 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009480:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009484:	f043 0301 	orr.w	r3, r3, #1
 8009488:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800948c:	9905      	ldr	r1, [sp, #20]
 800948e:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8009490:	b941      	cbnz	r1, 80094a4 <prvTimerTask+0x1a4>
 8009492:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009496:	f383 8811 	msr	BASEPRI, r3
 800949a:	f3bf 8f6f 	isb	sy
 800949e:	f3bf 8f4f 	dsb	sy
 80094a2:	e7fe      	b.n	80094a2 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80094a4:	4603      	mov	r3, r0
 80094a6:	4401      	add	r1, r0
 80094a8:	4620      	mov	r0, r4
 80094aa:	f7ff fe57 	bl	800915c <prvInsertTimerInActiveList>
					break;
 80094ae:	e771      	b.n	8009394 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80094b0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80094b4:	079a      	lsls	r2, r3, #30
 80094b6:	d4de      	bmi.n	8009476 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 80094b8:	4620      	mov	r0, r4
 80094ba:	f7fe f9a5 	bl	8007808 <vPortFree>
 80094be:	e769      	b.n	8009394 <prvTimerTask+0x94>
 80094c0:	2000a2f4 	.word	0x2000a2f4
 80094c4:	2000a418 	.word	0x2000a418
 80094c8:	2000a2f8 	.word	0x2000a2f8

080094cc <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80094cc:	8880      	ldrh	r0, [r0, #4]
 80094ce:	4770      	bx	lr

080094d0 <_ZN8touchgfx17AbstractPartition5clearEv>:
 80094d0:	2300      	movs	r3, #0
 80094d2:	8083      	strh	r3, [r0, #4]
 80094d4:	4770      	bx	lr
	...

080094d8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80094d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80094da:	6803      	ldr	r3, [r0, #0]
 80094dc:	4605      	mov	r5, r0
 80094de:	460e      	mov	r6, r1
 80094e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80094e2:	2100      	movs	r1, #0
 80094e4:	4798      	blx	r3
 80094e6:	682b      	ldr	r3, [r5, #0]
 80094e8:	4604      	mov	r4, r0
 80094ea:	6a1b      	ldr	r3, [r3, #32]
 80094ec:	4628      	mov	r0, r5
 80094ee:	4798      	blx	r3
 80094f0:	88ab      	ldrh	r3, [r5, #4]
 80094f2:	1b34      	subs	r4, r6, r4
 80094f4:	b2a4      	uxth	r4, r4
 80094f6:	fbb4 f4f0 	udiv	r4, r4, r0
 80094fa:	42a3      	cmp	r3, r4
 80094fc:	d805      	bhi.n	800950a <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 80094fe:	4b0e      	ldr	r3, [pc, #56]	; (8009538 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8009500:	4a0e      	ldr	r2, [pc, #56]	; (800953c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8009502:	2120      	movs	r1, #32
 8009504:	480e      	ldr	r0, [pc, #56]	; (8009540 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 8009506:	f011 ff81 	bl	801b40c <__assert_func>
 800950a:	682b      	ldr	r3, [r5, #0]
 800950c:	2100      	movs	r1, #0
 800950e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009510:	4628      	mov	r0, r5
 8009512:	4798      	blx	r3
 8009514:	682b      	ldr	r3, [r5, #0]
 8009516:	4607      	mov	r7, r0
 8009518:	6a1b      	ldr	r3, [r3, #32]
 800951a:	4628      	mov	r0, r5
 800951c:	4798      	blx	r3
 800951e:	1bf3      	subs	r3, r6, r7
 8009520:	b29b      	uxth	r3, r3
 8009522:	fbb3 f2f0 	udiv	r2, r3, r0
 8009526:	fb02 3010 	mls	r0, r2, r0, r3
 800952a:	b118      	cbz	r0, 8009534 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800952c:	4b05      	ldr	r3, [pc, #20]	; (8009544 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800952e:	4a03      	ldr	r2, [pc, #12]	; (800953c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8009530:	2121      	movs	r1, #33	; 0x21
 8009532:	e7e7      	b.n	8009504 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8009534:	4620      	mov	r0, r4
 8009536:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009538:	0801d897 	.word	0x0801d897
 800953c:	0801da02 	.word	0x0801da02
 8009540:	0801d8ac 	.word	0x0801d8ac
 8009544:	0801d8da 	.word	0x0801d8da

08009548 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009548:	b538      	push	{r3, r4, r5, lr}
 800954a:	6803      	ldr	r3, [r0, #0]
 800954c:	6a1b      	ldr	r3, [r3, #32]
 800954e:	460d      	mov	r5, r1
 8009550:	4604      	mov	r4, r0
 8009552:	4798      	blx	r3
 8009554:	4285      	cmp	r5, r0
 8009556:	d905      	bls.n	8009564 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8009558:	4b0c      	ldr	r3, [pc, #48]	; (800958c <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800955a:	4a0d      	ldr	r2, [pc, #52]	; (8009590 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800955c:	2132      	movs	r1, #50	; 0x32
 800955e:	480d      	ldr	r0, [pc, #52]	; (8009594 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8009560:	f011 ff54 	bl	801b40c <__assert_func>
 8009564:	6823      	ldr	r3, [r4, #0]
 8009566:	88a5      	ldrh	r5, [r4, #4]
 8009568:	69db      	ldr	r3, [r3, #28]
 800956a:	4620      	mov	r0, r4
 800956c:	4798      	blx	r3
 800956e:	4285      	cmp	r5, r0
 8009570:	d303      	bcc.n	800957a <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8009572:	4b09      	ldr	r3, [pc, #36]	; (8009598 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8009574:	4a06      	ldr	r2, [pc, #24]	; (8009590 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8009576:	2133      	movs	r1, #51	; 0x33
 8009578:	e7f1      	b.n	800955e <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800957a:	6823      	ldr	r3, [r4, #0]
 800957c:	88a1      	ldrh	r1, [r4, #4]
 800957e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009580:	4620      	mov	r0, r4
 8009582:	4798      	blx	r3
 8009584:	88a3      	ldrh	r3, [r4, #4]
 8009586:	3301      	adds	r3, #1
 8009588:	80a3      	strh	r3, [r4, #4]
 800958a:	bd38      	pop	{r3, r4, r5, pc}
 800958c:	0801d954 	.word	0x0801d954
 8009590:	0801da45 	.word	0x0801da45
 8009594:	0801d8ac 	.word	0x0801d8ac
 8009598:	0801d96b 	.word	0x0801d96b

0800959c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800959c:	b570      	push	{r4, r5, r6, lr}
 800959e:	6803      	ldr	r3, [r0, #0]
 80095a0:	6a1b      	ldr	r3, [r3, #32]
 80095a2:	4616      	mov	r6, r2
 80095a4:	4604      	mov	r4, r0
 80095a6:	460d      	mov	r5, r1
 80095a8:	4798      	blx	r3
 80095aa:	4286      	cmp	r6, r0
 80095ac:	d905      	bls.n	80095ba <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 80095ae:	4b06      	ldr	r3, [pc, #24]	; (80095c8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 80095b0:	4a06      	ldr	r2, [pc, #24]	; (80095cc <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 80095b2:	4807      	ldr	r0, [pc, #28]	; (80095d0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 80095b4:	213c      	movs	r1, #60	; 0x3c
 80095b6:	f011 ff29 	bl	801b40c <__assert_func>
 80095ba:	6823      	ldr	r3, [r4, #0]
 80095bc:	4629      	mov	r1, r5
 80095be:	4620      	mov	r0, r4
 80095c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80095c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80095c6:	4718      	bx	r3
 80095c8:	0801d954 	.word	0x0801d954
 80095cc:	0801d9b8 	.word	0x0801d9b8
 80095d0:	0801d8ac 	.word	0x0801d8ac

080095d4 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80095d4:	4770      	bx	lr
	...

080095d8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80095d8:	4a02      	ldr	r2, [pc, #8]	; (80095e4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80095da:	6002      	str	r2, [r0, #0]
 80095dc:	2200      	movs	r2, #0
 80095de:	8082      	strh	r2, [r0, #4]
 80095e0:	4770      	bx	lr
 80095e2:	bf00      	nop
 80095e4:	0801d98c 	.word	0x0801d98c

080095e8 <_ZN8touchgfx9Container13getFirstChildEv>:
 80095e8:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80095ea:	4770      	bx	lr

080095ec <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80095ec:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80095ee:	2000      	movs	r0, #0
 80095f0:	b12b      	cbz	r3, 80095fe <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80095f2:	b920      	cbnz	r0, 80095fe <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80095f4:	1a5a      	subs	r2, r3, r1
 80095f6:	4250      	negs	r0, r2
 80095f8:	4150      	adcs	r0, r2
 80095fa:	699b      	ldr	r3, [r3, #24]
 80095fc:	e7f8      	b.n	80095f0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80095fe:	4770      	bx	lr

08009600 <_ZN8touchgfx9Container9removeAllEv>:
 8009600:	2200      	movs	r2, #0
 8009602:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009604:	b123      	cbz	r3, 8009610 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8009606:	6999      	ldr	r1, [r3, #24]
 8009608:	6281      	str	r1, [r0, #40]	; 0x28
 800960a:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800960e:	e7f8      	b.n	8009602 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8009610:	4770      	bx	lr

08009612 <_ZN8touchgfx9Container6unlinkEv>:
 8009612:	2300      	movs	r3, #0
 8009614:	6283      	str	r3, [r0, #40]	; 0x28
 8009616:	4770      	bx	lr

08009618 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8009618:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800961c:	461f      	mov	r7, r3
 800961e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8009622:	460d      	mov	r5, r1
 8009624:	4616      	mov	r6, r2
 8009626:	b103      	cbz	r3, 800962a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8009628:	6038      	str	r0, [r7, #0]
 800962a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800962c:	b314      	cbz	r4, 8009674 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800962e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009632:	b1eb      	cbz	r3, 8009670 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009634:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8009638:	428d      	cmp	r5, r1
 800963a:	db19      	blt.n	8009670 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800963c:	8923      	ldrh	r3, [r4, #8]
 800963e:	b289      	uxth	r1, r1
 8009640:	440b      	add	r3, r1
 8009642:	b21b      	sxth	r3, r3
 8009644:	429d      	cmp	r5, r3
 8009646:	da13      	bge.n	8009670 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009648:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800964c:	4296      	cmp	r6, r2
 800964e:	db0f      	blt.n	8009670 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009650:	8963      	ldrh	r3, [r4, #10]
 8009652:	b292      	uxth	r2, r2
 8009654:	4413      	add	r3, r2
 8009656:	b21b      	sxth	r3, r3
 8009658:	429e      	cmp	r6, r3
 800965a:	da09      	bge.n	8009670 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800965c:	6823      	ldr	r3, [r4, #0]
 800965e:	1ab2      	subs	r2, r6, r2
 8009660:	1a69      	subs	r1, r5, r1
 8009662:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8009666:	b212      	sxth	r2, r2
 8009668:	463b      	mov	r3, r7
 800966a:	b209      	sxth	r1, r1
 800966c:	4620      	mov	r0, r4
 800966e:	47c0      	blx	r8
 8009670:	69a4      	ldr	r4, [r4, #24]
 8009672:	e7db      	b.n	800962c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8009674:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009678 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8009678:	2200      	movs	r2, #0
 800967a:	8002      	strh	r2, [r0, #0]
 800967c:	8042      	strh	r2, [r0, #2]
 800967e:	8082      	strh	r2, [r0, #4]
 8009680:	80c2      	strh	r2, [r0, #6]
 8009682:	4770      	bx	lr

08009684 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8009684:	b570      	push	{r4, r5, r6, lr}
 8009686:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009688:	460d      	mov	r5, r1
 800968a:	4616      	mov	r6, r2
 800968c:	b13c      	cbz	r4, 800969e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800968e:	6823      	ldr	r3, [r4, #0]
 8009690:	4620      	mov	r0, r4
 8009692:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009694:	4632      	mov	r2, r6
 8009696:	4629      	mov	r1, r5
 8009698:	4798      	blx	r3
 800969a:	69a4      	ldr	r4, [r4, #24]
 800969c:	e7f6      	b.n	800968c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800969e:	bd70      	pop	{r4, r5, r6, pc}

080096a0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80096a0:	b538      	push	{r3, r4, r5, lr}
 80096a2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80096a4:	460d      	mov	r5, r1
 80096a6:	b134      	cbz	r4, 80096b6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80096a8:	682b      	ldr	r3, [r5, #0]
 80096aa:	4621      	mov	r1, r4
 80096ac:	689b      	ldr	r3, [r3, #8]
 80096ae:	4628      	mov	r0, r5
 80096b0:	4798      	blx	r3
 80096b2:	69a4      	ldr	r4, [r4, #24]
 80096b4:	e7f7      	b.n	80096a6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80096b6:	bd38      	pop	{r3, r4, r5, pc}

080096b8 <_ZN8touchgfx9ContainerD1Ev>:
 80096b8:	4770      	bx	lr

080096ba <_ZN8touchgfx9ContainerD0Ev>:
 80096ba:	b510      	push	{r4, lr}
 80096bc:	212c      	movs	r1, #44	; 0x2c
 80096be:	4604      	mov	r4, r0
 80096c0:	f011 fe76 	bl	801b3b0 <_ZdlPvj>
 80096c4:	4620      	mov	r0, r4
 80096c6:	bd10      	pop	{r4, pc}

080096c8 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80096c8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80096ca:	b19b      	cbz	r3, 80096f4 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80096cc:	428b      	cmp	r3, r1
 80096ce:	d109      	bne.n	80096e4 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80096d0:	699a      	ldr	r2, [r3, #24]
 80096d2:	2100      	movs	r1, #0
 80096d4:	6159      	str	r1, [r3, #20]
 80096d6:	6282      	str	r2, [r0, #40]	; 0x28
 80096d8:	b902      	cbnz	r2, 80096dc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80096da:	4770      	bx	lr
 80096dc:	6199      	str	r1, [r3, #24]
 80096de:	4770      	bx	lr
 80096e0:	4613      	mov	r3, r2
 80096e2:	b13a      	cbz	r2, 80096f4 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80096e4:	699a      	ldr	r2, [r3, #24]
 80096e6:	428a      	cmp	r2, r1
 80096e8:	d1fa      	bne.n	80096e0 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80096ea:	698a      	ldr	r2, [r1, #24]
 80096ec:	619a      	str	r2, [r3, #24]
 80096ee:	2300      	movs	r3, #0
 80096f0:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80096f4:	4770      	bx	lr

080096f6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80096f6:	b410      	push	{r4}
 80096f8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80096fa:	4604      	mov	r4, r0
 80096fc:	b92b      	cbnz	r3, 800970a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80096fe:	6803      	ldr	r3, [r0, #0]
 8009700:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009704:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009706:	4611      	mov	r1, r2
 8009708:	4718      	bx	r3
 800970a:	b941      	cbnz	r1, 800971e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800970c:	6193      	str	r3, [r2, #24]
 800970e:	6282      	str	r2, [r0, #40]	; 0x28
 8009710:	6154      	str	r4, [r2, #20]
 8009712:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009716:	4770      	bx	lr
 8009718:	4603      	mov	r3, r0
 800971a:	2800      	cmp	r0, #0
 800971c:	d0f9      	beq.n	8009712 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800971e:	4299      	cmp	r1, r3
 8009720:	6998      	ldr	r0, [r3, #24]
 8009722:	d1f9      	bne.n	8009718 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009724:	6190      	str	r0, [r2, #24]
 8009726:	618a      	str	r2, [r1, #24]
 8009728:	e7f2      	b.n	8009710 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800972c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800972c:	4288      	cmp	r0, r1
 800972e:	b508      	push	{r3, lr}
 8009730:	d105      	bne.n	800973e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8009732:	4b11      	ldr	r3, [pc, #68]	; (8009778 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8009734:	4a11      	ldr	r2, [pc, #68]	; (800977c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009736:	2123      	movs	r1, #35	; 0x23
 8009738:	4811      	ldr	r0, [pc, #68]	; (8009780 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800973a:	f011 fe67 	bl	801b40c <__assert_func>
 800973e:	694b      	ldr	r3, [r1, #20]
 8009740:	b11b      	cbz	r3, 800974a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 8009742:	4b10      	ldr	r3, [pc, #64]	; (8009784 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8009744:	4a0d      	ldr	r2, [pc, #52]	; (800977c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009746:	2124      	movs	r1, #36	; 0x24
 8009748:	e7f6      	b.n	8009738 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800974a:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800974e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009750:	b913      	cbnz	r3, 8009758 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 8009752:	6281      	str	r1, [r0, #40]	; 0x28
 8009754:	bd08      	pop	{r3, pc}
 8009756:	4613      	mov	r3, r2
 8009758:	699a      	ldr	r2, [r3, #24]
 800975a:	b12a      	cbz	r2, 8009768 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800975c:	428b      	cmp	r3, r1
 800975e:	d1fa      	bne.n	8009756 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 8009760:	4b09      	ldr	r3, [pc, #36]	; (8009788 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8009762:	4a06      	ldr	r2, [pc, #24]	; (800977c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009764:	2135      	movs	r1, #53	; 0x35
 8009766:	e7e7      	b.n	8009738 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009768:	428b      	cmp	r3, r1
 800976a:	d103      	bne.n	8009774 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800976c:	4b06      	ldr	r3, [pc, #24]	; (8009788 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800976e:	4a03      	ldr	r2, [pc, #12]	; (800977c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009770:	2138      	movs	r1, #56	; 0x38
 8009772:	e7e1      	b.n	8009738 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009774:	6199      	str	r1, [r3, #24]
 8009776:	e7ed      	b.n	8009754 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 8009778:	0801da83 	.word	0x0801da83
 800977c:	0801dbd4 	.word	0x0801dbd4
 8009780:	0801daaf 	.word	0x0801daaf
 8009784:	0801dae2 	.word	0x0801dae2
 8009788:	0801db18 	.word	0x0801db18

0800978c <_ZN8touchgfx4RectaNERKS0_>:
 800978c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009790:	f9b1 7000 	ldrsh.w	r7, [r1]
 8009794:	888c      	ldrh	r4, [r1, #4]
 8009796:	f9b0 9000 	ldrsh.w	r9, [r0]
 800979a:	443c      	add	r4, r7
 800979c:	b2a4      	uxth	r4, r4
 800979e:	fa0f f884 	sxth.w	r8, r4
 80097a2:	45c1      	cmp	r9, r8
 80097a4:	da2f      	bge.n	8009806 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80097a6:	8882      	ldrh	r2, [r0, #4]
 80097a8:	444a      	add	r2, r9
 80097aa:	b292      	uxth	r2, r2
 80097ac:	fa0f fe82 	sxth.w	lr, r2
 80097b0:	4577      	cmp	r7, lr
 80097b2:	da28      	bge.n	8009806 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80097b4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80097b8:	88cb      	ldrh	r3, [r1, #6]
 80097ba:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80097be:	442b      	add	r3, r5
 80097c0:	b21b      	sxth	r3, r3
 80097c2:	429e      	cmp	r6, r3
 80097c4:	da1f      	bge.n	8009806 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80097c6:	88c3      	ldrh	r3, [r0, #6]
 80097c8:	4433      	add	r3, r6
 80097ca:	b29b      	uxth	r3, r3
 80097cc:	fa0f fc83 	sxth.w	ip, r3
 80097d0:	4565      	cmp	r5, ip
 80097d2:	da18      	bge.n	8009806 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80097d4:	454f      	cmp	r7, r9
 80097d6:	bfb8      	it	lt
 80097d8:	464f      	movlt	r7, r9
 80097da:	42b5      	cmp	r5, r6
 80097dc:	bfb8      	it	lt
 80097de:	4635      	movlt	r5, r6
 80097e0:	45f0      	cmp	r8, lr
 80097e2:	bfd8      	it	le
 80097e4:	4622      	movle	r2, r4
 80097e6:	1bd2      	subs	r2, r2, r7
 80097e8:	8082      	strh	r2, [r0, #4]
 80097ea:	884a      	ldrh	r2, [r1, #2]
 80097ec:	88c9      	ldrh	r1, [r1, #6]
 80097ee:	8007      	strh	r7, [r0, #0]
 80097f0:	440a      	add	r2, r1
 80097f2:	b292      	uxth	r2, r2
 80097f4:	b211      	sxth	r1, r2
 80097f6:	458c      	cmp	ip, r1
 80097f8:	bfa8      	it	ge
 80097fa:	4613      	movge	r3, r2
 80097fc:	1b5b      	subs	r3, r3, r5
 80097fe:	80c3      	strh	r3, [r0, #6]
 8009800:	8045      	strh	r5, [r0, #2]
 8009802:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009806:	2300      	movs	r3, #0
 8009808:	8003      	strh	r3, [r0, #0]
 800980a:	8043      	strh	r3, [r0, #2]
 800980c:	8083      	strh	r3, [r0, #4]
 800980e:	80c3      	strh	r3, [r0, #6]
 8009810:	e7f7      	b.n	8009802 <_ZN8touchgfx4RectaNERKS0_+0x76>

08009812 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8009812:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8009816:	2b00      	cmp	r3, #0
 8009818:	dd06      	ble.n	8009828 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800981a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800981e:	2800      	cmp	r0, #0
 8009820:	bfcc      	ite	gt
 8009822:	2000      	movgt	r0, #0
 8009824:	2001      	movle	r0, #1
 8009826:	4770      	bx	lr
 8009828:	2001      	movs	r0, #1
 800982a:	4770      	bx	lr

0800982c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800982c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009830:	2300      	movs	r3, #0
 8009832:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8009834:	8003      	strh	r3, [r0, #0]
 8009836:	4604      	mov	r4, r0
 8009838:	8043      	strh	r3, [r0, #2]
 800983a:	8083      	strh	r3, [r0, #4]
 800983c:	80c3      	strh	r3, [r0, #6]
 800983e:	2d00      	cmp	r5, #0
 8009840:	d040      	beq.n	80098c4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8009842:	1d28      	adds	r0, r5, #4
 8009844:	f7ff ffe5 	bl	8009812 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009848:	b988      	cbnz	r0, 800986e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800984a:	4620      	mov	r0, r4
 800984c:	f7ff ffe1 	bl	8009812 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009850:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009854:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8009858:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800985c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8009860:	b138      	cbz	r0, 8009872 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8009862:	8022      	strh	r2, [r4, #0]
 8009864:	8063      	strh	r3, [r4, #2]
 8009866:	f8a4 e004 	strh.w	lr, [r4, #4]
 800986a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800986e:	69ad      	ldr	r5, [r5, #24]
 8009870:	e7e5      	b.n	800983e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8009872:	f9b4 0000 	ldrsh.w	r0, [r4]
 8009876:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800987a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800987e:	4290      	cmp	r0, r2
 8009880:	4607      	mov	r7, r0
 8009882:	bfa8      	it	ge
 8009884:	4617      	movge	r7, r2
 8009886:	4472      	add	r2, lr
 8009888:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800988c:	8027      	strh	r7, [r4, #0]
 800988e:	4299      	cmp	r1, r3
 8009890:	460e      	mov	r6, r1
 8009892:	4440      	add	r0, r8
 8009894:	bfa8      	it	ge
 8009896:	461e      	movge	r6, r3
 8009898:	4471      	add	r1, lr
 800989a:	4463      	add	r3, ip
 800989c:	b200      	sxth	r0, r0
 800989e:	b212      	sxth	r2, r2
 80098a0:	b209      	sxth	r1, r1
 80098a2:	b21b      	sxth	r3, r3
 80098a4:	4290      	cmp	r0, r2
 80098a6:	bfac      	ite	ge
 80098a8:	ebc7 0200 	rsbge	r2, r7, r0
 80098ac:	ebc7 0202 	rsblt	r2, r7, r2
 80098b0:	4299      	cmp	r1, r3
 80098b2:	bfac      	ite	ge
 80098b4:	ebc6 0301 	rsbge	r3, r6, r1
 80098b8:	ebc6 0303 	rsblt	r3, r6, r3
 80098bc:	8066      	strh	r6, [r4, #2]
 80098be:	80a2      	strh	r2, [r4, #4]
 80098c0:	80e3      	strh	r3, [r4, #6]
 80098c2:	e7d4      	b.n	800986e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80098c4:	4620      	mov	r0, r4
 80098c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080098ca <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 80098ca:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80098ce:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80098d2:	b383      	cbz	r3, 8009936 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80098d4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80098d6:	b374      	cbz	r4, 8009936 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80098d8:	f9b1 5000 	ldrsh.w	r5, [r1]
 80098dc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80098e0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 80098e4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80098e8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80098ec:	b303      	cbz	r3, 8009930 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80098ee:	4668      	mov	r0, sp
 80098f0:	1d21      	adds	r1, r4, #4
 80098f2:	f8ad 5000 	strh.w	r5, [sp]
 80098f6:	f8ad 6002 	strh.w	r6, [sp, #2]
 80098fa:	f8ad 7004 	strh.w	r7, [sp, #4]
 80098fe:	f8ad 8006 	strh.w	r8, [sp, #6]
 8009902:	f7ff ff43 	bl	800978c <_ZN8touchgfx4RectaNERKS0_>
 8009906:	4668      	mov	r0, sp
 8009908:	f7ff ff83 	bl	8009812 <_ZNK8touchgfx4Rect7isEmptyEv>
 800990c:	b980      	cbnz	r0, 8009930 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800990e:	f8bd 3000 	ldrh.w	r3, [sp]
 8009912:	88a2      	ldrh	r2, [r4, #4]
 8009914:	1a9b      	subs	r3, r3, r2
 8009916:	f8ad 3000 	strh.w	r3, [sp]
 800991a:	88e2      	ldrh	r2, [r4, #6]
 800991c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009920:	1a9b      	subs	r3, r3, r2
 8009922:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009926:	6823      	ldr	r3, [r4, #0]
 8009928:	4669      	mov	r1, sp
 800992a:	689b      	ldr	r3, [r3, #8]
 800992c:	4620      	mov	r0, r4
 800992e:	4798      	blx	r3
 8009930:	69a4      	ldr	r4, [r4, #24]
 8009932:	2c00      	cmp	r4, #0
 8009934:	d1d8      	bne.n	80098e8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8009936:	b002      	add	sp, #8
 8009938:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800993c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800993c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800993e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009942:	460d      	mov	r5, r1
 8009944:	4616      	mov	r6, r2
 8009946:	b323      	cbz	r3, 8009992 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009948:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800994a:	b314      	cbz	r4, 8009992 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800994c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009950:	b1eb      	cbz	r3, 800998e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009952:	6828      	ldr	r0, [r5, #0]
 8009954:	6869      	ldr	r1, [r5, #4]
 8009956:	466b      	mov	r3, sp
 8009958:	c303      	stmia	r3!, {r0, r1}
 800995a:	4668      	mov	r0, sp
 800995c:	1d21      	adds	r1, r4, #4
 800995e:	f7ff ff15 	bl	800978c <_ZN8touchgfx4RectaNERKS0_>
 8009962:	4668      	mov	r0, sp
 8009964:	f7ff ff55 	bl	8009812 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009968:	b988      	cbnz	r0, 800998e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800996a:	f8bd 3000 	ldrh.w	r3, [sp]
 800996e:	88a2      	ldrh	r2, [r4, #4]
 8009970:	1a9b      	subs	r3, r3, r2
 8009972:	f8ad 3000 	strh.w	r3, [sp]
 8009976:	88e2      	ldrh	r2, [r4, #6]
 8009978:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800997c:	1a9b      	subs	r3, r3, r2
 800997e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009982:	6823      	ldr	r3, [r4, #0]
 8009984:	4632      	mov	r2, r6
 8009986:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009988:	4669      	mov	r1, sp
 800998a:	4620      	mov	r0, r4
 800998c:	4798      	blx	r3
 800998e:	69a4      	ldr	r4, [r4, #24]
 8009990:	e7db      	b.n	800994a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8009992:	b002      	add	sp, #8
 8009994:	bd70      	pop	{r4, r5, r6, pc}

08009996 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8009996:	b513      	push	{r0, r1, r4, lr}
 8009998:	6803      	ldr	r3, [r0, #0]
 800999a:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800999e:	2300      	movs	r3, #0
 80099a0:	e9cd 3300 	strd	r3, r3, [sp]
 80099a4:	466b      	mov	r3, sp
 80099a6:	47a0      	blx	r4
 80099a8:	b002      	add	sp, #8
 80099aa:	bd10      	pop	{r4, pc}

080099ac <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80099ac:	2301      	movs	r3, #1
 80099ae:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80099b2:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80099b6:	4770      	bx	lr

080099b8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80099b8:	2301      	movs	r3, #1
 80099ba:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80099be:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80099c2:	4770      	bx	lr

080099c4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80099c4:	6843      	ldr	r3, [r0, #4]
 80099c6:	2201      	movs	r2, #1
 80099c8:	725a      	strb	r2, [r3, #9]
 80099ca:	6840      	ldr	r0, [r0, #4]
 80099cc:	6803      	ldr	r3, [r0, #0]
 80099ce:	691b      	ldr	r3, [r3, #16]
 80099d0:	4718      	bx	r3

080099d2 <_ZN8touchgfx3HAL8flushDMAEv>:
 80099d2:	6840      	ldr	r0, [r0, #4]
 80099d4:	6803      	ldr	r3, [r0, #0]
 80099d6:	689b      	ldr	r3, [r3, #8]
 80099d8:	4718      	bx	r3
	...

080099dc <_ZN8touchgfx3HAL10beginFrameEv>:
 80099dc:	4b04      	ldr	r3, [pc, #16]	; (80099f0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80099de:	781b      	ldrb	r3, [r3, #0]
 80099e0:	b123      	cbz	r3, 80099ec <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80099e2:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 80099e6:	f080 0001 	eor.w	r0, r0, #1
 80099ea:	4770      	bx	lr
 80099ec:	2001      	movs	r0, #1
 80099ee:	4770      	bx	lr
 80099f0:	2000a42a 	.word	0x2000a42a

080099f4 <_ZN8touchgfx3HAL8endFrameEv>:
 80099f4:	b510      	push	{r4, lr}
 80099f6:	4604      	mov	r4, r0
 80099f8:	6840      	ldr	r0, [r0, #4]
 80099fa:	6803      	ldr	r3, [r0, #0]
 80099fc:	689b      	ldr	r3, [r3, #8]
 80099fe:	4798      	blx	r3
 8009a00:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8009a04:	b113      	cbz	r3, 8009a0c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8009a06:	2301      	movs	r3, #1
 8009a08:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009a0c:	bd10      	pop	{r4, pc}
	...

08009a10 <_ZN8touchgfx3HAL4tickEv>:
 8009a10:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009a12:	6803      	ldr	r3, [r0, #0]
 8009a14:	4d5c      	ldr	r5, [pc, #368]	; (8009b88 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8009a16:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8009a1a:	4604      	mov	r4, r0
 8009a1c:	4798      	blx	r3
 8009a1e:	2800      	cmp	r0, #0
 8009a20:	f000 8097 	beq.w	8009b52 <_ZN8touchgfx3HAL4tickEv+0x142>
 8009a24:	2001      	movs	r0, #1
 8009a26:	f7f6 fe9b 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009a2a:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8009a2e:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009a32:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 8009a36:	2600      	movs	r6, #0
 8009a38:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8009a3c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8009a40:	b133      	cbz	r3, 8009a50 <_ZN8touchgfx3HAL4tickEv+0x40>
 8009a42:	6823      	ldr	r3, [r4, #0]
 8009a44:	4620      	mov	r0, r4
 8009a46:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8009a4a:	4798      	blx	r3
 8009a4c:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8009a50:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8009a54:	6862      	ldr	r2, [r4, #4]
 8009a56:	f083 0301 	eor.w	r3, r3, #1
 8009a5a:	7253      	strb	r3, [r2, #9]
 8009a5c:	2601      	movs	r6, #1
 8009a5e:	702e      	strb	r6, [r5, #0]
 8009a60:	f003 f93e 	bl	800cce0 <_ZN8touchgfx11Application11getInstanceEv>
 8009a64:	6803      	ldr	r3, [r0, #0]
 8009a66:	4631      	mov	r1, r6
 8009a68:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009a6a:	4798      	blx	r3
 8009a6c:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009a70:	b90b      	cbnz	r3, 8009a76 <_ZN8touchgfx3HAL4tickEv+0x66>
 8009a72:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8009a76:	f003 f933 	bl	800cce0 <_ZN8touchgfx11Application11getInstanceEv>
 8009a7a:	6803      	ldr	r3, [r0, #0]
 8009a7c:	695b      	ldr	r3, [r3, #20]
 8009a7e:	4798      	blx	r3
 8009a80:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009a82:	6803      	ldr	r3, [r0, #0]
 8009a84:	691b      	ldr	r3, [r3, #16]
 8009a86:	4798      	blx	r3
 8009a88:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009a8c:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8009a90:	3b01      	subs	r3, #1
 8009a92:	b2db      	uxtb	r3, r3
 8009a94:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009a98:	b10a      	cbz	r2, 8009a9e <_ZN8touchgfx3HAL4tickEv+0x8e>
 8009a9a:	2b00      	cmp	r3, #0
 8009a9c:	d1eb      	bne.n	8009a76 <_ZN8touchgfx3HAL4tickEv+0x66>
 8009a9e:	4a3b      	ldr	r2, [pc, #236]	; (8009b8c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8009aa0:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8009aa4:	7813      	ldrb	r3, [r2, #0]
 8009aa6:	3301      	adds	r3, #1
 8009aa8:	b25b      	sxtb	r3, r3
 8009aaa:	4299      	cmp	r1, r3
 8009aac:	7013      	strb	r3, [r2, #0]
 8009aae:	dc10      	bgt.n	8009ad2 <_ZN8touchgfx3HAL4tickEv+0xc2>
 8009ab0:	68e0      	ldr	r0, [r4, #12]
 8009ab2:	2300      	movs	r3, #0
 8009ab4:	7013      	strb	r3, [r2, #0]
 8009ab6:	6803      	ldr	r3, [r0, #0]
 8009ab8:	aa03      	add	r2, sp, #12
 8009aba:	68db      	ldr	r3, [r3, #12]
 8009abc:	a902      	add	r1, sp, #8
 8009abe:	4798      	blx	r3
 8009ac0:	6823      	ldr	r3, [r4, #0]
 8009ac2:	2800      	cmp	r0, #0
 8009ac4:	d051      	beq.n	8009b6a <_ZN8touchgfx3HAL4tickEv+0x15a>
 8009ac6:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8009aca:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8009ace:	4620      	mov	r0, r4
 8009ad0:	4798      	blx	r3
 8009ad2:	6960      	ldr	r0, [r4, #20]
 8009ad4:	2300      	movs	r3, #0
 8009ad6:	f88d 3007 	strb.w	r3, [sp, #7]
 8009ada:	b158      	cbz	r0, 8009af4 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8009adc:	6803      	ldr	r3, [r0, #0]
 8009ade:	f10d 0107 	add.w	r1, sp, #7
 8009ae2:	68db      	ldr	r3, [r3, #12]
 8009ae4:	4798      	blx	r3
 8009ae6:	b128      	cbz	r0, 8009af4 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8009ae8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009aea:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8009aee:	6803      	ldr	r3, [r0, #0]
 8009af0:	68db      	ldr	r3, [r3, #12]
 8009af2:	4798      	blx	r3
 8009af4:	f104 001c 	add.w	r0, r4, #28
 8009af8:	f011 fb82 	bl	801b200 <_ZN8touchgfx8Gestures4tickEv>
 8009afc:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8009b00:	b30b      	cbz	r3, 8009b46 <_ZN8touchgfx3HAL4tickEv+0x136>
 8009b02:	6920      	ldr	r0, [r4, #16]
 8009b04:	6803      	ldr	r3, [r0, #0]
 8009b06:	691b      	ldr	r3, [r3, #16]
 8009b08:	4798      	blx	r3
 8009b0a:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009b0c:	4606      	mov	r6, r0
 8009b0e:	b903      	cbnz	r3, 8009b12 <_ZN8touchgfx3HAL4tickEv+0x102>
 8009b10:	6720      	str	r0, [r4, #112]	; 0x70
 8009b12:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009b14:	4a1e      	ldr	r2, [pc, #120]	; (8009b90 <_ZN8touchgfx3HAL4tickEv+0x180>)
 8009b16:	1af3      	subs	r3, r6, r3
 8009b18:	4293      	cmp	r3, r2
 8009b1a:	d914      	bls.n	8009b46 <_ZN8touchgfx3HAL4tickEv+0x136>
 8009b1c:	6920      	ldr	r0, [r4, #16]
 8009b1e:	6803      	ldr	r3, [r0, #0]
 8009b20:	699b      	ldr	r3, [r3, #24]
 8009b22:	4798      	blx	r3
 8009b24:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009b26:	2264      	movs	r2, #100	; 0x64
 8009b28:	1af3      	subs	r3, r6, r3
 8009b2a:	fbb3 f3f2 	udiv	r3, r3, r2
 8009b2e:	fbb0 f0f3 	udiv	r0, r0, r3
 8009b32:	2800      	cmp	r0, #0
 8009b34:	dc1e      	bgt.n	8009b74 <_ZN8touchgfx3HAL4tickEv+0x164>
 8009b36:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 8009b3a:	6920      	ldr	r0, [r4, #16]
 8009b3c:	6803      	ldr	r3, [r0, #0]
 8009b3e:	2100      	movs	r1, #0
 8009b40:	69db      	ldr	r3, [r3, #28]
 8009b42:	4798      	blx	r3
 8009b44:	6726      	str	r6, [r4, #112]	; 0x70
 8009b46:	f003 f8cb 	bl	800cce0 <_ZN8touchgfx11Application11getInstanceEv>
 8009b4a:	6803      	ldr	r3, [r0, #0]
 8009b4c:	2100      	movs	r1, #0
 8009b4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b50:	4798      	blx	r3
 8009b52:	6823      	ldr	r3, [r4, #0]
 8009b54:	4620      	mov	r0, r4
 8009b56:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8009b5a:	4798      	blx	r3
 8009b5c:	2001      	movs	r0, #1
 8009b5e:	f7f6 fe1b 	bl	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009b62:	2300      	movs	r3, #0
 8009b64:	702b      	strb	r3, [r5, #0]
 8009b66:	b004      	add	sp, #16
 8009b68:	bd70      	pop	{r4, r5, r6, pc}
 8009b6a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8009b6e:	4620      	mov	r0, r4
 8009b70:	4798      	blx	r3
 8009b72:	e7ae      	b.n	8009ad2 <_ZN8touchgfx3HAL4tickEv+0xc2>
 8009b74:	2863      	cmp	r0, #99	; 0x63
 8009b76:	bfcb      	itete	gt
 8009b78:	2300      	movgt	r3, #0
 8009b7a:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8009b7e:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8009b82:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8009b86:	e7d8      	b.n	8009b3a <_ZN8touchgfx3HAL4tickEv+0x12a>
 8009b88:	2000a430 	.word	0x2000a430
 8009b8c:	2000a431 	.word	0x2000a431
 8009b90:	05f5e100 	.word	0x05f5e100

08009b94 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009b94:	f7f7 b89a 	b.w	8000ccc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009b98 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009b98:	6581      	str	r1, [r0, #88]	; 0x58
 8009b9a:	301c      	adds	r0, #28
 8009b9c:	f011 bb2e 	b.w	801b1fc <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009ba0 <_ZN8touchgfx3HAL5touchEll>:
 8009ba0:	b530      	push	{r4, r5, lr}
 8009ba2:	b087      	sub	sp, #28
 8009ba4:	4604      	mov	r4, r0
 8009ba6:	a804      	add	r0, sp, #16
 8009ba8:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009bac:	f002 fe3c 	bl	800c828 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8009bb0:	9b04      	ldr	r3, [sp, #16]
 8009bb2:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009bb6:	a906      	add	r1, sp, #24
 8009bb8:	9b05      	ldr	r3, [sp, #20]
 8009bba:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8009bbe:	a803      	add	r0, sp, #12
 8009bc0:	f002 fe70 	bl	800c8a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009bc4:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8009bc8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009bcc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009bd0:	f104 001c 	add.w	r0, r4, #28
 8009bd4:	b189      	cbz	r1, 8009bfa <_ZN8touchgfx3HAL5touchEll+0x5a>
 8009bd6:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8009bda:	9300      	str	r3, [sp, #0]
 8009bdc:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8009be0:	4613      	mov	r3, r2
 8009be2:	462a      	mov	r2, r5
 8009be4:	f011 fb1a 	bl	801b21c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8009be8:	b128      	cbz	r0, 8009bf6 <_ZN8touchgfx3HAL5touchEll+0x56>
 8009bea:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8009bee:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009bf0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009bf4:	6623      	str	r3, [r4, #96]	; 0x60
 8009bf6:	b007      	add	sp, #28
 8009bf8:	bd30      	pop	{r4, r5, pc}
 8009bfa:	f011 fb53 	bl	801b2a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009bfe:	2301      	movs	r3, #1
 8009c00:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009c04:	e7f1      	b.n	8009bea <_ZN8touchgfx3HAL5touchEll+0x4a>

08009c06 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8009c06:	b570      	push	{r4, r5, r6, lr}
 8009c08:	2b00      	cmp	r3, #0
 8009c0a:	d050      	beq.n	8009cae <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009c0c:	ea81 0002 	eor.w	r0, r1, r2
 8009c10:	07c6      	lsls	r6, r0, #31
 8009c12:	d508      	bpl.n	8009c26 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009c14:	3a01      	subs	r2, #1
 8009c16:	18cc      	adds	r4, r1, r3
 8009c18:	42a1      	cmp	r1, r4
 8009c1a:	d048      	beq.n	8009cae <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009c1c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009c20:	f801 0b01 	strb.w	r0, [r1], #1
 8009c24:	e7f8      	b.n	8009c18 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8009c26:	07d5      	lsls	r5, r2, #31
 8009c28:	bf42      	ittt	mi
 8009c2a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8009c2e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8009c32:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009c36:	2b01      	cmp	r3, #1
 8009c38:	d915      	bls.n	8009c66 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8009c3a:	ea82 0001 	eor.w	r0, r2, r1
 8009c3e:	0784      	lsls	r4, r0, #30
 8009c40:	d02d      	beq.n	8009c9e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 8009c42:	1e94      	subs	r4, r2, #2
 8009c44:	4608      	mov	r0, r1
 8009c46:	18ce      	adds	r6, r1, r3
 8009c48:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 8009c4c:	f820 5b02 	strh.w	r5, [r0], #2
 8009c50:	1a35      	subs	r5, r6, r0
 8009c52:	2d01      	cmp	r5, #1
 8009c54:	d8f8      	bhi.n	8009c48 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 8009c56:	1e98      	subs	r0, r3, #2
 8009c58:	f020 0001 	bic.w	r0, r0, #1
 8009c5c:	3002      	adds	r0, #2
 8009c5e:	4401      	add	r1, r0
 8009c60:	4402      	add	r2, r0
 8009c62:	f003 0301 	and.w	r3, r3, #1
 8009c66:	1f14      	subs	r4, r2, #4
 8009c68:	4608      	mov	r0, r1
 8009c6a:	18ce      	adds	r6, r1, r3
 8009c6c:	1a35      	subs	r5, r6, r0
 8009c6e:	2d03      	cmp	r5, #3
 8009c70:	d810      	bhi.n	8009c94 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 8009c72:	089c      	lsrs	r4, r3, #2
 8009c74:	00a0      	lsls	r0, r4, #2
 8009c76:	4401      	add	r1, r0
 8009c78:	3801      	subs	r0, #1
 8009c7a:	4402      	add	r2, r0
 8009c7c:	f06f 0003 	mvn.w	r0, #3
 8009c80:	fb00 3404 	mla	r4, r0, r4, r3
 8009c84:	440c      	add	r4, r1
 8009c86:	42a1      	cmp	r1, r4
 8009c88:	d011      	beq.n	8009cae <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009c8a:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8009c8e:	f801 3b01 	strb.w	r3, [r1], #1
 8009c92:	e7f8      	b.n	8009c86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 8009c94:	f854 5f04 	ldr.w	r5, [r4, #4]!
 8009c98:	f840 5b04 	str.w	r5, [r0], #4
 8009c9c:	e7e6      	b.n	8009c6c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 8009c9e:	0790      	lsls	r0, r2, #30
 8009ca0:	d0e1      	beq.n	8009c66 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8009ca2:	f832 0b02 	ldrh.w	r0, [r2], #2
 8009ca6:	f821 0b02 	strh.w	r0, [r1], #2
 8009caa:	3b02      	subs	r3, #2
 8009cac:	e7db      	b.n	8009c66 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8009cae:	2001      	movs	r0, #1
 8009cb0:	bd70      	pop	{r4, r5, r6, pc}

08009cb2 <_ZN8touchgfx3HAL7noTouchEv>:
 8009cb2:	b510      	push	{r4, lr}
 8009cb4:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8009cb8:	4604      	mov	r4, r0
 8009cba:	b153      	cbz	r3, 8009cd2 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009cbc:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8009cc0:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8009cc4:	2101      	movs	r1, #1
 8009cc6:	301c      	adds	r0, #28
 8009cc8:	f011 faec 	bl	801b2a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009ccc:	2300      	movs	r3, #0
 8009cce:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009cd2:	bd10      	pop	{r4, pc}

08009cd4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8009cd4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009cd8:	4604      	mov	r4, r0
 8009cda:	6980      	ldr	r0, [r0, #24]
 8009cdc:	b085      	sub	sp, #20
 8009cde:	460f      	mov	r7, r1
 8009ce0:	4690      	mov	r8, r2
 8009ce2:	4699      	mov	r9, r3
 8009ce4:	b930      	cbnz	r0, 8009cf4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 8009ce6:	4b1c      	ldr	r3, [pc, #112]	; (8009d58 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 8009ce8:	4a1c      	ldr	r2, [pc, #112]	; (8009d5c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8009cea:	f44f 71a1 	mov.w	r1, #322	; 0x142
 8009cee:	481c      	ldr	r0, [pc, #112]	; (8009d60 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 8009cf0:	f011 fb8c 	bl	801b40c <__assert_func>
 8009cf4:	ad04      	add	r5, sp, #16
 8009cf6:	2600      	movs	r6, #0
 8009cf8:	f845 6d04 	str.w	r6, [r5, #-4]!
 8009cfc:	6806      	ldr	r6, [r0, #0]
 8009cfe:	9501      	str	r5, [sp, #4]
 8009d00:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8009d04:	9500      	str	r5, [sp, #0]
 8009d06:	6835      	ldr	r5, [r6, #0]
 8009d08:	47a8      	blx	r5
 8009d0a:	4d16      	ldr	r5, [pc, #88]	; (8009d64 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 8009d0c:	4606      	mov	r6, r0
 8009d0e:	f8a5 9000 	strh.w	r9, [r5]
 8009d12:	f7f7 f86b 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8009d16:	6803      	ldr	r3, [r0, #0]
 8009d18:	6a1b      	ldr	r3, [r3, #32]
 8009d1a:	4798      	blx	r3
 8009d1c:	2801      	cmp	r0, #1
 8009d1e:	d012      	beq.n	8009d46 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 8009d20:	d306      	bcc.n	8009d30 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 8009d22:	280d      	cmp	r0, #13
 8009d24:	d80b      	bhi.n	8009d3e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8009d26:	4b10      	ldr	r3, [pc, #64]	; (8009d68 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 8009d28:	4a0c      	ldr	r2, [pc, #48]	; (8009d5c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8009d2a:	f44f 71b0 	mov.w	r1, #352	; 0x160
 8009d2e:	e7de      	b.n	8009cee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 8009d30:	882b      	ldrh	r3, [r5, #0]
 8009d32:	fb08 7203 	mla	r2, r8, r3, r7
 8009d36:	9b03      	ldr	r3, [sp, #12]
 8009d38:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8009d3c:	63e3      	str	r3, [r4, #60]	; 0x3c
 8009d3e:	4630      	mov	r0, r6
 8009d40:	b005      	add	sp, #20
 8009d42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009d46:	882a      	ldrh	r2, [r5, #0]
 8009d48:	9b03      	ldr	r3, [sp, #12]
 8009d4a:	fb08 7202 	mla	r2, r8, r2, r7
 8009d4e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009d52:	1a9a      	subs	r2, r3, r2
 8009d54:	63e2      	str	r2, [r4, #60]	; 0x3c
 8009d56:	e7f2      	b.n	8009d3e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8009d58:	0801dc7d 	.word	0x0801dc7d
 8009d5c:	0801ded7 	.word	0x0801ded7
 8009d60:	0801dcc2 	.word	0x0801dcc2
 8009d64:	2000a426 	.word	0x2000a426
 8009d68:	0801dce8 	.word	0x0801dce8

08009d6c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 8009d6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009d70:	4698      	mov	r8, r3
 8009d72:	6803      	ldr	r3, [r0, #0]
 8009d74:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 8009d76:	4b0f      	ldr	r3, [pc, #60]	; (8009db4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 8009d78:	b087      	sub	sp, #28
 8009d7a:	f8b3 9000 	ldrh.w	r9, [r3]
 8009d7e:	460e      	mov	r6, r1
 8009d80:	4617      	mov	r7, r2
 8009d82:	4604      	mov	r4, r0
 8009d84:	f7f7 f832 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8009d88:	6803      	ldr	r3, [r0, #0]
 8009d8a:	6a1b      	ldr	r3, [r3, #32]
 8009d8c:	4798      	blx	r3
 8009d8e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8009d92:	9302      	str	r3, [sp, #8]
 8009d94:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8009d98:	9301      	str	r3, [sp, #4]
 8009d9a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8009d9e:	9300      	str	r3, [sp, #0]
 8009da0:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8009da4:	4643      	mov	r3, r8
 8009da6:	463a      	mov	r2, r7
 8009da8:	4631      	mov	r1, r6
 8009daa:	4620      	mov	r0, r4
 8009dac:	47a8      	blx	r5
 8009dae:	b007      	add	sp, #28
 8009db0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009db4:	2000a426 	.word	0x2000a426

08009db8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009db8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009dbc:	4604      	mov	r4, r0
 8009dbe:	b08b      	sub	sp, #44	; 0x2c
 8009dc0:	4610      	mov	r0, r2
 8009dc2:	460d      	mov	r5, r1
 8009dc4:	4691      	mov	r9, r2
 8009dc6:	461e      	mov	r6, r3
 8009dc8:	f005 fc28 	bl	800f61c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009dcc:	2800      	cmp	r0, #0
 8009dce:	f000 80a0 	beq.w	8009f12 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8009dd2:	6823      	ldr	r3, [r4, #0]
 8009dd4:	f8df b170 	ldr.w	fp, [pc, #368]	; 8009f48 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>
 8009dd8:	6a1b      	ldr	r3, [r3, #32]
 8009dda:	f8df a170 	ldr.w	sl, [pc, #368]	; 8009f4c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>
 8009dde:	4620      	mov	r0, r4
 8009de0:	4798      	blx	r3
 8009de2:	6823      	ldr	r3, [r4, #0]
 8009de4:	4620      	mov	r0, r4
 8009de6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009de8:	4798      	blx	r3
 8009dea:	f8bb 3000 	ldrh.w	r3, [fp]
 8009dee:	9301      	str	r3, [sp, #4]
 8009df0:	f8ba 3000 	ldrh.w	r3, [sl]
 8009df4:	9302      	str	r3, [sp, #8]
 8009df6:	4b51      	ldr	r3, [pc, #324]	; (8009f3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
 8009df8:	881a      	ldrh	r2, [r3, #0]
 8009dfa:	9203      	str	r2, [sp, #12]
 8009dfc:	4a50      	ldr	r2, [pc, #320]	; (8009f40 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 8009dfe:	8812      	ldrh	r2, [r2, #0]
 8009e00:	9204      	str	r2, [sp, #16]
 8009e02:	af0a      	add	r7, sp, #40	; 0x28
 8009e04:	4a4f      	ldr	r2, [pc, #316]	; (8009f44 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x18c>)
 8009e06:	f827 9d0c 	strh.w	r9, [r7, #-12]!
 8009e0a:	7812      	ldrb	r2, [r2, #0]
 8009e0c:	4698      	mov	r8, r3
 8009e0e:	4638      	mov	r0, r7
 8009e10:	2a00      	cmp	r2, #0
 8009e12:	f040 8081 	bne.w	8009f18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x160>
 8009e16:	f005 fcbb 	bl	800f790 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009e1a:	f8ab 0000 	strh.w	r0, [fp]
 8009e1e:	4638      	mov	r0, r7
 8009e20:	f005 fcf0 	bl	800f804 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009e24:	f8aa 0000 	strh.w	r0, [sl]
 8009e28:	4638      	mov	r0, r7
 8009e2a:	f005 fcb1 	bl	800f790 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009e2e:	f8a8 0000 	strh.w	r0, [r8]
 8009e32:	4638      	mov	r0, r7
 8009e34:	f005 fce6 	bl	800f804 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009e38:	4b41      	ldr	r3, [pc, #260]	; (8009f40 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 8009e3a:	8018      	strh	r0, [r3, #0]
 8009e3c:	4648      	mov	r0, r9
 8009e3e:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8009e42:	f005 fbeb 	bl	800f61c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009e46:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8009e4a:	2200      	movs	r2, #0
 8009e4c:	4611      	mov	r1, r2
 8009e4e:	4628      	mov	r0, r5
 8009e50:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8009e54:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8009e58:	f7f8 fc93 	bl	8002782 <_ZN8touchgfx8Drawable5setXYEss>
 8009e5c:	2301      	movs	r3, #1
 8009e5e:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8009e62:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8009e66:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009e6a:	2b00      	cmp	r3, #0
 8009e6c:	dd5c      	ble.n	8009f28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
 8009e6e:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009e72:	2b00      	cmp	r3, #0
 8009e74:	dd58      	ble.n	8009f28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
 8009e76:	462a      	mov	r2, r5
 8009e78:	ab08      	add	r3, sp, #32
 8009e7a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009e7e:	6851      	ldr	r1, [r2, #4]
 8009e80:	c303      	stmia	r3!, {r0, r1}
 8009e82:	4631      	mov	r1, r6
 8009e84:	a808      	add	r0, sp, #32
 8009e86:	f7ff fc81 	bl	800978c <_ZN8touchgfx4RectaNERKS0_>
 8009e8a:	a807      	add	r0, sp, #28
 8009e8c:	f005 fe12 	bl	800fab4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009e90:	4606      	mov	r6, r0
 8009e92:	f7f6 ffab 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8009e96:	6803      	ldr	r3, [r0, #0]
 8009e98:	6a1b      	ldr	r3, [r3, #32]
 8009e9a:	4798      	blx	r3
 8009e9c:	4286      	cmp	r6, r0
 8009e9e:	d04a      	beq.n	8009f36 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x17e>
 8009ea0:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8009ea2:	b150      	cbz	r0, 8009eba <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
 8009ea4:	a807      	add	r0, sp, #28
 8009ea6:	f005 fe05 	bl	800fab4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009eaa:	4606      	mov	r6, r0
 8009eac:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8009eae:	6803      	ldr	r3, [r0, #0]
 8009eb0:	6a1b      	ldr	r3, [r3, #32]
 8009eb2:	4798      	blx	r3
 8009eb4:	1a33      	subs	r3, r6, r0
 8009eb6:	4258      	negs	r0, r3
 8009eb8:	4158      	adcs	r0, r3
 8009eba:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 8009ebe:	2600      	movs	r6, #0
 8009ec0:	682a      	ldr	r2, [r5, #0]
 8009ec2:	696b      	ldr	r3, [r5, #20]
 8009ec4:	616e      	str	r6, [r5, #20]
 8009ec6:	9305      	str	r3, [sp, #20]
 8009ec8:	6892      	ldr	r2, [r2, #8]
 8009eca:	a908      	add	r1, sp, #32
 8009ecc:	4628      	mov	r0, r5
 8009ece:	4790      	blx	r2
 8009ed0:	9b05      	ldr	r3, [sp, #20]
 8009ed2:	616b      	str	r3, [r5, #20]
 8009ed4:	4652      	mov	r2, sl
 8009ed6:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 8009eda:	4649      	mov	r1, r9
 8009edc:	4628      	mov	r0, r5
 8009ede:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8009ee2:	f7f8 fc4e 	bl	8002782 <_ZN8touchgfx8Drawable5setXYEss>
 8009ee6:	4b18      	ldr	r3, [pc, #96]	; (8009f48 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>)
 8009ee8:	9a01      	ldr	r2, [sp, #4]
 8009eea:	801a      	strh	r2, [r3, #0]
 8009eec:	4b17      	ldr	r3, [pc, #92]	; (8009f4c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>)
 8009eee:	9a02      	ldr	r2, [sp, #8]
 8009ef0:	801a      	strh	r2, [r3, #0]
 8009ef2:	4b12      	ldr	r3, [pc, #72]	; (8009f3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
 8009ef4:	9a03      	ldr	r2, [sp, #12]
 8009ef6:	801a      	strh	r2, [r3, #0]
 8009ef8:	4b11      	ldr	r3, [pc, #68]	; (8009f40 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 8009efa:	9a04      	ldr	r2, [sp, #16]
 8009efc:	801a      	strh	r2, [r3, #0]
 8009efe:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8009f02:	6823      	ldr	r3, [r4, #0]
 8009f04:	4620      	mov	r0, r4
 8009f06:	6a1b      	ldr	r3, [r3, #32]
 8009f08:	4798      	blx	r3
 8009f0a:	6823      	ldr	r3, [r4, #0]
 8009f0c:	4620      	mov	r0, r4
 8009f0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009f10:	4798      	blx	r3
 8009f12:	b00b      	add	sp, #44	; 0x2c
 8009f14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009f18:	f005 fc74 	bl	800f804 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009f1c:	f8ab 0000 	strh.w	r0, [fp]
 8009f20:	4638      	mov	r0, r7
 8009f22:	f005 fc35 	bl	800f790 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009f26:	e77d      	b.n	8009e24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x6c>
 8009f28:	462a      	mov	r2, r5
 8009f2a:	ab08      	add	r3, sp, #32
 8009f2c:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009f30:	6851      	ldr	r1, [r2, #4]
 8009f32:	c303      	stmia	r3!, {r0, r1}
 8009f34:	e7a9      	b.n	8009e8a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xd2>
 8009f36:	2000      	movs	r0, #0
 8009f38:	e7bf      	b.n	8009eba <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
 8009f3a:	bf00      	nop
 8009f3c:	2000a420 	.word	0x2000a420
 8009f40:	2000a422 	.word	0x2000a422
 8009f44:	2000a424 	.word	0x2000a424
 8009f48:	2000a426 	.word	0x2000a426
 8009f4c:	2000a428 	.word	0x2000a428

08009f50 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8009f50:	b510      	push	{r4, lr}
 8009f52:	4b07      	ldr	r3, [pc, #28]	; (8009f70 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8009f54:	781b      	ldrb	r3, [r3, #0]
 8009f56:	4604      	mov	r4, r0
 8009f58:	b13b      	cbz	r3, 8009f6a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009f5a:	6803      	ldr	r3, [r0, #0]
 8009f5c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009f5e:	4798      	blx	r3
 8009f60:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009f62:	4283      	cmp	r3, r0
 8009f64:	d101      	bne.n	8009f6a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009f66:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8009f68:	bd10      	pop	{r4, pc}
 8009f6a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8009f6c:	e7fc      	b.n	8009f68 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8009f6e:	bf00      	nop
 8009f70:	2000a42a 	.word	0x2000a42a

08009f74 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8009f74:	b510      	push	{r4, lr}
 8009f76:	4b0b      	ldr	r3, [pc, #44]	; (8009fa4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 8009f78:	781b      	ldrb	r3, [r3, #0]
 8009f7a:	4604      	mov	r4, r0
 8009f7c:	b95b      	cbnz	r3, 8009f96 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009f7e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8009f82:	2b02      	cmp	r3, #2
 8009f84:	d007      	beq.n	8009f96 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009f86:	6840      	ldr	r0, [r0, #4]
 8009f88:	f000 fbea 	bl	800a760 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8009f8c:	b118      	cbz	r0, 8009f96 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009f8e:	6862      	ldr	r2, [r4, #4]
 8009f90:	7a53      	ldrb	r3, [r2, #9]
 8009f92:	2b00      	cmp	r3, #0
 8009f94:	d0fc      	beq.n	8009f90 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8009f96:	f7f6 fe91 	bl	8000cbc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8009f9a:	4620      	mov	r0, r4
 8009f9c:	f7ff ffd8 	bl	8009f50 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009fa0:	bd10      	pop	{r4, pc}
 8009fa2:	bf00      	nop
 8009fa4:	2000a42a 	.word	0x2000a42a

08009fa8 <_ZN8touchgfx3HAL10initializeEv>:
 8009fa8:	b510      	push	{r4, lr}
 8009faa:	4604      	mov	r4, r0
 8009fac:	f7f6 fe5e 	bl	8000c6c <_ZN8touchgfx10OSWrappers10initializeEv>
 8009fb0:	6860      	ldr	r0, [r4, #4]
 8009fb2:	6803      	ldr	r3, [r0, #0]
 8009fb4:	68db      	ldr	r3, [r3, #12]
 8009fb6:	4798      	blx	r3
 8009fb8:	68e0      	ldr	r0, [r4, #12]
 8009fba:	6803      	ldr	r3, [r0, #0]
 8009fbc:	689b      	ldr	r3, [r3, #8]
 8009fbe:	4798      	blx	r3
 8009fc0:	6823      	ldr	r3, [r4, #0]
 8009fc2:	4620      	mov	r0, r4
 8009fc4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009fc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009fca:	4718      	bx	r3

08009fcc <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 8009fcc:	b508      	push	{r3, lr}
 8009fce:	290d      	cmp	r1, #13
 8009fd0:	d817      	bhi.n	800a002 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 8009fd2:	e8df f001 	tbb	[pc, r1]
 8009fd6:	090b      	.short	0x090b
 8009fd8:	0d0d0d07 	.word	0x0d0d0d07
 8009fdc:	1414140d 	.word	0x1414140d
 8009fe0:	0d0d1414 	.word	0x0d0d1414
 8009fe4:	2020      	movs	r0, #32
 8009fe6:	bd08      	pop	{r3, pc}
 8009fe8:	2018      	movs	r0, #24
 8009fea:	e7fc      	b.n	8009fe6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009fec:	2010      	movs	r0, #16
 8009fee:	e7fa      	b.n	8009fe6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009ff0:	4b05      	ldr	r3, [pc, #20]	; (800a008 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 8009ff2:	4a06      	ldr	r2, [pc, #24]	; (800a00c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 8009ff4:	4806      	ldr	r0, [pc, #24]	; (800a010 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 8009ff6:	f44f 7111 	mov.w	r1, #580	; 0x244
 8009ffa:	f011 fa07 	bl	801b40c <__assert_func>
 8009ffe:	2008      	movs	r0, #8
 800a000:	e7f1      	b.n	8009fe6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a002:	2000      	movs	r0, #0
 800a004:	e7ef      	b.n	8009fe6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a006:	bf00      	nop
 800a008:	0801ddbb 	.word	0x0801ddbb
 800a00c:	0801e099 	.word	0x0801e099
 800a010:	0801dcc2 	.word	0x0801dcc2

0800a014 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800a014:	b570      	push	{r4, r5, r6, lr}
 800a016:	460d      	mov	r5, r1
 800a018:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800a01c:	4616      	mov	r6, r2
 800a01e:	461c      	mov	r4, r3
 800a020:	f7ff ffd4 	bl	8009fcc <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800a024:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800a028:	10c0      	asrs	r0, r0, #3
 800a02a:	fb06 5101 	mla	r1, r6, r1, r5
 800a02e:	fb00 4001 	mla	r0, r0, r1, r4
 800a032:	bd70      	pop	{r4, r5, r6, pc}

0800a034 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800a034:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a038:	b08a      	sub	sp, #40	; 0x28
 800a03a:	f04f 0c00 	mov.w	ip, #0
 800a03e:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 800a042:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800a046:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800a04a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800a04e:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 800a052:	f8cd c020 	str.w	ip, [sp, #32]
 800a056:	f1b8 0f02 	cmp.w	r8, #2
 800a05a:	4604      	mov	r4, r0
 800a05c:	469a      	mov	sl, r3
 800a05e:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800a062:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800a066:	d030      	beq.n	800a0ca <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 800a068:	2bff      	cmp	r3, #255	; 0xff
 800a06a:	d12c      	bne.n	800a0c6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 800a06c:	4560      	cmp	r0, ip
 800a06e:	bf14      	ite	ne
 800a070:	2004      	movne	r0, #4
 800a072:	2001      	moveq	r0, #1
 800a074:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a078:	9204      	str	r2, [sp, #16]
 800a07a:	4620      	mov	r0, r4
 800a07c:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800a080:	f8ad 201c 	strh.w	r2, [sp, #28]
 800a084:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a088:	f8ad 6018 	strh.w	r6, [sp, #24]
 800a08c:	f8ad 501a 	strh.w	r5, [sp, #26]
 800a090:	f7ff ff5e 	bl	8009f50 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a094:	e9cd 9700 	strd	r9, r7, [sp]
 800a098:	4603      	mov	r3, r0
 800a09a:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800a09e:	4651      	mov	r1, sl
 800a0a0:	4620      	mov	r0, r4
 800a0a2:	f7ff ffb7 	bl	800a014 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a0a6:	f8ad 901e 	strh.w	r9, [sp, #30]
 800a0aa:	9005      	str	r0, [sp, #20]
 800a0ac:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 800a0b0:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800a0b4:	b106      	cbz	r6, 800a0b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 800a0b6:	b98d      	cbnz	r5, 800a0dc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 800a0b8:	4b12      	ldr	r3, [pc, #72]	; (800a104 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 800a0ba:	4a13      	ldr	r2, [pc, #76]	; (800a108 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800a0bc:	f240 11c3 	movw	r1, #451	; 0x1c3
 800a0c0:	4812      	ldr	r0, [pc, #72]	; (800a10c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800a0c2:	f011 f9a3 	bl	801b40c <__assert_func>
 800a0c6:	2004      	movs	r0, #4
 800a0c8:	e7d4      	b.n	800a074 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800a0ca:	2bff      	cmp	r3, #255	; 0xff
 800a0cc:	d104      	bne.n	800a0d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 800a0ce:	2800      	cmp	r0, #0
 800a0d0:	bf14      	ite	ne
 800a0d2:	2040      	movne	r0, #64	; 0x40
 800a0d4:	2020      	moveq	r0, #32
 800a0d6:	e7cd      	b.n	800a074 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800a0d8:	2040      	movs	r0, #64	; 0x40
 800a0da:	e7cb      	b.n	800a074 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800a0dc:	6823      	ldr	r3, [r4, #0]
 800a0de:	9d02      	ldr	r5, [sp, #8]
 800a0e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a0e2:	4620      	mov	r0, r4
 800a0e4:	4798      	blx	r3
 800a0e6:	4228      	tst	r0, r5
 800a0e8:	d104      	bne.n	800a0f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 800a0ea:	4b09      	ldr	r3, [pc, #36]	; (800a110 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800a0ec:	4a06      	ldr	r2, [pc, #24]	; (800a108 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800a0ee:	f44f 71e2 	mov.w	r1, #452	; 0x1c4
 800a0f2:	e7e5      	b.n	800a0c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 800a0f4:	6860      	ldr	r0, [r4, #4]
 800a0f6:	6803      	ldr	r3, [r0, #0]
 800a0f8:	a902      	add	r1, sp, #8
 800a0fa:	685b      	ldr	r3, [r3, #4]
 800a0fc:	4798      	blx	r3
 800a0fe:	b00a      	add	sp, #40	; 0x28
 800a100:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a104:	0801dd3e 	.word	0x0801dd3e
 800a108:	0801df3b 	.word	0x0801df3b
 800a10c:	0801dcc2 	.word	0x0801dcc2
 800a110:	0801dd76 	.word	0x0801dd76

0800a114 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800a114:	b510      	push	{r4, lr}
 800a116:	b08a      	sub	sp, #40	; 0x28
 800a118:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 800a11c:	9408      	str	r4, [sp, #32]
 800a11e:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 800a122:	9407      	str	r4, [sp, #28]
 800a124:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 800a128:	9406      	str	r4, [sp, #24]
 800a12a:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 800a12e:	9405      	str	r4, [sp, #20]
 800a130:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 800a134:	9404      	str	r4, [sp, #16]
 800a136:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 800a13a:	9403      	str	r4, [sp, #12]
 800a13c:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 800a140:	9402      	str	r4, [sp, #8]
 800a142:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800a146:	e9cd 3400 	strd	r3, r4, [sp]
 800a14a:	4613      	mov	r3, r2
 800a14c:	2200      	movs	r2, #0
 800a14e:	f7ff ff71 	bl	800a034 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800a152:	b00a      	add	sp, #40	; 0x28
 800a154:	bd10      	pop	{r4, pc}
	...

0800a158 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800a158:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a15a:	b08b      	sub	sp, #44	; 0x2c
 800a15c:	4616      	mov	r6, r2
 800a15e:	460d      	mov	r5, r1
 800a160:	461f      	mov	r7, r3
 800a162:	4604      	mov	r4, r0
 800a164:	f7f6 fe42 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800a168:	6803      	ldr	r3, [r0, #0]
 800a16a:	6a1b      	ldr	r3, [r3, #32]
 800a16c:	4798      	blx	r3
 800a16e:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800a172:	4b0d      	ldr	r3, [pc, #52]	; (800a1a8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 800a174:	881b      	ldrh	r3, [r3, #0]
 800a176:	9306      	str	r3, [sp, #24]
 800a178:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800a17c:	9305      	str	r3, [sp, #20]
 800a17e:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800a182:	9304      	str	r3, [sp, #16]
 800a184:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a188:	9303      	str	r3, [sp, #12]
 800a18a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a18e:	9302      	str	r3, [sp, #8]
 800a190:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a194:	2200      	movs	r2, #0
 800a196:	e9cd 7300 	strd	r7, r3, [sp]
 800a19a:	4629      	mov	r1, r5
 800a19c:	4633      	mov	r3, r6
 800a19e:	4620      	mov	r0, r4
 800a1a0:	f7ff ff48 	bl	800a034 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800a1a4:	b00b      	add	sp, #44	; 0x2c
 800a1a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a1a8:	2000a426 	.word	0x2000a426

0800a1ac <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 800a1ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a1b0:	461f      	mov	r7, r3
 800a1b2:	4b14      	ldr	r3, [pc, #80]	; (800a204 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800a1b4:	b08a      	sub	sp, #40	; 0x28
 800a1b6:	4616      	mov	r6, r2
 800a1b8:	f8b3 8000 	ldrh.w	r8, [r3]
 800a1bc:	460d      	mov	r5, r1
 800a1be:	4604      	mov	r4, r0
 800a1c0:	f7f6 fe14 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800a1c4:	6803      	ldr	r3, [r0, #0]
 800a1c6:	6a1b      	ldr	r3, [r3, #32]
 800a1c8:	4798      	blx	r3
 800a1ca:	2302      	movs	r3, #2
 800a1cc:	e9cd 8306 	strd	r8, r3, [sp, #24]
 800a1d0:	2301      	movs	r3, #1
 800a1d2:	9305      	str	r3, [sp, #20]
 800a1d4:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800a1d8:	9304      	str	r3, [sp, #16]
 800a1da:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a1de:	9303      	str	r3, [sp, #12]
 800a1e0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a1e4:	9302      	str	r3, [sp, #8]
 800a1e6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a1ea:	9008      	str	r0, [sp, #32]
 800a1ec:	e9cd 7300 	strd	r7, r3, [sp]
 800a1f0:	2200      	movs	r2, #0
 800a1f2:	4633      	mov	r3, r6
 800a1f4:	4629      	mov	r1, r5
 800a1f6:	4620      	mov	r0, r4
 800a1f8:	f7ff ff1c 	bl	800a034 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800a1fc:	b00a      	add	sp, #40	; 0x28
 800a1fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a202:	bf00      	nop
 800a204:	2000a426 	.word	0x2000a426

0800a208 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800a208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a20c:	b08b      	sub	sp, #44	; 0x2c
 800a20e:	469b      	mov	fp, r3
 800a210:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800a214:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800a218:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800a21c:	2fff      	cmp	r7, #255	; 0xff
 800a21e:	bf14      	ite	ne
 800a220:	2308      	movne	r3, #8
 800a222:	2302      	moveq	r3, #2
 800a224:	2600      	movs	r6, #0
 800a226:	4604      	mov	r4, r0
 800a228:	4689      	mov	r9, r1
 800a22a:	4692      	mov	sl, r2
 800a22c:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800a230:	9608      	str	r6, [sp, #32]
 800a232:	f7ff fe8d 	bl	8009f50 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a236:	e9cd 8500 	strd	r8, r5, [sp]
 800a23a:	4603      	mov	r3, r0
 800a23c:	465a      	mov	r2, fp
 800a23e:	4651      	mov	r1, sl
 800a240:	4620      	mov	r0, r4
 800a242:	f7ff fee7 	bl	800a014 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a246:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800a24a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a24e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800a252:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a256:	6823      	ldr	r3, [r4, #0]
 800a258:	9005      	str	r0, [sp, #20]
 800a25a:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800a25e:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800a262:	f8ad 601c 	strh.w	r6, [sp, #28]
 800a266:	f8ad 801e 	strh.w	r8, [sp, #30]
 800a26a:	f8cd 9020 	str.w	r9, [sp, #32]
 800a26e:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800a272:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a274:	9d02      	ldr	r5, [sp, #8]
 800a276:	4620      	mov	r0, r4
 800a278:	4798      	blx	r3
 800a27a:	4228      	tst	r0, r5
 800a27c:	d106      	bne.n	800a28c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800a27e:	4b07      	ldr	r3, [pc, #28]	; (800a29c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800a280:	4a07      	ldr	r2, [pc, #28]	; (800a2a0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800a282:	4808      	ldr	r0, [pc, #32]	; (800a2a4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800a284:	f240 11fb 	movw	r1, #507	; 0x1fb
 800a288:	f011 f8c0 	bl	801b40c <__assert_func>
 800a28c:	6860      	ldr	r0, [r4, #4]
 800a28e:	6803      	ldr	r3, [r0, #0]
 800a290:	a902      	add	r1, sp, #8
 800a292:	685b      	ldr	r3, [r3, #4]
 800a294:	4798      	blx	r3
 800a296:	b00b      	add	sp, #44	; 0x2c
 800a298:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a29c:	0801dd76 	.word	0x0801dd76
 800a2a0:	0801e004 	.word	0x0801e004
 800a2a4:	0801dcc2 	.word	0x0801dcc2

0800a2a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a2a8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a2ac:	461f      	mov	r7, r3
 800a2ae:	4b0b      	ldr	r3, [pc, #44]	; (800a2dc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a2b0:	460d      	mov	r5, r1
 800a2b2:	f8b3 8000 	ldrh.w	r8, [r3]
 800a2b6:	4616      	mov	r6, r2
 800a2b8:	4604      	mov	r4, r0
 800a2ba:	f7f6 fd97 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800a2be:	6803      	ldr	r3, [r0, #0]
 800a2c0:	6a1b      	ldr	r3, [r3, #32]
 800a2c2:	4798      	blx	r3
 800a2c4:	463b      	mov	r3, r7
 800a2c6:	e9cd 8000 	strd	r8, r0, [sp]
 800a2ca:	4632      	mov	r2, r6
 800a2cc:	4629      	mov	r1, r5
 800a2ce:	4620      	mov	r0, r4
 800a2d0:	f7ff fea0 	bl	800a014 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a2d4:	b002      	add	sp, #8
 800a2d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a2da:	bf00      	nop
 800a2dc:	2000a426 	.word	0x2000a426

0800a2e0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800a2e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a2e4:	b088      	sub	sp, #32
 800a2e6:	4698      	mov	r8, r3
 800a2e8:	2300      	movs	r3, #0
 800a2ea:	9306      	str	r3, [sp, #24]
 800a2ec:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a2f0:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800a2f4:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800a2f8:	f8ad 6010 	strh.w	r6, [sp, #16]
 800a2fc:	e9cd 3100 	strd	r3, r1, [sp]
 800a300:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a304:	f8ad 3014 	strh.w	r3, [sp, #20]
 800a308:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800a30c:	f88d 301c 	strb.w	r3, [sp, #28]
 800a310:	4617      	mov	r7, r2
 800a312:	4604      	mov	r4, r0
 800a314:	f8ad 5012 	strh.w	r5, [sp, #18]
 800a318:	f7ff fe1a 	bl	8009f50 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a31c:	4642      	mov	r2, r8
 800a31e:	4603      	mov	r3, r0
 800a320:	4639      	mov	r1, r7
 800a322:	4620      	mov	r0, r4
 800a324:	f7ff ffc0 	bl	800a2a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a328:	4b16      	ldr	r3, [pc, #88]	; (800a384 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800a32a:	9003      	str	r0, [sp, #12]
 800a32c:	881b      	ldrh	r3, [r3, #0]
 800a32e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800a332:	f7f6 fd5b 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800a336:	6803      	ldr	r3, [r0, #0]
 800a338:	6a1b      	ldr	r3, [r3, #32]
 800a33a:	4798      	blx	r3
 800a33c:	f88d 001e 	strb.w	r0, [sp, #30]
 800a340:	f88d 001d 	strb.w	r0, [sp, #29]
 800a344:	b106      	cbz	r6, 800a348 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800a346:	b935      	cbnz	r5, 800a356 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800a348:	4b0f      	ldr	r3, [pc, #60]	; (800a388 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800a34a:	4a10      	ldr	r2, [pc, #64]	; (800a38c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800a34c:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 800a350:	480f      	ldr	r0, [pc, #60]	; (800a390 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800a352:	f011 f85b 	bl	801b40c <__assert_func>
 800a356:	6823      	ldr	r3, [r4, #0]
 800a358:	9d00      	ldr	r5, [sp, #0]
 800a35a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a35c:	4620      	mov	r0, r4
 800a35e:	4798      	blx	r3
 800a360:	4228      	tst	r0, r5
 800a362:	d104      	bne.n	800a36e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800a364:	4b0b      	ldr	r3, [pc, #44]	; (800a394 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800a366:	4a09      	ldr	r2, [pc, #36]	; (800a38c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800a368:	f240 11e1 	movw	r1, #481	; 0x1e1
 800a36c:	e7f0      	b.n	800a350 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800a36e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800a370:	6860      	ldr	r0, [r4, #4]
 800a372:	9306      	str	r3, [sp, #24]
 800a374:	6803      	ldr	r3, [r0, #0]
 800a376:	4669      	mov	r1, sp
 800a378:	685b      	ldr	r3, [r3, #4]
 800a37a:	4798      	blx	r3
 800a37c:	b008      	add	sp, #32
 800a37e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a382:	bf00      	nop
 800a384:	2000a426 	.word	0x2000a426
 800a388:	0801dd3e 	.word	0x0801dd3e
 800a38c:	0801dded 	.word	0x0801dded
 800a390:	0801dcc2 	.word	0x0801dcc2
 800a394:	0801dd76 	.word	0x0801dd76

0800a398 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a398:	b570      	push	{r4, r5, r6, lr}
 800a39a:	b08a      	sub	sp, #40	; 0x28
 800a39c:	466b      	mov	r3, sp
 800a39e:	e883 0006 	stmia.w	r3, {r1, r2}
 800a3a2:	4b20      	ldr	r3, [pc, #128]	; (800a424 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800a3a4:	781b      	ldrb	r3, [r3, #0]
 800a3a6:	4604      	mov	r4, r0
 800a3a8:	b933      	cbnz	r3, 800a3b8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800a3aa:	4b1f      	ldr	r3, [pc, #124]	; (800a428 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800a3ac:	4a1f      	ldr	r2, [pc, #124]	; (800a42c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800a3ae:	4820      	ldr	r0, [pc, #128]	; (800a430 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800a3b0:	f44f 7103 	mov.w	r1, #524	; 0x20c
 800a3b4:	f011 f82a 	bl	801b40c <__assert_func>
 800a3b8:	2300      	movs	r3, #0
 800a3ba:	9308      	str	r3, [sp, #32]
 800a3bc:	2301      	movs	r3, #1
 800a3be:	9302      	str	r3, [sp, #8]
 800a3c0:	6803      	ldr	r3, [r0, #0]
 800a3c2:	f8bd 5000 	ldrh.w	r5, [sp]
 800a3c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a3c8:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800a3cc:	4798      	blx	r3
 800a3ce:	4632      	mov	r2, r6
 800a3d0:	4629      	mov	r1, r5
 800a3d2:	4603      	mov	r3, r0
 800a3d4:	4620      	mov	r0, r4
 800a3d6:	f7ff ff67 	bl	800a2a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a3da:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a3dc:	9305      	str	r3, [sp, #20]
 800a3de:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a3e2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a3e6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a3ea:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a3ee:	4b11      	ldr	r3, [pc, #68]	; (800a434 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800a3f0:	9003      	str	r0, [sp, #12]
 800a3f2:	881b      	ldrh	r3, [r3, #0]
 800a3f4:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a3f8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a3fc:	f7f6 fcf6 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800a400:	6803      	ldr	r3, [r0, #0]
 800a402:	6a1b      	ldr	r3, [r3, #32]
 800a404:	4798      	blx	r3
 800a406:	23ff      	movs	r3, #255	; 0xff
 800a408:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a40c:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a410:	6860      	ldr	r0, [r4, #4]
 800a412:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a416:	6803      	ldr	r3, [r0, #0]
 800a418:	a902      	add	r1, sp, #8
 800a41a:	685b      	ldr	r3, [r3, #4]
 800a41c:	4798      	blx	r3
 800a41e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a420:	b00a      	add	sp, #40	; 0x28
 800a422:	bd70      	pop	{r4, r5, r6, pc}
 800a424:	2000a42b 	.word	0x2000a42b
 800a428:	0801dc0f 	.word	0x0801dc0f
 800a42c:	0801de91 	.word	0x0801de91
 800a430:	0801dcc2 	.word	0x0801dcc2
 800a434:	2000a426 	.word	0x2000a426

0800a438 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a438:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a43a:	b08b      	sub	sp, #44	; 0x2c
 800a43c:	466d      	mov	r5, sp
 800a43e:	e885 0006 	stmia.w	r5, {r1, r2}
 800a442:	461d      	mov	r5, r3
 800a444:	2300      	movs	r3, #0
 800a446:	9308      	str	r3, [sp, #32]
 800a448:	2301      	movs	r3, #1
 800a44a:	9302      	str	r3, [sp, #8]
 800a44c:	6803      	ldr	r3, [r0, #0]
 800a44e:	f8bd 6000 	ldrh.w	r6, [sp]
 800a452:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a454:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a458:	4604      	mov	r4, r0
 800a45a:	4798      	blx	r3
 800a45c:	463a      	mov	r2, r7
 800a45e:	4631      	mov	r1, r6
 800a460:	4603      	mov	r3, r0
 800a462:	4620      	mov	r0, r4
 800a464:	f7ff ff20 	bl	800a2a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a468:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a46c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a470:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a474:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a478:	4b0e      	ldr	r3, [pc, #56]	; (800a4b4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800a47a:	9003      	str	r0, [sp, #12]
 800a47c:	881b      	ldrh	r3, [r3, #0]
 800a47e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a482:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a484:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a488:	9505      	str	r5, [sp, #20]
 800a48a:	f7f6 fcaf 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800a48e:	6803      	ldr	r3, [r0, #0]
 800a490:	6a1b      	ldr	r3, [r3, #32]
 800a492:	4798      	blx	r3
 800a494:	23ff      	movs	r3, #255	; 0xff
 800a496:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a49a:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a49e:	6860      	ldr	r0, [r4, #4]
 800a4a0:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a4a4:	6803      	ldr	r3, [r0, #0]
 800a4a6:	a902      	add	r1, sp, #8
 800a4a8:	685b      	ldr	r3, [r3, #4]
 800a4aa:	4798      	blx	r3
 800a4ac:	4628      	mov	r0, r5
 800a4ae:	b00b      	add	sp, #44	; 0x2c
 800a4b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a4b2:	bf00      	nop
 800a4b4:	2000a426 	.word	0x2000a426

0800a4b8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a4b8:	b570      	push	{r4, r5, r6, lr}
 800a4ba:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800a4be:	4604      	mov	r4, r0
 800a4c0:	b19b      	cbz	r3, 800a4ea <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a4c2:	2002      	movs	r0, #2
 800a4c4:	f7f6 f984 	bl	80007d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a4c8:	2300      	movs	r3, #0
 800a4ca:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a4ce:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800a4d2:	6823      	ldr	r3, [r4, #0]
 800a4d4:	4620      	mov	r0, r4
 800a4d6:	f8d3 509c 	ldr.w	r5, [r3, #156]	; 0x9c
 800a4da:	f7ff fd39 	bl	8009f50 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a4de:	462b      	mov	r3, r5
 800a4e0:	4601      	mov	r1, r0
 800a4e2:	4620      	mov	r0, r4
 800a4e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a4e8:	4718      	bx	r3
 800a4ea:	bd70      	pop	{r4, r5, r6, pc}

0800a4ec <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800a4ec:	b570      	push	{r4, r5, r6, lr}
 800a4ee:	4605      	mov	r5, r0
 800a4f0:	460c      	mov	r4, r1
 800a4f2:	2003      	movs	r0, #3
 800a4f4:	b149      	cbz	r1, 800a50a <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800a4f6:	f7f6 f933 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a4fa:	6928      	ldr	r0, [r5, #16]
 800a4fc:	b168      	cbz	r0, 800a51a <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a4fe:	6803      	ldr	r3, [r0, #0]
 800a500:	695b      	ldr	r3, [r3, #20]
 800a502:	2101      	movs	r1, #1
 800a504:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a508:	4718      	bx	r3
 800a50a:	f7f6 f945 	bl	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a50e:	6928      	ldr	r0, [r5, #16]
 800a510:	b118      	cbz	r0, 800a51a <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a512:	6803      	ldr	r3, [r0, #0]
 800a514:	4621      	mov	r1, r4
 800a516:	695b      	ldr	r3, [r3, #20]
 800a518:	e7f4      	b.n	800a504 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800a51a:	bd70      	pop	{r4, r5, r6, pc}

0800a51c <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>:
 800a51c:	4770      	bx	lr

0800a51e <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a51e:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a522:	1a13      	subs	r3, r2, r0
 800a524:	4258      	negs	r0, r3
 800a526:	4158      	adcs	r0, r3
 800a528:	4770      	bx	lr

0800a52a <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a52a:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a52e:	1a9b      	subs	r3, r3, r2
 800a530:	2b00      	cmp	r3, #0
 800a532:	bfdc      	itt	le
 800a534:	6882      	ldrle	r2, [r0, #8]
 800a536:	189b      	addle	r3, r3, r2
 800a538:	2b01      	cmp	r3, #1
 800a53a:	bfcc      	ite	gt
 800a53c:	2000      	movgt	r0, #0
 800a53e:	2001      	movle	r0, #1
 800a540:	4770      	bx	lr

0800a542 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a542:	6902      	ldr	r2, [r0, #16]
 800a544:	6840      	ldr	r0, [r0, #4]
 800a546:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800a54a:	4770      	bx	lr

0800a54c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a54c:	6803      	ldr	r3, [r0, #0]
 800a54e:	691b      	ldr	r3, [r3, #16]
 800a550:	4718      	bx	r3

0800a552 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a552:	4770      	bx	lr

0800a554 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a554:	4770      	bx	lr

0800a556 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a556:	4770      	bx	lr

0800a558 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a558:	b570      	push	{r4, r5, r6, lr}
 800a55a:	2301      	movs	r3, #1
 800a55c:	7203      	strb	r3, [r0, #8]
 800a55e:	4604      	mov	r4, r0
 800a560:	6840      	ldr	r0, [r0, #4]
 800a562:	6803      	ldr	r3, [r0, #0]
 800a564:	699b      	ldr	r3, [r3, #24]
 800a566:	4798      	blx	r3
 800a568:	6803      	ldr	r3, [r0, #0]
 800a56a:	2b08      	cmp	r3, #8
 800a56c:	4605      	mov	r5, r0
 800a56e:	d01e      	beq.n	800a5ae <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 800a570:	d80b      	bhi.n	800a58a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a572:	2b02      	cmp	r3, #2
 800a574:	d027      	beq.n	800a5c6 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800a576:	2b04      	cmp	r3, #4
 800a578:	d011      	beq.n	800a59e <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800a57a:	2b01      	cmp	r3, #1
 800a57c:	d028      	beq.n	800a5d0 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a57e:	4b17      	ldr	r3, [pc, #92]	; (800a5dc <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 800a580:	4a17      	ldr	r2, [pc, #92]	; (800a5e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 800a582:	4818      	ldr	r0, [pc, #96]	; (800a5e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800a584:	218c      	movs	r1, #140	; 0x8c
 800a586:	f010 ff41 	bl	801b40c <__assert_func>
 800a58a:	2b40      	cmp	r3, #64	; 0x40
 800a58c:	d020      	beq.n	800a5d0 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a58e:	d801      	bhi.n	800a594 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800a590:	2b20      	cmp	r3, #32
 800a592:	e7f3      	b.n	800a57c <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800a594:	2b80      	cmp	r3, #128	; 0x80
 800a596:	d01b      	beq.n	800a5d0 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a598:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a59c:	e7ee      	b.n	800a57c <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800a59e:	6823      	ldr	r3, [r4, #0]
 800a5a0:	7f01      	ldrb	r1, [r0, #28]
 800a5a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a5a4:	4620      	mov	r0, r4
 800a5a6:	4798      	blx	r3
 800a5a8:	6823      	ldr	r3, [r4, #0]
 800a5aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a5ac:	e006      	b.n	800a5bc <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a5ae:	6823      	ldr	r3, [r4, #0]
 800a5b0:	7f01      	ldrb	r1, [r0, #28]
 800a5b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a5b4:	4620      	mov	r0, r4
 800a5b6:	4798      	blx	r3
 800a5b8:	6823      	ldr	r3, [r4, #0]
 800a5ba:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a5bc:	4629      	mov	r1, r5
 800a5be:	4620      	mov	r0, r4
 800a5c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a5c4:	4718      	bx	r3
 800a5c6:	6823      	ldr	r3, [r4, #0]
 800a5c8:	4620      	mov	r0, r4
 800a5ca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a5cc:	4798      	blx	r3
 800a5ce:	e7f3      	b.n	800a5b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800a5d0:	6823      	ldr	r3, [r4, #0]
 800a5d2:	4620      	mov	r0, r4
 800a5d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a5d6:	4798      	blx	r3
 800a5d8:	e7e6      	b.n	800a5a8 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800a5da:	bf00      	nop
 800a5dc:	0801e0e2 	.word	0x0801e0e2
 800a5e0:	0801e1a4 	.word	0x0801e1a4
 800a5e4:	0801e107 	.word	0x0801e107

0800a5e8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a5e8:	b570      	push	{r4, r5, r6, lr}
 800a5ea:	4604      	mov	r4, r0
 800a5ec:	460e      	mov	r6, r1
 800a5ee:	6860      	ldr	r0, [r4, #4]
 800a5f0:	6803      	ldr	r3, [r0, #0]
 800a5f2:	685b      	ldr	r3, [r3, #4]
 800a5f4:	4798      	blx	r3
 800a5f6:	2800      	cmp	r0, #0
 800a5f8:	d1f9      	bne.n	800a5ee <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a5fa:	4d0d      	ldr	r5, [pc, #52]	; (800a630 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a5fc:	6828      	ldr	r0, [r5, #0]
 800a5fe:	6803      	ldr	r3, [r0, #0]
 800a600:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a602:	4798      	blx	r3
 800a604:	f7f6 fb68 	bl	8000cd8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a608:	6828      	ldr	r0, [r5, #0]
 800a60a:	2101      	movs	r1, #1
 800a60c:	f7ff ff86 	bl	800a51c <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>
 800a610:	6860      	ldr	r0, [r4, #4]
 800a612:	6803      	ldr	r3, [r0, #0]
 800a614:	4631      	mov	r1, r6
 800a616:	689b      	ldr	r3, [r3, #8]
 800a618:	4798      	blx	r3
 800a61a:	6823      	ldr	r3, [r4, #0]
 800a61c:	4620      	mov	r0, r4
 800a61e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a620:	4798      	blx	r3
 800a622:	6828      	ldr	r0, [r5, #0]
 800a624:	6803      	ldr	r3, [r0, #0]
 800a626:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a62a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a62c:	4718      	bx	r3
 800a62e:	bf00      	nop
 800a630:	2000a42c 	.word	0x2000a42c

0800a634 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a634:	b508      	push	{r3, lr}
 800a636:	f7f6 fb41 	bl	8000cbc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a63a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a63e:	f7f6 bb45 	b.w	8000ccc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a642 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a642:	b510      	push	{r4, lr}
 800a644:	2114      	movs	r1, #20
 800a646:	4604      	mov	r4, r0
 800a648:	f010 feb2 	bl	801b3b0 <_ZdlPvj>
 800a64c:	4620      	mov	r0, r4
 800a64e:	bd10      	pop	{r4, pc}

0800a650 <_ZN8touchgfx13DMA_Interface5startEv>:
 800a650:	b510      	push	{r4, lr}
 800a652:	4604      	mov	r4, r0
 800a654:	6840      	ldr	r0, [r0, #4]
 800a656:	6803      	ldr	r3, [r0, #0]
 800a658:	681b      	ldr	r3, [r3, #0]
 800a65a:	4798      	blx	r3
 800a65c:	b948      	cbnz	r0, 800a672 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a65e:	7a63      	ldrb	r3, [r4, #9]
 800a660:	b13b      	cbz	r3, 800a672 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a662:	7a23      	ldrb	r3, [r4, #8]
 800a664:	b92b      	cbnz	r3, 800a672 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a666:	6823      	ldr	r3, [r4, #0]
 800a668:	4620      	mov	r0, r4
 800a66a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a66c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a670:	4718      	bx	r3
 800a672:	bd10      	pop	{r4, pc}

0800a674 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a674:	b510      	push	{r4, lr}
 800a676:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800a67a:	1b12      	subs	r2, r2, r4
 800a67c:	2a00      	cmp	r2, #0
 800a67e:	bfdc      	itt	le
 800a680:	6883      	ldrle	r3, [r0, #8]
 800a682:	18d2      	addle	r2, r2, r3
 800a684:	2a01      	cmp	r2, #1
 800a686:	dd18      	ble.n	800a6ba <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800a688:	6843      	ldr	r3, [r0, #4]
 800a68a:	f101 021c 	add.w	r2, r1, #28
 800a68e:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800a692:	f851 4b04 	ldr.w	r4, [r1], #4
 800a696:	f843 4b04 	str.w	r4, [r3], #4
 800a69a:	4291      	cmp	r1, r2
 800a69c:	d1f9      	bne.n	800a692 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800a69e:	880a      	ldrh	r2, [r1, #0]
 800a6a0:	801a      	strh	r2, [r3, #0]
 800a6a2:	788a      	ldrb	r2, [r1, #2]
 800a6a4:	709a      	strb	r2, [r3, #2]
 800a6a6:	68c3      	ldr	r3, [r0, #12]
 800a6a8:	6882      	ldr	r2, [r0, #8]
 800a6aa:	f3bf 8f5b 	dmb	ish
 800a6ae:	3301      	adds	r3, #1
 800a6b0:	429a      	cmp	r2, r3
 800a6b2:	bfd8      	it	le
 800a6b4:	1a9b      	suble	r3, r3, r2
 800a6b6:	60c3      	str	r3, [r0, #12]
 800a6b8:	bd10      	pop	{r4, pc}
 800a6ba:	4b03      	ldr	r3, [pc, #12]	; (800a6c8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800a6bc:	4a03      	ldr	r2, [pc, #12]	; (800a6cc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800a6be:	4804      	ldr	r0, [pc, #16]	; (800a6d0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800a6c0:	2139      	movs	r1, #57	; 0x39
 800a6c2:	f010 fea3 	bl	801b40c <__assert_func>
 800a6c6:	bf00      	nop
 800a6c8:	0801e12d 	.word	0x0801e12d
 800a6cc:	0801e1d4 	.word	0x0801e1d4
 800a6d0:	0801e107 	.word	0x0801e107

0800a6d4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a6d4:	b510      	push	{r4, lr}
 800a6d6:	6803      	ldr	r3, [r0, #0]
 800a6d8:	681b      	ldr	r3, [r3, #0]
 800a6da:	4604      	mov	r4, r0
 800a6dc:	4798      	blx	r3
 800a6de:	b128      	cbz	r0, 800a6ec <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800a6e0:	4b07      	ldr	r3, [pc, #28]	; (800a700 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800a6e2:	4a08      	ldr	r2, [pc, #32]	; (800a704 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800a6e4:	4808      	ldr	r0, [pc, #32]	; (800a708 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800a6e6:	213f      	movs	r1, #63	; 0x3f
 800a6e8:	f010 fe90 	bl	801b40c <__assert_func>
 800a6ec:	6923      	ldr	r3, [r4, #16]
 800a6ee:	68a2      	ldr	r2, [r4, #8]
 800a6f0:	f3bf 8f5b 	dmb	ish
 800a6f4:	3301      	adds	r3, #1
 800a6f6:	429a      	cmp	r2, r3
 800a6f8:	bfd8      	it	le
 800a6fa:	1a9b      	suble	r3, r3, r2
 800a6fc:	6123      	str	r3, [r4, #16]
 800a6fe:	bd10      	pop	{r4, pc}
 800a700:	0801e150 	.word	0x0801e150
 800a704:	0801e222 	.word	0x0801e222
 800a708:	0801e107 	.word	0x0801e107

0800a70c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a70c:	b570      	push	{r4, r5, r6, lr}
 800a70e:	4604      	mov	r4, r0
 800a710:	6840      	ldr	r0, [r0, #4]
 800a712:	6803      	ldr	r3, [r0, #0]
 800a714:	681b      	ldr	r3, [r3, #0]
 800a716:	4798      	blx	r3
 800a718:	4605      	mov	r5, r0
 800a71a:	b930      	cbnz	r0, 800a72a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a71c:	7a23      	ldrb	r3, [r4, #8]
 800a71e:	b123      	cbz	r3, 800a72a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a720:	6860      	ldr	r0, [r4, #4]
 800a722:	6803      	ldr	r3, [r0, #0]
 800a724:	695b      	ldr	r3, [r3, #20]
 800a726:	4798      	blx	r3
 800a728:	7225      	strb	r5, [r4, #8]
 800a72a:	6860      	ldr	r0, [r4, #4]
 800a72c:	6803      	ldr	r3, [r0, #0]
 800a72e:	681b      	ldr	r3, [r3, #0]
 800a730:	4798      	blx	r3
 800a732:	b928      	cbnz	r0, 800a740 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a734:	6823      	ldr	r3, [r4, #0]
 800a736:	4620      	mov	r0, r4
 800a738:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a73a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a73e:	4718      	bx	r3
 800a740:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a744:	f7f6 bad0 	b.w	8000ce8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a748 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a748:	b510      	push	{r4, lr}
 800a74a:	4c04      	ldr	r4, [pc, #16]	; (800a75c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a74c:	6082      	str	r2, [r0, #8]
 800a74e:	2200      	movs	r2, #0
 800a750:	e9c0 4100 	strd	r4, r1, [r0]
 800a754:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a758:	bd10      	pop	{r4, pc}
 800a75a:	bf00      	nop
 800a75c:	0801e188 	.word	0x0801e188

0800a760 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a760:	6840      	ldr	r0, [r0, #4]
 800a762:	6803      	ldr	r3, [r0, #0]
 800a764:	681b      	ldr	r3, [r3, #0]
 800a766:	4718      	bx	r3

0800a768 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 800a768:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800a76c:	4770      	bx	lr

0800a76e <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 800a76e:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 800a772:	4770      	bx	lr

0800a774 <_ZN8touchgfx13ScalableImageD1Ev>:
 800a774:	4770      	bx	lr

0800a776 <_ZN8touchgfx13ScalableImageD0Ev>:
 800a776:	b510      	push	{r4, lr}
 800a778:	212c      	movs	r1, #44	; 0x2c
 800a77a:	4604      	mov	r4, r0
 800a77c:	f010 fe18 	bl	801b3b0 <_ZdlPvj>
 800a780:	4620      	mov	r0, r4
 800a782:	bd10      	pop	{r4, pc}

0800a784 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 800a784:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a786:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800a78a:	2bff      	cmp	r3, #255	; 0xff
 800a78c:	4605      	mov	r5, r0
 800a78e:	d007      	beq.n	800a7a0 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x1c>
 800a790:	2300      	movs	r3, #0
 800a792:	802b      	strh	r3, [r5, #0]
 800a794:	806b      	strh	r3, [r5, #2]
 800a796:	80ab      	strh	r3, [r5, #4]
 800a798:	80eb      	strh	r3, [r5, #6]
 800a79a:	4628      	mov	r0, r5
 800a79c:	b004      	add	sp, #16
 800a79e:	bd70      	pop	{r4, r5, r6, pc}
 800a7a0:	f101 0426 	add.w	r4, r1, #38	; 0x26
 800a7a4:	4621      	mov	r1, r4
 800a7a6:	4668      	mov	r0, sp
 800a7a8:	f005 f866 	bl	800f878 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800a7ac:	4620      	mov	r0, r4
 800a7ae:	f9bd 6004 	ldrsh.w	r6, [sp, #4]
 800a7b2:	f004 ffed 	bl	800f790 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a7b6:	4286      	cmp	r6, r0
 800a7b8:	d1ea      	bne.n	800a790 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0xc>
 800a7ba:	4621      	mov	r1, r4
 800a7bc:	a802      	add	r0, sp, #8
 800a7be:	f005 f85b 	bl	800f878 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800a7c2:	4620      	mov	r0, r4
 800a7c4:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800a7c8:	f005 f81c 	bl	800f804 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a7cc:	4286      	cmp	r6, r0
 800a7ce:	d1df      	bne.n	800a790 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0xc>
 800a7d0:	4621      	mov	r1, r4
 800a7d2:	4628      	mov	r0, r5
 800a7d4:	f005 f850 	bl	800f878 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800a7d8:	e7df      	b.n	800a79a <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x16>
	...

0800a7dc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 800a7dc:	b538      	push	{r3, r4, r5, lr}
 800a7de:	2300      	movs	r3, #0
 800a7e0:	8083      	strh	r3, [r0, #4]
 800a7e2:	80c3      	strh	r3, [r0, #6]
 800a7e4:	8103      	strh	r3, [r0, #8]
 800a7e6:	8143      	strh	r3, [r0, #10]
 800a7e8:	8183      	strh	r3, [r0, #12]
 800a7ea:	81c3      	strh	r3, [r0, #14]
 800a7ec:	8203      	strh	r3, [r0, #16]
 800a7ee:	8243      	strh	r3, [r0, #18]
 800a7f0:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800a7f4:	61c3      	str	r3, [r0, #28]
 800a7f6:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 800a7fa:	4b09      	ldr	r3, [pc, #36]	; (800a820 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x44>)
 800a7fc:	6003      	str	r3, [r0, #0]
 800a7fe:	2501      	movs	r5, #1
 800a800:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a804:	4604      	mov	r4, r0
 800a806:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 800a80a:	84c3      	strh	r3, [r0, #38]	; 0x26
 800a80c:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800a810:	f000 fccb 	bl	800b1aa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a814:	4b03      	ldr	r3, [pc, #12]	; (800a824 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 800a816:	6023      	str	r3, [r4, #0]
 800a818:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 800a81c:	4620      	mov	r0, r4
 800a81e:	bd38      	pop	{r3, r4, r5, pc}
 800a820:	0801e470 	.word	0x0801e470
 800a824:	0801e25c 	.word	0x0801e25c

0800a828 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 800a828:	4603      	mov	r3, r0
 800a82a:	3026      	adds	r0, #38	; 0x26
 800a82c:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 800a830:	b90b      	cbnz	r3, 800a836 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 800a832:	f003 bb45 	b.w	800dec0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 800a836:	f003 bb53 	b.w	800dee0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0800a83c <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 800a83c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a840:	4604      	mov	r4, r0
 800a842:	469b      	mov	fp, r3
 800a844:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 800a848:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800a84c:	f9b1 6000 	ldrsh.w	r6, [r1]
 800a850:	8888      	ldrh	r0, [r1, #4]
 800a852:	b0ab      	sub	sp, #172	; 0xac
 800a854:	4430      	add	r0, r6
 800a856:	b280      	uxth	r0, r0
 800a858:	9206      	str	r2, [sp, #24]
 800a85a:	fa0f fe80 	sxth.w	lr, r0
 800a85e:	2200      	movs	r2, #0
 800a860:	4596      	cmp	lr, r2
 800a862:	e9dd a934 	ldrd	sl, r9, [sp, #208]	; 0xd0
 800a866:	e9dd 8736 	ldrd	r8, r7, [sp, #216]	; 0xd8
 800a86a:	920e      	str	r2, [sp, #56]	; 0x38
 800a86c:	f340 80f3 	ble.w	800aa56 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21a>
 800a870:	45b4      	cmp	ip, r6
 800a872:	f340 80f0 	ble.w	800aa56 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21a>
 800a876:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a87a:	88ca      	ldrh	r2, [r1, #6]
 800a87c:	442a      	add	r2, r5
 800a87e:	b292      	uxth	r2, r2
 800a880:	b211      	sxth	r1, r2
 800a882:	2900      	cmp	r1, #0
 800a884:	f340 80e7 	ble.w	800aa56 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21a>
 800a888:	42ab      	cmp	r3, r5
 800a88a:	f340 80e4 	ble.w	800aa56 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21a>
 800a88e:	45f4      	cmp	ip, lr
 800a890:	bfb8      	it	lt
 800a892:	fa1f f08c 	uxthlt.w	r0, ip
 800a896:	428b      	cmp	r3, r1
 800a898:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800a89c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800a8a0:	bfb8      	it	lt
 800a8a2:	b29a      	uxthlt	r2, r3
 800a8a4:	1b80      	subs	r0, r0, r6
 800a8a6:	1b52      	subs	r2, r2, r5
 800a8a8:	f8ad 003c 	strh.w	r0, [sp, #60]	; 0x3c
 800a8ac:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800a8b0:	f8ad 6038 	strh.w	r6, [sp, #56]	; 0x38
 800a8b4:	f8ad 503a 	strh.w	r5, [sp, #58]	; 0x3a
 800a8b8:	ab0e      	add	r3, sp, #56	; 0x38
 800a8ba:	e893 0003 	ldmia.w	r3, {r0, r1}
 800a8be:	6822      	ldr	r2, [r4, #0]
 800a8c0:	9307      	str	r3, [sp, #28]
 800a8c2:	ad10      	add	r5, sp, #64	; 0x40
 800a8c4:	6a92      	ldr	r2, [r2, #40]	; 0x28
 800a8c6:	e885 0003 	stmia.w	r5, {r0, r1}
 800a8ca:	4629      	mov	r1, r5
 800a8cc:	4620      	mov	r0, r4
 800a8ce:	4790      	blx	r2
 800a8d0:	4621      	mov	r1, r4
 800a8d2:	a812      	add	r0, sp, #72	; 0x48
 800a8d4:	f003 fa55 	bl	800dd82 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a8d8:	a812      	add	r0, sp, #72	; 0x48
 800a8da:	f002 f86d 	bl	800c9b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800a8de:	9b07      	ldr	r3, [sp, #28]
 800a8e0:	1d26      	adds	r6, r4, #4
 800a8e2:	4618      	mov	r0, r3
 800a8e4:	4631      	mov	r1, r6
 800a8e6:	f002 f84f 	bl	800c988 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800a8ea:	4628      	mov	r0, r5
 800a8ec:	f104 0526 	add.w	r5, r4, #38	; 0x26
 800a8f0:	f002 f862 	bl	800c9b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800a8f4:	4628      	mov	r0, r5
 800a8f6:	f005 f853 	bl	800f9a0 <_ZNK8touchgfx6Bitmap7getDataEv>
 800a8fa:	9007      	str	r0, [sp, #28]
 800a8fc:	2800      	cmp	r0, #0
 800a8fe:	f000 80a7 	beq.w	800aa50 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x214>
 800a902:	f8db 2000 	ldr.w	r2, [fp]
 800a906:	9208      	str	r2, [sp, #32]
 800a908:	f8db 2004 	ldr.w	r2, [fp, #4]
 800a90c:	9209      	str	r2, [sp, #36]	; 0x24
 800a90e:	f8db 2008 	ldr.w	r2, [fp, #8]
 800a912:	920a      	str	r2, [sp, #40]	; 0x28
 800a914:	f8da 2000 	ldr.w	r2, [sl]
 800a918:	920b      	str	r2, [sp, #44]	; 0x2c
 800a91a:	f8da 2004 	ldr.w	r2, [sl, #4]
 800a91e:	920c      	str	r2, [sp, #48]	; 0x30
 800a920:	f8da 2008 	ldr.w	r2, [sl, #8]
 800a924:	920d      	str	r2, [sp, #52]	; 0x34
 800a926:	a90b      	add	r1, sp, #44	; 0x2c
 800a928:	4632      	mov	r2, r6
 800a92a:	a808      	add	r0, sp, #32
 800a92c:	f002 f810 	bl	800c950 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800a930:	4632      	mov	r2, r6
 800a932:	a90c      	add	r1, sp, #48	; 0x30
 800a934:	a809      	add	r0, sp, #36	; 0x24
 800a936:	f002 f80b 	bl	800c950 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800a93a:	4632      	mov	r2, r6
 800a93c:	a90d      	add	r1, sp, #52	; 0x34
 800a93e:	a80a      	add	r0, sp, #40	; 0x28
 800a940:	f002 f806 	bl	800c950 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800a944:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 800a948:	ed97 6a00 	vldr	s12, [r7]
 800a94c:	ed99 5a00 	vldr	s10, [r9]
 800a950:	edd8 5a00 	vldr	s11, [r8]
 800a954:	edd9 6a01 	vldr	s13, [r9, #4]
 800a958:	f8d9 e008 	ldr.w	lr, [r9, #8]
 800a95c:	f8d8 c008 	ldr.w	ip, [r8, #8]
 800a960:	f8d7 a004 	ldr.w	sl, [r7, #4]
 800a964:	9b06      	ldr	r3, [sp, #24]
 800a966:	f8d8 b004 	ldr.w	fp, [r8, #4]
 800a96a:	68bf      	ldr	r7, [r7, #8]
 800a96c:	ed8d 5a1d 	vstr	s10, [sp, #116]	; 0x74
 800a970:	eeb0 7a67 	vmov.f32	s14, s15
 800a974:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800a978:	eddd 7a09 	vldr	s15, [sp, #36]	; 0x24
 800a97c:	edcd 5a1e 	vstr	s11, [sp, #120]	; 0x78
 800a980:	ee17 6a10 	vmov	r6, s14
 800a984:	eeb0 7a67 	vmov.f32	s14, s15
 800a988:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800a98c:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 800a990:	ed8d 6a1f 	vstr	s12, [sp, #124]	; 0x7c
 800a994:	ee17 0a10 	vmov	r0, s14
 800a998:	eeb0 7a67 	vmov.f32	s14, s15
 800a99c:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800a9a0:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 800a9a4:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 800a9a8:	ee17 1a10 	vmov	r1, s14
 800a9ac:	eeb0 7a67 	vmov.f32	s14, s15
 800a9b0:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800a9b4:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 800a9b8:	f8cd e09c 	str.w	lr, [sp, #156]	; 0x9c
 800a9bc:	ee17 2a10 	vmov	r2, s14
 800a9c0:	ed9d 7a08 	vldr	s14, [sp, #32]
 800a9c4:	9225      	str	r2, [sp, #148]	; 0x94
 800a9c6:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 800a9ca:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800a9ce:	4a23      	ldr	r2, [pc, #140]	; (800aa5c <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 800a9d0:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 800a9d4:	e9cd 0120 	strd	r0, r1, [sp, #128]	; 0x80
 800a9d8:	edcd 7a26 	vstr	s15, [sp, #152]	; 0x98
 800a9dc:	f8cd c0a0 	str.w	ip, [sp, #160]	; 0xa0
 800a9e0:	9314      	str	r3, [sp, #80]	; 0x50
 800a9e2:	961c      	str	r6, [sp, #112]	; 0x70
 800a9e4:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 800a9e8:	f8cd a090 	str.w	sl, [sp, #144]	; 0x90
 800a9ec:	9729      	str	r7, [sp, #164]	; 0xa4
 800a9ee:	4628      	mov	r0, r5
 800a9f0:	8812      	ldrh	r2, [r2, #0]
 800a9f2:	9b07      	ldr	r3, [sp, #28]
 800a9f4:	9215      	str	r2, [sp, #84]	; 0x54
 800a9f6:	9316      	str	r3, [sp, #88]	; 0x58
 800a9f8:	f005 f804 	bl	800fa04 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 800a9fc:	9017      	str	r0, [sp, #92]	; 0x5c
 800a9fe:	4628      	mov	r0, r5
 800aa00:	f004 fec6 	bl	800f790 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800aa04:	9018      	str	r0, [sp, #96]	; 0x60
 800aa06:	4628      	mov	r0, r5
 800aa08:	f004 fefc 	bl	800f804 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800aa0c:	9019      	str	r0, [sp, #100]	; 0x64
 800aa0e:	4628      	mov	r0, r5
 800aa10:	f004 febe 	bl	800f790 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800aa14:	4b12      	ldr	r3, [pc, #72]	; (800aa60 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x224>)
 800aa16:	901a      	str	r0, [sp, #104]	; 0x68
 800aa18:	681b      	ldr	r3, [r3, #0]
 800aa1a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800aa1e:	b10a      	cbz	r2, 800aa24 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1e8>
 800aa20:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800aa22:	b905      	cbnz	r5, 800aa26 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 800aa24:	689d      	ldr	r5, [r3, #8]
 800aa26:	682b      	ldr	r3, [r5, #0]
 800aa28:	4620      	mov	r0, r4
 800aa2a:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 800aa2c:	f7ff fefc 	bl	800a828 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 800aa30:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800aa34:	9304      	str	r3, [sp, #16]
 800aa36:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800aa3a:	e9cd 0302 	strd	r0, r3, [sp, #8]
 800aa3e:	ab10      	add	r3, sp, #64	; 0x40
 800aa40:	9301      	str	r3, [sp, #4]
 800aa42:	ab12      	add	r3, sp, #72	; 0x48
 800aa44:	9300      	str	r3, [sp, #0]
 800aa46:	aa1b      	add	r2, sp, #108	; 0x6c
 800aa48:	ab16      	add	r3, sp, #88	; 0x58
 800aa4a:	a914      	add	r1, sp, #80	; 0x50
 800aa4c:	4628      	mov	r0, r5
 800aa4e:	47b0      	blx	r6
 800aa50:	b02b      	add	sp, #172	; 0xac
 800aa52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aa56:	2300      	movs	r3, #0
 800aa58:	930f      	str	r3, [sp, #60]	; 0x3c
 800aa5a:	e72d      	b.n	800a8b8 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x7c>
 800aa5c:	2000a426 	.word	0x2000a426
 800aa60:	2000a42c 	.word	0x2000a42c

0800aa64 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 800aa64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aa68:	ed2d 8b08 	vpush	{d8-d11}
 800aa6c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800aa70:	b094      	sub	sp, #80	; 0x50
 800aa72:	4680      	mov	r8, r0
 800aa74:	4689      	mov	r9, r1
 800aa76:	2b00      	cmp	r3, #0
 800aa78:	d07d      	beq.n	800ab76 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x112>
 800aa7a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800aa7e:	ed9f 8a45 	vldr	s16, [pc, #276]	; 800ab94 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x130>
 800aa82:	ee09 3a10 	vmov	s18, r3
 800aa86:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800aa8a:	f100 0426 	add.w	r4, r0, #38	; 0x26
 800aa8e:	ee08 3a90 	vmov	s17, r3
 800aa92:	4620      	mov	r0, r4
 800aa94:	4b40      	ldr	r3, [pc, #256]	; (800ab98 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x134>)
 800aa96:	930b      	str	r3, [sp, #44]	; 0x2c
 800aa98:	930c      	str	r3, [sp, #48]	; 0x30
 800aa9a:	930d      	str	r3, [sp, #52]	; 0x34
 800aa9c:	f004 fe78 	bl	800f790 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800aaa0:	ee07 0a90 	vmov	s15, r0
 800aaa4:	4620      	mov	r0, r4
 800aaa6:	eeb8 aa67 	vcvt.f32.u32	s20, s15
 800aaaa:	f004 feab 	bl	800f804 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800aaae:	4b3b      	ldr	r3, [pc, #236]	; (800ab9c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x138>)
 800aab0:	781b      	ldrb	r3, [r3, #0]
 800aab2:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 800aab6:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 800aaba:	ee07 0a90 	vmov	s15, r0
 800aabe:	2b01      	cmp	r3, #1
 800aac0:	ee39 9a08 	vadd.f32	s18, s18, s16
 800aac4:	ee78 8a88 	vadd.f32	s17, s17, s16
 800aac8:	eef8 9a67 	vcvt.f32.u32	s19, s15
 800aacc:	d158      	bne.n	800ab80 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x11c>
 800aace:	eef0 aa4a 	vmov.f32	s21, s20
 800aad2:	eeb0 ba69 	vmov.f32	s22, s19
 800aad6:	eef0 ba69 	vmov.f32	s23, s19
 800aada:	ee1a aa10 	vmov	sl, s20
 800aade:	eef0 9a48 	vmov.f32	s19, s16
 800aae2:	eeb0 aa48 	vmov.f32	s20, s16
 800aae6:	af11      	add	r7, sp, #68	; 0x44
 800aae8:	ae0e      	add	r6, sp, #56	; 0x38
 800aaea:	ad0b      	add	r5, sp, #44	; 0x2c
 800aaec:	ac08      	add	r4, sp, #32
 800aaee:	ab05      	add	r3, sp, #20
 800aaf0:	2200      	movs	r2, #0
 800aaf2:	4649      	mov	r1, r9
 800aaf4:	4640      	mov	r0, r8
 800aaf6:	9703      	str	r7, [sp, #12]
 800aaf8:	9602      	str	r6, [sp, #8]
 800aafa:	9501      	str	r5, [sp, #4]
 800aafc:	9400      	str	r4, [sp, #0]
 800aafe:	ed8d 8a05 	vstr	s16, [sp, #20]
 800ab02:	ed8d 9a06 	vstr	s18, [sp, #24]
 800ab06:	ed8d 9a07 	vstr	s18, [sp, #28]
 800ab0a:	ed8d 8a08 	vstr	s16, [sp, #32]
 800ab0e:	ed8d 8a09 	vstr	s16, [sp, #36]	; 0x24
 800ab12:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 800ab16:	ed8d 8a0e 	vstr	s16, [sp, #56]	; 0x38
 800ab1a:	ed8d aa0f 	vstr	s20, [sp, #60]	; 0x3c
 800ab1e:	edcd ba10 	vstr	s23, [sp, #64]	; 0x40
 800ab22:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
 800ab26:	ed8d 8a12 	vstr	s16, [sp, #72]	; 0x48
 800ab2a:	edcd 9a13 	vstr	s19, [sp, #76]	; 0x4c
 800ab2e:	f7ff fe85 	bl	800a83c <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800ab32:	e9cd 6702 	strd	r6, r7, [sp, #8]
 800ab36:	e9cd 4500 	strd	r4, r5, [sp]
 800ab3a:	ab05      	add	r3, sp, #20
 800ab3c:	2200      	movs	r2, #0
 800ab3e:	4649      	mov	r1, r9
 800ab40:	4640      	mov	r0, r8
 800ab42:	ed8d 8a05 	vstr	s16, [sp, #20]
 800ab46:	ed8d 9a06 	vstr	s18, [sp, #24]
 800ab4a:	ed8d 8a07 	vstr	s16, [sp, #28]
 800ab4e:	ed8d 8a08 	vstr	s16, [sp, #32]
 800ab52:	edcd 8a09 	vstr	s17, [sp, #36]	; 0x24
 800ab56:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 800ab5a:	ed8d 8a0e 	vstr	s16, [sp, #56]	; 0x38
 800ab5e:	edcd ba0f 	vstr	s23, [sp, #60]	; 0x3c
 800ab62:	ed8d ba10 	vstr	s22, [sp, #64]	; 0x40
 800ab66:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
 800ab6a:	edcd 9a12 	vstr	s19, [sp, #72]	; 0x48
 800ab6e:	edcd aa13 	vstr	s21, [sp, #76]	; 0x4c
 800ab72:	f7ff fe63 	bl	800a83c <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800ab76:	b014      	add	sp, #80	; 0x50
 800ab78:	ecbd 8b08 	vpop	{d8-d11}
 800ab7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ab80:	eef0 aa69 	vmov.f32	s21, s19
 800ab84:	eef0 ba4a 	vmov.f32	s23, s20
 800ab88:	eeb0 ba48 	vmov.f32	s22, s16
 800ab8c:	ee18 aa10 	vmov	sl, s16
 800ab90:	e7a9      	b.n	800aae6 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x82>
 800ab92:	bf00      	nop
 800ab94:	00000000 	.word	0x00000000
 800ab98:	42c80000 	.word	0x42c80000
 800ab9c:	2000a424 	.word	0x2000a424

0800aba0 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800aba0:	2200      	movs	r2, #0
 800aba2:	8002      	strh	r2, [r0, #0]
 800aba4:	8042      	strh	r2, [r0, #2]
 800aba6:	8082      	strh	r2, [r0, #4]
 800aba8:	80c2      	strh	r2, [r0, #6]
 800abaa:	4770      	bx	lr

0800abac <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800abac:	b570      	push	{r4, r5, r6, lr}
 800abae:	6803      	ldr	r3, [r0, #0]
 800abb0:	4604      	mov	r4, r0
 800abb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800abb4:	4615      	mov	r5, r2
 800abb6:	4798      	blx	r3
 800abb8:	6823      	ldr	r3, [r4, #0]
 800abba:	4629      	mov	r1, r5
 800abbc:	4620      	mov	r0, r4
 800abbe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800abc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800abc4:	4718      	bx	r3

0800abc6 <_ZN8touchgfx8TextAreaD1Ev>:
 800abc6:	4770      	bx	lr

0800abc8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800abc8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800abca:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800abcc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800abd0:	4299      	cmp	r1, r3
 800abd2:	d029      	beq.n	800ac28 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 800abd4:	4b15      	ldr	r3, [pc, #84]	; (800ac2c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800abd6:	681b      	ldr	r3, [r3, #0]
 800abd8:	b92b      	cbnz	r3, 800abe6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 800abda:	4b15      	ldr	r3, [pc, #84]	; (800ac30 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800abdc:	4a15      	ldr	r2, [pc, #84]	; (800ac34 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800abde:	21b1      	movs	r1, #177	; 0xb1
 800abe0:	4815      	ldr	r0, [pc, #84]	; (800ac38 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800abe2:	f010 fc13 	bl	801b40c <__assert_func>
 800abe6:	4a15      	ldr	r2, [pc, #84]	; (800ac3c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800abe8:	8812      	ldrh	r2, [r2, #0]
 800abea:	428a      	cmp	r2, r1
 800abec:	d803      	bhi.n	800abf6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 800abee:	4b14      	ldr	r3, [pc, #80]	; (800ac40 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800abf0:	4a10      	ldr	r2, [pc, #64]	; (800ac34 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800abf2:	21b2      	movs	r1, #178	; 0xb2
 800abf4:	e7f4      	b.n	800abe0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 800abf6:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800abfa:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800abfe:	4b11      	ldr	r3, [pc, #68]	; (800ac44 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800ac00:	7854      	ldrb	r4, [r2, #1]
 800ac02:	681b      	ldr	r3, [r3, #0]
 800ac04:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800ac08:	682b      	ldr	r3, [r5, #0]
 800ac0a:	69de      	ldr	r6, [r3, #28]
 800ac0c:	4b0e      	ldr	r3, [pc, #56]	; (800ac48 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800ac0e:	6818      	ldr	r0, [r3, #0]
 800ac10:	f7f8 f9ee 	bl	8002ff0 <_ZNK8touchgfx5Texts7getTextEt>
 800ac14:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800ac18:	2300      	movs	r3, #0
 800ac1a:	4602      	mov	r2, r0
 800ac1c:	9300      	str	r3, [sp, #0]
 800ac1e:	4621      	mov	r1, r4
 800ac20:	4628      	mov	r0, r5
 800ac22:	47b0      	blx	r6
 800ac24:	b002      	add	sp, #8
 800ac26:	bd70      	pop	{r4, r5, r6, pc}
 800ac28:	2000      	movs	r0, #0
 800ac2a:	e7fb      	b.n	800ac24 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800ac2c:	2000a47c 	.word	0x2000a47c
 800ac30:	0801d100 	.word	0x0801d100
 800ac34:	0801e33c 	.word	0x0801e33c
 800ac38:	0801d18e 	.word	0x0801d18e
 800ac3c:	2000a480 	.word	0x2000a480
 800ac40:	0801d1b7 	.word	0x0801d1b7
 800ac44:	2000a484 	.word	0x2000a484
 800ac48:	2000a488 	.word	0x2000a488

0800ac4c <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800ac4c:	b570      	push	{r4, r5, r6, lr}
 800ac4e:	6803      	ldr	r3, [r0, #0]
 800ac50:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800ac52:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800ac54:	4b11      	ldr	r3, [pc, #68]	; (800ac9c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800ac56:	681b      	ldr	r3, [r3, #0]
 800ac58:	4604      	mov	r4, r0
 800ac5a:	b28d      	uxth	r5, r1
 800ac5c:	b92b      	cbnz	r3, 800ac6a <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800ac5e:	4b10      	ldr	r3, [pc, #64]	; (800aca0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800ac60:	4a10      	ldr	r2, [pc, #64]	; (800aca4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800ac62:	21b1      	movs	r1, #177	; 0xb1
 800ac64:	4810      	ldr	r0, [pc, #64]	; (800aca8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800ac66:	f010 fbd1 	bl	801b40c <__assert_func>
 800ac6a:	4910      	ldr	r1, [pc, #64]	; (800acac <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800ac6c:	8809      	ldrh	r1, [r1, #0]
 800ac6e:	4291      	cmp	r1, r2
 800ac70:	d803      	bhi.n	800ac7a <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800ac72:	4b0f      	ldr	r3, [pc, #60]	; (800acb0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800ac74:	4a0b      	ldr	r2, [pc, #44]	; (800aca4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800ac76:	21b2      	movs	r1, #178	; 0xb2
 800ac78:	e7f4      	b.n	800ac64 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800ac7a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800ac7e:	4b0d      	ldr	r3, [pc, #52]	; (800acb4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800ac80:	681b      	ldr	r3, [r3, #0]
 800ac82:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800ac86:	6803      	ldr	r3, [r0, #0]
 800ac88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ac8a:	4798      	blx	r3
 800ac8c:	1a29      	subs	r1, r5, r0
 800ac8e:	4633      	mov	r3, r6
 800ac90:	4620      	mov	r0, r4
 800ac92:	b209      	sxth	r1, r1
 800ac94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ac98:	4718      	bx	r3
 800ac9a:	bf00      	nop
 800ac9c:	2000a47c 	.word	0x2000a47c
 800aca0:	0801d100 	.word	0x0801d100
 800aca4:	0801e33c 	.word	0x0801e33c
 800aca8:	0801d18e 	.word	0x0801d18e
 800acac:	2000a480 	.word	0x2000a480
 800acb0:	0801d1b7 	.word	0x0801d1b7
 800acb4:	2000a484 	.word	0x2000a484

0800acb8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800acb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800acbc:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800acbe:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800acc2:	4293      	cmp	r3, r2
 800acc4:	b08c      	sub	sp, #48	; 0x30
 800acc6:	4604      	mov	r4, r0
 800acc8:	4688      	mov	r8, r1
 800acca:	d05f      	beq.n	800ad8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800accc:	4e31      	ldr	r6, [pc, #196]	; (800ad94 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800acce:	6832      	ldr	r2, [r6, #0]
 800acd0:	b92a      	cbnz	r2, 800acde <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800acd2:	4b31      	ldr	r3, [pc, #196]	; (800ad98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800acd4:	4a31      	ldr	r2, [pc, #196]	; (800ad9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800acd6:	21b1      	movs	r1, #177	; 0xb1
 800acd8:	4831      	ldr	r0, [pc, #196]	; (800ada0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800acda:	f010 fb97 	bl	801b40c <__assert_func>
 800acde:	4d31      	ldr	r5, [pc, #196]	; (800ada4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800ace0:	8829      	ldrh	r1, [r5, #0]
 800ace2:	4299      	cmp	r1, r3
 800ace4:	d803      	bhi.n	800acee <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800ace6:	4b30      	ldr	r3, [pc, #192]	; (800ada8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800ace8:	4a2c      	ldr	r2, [pc, #176]	; (800ad9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800acea:	21b2      	movs	r1, #178	; 0xb2
 800acec:	e7f4      	b.n	800acd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800acee:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800acf2:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800acf6:	4b2d      	ldr	r3, [pc, #180]	; (800adac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800acf8:	681b      	ldr	r3, [r3, #0]
 800acfa:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800acfe:	2a00      	cmp	r2, #0
 800ad00:	d044      	beq.n	800ad8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800ad02:	784b      	ldrb	r3, [r1, #1]
 800ad04:	9207      	str	r2, [sp, #28]
 800ad06:	f3c3 0901 	ubfx	r9, r3, #0, #2
 800ad0a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ad0e:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800ad12:	4b27      	ldr	r3, [pc, #156]	; (800adb0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800ad14:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 800ad18:	681b      	ldr	r3, [r3, #0]
 800ad1a:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800ad1e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ad22:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800ad26:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800ad2a:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800ad2e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800ad30:	9009      	str	r0, [sp, #36]	; 0x24
 800ad32:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 800ad36:	f88d 9020 	strb.w	r9, [sp, #32]
 800ad3a:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800ad3e:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800ad42:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800ad46:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800ad4a:	b10a      	cbz	r2, 800ad50 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800ad4c:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800ad4e:	b907      	cbnz	r7, 800ad52 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800ad50:	689f      	ldr	r7, [r3, #8]
 800ad52:	f10d 0914 	add.w	r9, sp, #20
 800ad56:	4621      	mov	r1, r4
 800ad58:	4648      	mov	r0, r9
 800ad5a:	f003 f812 	bl	800dd82 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ad5e:	6833      	ldr	r3, [r6, #0]
 800ad60:	2b00      	cmp	r3, #0
 800ad62:	d0b6      	beq.n	800acd2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800ad64:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ad66:	882b      	ldrh	r3, [r5, #0]
 800ad68:	428b      	cmp	r3, r1
 800ad6a:	d9bc      	bls.n	800ace6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800ad6c:	4b11      	ldr	r3, [pc, #68]	; (800adb4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800ad6e:	6818      	ldr	r0, [r3, #0]
 800ad70:	f7f8 f93e 	bl	8002ff0 <_ZNK8touchgfx5Texts7getTextEt>
 800ad74:	2300      	movs	r3, #0
 800ad76:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800ad7a:	ab07      	add	r3, sp, #28
 800ad7c:	9001      	str	r0, [sp, #4]
 800ad7e:	9300      	str	r3, [sp, #0]
 800ad80:	e899 0006 	ldmia.w	r9, {r1, r2}
 800ad84:	4643      	mov	r3, r8
 800ad86:	4638      	mov	r0, r7
 800ad88:	f7f8 f8e4 	bl	8002f54 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ad8c:	b00c      	add	sp, #48	; 0x30
 800ad8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ad92:	bf00      	nop
 800ad94:	2000a47c 	.word	0x2000a47c
 800ad98:	0801d100 	.word	0x0801d100
 800ad9c:	0801e33c 	.word	0x0801e33c
 800ada0:	0801d18e 	.word	0x0801d18e
 800ada4:	2000a480 	.word	0x2000a480
 800ada8:	0801d1b7 	.word	0x0801d1b7
 800adac:	2000a484 	.word	0x2000a484
 800adb0:	2000a42c 	.word	0x2000a42c
 800adb4:	2000a488 	.word	0x2000a488

0800adb8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800adb8:	b40e      	push	{r1, r2, r3}
 800adba:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800adbe:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800adc0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800adc4:	4293      	cmp	r3, r2
 800adc6:	b09b      	sub	sp, #108	; 0x6c
 800adc8:	4604      	mov	r4, r0
 800adca:	d061      	beq.n	800ae90 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 800adcc:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800aea4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 800add0:	aa24      	add	r2, sp, #144	; 0x90
 800add2:	9203      	str	r2, [sp, #12]
 800add4:	f8da 2000 	ldr.w	r2, [sl]
 800add8:	b92a      	cbnz	r2, 800ade6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800adda:	4b2e      	ldr	r3, [pc, #184]	; (800ae94 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>)
 800addc:	4a2e      	ldr	r2, [pc, #184]	; (800ae98 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800adde:	21b1      	movs	r1, #177	; 0xb1
 800ade0:	482e      	ldr	r0, [pc, #184]	; (800ae9c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>)
 800ade2:	f010 fb13 	bl	801b40c <__assert_func>
 800ade6:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 800aea8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>
 800adea:	f8b8 1000 	ldrh.w	r1, [r8]
 800adee:	4299      	cmp	r1, r3
 800adf0:	d803      	bhi.n	800adfa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800adf2:	4b2b      	ldr	r3, [pc, #172]	; (800aea0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800adf4:	4a28      	ldr	r2, [pc, #160]	; (800ae98 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800adf6:	21b2      	movs	r1, #178	; 0xb2
 800adf8:	e7f2      	b.n	800ade0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800adfa:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800aeac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>
 800adfe:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ae02:	f8d9 3000 	ldr.w	r3, [r9]
 800ae06:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800ae0a:	683b      	ldr	r3, [r7, #0]
 800ae0c:	4638      	mov	r0, r7
 800ae0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ae10:	4798      	blx	r3
 800ae12:	4606      	mov	r6, r0
 800ae14:	b205      	sxth	r5, r0
 800ae16:	a804      	add	r0, sp, #16
 800ae18:	f003 fc4f 	bl	800e6ba <_ZN8touchgfx12TextProviderC1Ev>
 800ae1c:	683b      	ldr	r3, [r7, #0]
 800ae1e:	4638      	mov	r0, r7
 800ae20:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ae22:	4798      	blx	r3
 800ae24:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800ae26:	9a03      	ldr	r2, [sp, #12]
 800ae28:	4603      	mov	r3, r0
 800ae2a:	a804      	add	r0, sp, #16
 800ae2c:	f003 fc8a 	bl	800e744 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ae30:	f8da 3000 	ldr.w	r3, [sl]
 800ae34:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800ae38:	2b00      	cmp	r3, #0
 800ae3a:	d0ce      	beq.n	800adda <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800ae3c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800ae3e:	f8b8 0000 	ldrh.w	r0, [r8]
 800ae42:	4290      	cmp	r0, r2
 800ae44:	d9d5      	bls.n	800adf2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800ae46:	eb03 0742 	add.w	r7, r3, r2, lsl #1
 800ae4a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800ae4e:	787a      	ldrb	r2, [r7, #1]
 800ae50:	f8d9 3000 	ldr.w	r3, [r9]
 800ae54:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
 800ae58:	9700      	str	r7, [sp, #0]
 800ae5a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800ae5e:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800ae62:	a804      	add	r0, sp, #16
 800ae64:	f001 fa8a 	bl	800c37c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800ae68:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800ae6c:	18a9      	adds	r1, r5, r2
 800ae6e:	2900      	cmp	r1, #0
 800ae70:	b203      	sxth	r3, r0
 800ae72:	dd0b      	ble.n	800ae8c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800ae74:	3b01      	subs	r3, #1
 800ae76:	fb13 f302 	smulbb	r3, r3, r2
 800ae7a:	fb16 3300 	smlabb	r3, r6, r0, r3
 800ae7e:	b21d      	sxth	r5, r3
 800ae80:	4628      	mov	r0, r5
 800ae82:	b01b      	add	sp, #108	; 0x6c
 800ae84:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ae88:	b003      	add	sp, #12
 800ae8a:	4770      	bx	lr
 800ae8c:	2b00      	cmp	r3, #0
 800ae8e:	dcf7      	bgt.n	800ae80 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800ae90:	2500      	movs	r5, #0
 800ae92:	e7f5      	b.n	800ae80 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800ae94:	0801d100 	.word	0x0801d100
 800ae98:	0801e33c 	.word	0x0801e33c
 800ae9c:	0801d18e 	.word	0x0801d18e
 800aea0:	0801d1b7 	.word	0x0801d1b7
 800aea4:	2000a47c 	.word	0x2000a47c
 800aea8:	2000a480 	.word	0x2000a480
 800aeac:	2000a484 	.word	0x2000a484

0800aeb0 <_ZN8touchgfx8TextAreaD0Ev>:
 800aeb0:	b510      	push	{r4, lr}
 800aeb2:	213c      	movs	r1, #60	; 0x3c
 800aeb4:	4604      	mov	r4, r0
 800aeb6:	f010 fa7b 	bl	801b3b0 <_ZdlPvj>
 800aeba:	4620      	mov	r0, r4
 800aebc:	bd10      	pop	{r4, pc}
	...

0800aec0 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800aec0:	b570      	push	{r4, r5, r6, lr}
 800aec2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800aec4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800aec8:	4299      	cmp	r1, r3
 800aeca:	4604      	mov	r4, r0
 800aecc:	d01e      	beq.n	800af0c <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800aece:	6803      	ldr	r3, [r0, #0]
 800aed0:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800aed2:	4b0f      	ldr	r3, [pc, #60]	; (800af10 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800aed4:	681b      	ldr	r3, [r3, #0]
 800aed6:	b92b      	cbnz	r3, 800aee4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800aed8:	4b0e      	ldr	r3, [pc, #56]	; (800af14 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800aeda:	4a0f      	ldr	r2, [pc, #60]	; (800af18 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800aedc:	21b1      	movs	r1, #177	; 0xb1
 800aede:	480f      	ldr	r0, [pc, #60]	; (800af1c <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800aee0:	f010 fa94 	bl	801b40c <__assert_func>
 800aee4:	4b0e      	ldr	r3, [pc, #56]	; (800af20 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800aee6:	881b      	ldrh	r3, [r3, #0]
 800aee8:	428b      	cmp	r3, r1
 800aeea:	d803      	bhi.n	800aef4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800aeec:	4b0d      	ldr	r3, [pc, #52]	; (800af24 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800aeee:	4a0a      	ldr	r2, [pc, #40]	; (800af18 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800aef0:	21b2      	movs	r1, #178	; 0xb2
 800aef2:	e7f4      	b.n	800aede <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800aef4:	4b0c      	ldr	r3, [pc, #48]	; (800af28 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800aef6:	6818      	ldr	r0, [r3, #0]
 800aef8:	f7f8 f87a 	bl	8002ff0 <_ZNK8touchgfx5Texts7getTextEt>
 800aefc:	2300      	movs	r3, #0
 800aefe:	4601      	mov	r1, r0
 800af00:	46ac      	mov	ip, r5
 800af02:	4620      	mov	r0, r4
 800af04:	461a      	mov	r2, r3
 800af06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800af0a:	4760      	bx	ip
 800af0c:	2000      	movs	r0, #0
 800af0e:	bd70      	pop	{r4, r5, r6, pc}
 800af10:	2000a47c 	.word	0x2000a47c
 800af14:	0801d100 	.word	0x0801d100
 800af18:	0801e33c 	.word	0x0801e33c
 800af1c:	0801d18e 	.word	0x0801d18e
 800af20:	2000a480 	.word	0x2000a480
 800af24:	0801d1b7 	.word	0x0801d1b7
 800af28:	2000a488 	.word	0x2000a488

0800af2c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800af2c:	b570      	push	{r4, r5, r6, lr}
 800af2e:	6803      	ldr	r3, [r0, #0]
 800af30:	4604      	mov	r4, r0
 800af32:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800af34:	4615      	mov	r5, r2
 800af36:	4798      	blx	r3
 800af38:	6823      	ldr	r3, [r4, #0]
 800af3a:	4629      	mov	r1, r5
 800af3c:	4620      	mov	r0, r4
 800af3e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800af40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800af44:	4718      	bx	r3

0800af46 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800af46:	b538      	push	{r3, r4, r5, lr}
 800af48:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800af4a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800af4e:	429a      	cmp	r2, r3
 800af50:	4604      	mov	r4, r0
 800af52:	d014      	beq.n	800af7e <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800af54:	6803      	ldr	r3, [r0, #0]
 800af56:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800af58:	4798      	blx	r3
 800af5a:	6823      	ldr	r3, [r4, #0]
 800af5c:	4605      	mov	r5, r0
 800af5e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800af60:	4620      	mov	r0, r4
 800af62:	4798      	blx	r3
 800af64:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800af68:	b22d      	sxth	r5, r5
 800af6a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800af6e:	4601      	mov	r1, r0
 800af70:	bf06      	itte	eq
 800af72:	4602      	moveq	r2, r0
 800af74:	4629      	moveq	r1, r5
 800af76:	462a      	movne	r2, r5
 800af78:	4620      	mov	r0, r4
 800af7a:	f7ff ffd7 	bl	800af2c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800af7e:	bd38      	pop	{r3, r4, r5, pc}

0800af80 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 800af80:	888a      	ldrh	r2, [r1, #4]
 800af82:	8582      	strh	r2, [r0, #44]	; 0x2c
 800af84:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800af88:	b922      	cbnz	r2, 800af94 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800af8a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800af8e:	b90b      	cbnz	r3, 800af94 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800af90:	f7ff bfd9 	b.w	800af46 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800af94:	4770      	bx	lr

0800af96 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800af96:	2300      	movs	r3, #0
 800af98:	8083      	strh	r3, [r0, #4]
 800af9a:	80c3      	strh	r3, [r0, #6]
 800af9c:	8003      	strh	r3, [r0, #0]
 800af9e:	8043      	strh	r3, [r0, #2]
 800afa0:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800afa4:	2bff      	cmp	r3, #255	; 0xff
 800afa6:	bf01      	itttt	eq
 800afa8:	890b      	ldrheq	r3, [r1, #8]
 800afaa:	8083      	strheq	r3, [r0, #4]
 800afac:	894b      	ldrheq	r3, [r1, #10]
 800afae:	80c3      	strheq	r3, [r0, #6]
 800afb0:	4770      	bx	lr
	...

0800afb4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800afb4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800afb6:	4604      	mov	r4, r0
 800afb8:	6808      	ldr	r0, [r1, #0]
 800afba:	6849      	ldr	r1, [r1, #4]
 800afbc:	466b      	mov	r3, sp
 800afbe:	c303      	stmia	r3!, {r0, r1}
 800afc0:	6823      	ldr	r3, [r4, #0]
 800afc2:	4669      	mov	r1, sp
 800afc4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800afc6:	4620      	mov	r0, r4
 800afc8:	4798      	blx	r3
 800afca:	4b08      	ldr	r3, [pc, #32]	; (800afec <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800afcc:	681b      	ldr	r3, [r3, #0]
 800afce:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800afd2:	b10a      	cbz	r2, 800afd8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800afd4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800afd6:	b900      	cbnz	r0, 800afda <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800afd8:	6898      	ldr	r0, [r3, #8]
 800afda:	6803      	ldr	r3, [r0, #0]
 800afdc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800afde:	699d      	ldr	r5, [r3, #24]
 800afe0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800afe4:	4669      	mov	r1, sp
 800afe6:	47a8      	blx	r5
 800afe8:	b003      	add	sp, #12
 800afea:	bd30      	pop	{r4, r5, pc}
 800afec:	2000a42c 	.word	0x2000a42c

0800aff0 <_ZN8touchgfx3BoxD1Ev>:
 800aff0:	4770      	bx	lr

0800aff2 <_ZN8touchgfx3BoxD0Ev>:
 800aff2:	b510      	push	{r4, lr}
 800aff4:	212c      	movs	r1, #44	; 0x2c
 800aff6:	4604      	mov	r4, r0
 800aff8:	f010 f9da 	bl	801b3b0 <_ZdlPvj>
 800affc:	4620      	mov	r0, r4
 800affe:	bd10      	pop	{r4, pc}

0800b000 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800b000:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800b004:	4770      	bx	lr

0800b006 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800b006:	b570      	push	{r4, r5, r6, lr}
 800b008:	880b      	ldrh	r3, [r1, #0]
 800b00a:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800b00c:	4605      	mov	r5, r0
 800b00e:	8813      	ldrh	r3, [r2, #0]
 800b010:	f825 3f30 	strh.w	r3, [r5, #48]!
 800b014:	4604      	mov	r4, r0
 800b016:	4628      	mov	r0, r5
 800b018:	f004 fbba 	bl	800f790 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b01c:	4606      	mov	r6, r0
 800b01e:	4628      	mov	r0, r5
 800b020:	f004 fbf0 	bl	800f804 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b024:	6823      	ldr	r3, [r4, #0]
 800b026:	4605      	mov	r5, r0
 800b028:	b231      	sxth	r1, r6
 800b02a:	4620      	mov	r0, r4
 800b02c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b02e:	4798      	blx	r3
 800b030:	6823      	ldr	r3, [r4, #0]
 800b032:	b229      	sxth	r1, r5
 800b034:	4620      	mov	r0, r4
 800b036:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b038:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b03c:	4718      	bx	r3

0800b03e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800b03e:	b510      	push	{r4, lr}
 800b040:	4604      	mov	r4, r0
 800b042:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800b044:	b150      	cbz	r0, 800b05c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800b046:	6803      	ldr	r3, [r0, #0]
 800b048:	68db      	ldr	r3, [r3, #12]
 800b04a:	4798      	blx	r3
 800b04c:	b130      	cbz	r0, 800b05c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800b04e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b050:	6803      	ldr	r3, [r0, #0]
 800b052:	4621      	mov	r1, r4
 800b054:	689b      	ldr	r3, [r3, #8]
 800b056:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b05a:	4718      	bx	r3
 800b05c:	bd10      	pop	{r4, pc}

0800b05e <_ZNK8touchgfx6Button12getSolidRectEv>:
 800b05e:	b510      	push	{r4, lr}
 800b060:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800b064:	2bff      	cmp	r3, #255	; 0xff
 800b066:	4604      	mov	r4, r0
 800b068:	d006      	beq.n	800b078 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800b06a:	2300      	movs	r3, #0
 800b06c:	8003      	strh	r3, [r0, #0]
 800b06e:	8043      	strh	r3, [r0, #2]
 800b070:	8083      	strh	r3, [r0, #4]
 800b072:	80c3      	strh	r3, [r0, #6]
 800b074:	4620      	mov	r0, r4
 800b076:	bd10      	pop	{r4, pc}
 800b078:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800b07c:	b11b      	cbz	r3, 800b086 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800b07e:	3130      	adds	r1, #48	; 0x30
 800b080:	f004 fbfa 	bl	800f878 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b084:	e7f6      	b.n	800b074 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800b086:	312e      	adds	r1, #46	; 0x2e
 800b088:	e7fa      	b.n	800b080 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800b08c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800b08c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b090:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b094:	b08a      	sub	sp, #40	; 0x28
 800b096:	4604      	mov	r4, r0
 800b098:	4688      	mov	r8, r1
 800b09a:	2b00      	cmp	r3, #0
 800b09c:	d044      	beq.n	800b128 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800b09e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800b0a0:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b0a4:	a805      	add	r0, sp, #20
 800b0a6:	f004 fb73 	bl	800f790 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b0aa:	4605      	mov	r5, r0
 800b0ac:	b206      	sxth	r6, r0
 800b0ae:	a805      	add	r0, sp, #20
 800b0b0:	f004 fba8 	bl	800f804 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b0b4:	f9b8 2000 	ldrsh.w	r2, [r8]
 800b0b8:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800b0bc:	4417      	add	r7, r2
 800b0be:	b2bf      	uxth	r7, r7
 800b0c0:	2300      	movs	r3, #0
 800b0c2:	fa0f fe87 	sxth.w	lr, r7
 800b0c6:	459e      	cmp	lr, r3
 800b0c8:	fa0f fc80 	sxth.w	ip, r0
 800b0cc:	9306      	str	r3, [sp, #24]
 800b0ce:	dd2d      	ble.n	800b12c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800b0d0:	4296      	cmp	r6, r2
 800b0d2:	dd2b      	ble.n	800b12c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800b0d4:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800b0d8:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800b0dc:	4419      	add	r1, r3
 800b0de:	b289      	uxth	r1, r1
 800b0e0:	fa0f f881 	sxth.w	r8, r1
 800b0e4:	f1b8 0f00 	cmp.w	r8, #0
 800b0e8:	dd20      	ble.n	800b12c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800b0ea:	459c      	cmp	ip, r3
 800b0ec:	dd1e      	ble.n	800b12c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800b0ee:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800b0f2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800b0f6:	4576      	cmp	r6, lr
 800b0f8:	bfa8      	it	ge
 800b0fa:	463d      	movge	r5, r7
 800b0fc:	45c4      	cmp	ip, r8
 800b0fe:	bfa8      	it	ge
 800b100:	4608      	movge	r0, r1
 800b102:	1aad      	subs	r5, r5, r2
 800b104:	1ac0      	subs	r0, r0, r3
 800b106:	f8ad 501c 	strh.w	r5, [sp, #28]
 800b10a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800b10e:	f8ad 2018 	strh.w	r2, [sp, #24]
 800b112:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b116:	4b1f      	ldr	r3, [pc, #124]	; (800b194 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800b118:	681b      	ldr	r3, [r3, #0]
 800b11a:	b953      	cbnz	r3, 800b132 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800b11c:	4b1e      	ldr	r3, [pc, #120]	; (800b198 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800b11e:	4a1f      	ldr	r2, [pc, #124]	; (800b19c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800b120:	481f      	ldr	r0, [pc, #124]	; (800b1a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800b122:	218b      	movs	r1, #139	; 0x8b
 800b124:	f010 f972 	bl	801b40c <__assert_func>
 800b128:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800b12a:	e7b9      	b.n	800b0a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800b12c:	2300      	movs	r3, #0
 800b12e:	9307      	str	r3, [sp, #28]
 800b130:	e7f1      	b.n	800b116 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800b132:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800b136:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b13a:	429a      	cmp	r2, r3
 800b13c:	d026      	beq.n	800b18c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800b13e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b142:	2b00      	cmp	r3, #0
 800b144:	dd22      	ble.n	800b18c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800b146:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b14a:	2b00      	cmp	r3, #0
 800b14c:	dd1e      	ble.n	800b18c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800b14e:	2300      	movs	r3, #0
 800b150:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800b154:	6823      	ldr	r3, [r4, #0]
 800b156:	a908      	add	r1, sp, #32
 800b158:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b15a:	4620      	mov	r0, r4
 800b15c:	4798      	blx	r3
 800b15e:	4b11      	ldr	r3, [pc, #68]	; (800b1a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800b160:	681b      	ldr	r3, [r3, #0]
 800b162:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b166:	b10a      	cbz	r2, 800b16c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800b168:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800b16a:	b900      	cbnz	r0, 800b16e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800b16c:	6898      	ldr	r0, [r3, #8]
 800b16e:	6801      	ldr	r1, [r0, #0]
 800b170:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800b174:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800b178:	2501      	movs	r5, #1
 800b17a:	9502      	str	r5, [sp, #8]
 800b17c:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800b180:	9401      	str	r4, [sp, #4]
 800b182:	ac06      	add	r4, sp, #24
 800b184:	9400      	str	r4, [sp, #0]
 800b186:	688c      	ldr	r4, [r1, #8]
 800b188:	a905      	add	r1, sp, #20
 800b18a:	47a0      	blx	r4
 800b18c:	b00a      	add	sp, #40	; 0x28
 800b18e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b192:	bf00      	nop
 800b194:	2000a4b4 	.word	0x2000a4b4
 800b198:	0801e3d0 	.word	0x0801e3d0
 800b19c:	0801e432 	.word	0x0801e432
 800b1a0:	0801e40c 	.word	0x0801e40c
 800b1a4:	2000a42c 	.word	0x2000a42c

0800b1a8 <_ZN8touchgfx5ImageD1Ev>:
 800b1a8:	4770      	bx	lr

0800b1aa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800b1aa:	b570      	push	{r4, r5, r6, lr}
 800b1ac:	880b      	ldrh	r3, [r1, #0]
 800b1ae:	84c3      	strh	r3, [r0, #38]	; 0x26
 800b1b0:	4604      	mov	r4, r0
 800b1b2:	4608      	mov	r0, r1
 800b1b4:	460d      	mov	r5, r1
 800b1b6:	f004 faeb 	bl	800f790 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b1ba:	4606      	mov	r6, r0
 800b1bc:	4628      	mov	r0, r5
 800b1be:	f004 fb21 	bl	800f804 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b1c2:	6823      	ldr	r3, [r4, #0]
 800b1c4:	4605      	mov	r5, r0
 800b1c6:	b231      	sxth	r1, r6
 800b1c8:	4620      	mov	r0, r4
 800b1ca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b1cc:	4798      	blx	r3
 800b1ce:	6823      	ldr	r3, [r4, #0]
 800b1d0:	b229      	sxth	r1, r5
 800b1d2:	4620      	mov	r0, r4
 800b1d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b1d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b1da:	4718      	bx	r3

0800b1dc <_ZN8touchgfx5ImageD0Ev>:
 800b1dc:	b510      	push	{r4, lr}
 800b1de:	212c      	movs	r1, #44	; 0x2c
 800b1e0:	4604      	mov	r4, r0
 800b1e2:	f010 f8e5 	bl	801b3b0 <_ZdlPvj>
 800b1e6:	4620      	mov	r0, r4
 800b1e8:	bd10      	pop	{r4, pc}

0800b1ea <_ZNK8touchgfx5Image12getSolidRectEv>:
 800b1ea:	b510      	push	{r4, lr}
 800b1ec:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800b1f0:	2bff      	cmp	r3, #255	; 0xff
 800b1f2:	4604      	mov	r4, r0
 800b1f4:	d006      	beq.n	800b204 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800b1f6:	2300      	movs	r3, #0
 800b1f8:	8003      	strh	r3, [r0, #0]
 800b1fa:	8043      	strh	r3, [r0, #2]
 800b1fc:	8083      	strh	r3, [r0, #4]
 800b1fe:	80c3      	strh	r3, [r0, #6]
 800b200:	4620      	mov	r0, r4
 800b202:	bd10      	pop	{r4, pc}
 800b204:	3126      	adds	r1, #38	; 0x26
 800b206:	f004 fb37 	bl	800f878 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b20a:	e7f9      	b.n	800b200 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800b20c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800b20c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b210:	4604      	mov	r4, r0
 800b212:	b088      	sub	sp, #32
 800b214:	f854 3b26 	ldr.w	r3, [r4], #38
 800b218:	2500      	movs	r5, #0
 800b21a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b21c:	460f      	mov	r7, r1
 800b21e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800b222:	a904      	add	r1, sp, #16
 800b224:	4606      	mov	r6, r0
 800b226:	4798      	blx	r3
 800b228:	4620      	mov	r0, r4
 800b22a:	f004 fab1 	bl	800f790 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b22e:	4680      	mov	r8, r0
 800b230:	4620      	mov	r0, r4
 800b232:	f004 fae7 	bl	800f804 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b236:	9506      	str	r5, [sp, #24]
 800b238:	ad06      	add	r5, sp, #24
 800b23a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800b23e:	4639      	mov	r1, r7
 800b240:	4628      	mov	r0, r5
 800b242:	f8ad 801c 	strh.w	r8, [sp, #28]
 800b246:	f7fe faa1 	bl	800978c <_ZN8touchgfx4RectaNERKS0_>
 800b24a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b24e:	2b00      	cmp	r3, #0
 800b250:	dd19      	ble.n	800b286 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b252:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b256:	2b00      	cmp	r3, #0
 800b258:	dd15      	ble.n	800b286 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b25a:	4b0c      	ldr	r3, [pc, #48]	; (800b28c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800b25c:	681b      	ldr	r3, [r3, #0]
 800b25e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b262:	b10a      	cbz	r2, 800b268 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800b264:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800b266:	b900      	cbnz	r0, 800b26a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800b268:	6898      	ldr	r0, [r3, #8]
 800b26a:	6801      	ldr	r1, [r0, #0]
 800b26c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800b270:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800b274:	2701      	movs	r7, #1
 800b276:	9702      	str	r7, [sp, #8]
 800b278:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800b27c:	e9cd 5600 	strd	r5, r6, [sp]
 800b280:	688d      	ldr	r5, [r1, #8]
 800b282:	4621      	mov	r1, r4
 800b284:	47a8      	blx	r5
 800b286:	b008      	add	sp, #32
 800b288:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b28c:	2000a42c 	.word	0x2000a42c

0800b290 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800b290:	4770      	bx	lr

0800b292 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800b292:	b510      	push	{r4, lr}
 800b294:	2148      	movs	r1, #72	; 0x48
 800b296:	4604      	mov	r4, r0
 800b298:	f010 f88a 	bl	801b3b0 <_ZdlPvj>
 800b29c:	4620      	mov	r0, r4
 800b29e:	bd10      	pop	{r4, pc}

0800b2a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800b2a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b2a4:	4604      	mov	r4, r0
 800b2a6:	b08c      	sub	sp, #48	; 0x30
 800b2a8:	4688      	mov	r8, r1
 800b2aa:	f7ff feef 	bl	800b08c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800b2ae:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800b2b0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b2b4:	4293      	cmp	r3, r2
 800b2b6:	f000 8099 	beq.w	800b3ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800b2ba:	4e54      	ldr	r6, [pc, #336]	; (800b40c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800b2bc:	6832      	ldr	r2, [r6, #0]
 800b2be:	b92a      	cbnz	r2, 800b2cc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x2c>
 800b2c0:	4b53      	ldr	r3, [pc, #332]	; (800b410 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800b2c2:	4a54      	ldr	r2, [pc, #336]	; (800b414 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800b2c4:	21b1      	movs	r1, #177	; 0xb1
 800b2c6:	4854      	ldr	r0, [pc, #336]	; (800b418 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x178>)
 800b2c8:	f010 f8a0 	bl	801b40c <__assert_func>
 800b2cc:	4d53      	ldr	r5, [pc, #332]	; (800b41c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x17c>)
 800b2ce:	8829      	ldrh	r1, [r5, #0]
 800b2d0:	4299      	cmp	r1, r3
 800b2d2:	d803      	bhi.n	800b2dc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x3c>
 800b2d4:	4b52      	ldr	r3, [pc, #328]	; (800b420 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x180>)
 800b2d6:	4a4f      	ldr	r2, [pc, #316]	; (800b414 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800b2d8:	21b2      	movs	r1, #178	; 0xb2
 800b2da:	e7f4      	b.n	800b2c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x26>
 800b2dc:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800b2e0:	4b50      	ldr	r3, [pc, #320]	; (800b424 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x184>)
 800b2e2:	f894 e044 	ldrb.w	lr, [r4, #68]	; 0x44
 800b2e6:	681b      	ldr	r3, [r3, #0]
 800b2e8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800b2ec:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800b2f0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800b2f4:	2300      	movs	r3, #0
 800b2f6:	f1be 0f01 	cmp.w	lr, #1
 800b2fa:	9303      	str	r3, [sp, #12]
 800b2fc:	b208      	sxth	r0, r1
 800b2fe:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800b302:	f04f 0c02 	mov.w	ip, #2
 800b306:	d074      	beq.n	800b3f2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x152>
 800b308:	f1be 0f03 	cmp.w	lr, #3
 800b30c:	d071      	beq.n	800b3f2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x152>
 800b30e:	1a52      	subs	r2, r2, r1
 800b310:	f8ad 3010 	strh.w	r3, [sp, #16]
 800b314:	fb92 f2fc 	sdiv	r2, r2, ip
 800b318:	f8ad 0012 	strh.w	r0, [sp, #18]
 800b31c:	f8ad 200e 	strh.w	r2, [sp, #14]
 800b320:	f10d 090c 	add.w	r9, sp, #12
 800b324:	e899 0003 	ldmia.w	r9, {r0, r1}
 800b328:	f10d 0a14 	add.w	sl, sp, #20
 800b32c:	e88a 0003 	stmia.w	sl, {r0, r1}
 800b330:	4641      	mov	r1, r8
 800b332:	4650      	mov	r0, sl
 800b334:	f7fe fa2a 	bl	800978c <_ZN8touchgfx4RectaNERKS0_>
 800b338:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800b33c:	2b00      	cmp	r3, #0
 800b33e:	dd55      	ble.n	800b3ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800b340:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800b344:	2b00      	cmp	r3, #0
 800b346:	dd51      	ble.n	800b3ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800b348:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800b34c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b350:	1a9b      	subs	r3, r3, r2
 800b352:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b356:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800b35a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800b35e:	1a9b      	subs	r3, r3, r2
 800b360:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b364:	6823      	ldr	r3, [r4, #0]
 800b366:	4649      	mov	r1, r9
 800b368:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b36a:	4620      	mov	r0, r4
 800b36c:	4798      	blx	r3
 800b36e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800b372:	2b00      	cmp	r3, #0
 800b374:	d047      	beq.n	800b406 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x166>
 800b376:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800b37a:	6833      	ldr	r3, [r6, #0]
 800b37c:	f894 c032 	ldrb.w	ip, [r4, #50]	; 0x32
 800b380:	2b00      	cmp	r3, #0
 800b382:	d09d      	beq.n	800b2c0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x20>
 800b384:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800b386:	8828      	ldrh	r0, [r5, #0]
 800b388:	4288      	cmp	r0, r1
 800b38a:	d9a3      	bls.n	800b2d4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x34>
 800b38c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800b390:	6812      	ldr	r2, [r2, #0]
 800b392:	785b      	ldrb	r3, [r3, #1]
 800b394:	9209      	str	r2, [sp, #36]	; 0x24
 800b396:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800b39a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800b39e:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800b3a2:	2300      	movs	r3, #0
 800b3a4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800b3a8:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800b3ac:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800b3b0:	4b1d      	ldr	r3, [pc, #116]	; (800b428 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x188>)
 800b3b2:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 800b3b6:	681b      	ldr	r3, [r3, #0]
 800b3b8:	9707      	str	r7, [sp, #28]
 800b3ba:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b3be:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800b3c2:	f88d 5020 	strb.w	r5, [sp, #32]
 800b3c6:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800b3ca:	b10a      	cbz	r2, 800b3d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x130>
 800b3cc:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800b3ce:	b904      	cbnz	r4, 800b3d2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x132>
 800b3d0:	689c      	ldr	r4, [r3, #8]
 800b3d2:	4b16      	ldr	r3, [pc, #88]	; (800b42c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x18c>)
 800b3d4:	6818      	ldr	r0, [r3, #0]
 800b3d6:	f7f7 fe0b 	bl	8002ff0 <_ZNK8touchgfx5Texts7getTextEt>
 800b3da:	ab07      	add	r3, sp, #28
 800b3dc:	9001      	str	r0, [sp, #4]
 800b3de:	9300      	str	r3, [sp, #0]
 800b3e0:	e899 0006 	ldmia.w	r9, {r1, r2}
 800b3e4:	4653      	mov	r3, sl
 800b3e6:	4620      	mov	r0, r4
 800b3e8:	f7f7 fdb4 	bl	8002f54 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800b3ec:	b00c      	add	sp, #48	; 0x30
 800b3ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b3f2:	1a5b      	subs	r3, r3, r1
 800b3f4:	f8ad 0010 	strh.w	r0, [sp, #16]
 800b3f8:	fb93 f3fc 	sdiv	r3, r3, ip
 800b3fc:	f8ad 2012 	strh.w	r2, [sp, #18]
 800b400:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b404:	e78c      	b.n	800b320 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x80>
 800b406:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800b40a:	e7b6      	b.n	800b37a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xda>
 800b40c:	2000a47c 	.word	0x2000a47c
 800b410:	0801d100 	.word	0x0801d100
 800b414:	0801e540 	.word	0x0801e540
 800b418:	0801d18e 	.word	0x0801d18e
 800b41c:	2000a480 	.word	0x2000a480
 800b420:	0801d1b7 	.word	0x0801d1b7
 800b424:	2000a484 	.word	0x2000a484
 800b428:	2000a42c 	.word	0x2000a42c
 800b42c:	2000a488 	.word	0x2000a488

0800b430 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800b430:	b510      	push	{r4, lr}
 800b432:	2101      	movs	r1, #1
 800b434:	4c12      	ldr	r4, [pc, #72]	; (800b480 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x50>)
 800b436:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800b43a:	2200      	movs	r2, #0
 800b43c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800b440:	6004      	str	r4, [r0, #0]
 800b442:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b446:	4c0f      	ldr	r4, [pc, #60]	; (800b484 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800b448:	8082      	strh	r2, [r0, #4]
 800b44a:	80c2      	strh	r2, [r0, #6]
 800b44c:	8102      	strh	r2, [r0, #8]
 800b44e:	8142      	strh	r2, [r0, #10]
 800b450:	8182      	strh	r2, [r0, #12]
 800b452:	81c2      	strh	r2, [r0, #14]
 800b454:	8202      	strh	r2, [r0, #16]
 800b456:	8242      	strh	r2, [r0, #18]
 800b458:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b45c:	61c2      	str	r2, [r0, #28]
 800b45e:	6282      	str	r2, [r0, #40]	; 0x28
 800b460:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800b464:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800b466:	8601      	strh	r1, [r0, #48]	; 0x30
 800b468:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800b46c:	6344      	str	r4, [r0, #52]	; 0x34
 800b46e:	8701      	strh	r1, [r0, #56]	; 0x38
 800b470:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800b474:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800b478:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800b47c:	bd10      	pop	{r4, pc}
 800b47e:	bf00      	nop
 800b480:	0801e4d8 	.word	0x0801e4d8
 800b484:	0801cb64 	.word	0x0801cb64

0800b488 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800b488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b48c:	b08d      	sub	sp, #52	; 0x34
 800b48e:	4688      	mov	r8, r1
 800b490:	9916      	ldr	r1, [sp, #88]	; 0x58
 800b492:	f8d3 c000 	ldr.w	ip, [r3]
 800b496:	680f      	ldr	r7, [r1, #0]
 800b498:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800b49c:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800b4a0:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800b4a4:	edd3 6a07 	vldr	s13, [r3, #28]
 800b4a8:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b4aa:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800b4ae:	f9b1 9000 	ldrsh.w	r9, [r1]
 800b4b2:	f9ba 1000 	ldrsh.w	r1, [sl]
 800b4b6:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800b4ba:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800b4be:	eba7 070c 	sub.w	r7, r7, ip
 800b4c2:	42bc      	cmp	r4, r7
 800b4c4:	bfa8      	it	ge
 800b4c6:	463c      	movge	r4, r7
 800b4c8:	ee07 4a90 	vmov	s15, r4
 800b4cc:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800b4d0:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800b4d4:	ee25 4a04 	vmul.f32	s8, s10, s8
 800b4d8:	ee65 4a24 	vmul.f32	s9, s10, s9
 800b4dc:	ee25 5a27 	vmul.f32	s10, s10, s15
 800b4e0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800b4e4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800b4e8:	eb09 0e0c 	add.w	lr, r9, ip
 800b4ec:	4571      	cmp	r1, lr
 800b4ee:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800b4f2:	ee32 1a05 	vadd.f32	s2, s4, s10
 800b4f6:	ee36 0a84 	vadd.f32	s0, s13, s8
 800b4fa:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b4fe:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b502:	f340 808d 	ble.w	800b620 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800b506:	eba1 060e 	sub.w	r6, r1, lr
 800b50a:	fb96 f5f4 	sdiv	r5, r6, r4
 800b50e:	ee07 5a10 	vmov	s14, r5
 800b512:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b516:	2d00      	cmp	r5, #0
 800b518:	fb04 6615 	mls	r6, r4, r5, r6
 800b51c:	eea7 0a04 	vfma.f32	s0, s14, s8
 800b520:	eee7 0a24 	vfma.f32	s1, s14, s9
 800b524:	eea7 1a05 	vfma.f32	s2, s14, s10
 800b528:	dd13      	ble.n	800b552 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800b52a:	ee70 6a44 	vsub.f32	s13, s0, s8
 800b52e:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800b532:	eef5 6a40 	vcmp.f32	s13, #0.0
 800b536:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b53a:	bf18      	it	ne
 800b53c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800b540:	ee31 2a45 	vsub.f32	s4, s2, s10
 800b544:	bf08      	it	eq
 800b546:	eeb0 7a67 	vmoveq.f32	s14, s15
 800b54a:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b54e:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b552:	fb05 f204 	mul.w	r2, r5, r4
 800b556:	1abf      	subs	r7, r7, r2
 800b558:	4494      	add	ip, r2
 800b55a:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800b55e:	4411      	add	r1, r2
 800b560:	eb09 020c 	add.w	r2, r9, ip
 800b564:	443a      	add	r2, r7
 800b566:	b209      	sxth	r1, r1
 800b568:	428a      	cmp	r2, r1
 800b56a:	bfc4      	itt	gt
 800b56c:	eba1 0209 	subgt.w	r2, r1, r9
 800b570:	eba2 070c 	subgt.w	r7, r2, ip
 800b574:	2f00      	cmp	r7, #0
 800b576:	dd50      	ble.n	800b61a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800b578:	fb97 f1f4 	sdiv	r1, r7, r4
 800b57c:	fb04 7211 	mls	r2, r4, r1, r7
 800b580:	b90a      	cbnz	r2, 800b586 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800b582:	3901      	subs	r1, #1
 800b584:	4622      	mov	r2, r4
 800b586:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800b58a:	6840      	ldr	r0, [r0, #4]
 800b58c:	900b      	str	r0, [sp, #44]	; 0x2c
 800b58e:	f8d0 a000 	ldr.w	sl, [r0]
 800b592:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800b594:	9008      	str	r0, [sp, #32]
 800b596:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800b59a:	9818      	ldr	r0, [sp, #96]	; 0x60
 800b59c:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800b5a0:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800b5a4:	695b      	ldr	r3, [r3, #20]
 800b5a6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800b5a8:	445b      	add	r3, fp
 800b5aa:	eef0 6a42 	vmov.f32	s13, s4
 800b5ae:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800b5b2:	ee21 3a23 	vmul.f32	s6, s2, s7
 800b5b6:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800b5ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800b5be:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b5c2:	9307      	str	r3, [sp, #28]
 800b5c4:	ee17 7a90 	vmov	r7, s15
 800b5c8:	ee73 7a42 	vsub.f32	s15, s6, s4
 800b5cc:	eeb0 7a61 	vmov.f32	s14, s3
 800b5d0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b5d4:	ee16 3a90 	vmov	r3, s13
 800b5d8:	fb97 f7f4 	sdiv	r7, r7, r4
 800b5dc:	ee17 ca90 	vmov	ip, s15
 800b5e0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800b5e4:	fb9c fcf4 	sdiv	ip, ip, r4
 800b5e8:	fb0c 3306 	mla	r3, ip, r6, r3
 800b5ec:	9302      	str	r3, [sp, #8]
 800b5ee:	ee17 3a10 	vmov	r3, s14
 800b5f2:	44b6      	add	lr, r6
 800b5f4:	fb04 e505 	mla	r5, r4, r5, lr
 800b5f8:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800b5fc:	fb07 3706 	mla	r7, r7, r6, r3
 800b600:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800b604:	e9cd 4700 	strd	r4, r7, [sp]
 800b608:	2900      	cmp	r1, #0
 800b60a:	bfcc      	ite	gt
 800b60c:	46a1      	movgt	r9, r4
 800b60e:	4691      	movle	r9, r2
 800b610:	eba9 0306 	sub.w	r3, r9, r6
 800b614:	f8da 4008 	ldr.w	r4, [sl, #8]
 800b618:	47a0      	blx	r4
 800b61a:	b00d      	add	sp, #52	; 0x34
 800b61c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b620:	2500      	movs	r5, #0
 800b622:	462e      	mov	r6, r5
 800b624:	e799      	b.n	800b55a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800b628 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b628:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b62c:	b0db      	sub	sp, #364	; 0x16c
 800b62e:	461d      	mov	r5, r3
 800b630:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800b634:	930a      	str	r3, [sp, #40]	; 0x28
 800b636:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800b63a:	930b      	str	r3, [sp, #44]	; 0x2c
 800b63c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800b640:	9310      	str	r3, [sp, #64]	; 0x40
 800b642:	6803      	ldr	r3, [r0, #0]
 800b644:	910f      	str	r1, [sp, #60]	; 0x3c
 800b646:	6bdf      	ldr	r7, [r3, #60]	; 0x3c
 800b648:	9009      	str	r0, [sp, #36]	; 0x24
 800b64a:	4614      	mov	r4, r2
 800b64c:	4629      	mov	r1, r5
 800b64e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800b652:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800b656:	47b8      	blx	r7
 800b658:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b65a:	6058      	str	r0, [r3, #4]
 800b65c:	2800      	cmp	r0, #0
 800b65e:	f000 83a1 	beq.w	800bda4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b662:	682b      	ldr	r3, [r5, #0]
 800b664:	9314      	str	r3, [sp, #80]	; 0x50
 800b666:	686b      	ldr	r3, [r5, #4]
 800b668:	9315      	str	r3, [sp, #84]	; 0x54
 800b66a:	4bc4      	ldr	r3, [pc, #784]	; (800b97c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800b66c:	ed94 7a02 	vldr	s14, [r4, #8]
 800b670:	7819      	ldrb	r1, [r3, #0]
 800b672:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800b676:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800b67a:	2900      	cmp	r1, #0
 800b67c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b680:	bf16      	itet	ne
 800b682:	4619      	movne	r1, r3
 800b684:	4611      	moveq	r1, r2
 800b686:	4613      	movne	r3, r2
 800b688:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b68c:	9116      	str	r1, [sp, #88]	; 0x58
 800b68e:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800b692:	f240 8387 	bls.w	800bda4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b696:	ed94 7a07 	vldr	s14, [r4, #28]
 800b69a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b69e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b6a2:	f240 837f 	bls.w	800bda4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b6a6:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800b6aa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b6ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b6b2:	f240 8377 	bls.w	800bda4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b6b6:	6822      	ldr	r2, [r4, #0]
 800b6b8:	4bb1      	ldr	r3, [pc, #708]	; (800b980 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800b6ba:	429a      	cmp	r2, r3
 800b6bc:	f2c0 8372 	blt.w	800bda4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b6c0:	49b0      	ldr	r1, [pc, #704]	; (800b984 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800b6c2:	6963      	ldr	r3, [r4, #20]
 800b6c4:	428a      	cmp	r2, r1
 800b6c6:	f300 836d 	bgt.w	800bda4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b6ca:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b6ce:	48ae      	ldr	r0, [pc, #696]	; (800b988 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800b6d0:	33ff      	adds	r3, #255	; 0xff
 800b6d2:	4283      	cmp	r3, r0
 800b6d4:	f200 8366 	bhi.w	800bda4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b6d8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b6da:	4dac      	ldr	r5, [pc, #688]	; (800b98c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800b6dc:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b6e0:	33ff      	adds	r3, #255	; 0xff
 800b6e2:	42ab      	cmp	r3, r5
 800b6e4:	f200 835e 	bhi.w	800bda4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b6e8:	6862      	ldr	r2, [r4, #4]
 800b6ea:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800b6ee:	33ff      	adds	r3, #255	; 0xff
 800b6f0:	4283      	cmp	r3, r0
 800b6f2:	f200 8357 	bhi.w	800bda4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b6f6:	69a1      	ldr	r1, [r4, #24]
 800b6f8:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800b6fc:	33ff      	adds	r3, #255	; 0xff
 800b6fe:	4283      	cmp	r3, r0
 800b700:	f200 8350 	bhi.w	800bda4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b704:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b706:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800b70a:	30ff      	adds	r0, #255	; 0xff
 800b70c:	42a8      	cmp	r0, r5
 800b70e:	f200 8349 	bhi.w	800bda4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b712:	428a      	cmp	r2, r1
 800b714:	f280 8110 	bge.w	800b938 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800b718:	429a      	cmp	r2, r3
 800b71a:	f300 8119 	bgt.w	800b950 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800b71e:	4299      	cmp	r1, r3
 800b720:	f280 811d 	bge.w	800b95e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800b724:	2502      	movs	r5, #2
 800b726:	2701      	movs	r7, #1
 800b728:	46a9      	mov	r9, r5
 800b72a:	46b8      	mov	r8, r7
 800b72c:	f04f 0a00 	mov.w	sl, #0
 800b730:	4621      	mov	r1, r4
 800b732:	a849      	add	r0, sp, #292	; 0x124
 800b734:	f003 fd7a 	bl	800f22c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800b738:	4622      	mov	r2, r4
 800b73a:	4653      	mov	r3, sl
 800b73c:	a949      	add	r1, sp, #292	; 0x124
 800b73e:	f8cd 9000 	str.w	r9, [sp]
 800b742:	a819      	add	r0, sp, #100	; 0x64
 800b744:	f003 fea2 	bl	800f48c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b748:	4622      	mov	r2, r4
 800b74a:	4653      	mov	r3, sl
 800b74c:	a949      	add	r1, sp, #292	; 0x124
 800b74e:	f8cd 8000 	str.w	r8, [sp]
 800b752:	a829      	add	r0, sp, #164	; 0xa4
 800b754:	f003 fe9a 	bl	800f48c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b758:	4643      	mov	r3, r8
 800b75a:	4622      	mov	r2, r4
 800b75c:	a949      	add	r1, sp, #292	; 0x124
 800b75e:	f8cd 9000 	str.w	r9, [sp]
 800b762:	a839      	add	r0, sp, #228	; 0xe4
 800b764:	f003 fe92 	bl	800f48c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b768:	42af      	cmp	r7, r5
 800b76a:	bfb5      	itete	lt
 800b76c:	2300      	movlt	r3, #0
 800b76e:	2301      	movge	r3, #1
 800b770:	930e      	strlt	r3, [sp, #56]	; 0x38
 800b772:	930e      	strge	r3, [sp, #56]	; 0x38
 800b774:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b776:	e893 0003 	ldmia.w	r3, {r0, r1}
 800b77a:	af12      	add	r7, sp, #72	; 0x48
 800b77c:	bfb9      	ittee	lt
 800b77e:	ad29      	addlt	r5, sp, #164	; 0xa4
 800b780:	ac19      	addlt	r4, sp, #100	; 0x64
 800b782:	ad19      	addge	r5, sp, #100	; 0x64
 800b784:	ac29      	addge	r4, sp, #164	; 0xa4
 800b786:	e887 0003 	stmia.w	r7, {r0, r1}
 800b78a:	b928      	cbnz	r0, 800b798 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800b78c:	4b80      	ldr	r3, [pc, #512]	; (800b990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800b78e:	6818      	ldr	r0, [r3, #0]
 800b790:	6803      	ldr	r3, [r0, #0]
 800b792:	6a1b      	ldr	r3, [r3, #32]
 800b794:	4798      	blx	r3
 800b796:	6038      	str	r0, [r7, #0]
 800b798:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b79a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b79e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b7a2:	930c      	str	r3, [sp, #48]	; 0x30
 800b7a4:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b7a6:	6963      	ldr	r3, [r4, #20]
 800b7a8:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800b7aa:	440b      	add	r3, r1
 800b7ac:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b7b0:	4408      	add	r0, r1
 800b7b2:	b200      	sxth	r0, r0
 800b7b4:	4283      	cmp	r3, r0
 800b7b6:	900d      	str	r0, [sp, #52]	; 0x34
 800b7b8:	f280 80dd 	bge.w	800b976 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800b7bc:	428b      	cmp	r3, r1
 800b7be:	da08      	bge.n	800b7d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b7c0:	2a00      	cmp	r2, #0
 800b7c2:	dd06      	ble.n	800b7d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b7c4:	1acb      	subs	r3, r1, r3
 800b7c6:	429a      	cmp	r2, r3
 800b7c8:	f2c0 80e4 	blt.w	800b994 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800b7cc:	2b00      	cmp	r3, #0
 800b7ce:	f300 80e2 	bgt.w	800b996 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800b7d2:	6967      	ldr	r7, [r4, #20]
 800b7d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b7d6:	443b      	add	r3, r7
 800b7d8:	461f      	mov	r7, r3
 800b7da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b7dc:	1bdf      	subs	r7, r3, r7
 800b7de:	4297      	cmp	r7, r2
 800b7e0:	bfa8      	it	ge
 800b7e2:	4617      	movge	r7, r2
 800b7e4:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800b7e8:	2f00      	cmp	r7, #0
 800b7ea:	f340 8166 	ble.w	800baba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800b7ee:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b7f0:	6829      	ldr	r1, [r5, #0]
 800b7f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b7f6:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b7fa:	6820      	ldr	r0, [r4, #0]
 800b7fc:	4411      	add	r1, r2
 800b7fe:	4299      	cmp	r1, r3
 800b800:	dd1a      	ble.n	800b838 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b802:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b806:	440b      	add	r3, r1
 800b808:	4402      	add	r2, r0
 800b80a:	b21b      	sxth	r3, r3
 800b80c:	429a      	cmp	r2, r3
 800b80e:	dc13      	bgt.n	800b838 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b810:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b812:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b814:	681b      	ldr	r3, [r3, #0]
 800b816:	9206      	str	r2, [sp, #24]
 800b818:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b81a:	9205      	str	r2, [sp, #20]
 800b81c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b81e:	9500      	str	r5, [sp, #0]
 800b820:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b824:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800b826:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b828:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b82c:	a912      	add	r1, sp, #72	; 0x48
 800b82e:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800b832:	aa49      	add	r2, sp, #292	; 0x124
 800b834:	4623      	mov	r3, r4
 800b836:	47c8      	blx	r9
 800b838:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b83c:	441a      	add	r2, r3
 800b83e:	6963      	ldr	r3, [r4, #20]
 800b840:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b844:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b848:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b84c:	68a1      	ldr	r1, [r4, #8]
 800b84e:	ed94 6a08 	vldr	s12, [r4, #32]
 800b852:	6022      	str	r2, [r4, #0]
 800b854:	3301      	adds	r3, #1
 800b856:	6163      	str	r3, [r4, #20]
 800b858:	69a3      	ldr	r3, [r4, #24]
 800b85a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b85e:	3b01      	subs	r3, #1
 800b860:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b864:	61a3      	str	r3, [r4, #24]
 800b866:	6923      	ldr	r3, [r4, #16]
 800b868:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b86c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b870:	edd4 6a07 	vldr	s13, [r4, #28]
 800b874:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b878:	440b      	add	r3, r1
 800b87a:	68e1      	ldr	r1, [r4, #12]
 800b87c:	6123      	str	r3, [r4, #16]
 800b87e:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b882:	428b      	cmp	r3, r1
 800b884:	edc4 6a07 	vstr	s13, [r4, #28]
 800b888:	db15      	blt.n	800b8b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800b88a:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b88e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b892:	3201      	adds	r2, #1
 800b894:	edc4 6a07 	vstr	s13, [r4, #28]
 800b898:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b89c:	6022      	str	r2, [r4, #0]
 800b89e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b8a2:	1a5b      	subs	r3, r3, r1
 800b8a4:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b8a8:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b8ac:	6123      	str	r3, [r4, #16]
 800b8ae:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b8b2:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b8b6:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b8ba:	441a      	add	r2, r3
 800b8bc:	696b      	ldr	r3, [r5, #20]
 800b8be:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b8c2:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b8c6:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b8ca:	68a9      	ldr	r1, [r5, #8]
 800b8cc:	ed95 6a08 	vldr	s12, [r5, #32]
 800b8d0:	602a      	str	r2, [r5, #0]
 800b8d2:	3301      	adds	r3, #1
 800b8d4:	616b      	str	r3, [r5, #20]
 800b8d6:	69ab      	ldr	r3, [r5, #24]
 800b8d8:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b8dc:	3b01      	subs	r3, #1
 800b8de:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b8e2:	61ab      	str	r3, [r5, #24]
 800b8e4:	692b      	ldr	r3, [r5, #16]
 800b8e6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b8ea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b8ee:	edd5 6a07 	vldr	s13, [r5, #28]
 800b8f2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b8f6:	440b      	add	r3, r1
 800b8f8:	68e9      	ldr	r1, [r5, #12]
 800b8fa:	612b      	str	r3, [r5, #16]
 800b8fc:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b900:	428b      	cmp	r3, r1
 800b902:	edc5 6a07 	vstr	s13, [r5, #28]
 800b906:	db15      	blt.n	800b934 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800b908:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b90c:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b910:	3201      	adds	r2, #1
 800b912:	edc5 6a07 	vstr	s13, [r5, #28]
 800b916:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b91a:	602a      	str	r2, [r5, #0]
 800b91c:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b920:	1a5b      	subs	r3, r3, r1
 800b922:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b926:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b92a:	612b      	str	r3, [r5, #16]
 800b92c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b930:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b934:	3f01      	subs	r7, #1
 800b936:	e757      	b.n	800b7e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800b938:	4299      	cmp	r1, r3
 800b93a:	dc13      	bgt.n	800b964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800b93c:	429a      	cmp	r2, r3
 800b93e:	da14      	bge.n	800b96a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800b940:	2502      	movs	r5, #2
 800b942:	2703      	movs	r7, #3
 800b944:	46a9      	mov	r9, r5
 800b946:	f04f 0800 	mov.w	r8, #0
 800b94a:	f04f 0a01 	mov.w	sl, #1
 800b94e:	e6ef      	b.n	800b730 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b950:	2501      	movs	r5, #1
 800b952:	2700      	movs	r7, #0
 800b954:	46a9      	mov	r9, r5
 800b956:	46b8      	mov	r8, r7
 800b958:	f04f 0a02 	mov.w	sl, #2
 800b95c:	e6e8      	b.n	800b730 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b95e:	2501      	movs	r5, #1
 800b960:	2702      	movs	r7, #2
 800b962:	e6e1      	b.n	800b728 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800b964:	2500      	movs	r5, #0
 800b966:	2701      	movs	r7, #1
 800b968:	e7f4      	b.n	800b954 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800b96a:	2702      	movs	r7, #2
 800b96c:	2503      	movs	r5, #3
 800b96e:	f04f 0900 	mov.w	r9, #0
 800b972:	46b8      	mov	r8, r7
 800b974:	e7e9      	b.n	800b94a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800b976:	4613      	mov	r3, r2
 800b978:	e728      	b.n	800b7cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800b97a:	bf00      	nop
 800b97c:	2000a424 	.word	0x2000a424
 800b980:	fffd8f01 	.word	0xfffd8f01
 800b984:	00027100 	.word	0x00027100
 800b988:	0004e1ff 	.word	0x0004e1ff
 800b98c:	0004e1fe 	.word	0x0004e1fe
 800b990:	2000a42c 	.word	0x2000a42c
 800b994:	4613      	mov	r3, r2
 800b996:	992b      	ldr	r1, [sp, #172]	; 0xac
 800b998:	9111      	str	r1, [sp, #68]	; 0x44
 800b99a:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800b99e:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800b9a2:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800b9a4:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800b9a8:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800b9ac:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800b9b0:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800b9b4:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800b9b8:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800b9bc:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800b9c0:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800b9c4:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800b9c8:	469e      	mov	lr, r3
 800b9ca:	469c      	mov	ip, r3
 800b9cc:	f04f 0900 	mov.w	r9, #0
 800b9d0:	f1bc 0f00 	cmp.w	ip, #0
 800b9d4:	d147      	bne.n	800ba66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800b9d6:	eb03 0c07 	add.w	ip, r3, r7
 800b9da:	1ad7      	subs	r7, r2, r3
 800b9dc:	f1b9 0f00 	cmp.w	r9, #0
 800b9e0:	d009      	beq.n	800b9f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800b9e2:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800b9e6:	9029      	str	r0, [sp, #164]	; 0xa4
 800b9e8:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800b9ec:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800b9f0:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800b9f4:	912d      	str	r1, [sp, #180]	; 0xb4
 800b9f6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b9f8:	9111      	str	r1, [sp, #68]	; 0x44
 800b9fa:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800b9fe:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800ba02:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800ba06:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800ba0a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800ba0e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800ba12:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800ba16:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800ba1a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800ba1e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800ba22:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800ba26:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800ba2a:	f04f 0800 	mov.w	r8, #0
 800ba2e:	f1be 0f00 	cmp.w	lr, #0
 800ba32:	d031      	beq.n	800ba98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800ba34:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800ba36:	4431      	add	r1, r6
 800ba38:	4549      	cmp	r1, r9
 800ba3a:	4450      	add	r0, sl
 800ba3c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ba40:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ba44:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ba48:	db08      	blt.n	800ba5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800ba4a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ba4e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ba52:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ba56:	3001      	adds	r0, #1
 800ba58:	eba1 0109 	sub.w	r1, r1, r9
 800ba5c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ba60:	f04f 0801 	mov.w	r8, #1
 800ba64:	e7e3      	b.n	800ba2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800ba66:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800ba68:	4431      	add	r1, r6
 800ba6a:	4541      	cmp	r1, r8
 800ba6c:	4450      	add	r0, sl
 800ba6e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ba72:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ba76:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ba7a:	db08      	blt.n	800ba8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800ba7c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ba80:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ba84:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ba88:	3001      	adds	r0, #1
 800ba8a:	eba1 0108 	sub.w	r1, r1, r8
 800ba8e:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ba92:	f04f 0901 	mov.w	r9, #1
 800ba96:	e79b      	b.n	800b9d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800ba98:	449c      	add	ip, r3
 800ba9a:	1aff      	subs	r7, r7, r3
 800ba9c:	f1b8 0f00 	cmp.w	r8, #0
 800baa0:	d009      	beq.n	800bab6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800baa2:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800baa6:	9019      	str	r0, [sp, #100]	; 0x64
 800baa8:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800baac:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800bab0:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800bab4:	911d      	str	r1, [sp, #116]	; 0x74
 800bab6:	1ad2      	subs	r2, r2, r3
 800bab8:	e68b      	b.n	800b7d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800baba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800babc:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800babe:	2b00      	cmp	r3, #0
 800bac0:	f000 80d1 	beq.w	800bc66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800bac4:	ad19      	add	r5, sp, #100	; 0x64
 800bac6:	ac39      	add	r4, sp, #228	; 0xe4
 800bac8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800baca:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800bace:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800bad2:	930c      	str	r3, [sp, #48]	; 0x30
 800bad4:	990c      	ldr	r1, [sp, #48]	; 0x30
 800bad6:	6963      	ldr	r3, [r4, #20]
 800bad8:	440b      	add	r3, r1
 800bada:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800bade:	4408      	add	r0, r1
 800bae0:	b200      	sxth	r0, r0
 800bae2:	4283      	cmp	r3, r0
 800bae4:	900d      	str	r0, [sp, #52]	; 0x34
 800bae6:	f280 80c1 	bge.w	800bc6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800baea:	428b      	cmp	r3, r1
 800baec:	da08      	bge.n	800bb00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800baee:	2a00      	cmp	r2, #0
 800baf0:	dd06      	ble.n	800bb00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800baf2:	1acb      	subs	r3, r1, r3
 800baf4:	429a      	cmp	r2, r3
 800baf6:	f2c0 80bb 	blt.w	800bc70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800bafa:	2b00      	cmp	r3, #0
 800bafc:	f300 80b9 	bgt.w	800bc72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800bb00:	6967      	ldr	r7, [r4, #20]
 800bb02:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800bb04:	443b      	add	r3, r7
 800bb06:	461f      	mov	r7, r3
 800bb08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bb0a:	1bdf      	subs	r7, r3, r7
 800bb0c:	4297      	cmp	r7, r2
 800bb0e:	bfa8      	it	ge
 800bb10:	4617      	movge	r7, r2
 800bb12:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800bb16:	2f00      	cmp	r7, #0
 800bb18:	f340 813c 	ble.w	800bd94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800bb1c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800bb1e:	6829      	ldr	r1, [r5, #0]
 800bb20:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bb24:	f9bb 3000 	ldrsh.w	r3, [fp]
 800bb28:	6820      	ldr	r0, [r4, #0]
 800bb2a:	4411      	add	r1, r2
 800bb2c:	4299      	cmp	r1, r3
 800bb2e:	dd1a      	ble.n	800bb66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800bb30:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800bb34:	440b      	add	r3, r1
 800bb36:	4402      	add	r2, r0
 800bb38:	b21b      	sxth	r3, r3
 800bb3a:	429a      	cmp	r2, r3
 800bb3c:	dc13      	bgt.n	800bb66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800bb3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bb40:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800bb42:	681b      	ldr	r3, [r3, #0]
 800bb44:	9206      	str	r2, [sp, #24]
 800bb46:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800bb48:	9205      	str	r2, [sp, #20]
 800bb4a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800bb4c:	9500      	str	r5, [sp, #0]
 800bb4e:	e9cd b203 	strd	fp, r2, [sp, #12]
 800bb52:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800bb54:	9809      	ldr	r0, [sp, #36]	; 0x24
 800bb56:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800bb5a:	a912      	add	r1, sp, #72	; 0x48
 800bb5c:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800bb60:	aa49      	add	r2, sp, #292	; 0x124
 800bb62:	4623      	mov	r3, r4
 800bb64:	47c8      	blx	r9
 800bb66:	e9d4 2300 	ldrd	r2, r3, [r4]
 800bb6a:	441a      	add	r2, r3
 800bb6c:	6963      	ldr	r3, [r4, #20]
 800bb6e:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800bb72:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800bb76:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800bb7a:	68a1      	ldr	r1, [r4, #8]
 800bb7c:	ed94 6a08 	vldr	s12, [r4, #32]
 800bb80:	6022      	str	r2, [r4, #0]
 800bb82:	3301      	adds	r3, #1
 800bb84:	6163      	str	r3, [r4, #20]
 800bb86:	69a3      	ldr	r3, [r4, #24]
 800bb88:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bb8c:	3b01      	subs	r3, #1
 800bb8e:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800bb92:	61a3      	str	r3, [r4, #24]
 800bb94:	6923      	ldr	r3, [r4, #16]
 800bb96:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800bb9a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bb9e:	edd4 6a07 	vldr	s13, [r4, #28]
 800bba2:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800bba6:	440b      	add	r3, r1
 800bba8:	68e1      	ldr	r1, [r4, #12]
 800bbaa:	6123      	str	r3, [r4, #16]
 800bbac:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bbb0:	428b      	cmp	r3, r1
 800bbb2:	edc4 6a07 	vstr	s13, [r4, #28]
 800bbb6:	db15      	blt.n	800bbe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800bbb8:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800bbbc:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bbc0:	3201      	adds	r2, #1
 800bbc2:	edc4 6a07 	vstr	s13, [r4, #28]
 800bbc6:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800bbca:	6022      	str	r2, [r4, #0]
 800bbcc:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bbd0:	1a5b      	subs	r3, r3, r1
 800bbd2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800bbd6:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800bbda:	6123      	str	r3, [r4, #16]
 800bbdc:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bbe0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800bbe4:	e9d5 2300 	ldrd	r2, r3, [r5]
 800bbe8:	441a      	add	r2, r3
 800bbea:	696b      	ldr	r3, [r5, #20]
 800bbec:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800bbf0:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800bbf4:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800bbf8:	68a9      	ldr	r1, [r5, #8]
 800bbfa:	ed95 6a08 	vldr	s12, [r5, #32]
 800bbfe:	602a      	str	r2, [r5, #0]
 800bc00:	3301      	adds	r3, #1
 800bc02:	616b      	str	r3, [r5, #20]
 800bc04:	69ab      	ldr	r3, [r5, #24]
 800bc06:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bc0a:	3b01      	subs	r3, #1
 800bc0c:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800bc10:	61ab      	str	r3, [r5, #24]
 800bc12:	692b      	ldr	r3, [r5, #16]
 800bc14:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800bc18:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bc1c:	edd5 6a07 	vldr	s13, [r5, #28]
 800bc20:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800bc24:	440b      	add	r3, r1
 800bc26:	68e9      	ldr	r1, [r5, #12]
 800bc28:	612b      	str	r3, [r5, #16]
 800bc2a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bc2e:	428b      	cmp	r3, r1
 800bc30:	edc5 6a07 	vstr	s13, [r5, #28]
 800bc34:	db15      	blt.n	800bc62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800bc36:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800bc3a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bc3e:	3201      	adds	r2, #1
 800bc40:	edc5 6a07 	vstr	s13, [r5, #28]
 800bc44:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800bc48:	602a      	str	r2, [r5, #0]
 800bc4a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bc4e:	1a5b      	subs	r3, r3, r1
 800bc50:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800bc54:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800bc58:	612b      	str	r3, [r5, #16]
 800bc5a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bc5e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800bc62:	3f01      	subs	r7, #1
 800bc64:	e757      	b.n	800bb16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800bc66:	ad39      	add	r5, sp, #228	; 0xe4
 800bc68:	ac19      	add	r4, sp, #100	; 0x64
 800bc6a:	e72d      	b.n	800bac8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800bc6c:	4613      	mov	r3, r2
 800bc6e:	e744      	b.n	800bafa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800bc70:	4613      	mov	r3, r2
 800bc72:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800bc76:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800bc78:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800bc7c:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800bc80:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800bc84:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800bc88:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800bc8c:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800bc90:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800bc94:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800bc96:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800bc9a:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800bc9e:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800bca2:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800bca6:	960e      	str	r6, [sp, #56]	; 0x38
 800bca8:	469e      	mov	lr, r3
 800bcaa:	461f      	mov	r7, r3
 800bcac:	f04f 0900 	mov.w	r9, #0
 800bcb0:	2f00      	cmp	r7, #0
 800bcb2:	d146      	bne.n	800bd42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800bcb4:	449c      	add	ip, r3
 800bcb6:	1ad7      	subs	r7, r2, r3
 800bcb8:	f1b9 0f00 	cmp.w	r9, #0
 800bcbc:	d009      	beq.n	800bcd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800bcbe:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800bcc2:	9039      	str	r0, [sp, #228]	; 0xe4
 800bcc4:	913d      	str	r1, [sp, #244]	; 0xf4
 800bcc6:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800bcca:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800bcce:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800bcd2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800bcd4:	910e      	str	r1, [sp, #56]	; 0x38
 800bcd6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800bcda:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800bcde:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800bce2:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800bce6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800bcea:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800bcee:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800bcf2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800bcf6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800bcfa:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800bcfe:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800bd02:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800bd06:	f04f 0800 	mov.w	r8, #0
 800bd0a:	f1be 0f00 	cmp.w	lr, #0
 800bd0e:	d030      	beq.n	800bd72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800bd10:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800bd12:	4431      	add	r1, r6
 800bd14:	4549      	cmp	r1, r9
 800bd16:	4450      	add	r0, sl
 800bd18:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800bd1c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800bd20:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800bd24:	db08      	blt.n	800bd38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800bd26:	ee77 7a85 	vadd.f32	s15, s15, s10
 800bd2a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800bd2e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800bd32:	3001      	adds	r0, #1
 800bd34:	eba1 0109 	sub.w	r1, r1, r9
 800bd38:	f10e 3eff 	add.w	lr, lr, #4294967295
 800bd3c:	f04f 0801 	mov.w	r8, #1
 800bd40:	e7e3      	b.n	800bd0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800bd42:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800bd44:	4431      	add	r1, r6
 800bd46:	4541      	cmp	r1, r8
 800bd48:	4450      	add	r0, sl
 800bd4a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800bd4e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800bd52:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800bd56:	db08      	blt.n	800bd6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800bd58:	ee76 6a85 	vadd.f32	s13, s13, s10
 800bd5c:	ee37 7a25 	vadd.f32	s14, s14, s11
 800bd60:	ee77 7a86 	vadd.f32	s15, s15, s12
 800bd64:	3001      	adds	r0, #1
 800bd66:	eba1 0108 	sub.w	r1, r1, r8
 800bd6a:	3f01      	subs	r7, #1
 800bd6c:	f04f 0901 	mov.w	r9, #1
 800bd70:	e79e      	b.n	800bcb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800bd72:	449c      	add	ip, r3
 800bd74:	1aff      	subs	r7, r7, r3
 800bd76:	f1b8 0f00 	cmp.w	r8, #0
 800bd7a:	d009      	beq.n	800bd90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800bd7c:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800bd80:	9019      	str	r0, [sp, #100]	; 0x64
 800bd82:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800bd86:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800bd8a:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800bd8e:	911d      	str	r1, [sp, #116]	; 0x74
 800bd90:	1ad2      	subs	r2, r2, r3
 800bd92:	e6b5      	b.n	800bb00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800bd94:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800bd96:	681b      	ldr	r3, [r3, #0]
 800bd98:	b923      	cbnz	r3, 800bda4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800bd9a:	4b04      	ldr	r3, [pc, #16]	; (800bdac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800bd9c:	6818      	ldr	r0, [r3, #0]
 800bd9e:	6803      	ldr	r3, [r0, #0]
 800bda0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bda2:	4798      	blx	r3
 800bda4:	b05b      	add	sp, #364	; 0x16c
 800bda6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bdaa:	bf00      	nop
 800bdac:	2000a42c 	.word	0x2000a42c

0800bdb0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800bdb0:	b570      	push	{r4, r5, r6, lr}
 800bdb2:	4604      	mov	r4, r0
 800bdb4:	2500      	movs	r5, #0
 800bdb6:	7223      	strb	r3, [r4, #8]
 800bdb8:	9804      	ldr	r0, [sp, #16]
 800bdba:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800bdbe:	8025      	strh	r5, [r4, #0]
 800bdc0:	6061      	str	r1, [r4, #4]
 800bdc2:	7263      	strb	r3, [r4, #9]
 800bdc4:	60e0      	str	r0, [r4, #12]
 800bdc6:	8222      	strh	r2, [r4, #16]
 800bdc8:	8265      	strh	r5, [r4, #18]
 800bdca:	82a5      	strh	r5, [r4, #20]
 800bdcc:	82e5      	strh	r5, [r4, #22]
 800bdce:	8325      	strh	r5, [r4, #24]
 800bdd0:	8365      	strh	r5, [r4, #26]
 800bdd2:	83a5      	strh	r5, [r4, #28]
 800bdd4:	77a5      	strb	r5, [r4, #30]
 800bdd6:	6803      	ldr	r3, [r0, #0]
 800bdd8:	695b      	ldr	r3, [r3, #20]
 800bdda:	4798      	blx	r3
 800bddc:	4606      	mov	r6, r0
 800bdde:	b1f8      	cbz	r0, 800be20 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800bde0:	68e0      	ldr	r0, [r4, #12]
 800bde2:	6803      	ldr	r3, [r0, #0]
 800bde4:	4631      	mov	r1, r6
 800bde6:	68db      	ldr	r3, [r3, #12]
 800bde8:	4798      	blx	r3
 800bdea:	7b43      	ldrb	r3, [r0, #13]
 800bdec:	7a82      	ldrb	r2, [r0, #10]
 800bdee:	005b      	lsls	r3, r3, #1
 800bdf0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800bdf4:	4313      	orrs	r3, r2
 800bdf6:	83a3      	strh	r3, [r4, #28]
 800bdf8:	7a63      	ldrb	r3, [r4, #9]
 800bdfa:	2b04      	cmp	r3, #4
 800bdfc:	4605      	mov	r5, r0
 800bdfe:	d10f      	bne.n	800be20 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800be00:	68e0      	ldr	r0, [r4, #12]
 800be02:	6803      	ldr	r3, [r0, #0]
 800be04:	462a      	mov	r2, r5
 800be06:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800be08:	4631      	mov	r1, r6
 800be0a:	4798      	blx	r3
 800be0c:	7b6b      	ldrb	r3, [r5, #13]
 800be0e:	005b      	lsls	r3, r3, #1
 800be10:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800be14:	7aab      	ldrb	r3, [r5, #10]
 800be16:	4313      	orrs	r3, r2
 800be18:	4418      	add	r0, r3
 800be1a:	8ba3      	ldrh	r3, [r4, #28]
 800be1c:	4418      	add	r0, r3
 800be1e:	83a0      	strh	r0, [r4, #28]
 800be20:	4620      	mov	r0, r4
 800be22:	bd70      	pop	{r4, r5, r6, pc}

0800be24 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800be24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be28:	2400      	movs	r4, #0
 800be2a:	b085      	sub	sp, #20
 800be2c:	4681      	mov	r9, r0
 800be2e:	4688      	mov	r8, r1
 800be30:	4692      	mov	sl, r2
 800be32:	469b      	mov	fp, r3
 800be34:	4627      	mov	r7, r4
 800be36:	4625      	mov	r5, r4
 800be38:	4626      	mov	r6, r4
 800be3a:	4554      	cmp	r4, sl
 800be3c:	da2a      	bge.n	800be94 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800be3e:	2300      	movs	r3, #0
 800be40:	9303      	str	r3, [sp, #12]
 800be42:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800be46:	429d      	cmp	r5, r3
 800be48:	d004      	beq.n	800be54 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800be4a:	f242 030b 	movw	r3, #8203	; 0x200b
 800be4e:	429d      	cmp	r5, r3
 800be50:	bf18      	it	ne
 800be52:	462f      	movne	r7, r5
 800be54:	ab03      	add	r3, sp, #12
 800be56:	4642      	mov	r2, r8
 800be58:	4659      	mov	r1, fp
 800be5a:	4648      	mov	r0, r9
 800be5c:	f002 ff6c 	bl	800ed38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800be60:	4605      	mov	r5, r0
 800be62:	b1b8      	cbz	r0, 800be94 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800be64:	280a      	cmp	r0, #10
 800be66:	d015      	beq.n	800be94 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800be68:	9a03      	ldr	r2, [sp, #12]
 800be6a:	b18a      	cbz	r2, 800be90 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800be6c:	7b50      	ldrb	r0, [r2, #13]
 800be6e:	7a93      	ldrb	r3, [r2, #10]
 800be70:	8895      	ldrh	r5, [r2, #4]
 800be72:	0040      	lsls	r0, r0, #1
 800be74:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800be78:	4303      	orrs	r3, r0
 800be7a:	9301      	str	r3, [sp, #4]
 800be7c:	f8d8 3000 	ldr.w	r3, [r8]
 800be80:	4639      	mov	r1, r7
 800be82:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800be84:	4640      	mov	r0, r8
 800be86:	4798      	blx	r3
 800be88:	9b01      	ldr	r3, [sp, #4]
 800be8a:	4418      	add	r0, r3
 800be8c:	4406      	add	r6, r0
 800be8e:	b2b6      	uxth	r6, r6
 800be90:	3401      	adds	r4, #1
 800be92:	e7d2      	b.n	800be3a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800be94:	4630      	mov	r0, r6
 800be96:	b005      	add	sp, #20
 800be98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800be9c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800be9c:	2a02      	cmp	r2, #2
 800be9e:	b530      	push	{r4, r5, lr}
 800bea0:	d011      	beq.n	800bec6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800bea2:	2a03      	cmp	r2, #3
 800bea4:	d01c      	beq.n	800bee0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800bea6:	2a01      	cmp	r2, #1
 800bea8:	d10c      	bne.n	800bec4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800beaa:	888b      	ldrh	r3, [r1, #4]
 800beac:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800beb0:	8801      	ldrh	r1, [r0, #0]
 800beb2:	8844      	ldrh	r4, [r0, #2]
 800beb4:	8004      	strh	r4, [r0, #0]
 800beb6:	1a9b      	subs	r3, r3, r2
 800beb8:	1a5b      	subs	r3, r3, r1
 800beba:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800bebe:	8043      	strh	r3, [r0, #2]
 800bec0:	8081      	strh	r1, [r0, #4]
 800bec2:	80c2      	strh	r2, [r0, #6]
 800bec4:	bd30      	pop	{r4, r5, pc}
 800bec6:	88cb      	ldrh	r3, [r1, #6]
 800bec8:	88c2      	ldrh	r2, [r0, #6]
 800beca:	1a9b      	subs	r3, r3, r2
 800becc:	8842      	ldrh	r2, [r0, #2]
 800bece:	1a9b      	subs	r3, r3, r2
 800bed0:	888a      	ldrh	r2, [r1, #4]
 800bed2:	8881      	ldrh	r1, [r0, #4]
 800bed4:	8043      	strh	r3, [r0, #2]
 800bed6:	1a52      	subs	r2, r2, r1
 800bed8:	8801      	ldrh	r1, [r0, #0]
 800beda:	1a52      	subs	r2, r2, r1
 800bedc:	8002      	strh	r2, [r0, #0]
 800bede:	e7f1      	b.n	800bec4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800bee0:	88cb      	ldrh	r3, [r1, #6]
 800bee2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800bee6:	8841      	ldrh	r1, [r0, #2]
 800bee8:	f9b0 5000 	ldrsh.w	r5, [r0]
 800beec:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800bef0:	8045      	strh	r5, [r0, #2]
 800bef2:	1a9b      	subs	r3, r3, r2
 800bef4:	1a5b      	subs	r3, r3, r1
 800bef6:	8003      	strh	r3, [r0, #0]
 800bef8:	8082      	strh	r2, [r0, #4]
 800befa:	80c4      	strh	r4, [r0, #6]
 800befc:	e7e2      	b.n	800bec4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800befe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800befe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bf02:	b09f      	sub	sp, #124	; 0x7c
 800bf04:	9116      	str	r1, [sp, #88]	; 0x58
 800bf06:	9317      	str	r3, [sp, #92]	; 0x5c
 800bf08:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800bf0a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800bf0c:	8809      	ldrh	r1, [r1, #0]
 800bf0e:	889b      	ldrh	r3, [r3, #4]
 800bf10:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800bf14:	9212      	str	r2, [sp, #72]	; 0x48
 800bf16:	440b      	add	r3, r1
 800bf18:	b21b      	sxth	r3, r3
 800bf1a:	9310      	str	r3, [sp, #64]	; 0x40
 800bf1c:	f8d8 3000 	ldr.w	r3, [r8]
 800bf20:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800bf24:	7a59      	ldrb	r1, [r3, #9]
 800bf26:	7a1b      	ldrb	r3, [r3, #8]
 800bf28:	9315      	str	r3, [sp, #84]	; 0x54
 800bf2a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800bf2c:	9011      	str	r0, [sp, #68]	; 0x44
 800bf2e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800bf32:	9114      	str	r1, [sp, #80]	; 0x50
 800bf34:	f9b3 5000 	ldrsh.w	r5, [r3]
 800bf38:	2a00      	cmp	r2, #0
 800bf3a:	d067      	beq.n	800c00c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800bf3c:	f898 3010 	ldrb.w	r3, [r8, #16]
 800bf40:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800bf42:	2b04      	cmp	r3, #4
 800bf44:	bf14      	ite	ne
 800bf46:	2301      	movne	r3, #1
 800bf48:	2302      	moveq	r3, #2
 800bf4a:	4413      	add	r3, r2
 800bf4c:	f04f 0900 	mov.w	r9, #0
 800bf50:	930f      	str	r3, [sp, #60]	; 0x3c
 800bf52:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800bf56:	464c      	mov	r4, r9
 800bf58:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800bf5c:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800bf60:	4293      	cmp	r3, r2
 800bf62:	f280 808c 	bge.w	800c07e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800bf66:	2300      	movs	r3, #0
 800bf68:	931c      	str	r3, [sp, #112]	; 0x70
 800bf6a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bf6e:	429c      	cmp	r4, r3
 800bf70:	d006      	beq.n	800bf80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800bf72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bf74:	f242 020b 	movw	r2, #8203	; 0x200b
 800bf78:	4294      	cmp	r4, r2
 800bf7a:	bf18      	it	ne
 800bf7c:	4623      	movne	r3, r4
 800bf7e:	930d      	str	r3, [sp, #52]	; 0x34
 800bf80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bf82:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800bf84:	f8d8 2000 	ldr.w	r2, [r8]
 800bf88:	428b      	cmp	r3, r1
 800bf8a:	db41      	blt.n	800c010 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800bf8c:	6813      	ldr	r3, [r2, #0]
 800bf8e:	4610      	mov	r0, r2
 800bf90:	695b      	ldr	r3, [r3, #20]
 800bf92:	4798      	blx	r3
 800bf94:	4604      	mov	r4, r0
 800bf96:	f8d8 0000 	ldr.w	r0, [r8]
 800bf9a:	6803      	ldr	r3, [r0, #0]
 800bf9c:	aa1d      	add	r2, sp, #116	; 0x74
 800bf9e:	689e      	ldr	r6, [r3, #8]
 800bfa0:	4621      	mov	r1, r4
 800bfa2:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800bfa6:	47b0      	blx	r6
 800bfa8:	901c      	str	r0, [sp, #112]	; 0x70
 800bfaa:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bfae:	429c      	cmp	r4, r3
 800bfb0:	f000 80e9 	beq.w	800c186 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bfb4:	f242 030b 	movw	r3, #8203	; 0x200b
 800bfb8:	429c      	cmp	r4, r3
 800bfba:	f000 80e4 	beq.w	800c186 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bfbe:	2c00      	cmp	r4, #0
 800bfc0:	f000 80f6 	beq.w	800c1b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800bfc4:	2c0a      	cmp	r4, #10
 800bfc6:	d060      	beq.n	800c08a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800bfc8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800bfca:	b36a      	cbz	r2, 800c028 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800bfcc:	8894      	ldrh	r4, [r2, #4]
 800bfce:	f1bb 0f00 	cmp.w	fp, #0
 800bfd2:	d03b      	beq.n	800c04c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800bfd4:	f892 900d 	ldrb.w	r9, [r2, #13]
 800bfd8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800bfdc:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800bfe0:	f892 900a 	ldrb.w	r9, [r2, #10]
 800bfe4:	f1bb 0f01 	cmp.w	fp, #1
 800bfe8:	ea49 0903 	orr.w	r9, r9, r3
 800bfec:	d134      	bne.n	800c058 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800bfee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bff0:	eba5 0509 	sub.w	r5, r5, r9
 800bff4:	2b00      	cmp	r3, #0
 800bff6:	d14f      	bne.n	800c098 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800bff8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800bffa:	eb09 0305 	add.w	r3, r9, r5
 800bffe:	4413      	add	r3, r2
 800c000:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800c002:	f9b2 2000 	ldrsh.w	r2, [r2]
 800c006:	4293      	cmp	r3, r2
 800c008:	da51      	bge.n	800c0ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800c00a:	e038      	b.n	800c07e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800c00c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800c00e:	e79d      	b.n	800bf4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800c010:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800c014:	9301      	str	r3, [sp, #4]
 800c016:	ab1d      	add	r3, sp, #116	; 0x74
 800c018:	9300      	str	r3, [sp, #0]
 800c01a:	4659      	mov	r1, fp
 800c01c:	ab1c      	add	r3, sp, #112	; 0x70
 800c01e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800c020:	f002 fee2 	bl	800ede8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800c024:	4604      	mov	r4, r0
 800c026:	e7c0      	b.n	800bfaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800c028:	f8d8 0000 	ldr.w	r0, [r8]
 800c02c:	6803      	ldr	r3, [r0, #0]
 800c02e:	691b      	ldr	r3, [r3, #16]
 800c030:	4798      	blx	r3
 800c032:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c036:	4298      	cmp	r0, r3
 800c038:	f000 80a5 	beq.w	800c186 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c03c:	f242 030b 	movw	r3, #8203	; 0x200b
 800c040:	4298      	cmp	r0, r3
 800c042:	f000 80a0 	beq.w	800c186 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c046:	f1bb 0f00 	cmp.w	fp, #0
 800c04a:	d100      	bne.n	800c04e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800c04c:	444d      	add	r5, r9
 800c04e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800c050:	2a00      	cmp	r2, #0
 800c052:	d1bf      	bne.n	800bfd4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800c054:	4691      	mov	r9, r2
 800c056:	e096      	b.n	800c186 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c058:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c05a:	2b00      	cmp	r3, #0
 800c05c:	f000 80aa 	beq.w	800c1b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800c060:	f1bb 0f00 	cmp.w	fp, #0
 800c064:	d118      	bne.n	800c098 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800c066:	f8d8 0000 	ldr.w	r0, [r8]
 800c06a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800c06c:	6803      	ldr	r3, [r0, #0]
 800c06e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c070:	4798      	blx	r3
 800c072:	4405      	add	r5, r0
 800c074:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800c076:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800c078:	1aeb      	subs	r3, r5, r3
 800c07a:	4293      	cmp	r3, r2
 800c07c:	dd17      	ble.n	800c0ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800c07e:	2c00      	cmp	r4, #0
 800c080:	f000 8096 	beq.w	800c1b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800c084:	2c0a      	cmp	r4, #10
 800c086:	f040 8084 	bne.w	800c192 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800c08a:	240a      	movs	r4, #10
 800c08c:	fab4 f084 	clz	r0, r4
 800c090:	0940      	lsrs	r0, r0, #5
 800c092:	b01f      	add	sp, #124	; 0x7c
 800c094:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c098:	f8d8 0000 	ldr.w	r0, [r8]
 800c09c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800c09e:	6803      	ldr	r3, [r0, #0]
 800c0a0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c0a2:	4798      	blx	r3
 800c0a4:	f1bb 0f01 	cmp.w	fp, #1
 800c0a8:	eba5 0500 	sub.w	r5, r5, r0
 800c0ac:	d0a4      	beq.n	800bff8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800c0ae:	981c      	ldr	r0, [sp, #112]	; 0x70
 800c0b0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c0b2:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800c0b6:	f9b3 6000 	ldrsh.w	r6, [r3]
 800c0ba:	7b43      	ldrb	r3, [r0, #13]
 800c0bc:	015b      	lsls	r3, r3, #5
 800c0be:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c0c2:	7983      	ldrb	r3, [r0, #6]
 800c0c4:	4429      	add	r1, r5
 800c0c6:	4313      	orrs	r3, r2
 800c0c8:	440b      	add	r3, r1
 800c0ca:	42b3      	cmp	r3, r6
 800c0cc:	db5b      	blt.n	800c186 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c0ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c0d0:	4299      	cmp	r1, r3
 800c0d2:	da58      	bge.n	800c186 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c0d4:	f8d8 0000 	ldr.w	r0, [r8]
 800c0d8:	6803      	ldr	r3, [r0, #0]
 800c0da:	42ae      	cmp	r6, r5
 800c0dc:	bfc8      	it	gt
 800c0de:	1b76      	subgt	r6, r6, r5
 800c0e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c0e2:	bfcc      	ite	gt
 800c0e4:	b2b6      	uxthgt	r6, r6
 800c0e6:	2600      	movle	r6, #0
 800c0e8:	4798      	blx	r3
 800c0ea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800c0ec:	7b5a      	ldrb	r2, [r3, #13]
 800c0ee:	00d1      	lsls	r1, r2, #3
 800c0f0:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800c0f4:	7a19      	ldrb	r1, [r3, #8]
 800c0f6:	4339      	orrs	r1, r7
 800c0f8:	0657      	lsls	r7, r2, #25
 800c0fa:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800c0fc:	bf44      	itt	mi
 800c0fe:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800c102:	b209      	sxthmi	r1, r1
 800c104:	19c7      	adds	r7, r0, r7
 800c106:	1a7f      	subs	r7, r7, r1
 800c108:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800c10a:	b2bf      	uxth	r7, r7
 800c10c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800c110:	fa0f fa87 	sxth.w	sl, r7
 800c114:	4551      	cmp	r1, sl
 800c116:	dd3a      	ble.n	800c18e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c118:	0112      	lsls	r2, r2, #4
 800c11a:	79d8      	ldrb	r0, [r3, #7]
 800c11c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800c120:	4302      	orrs	r2, r0
 800c122:	4492      	add	sl, r2
 800c124:	4551      	cmp	r1, sl
 800c126:	dc2e      	bgt.n	800c186 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c128:	1bcf      	subs	r7, r1, r7
 800c12a:	b2bf      	uxth	r7, r7
 800c12c:	468a      	mov	sl, r1
 800c12e:	9319      	str	r3, [sp, #100]	; 0x64
 800c130:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c132:	f8d8 0000 	ldr.w	r0, [r8]
 800c136:	681a      	ldr	r2, [r3, #0]
 800c138:	6801      	ldr	r1, [r0, #0]
 800c13a:	6c53      	ldr	r3, [r2, #68]	; 0x44
 800c13c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800c13e:	9313      	str	r3, [sp, #76]	; 0x4c
 800c140:	9218      	str	r2, [sp, #96]	; 0x60
 800c142:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800c144:	4788      	blx	r1
 800c146:	f898 1006 	ldrb.w	r1, [r8, #6]
 800c14a:	910b      	str	r1, [sp, #44]	; 0x2c
 800c14c:	f898 100e 	ldrb.w	r1, [r8, #14]
 800c150:	910a      	str	r1, [sp, #40]	; 0x28
 800c152:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800c156:	9109      	str	r1, [sp, #36]	; 0x24
 800c158:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c15a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800c15e:	9305      	str	r3, [sp, #20]
 800c160:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c162:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800c164:	9206      	str	r2, [sp, #24]
 800c166:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800c16a:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800c16e:	e9cd a601 	strd	sl, r6, [sp, #4]
 800c172:	442e      	add	r6, r5
 800c174:	b236      	sxth	r6, r6
 800c176:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800c178:	9600      	str	r6, [sp, #0]
 800c17a:	681a      	ldr	r2, [r3, #0]
 800c17c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800c17e:	685b      	ldr	r3, [r3, #4]
 800c180:	9811      	ldr	r0, [sp, #68]	; 0x44
 800c182:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800c184:	47b0      	blx	r6
 800c186:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c188:	3301      	adds	r3, #1
 800c18a:	930e      	str	r3, [sp, #56]	; 0x38
 800c18c:	e6e6      	b.n	800bf5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800c18e:	2700      	movs	r7, #0
 800c190:	e7cd      	b.n	800c12e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800c192:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800c194:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800c196:	3501      	adds	r5, #1
 800c198:	429d      	cmp	r5, r3
 800c19a:	f6bf af77 	bge.w	800c08c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800c19e:	4659      	mov	r1, fp
 800c1a0:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800c1a2:	f7f6 fe93 	bl	8002ecc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c1a6:	4604      	mov	r4, r0
 800c1a8:	b110      	cbz	r0, 800c1b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800c1aa:	280a      	cmp	r0, #10
 800c1ac:	d1f2      	bne.n	800c194 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800c1ae:	e76c      	b.n	800c08a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800c1b0:	2400      	movs	r4, #0
 800c1b2:	e76b      	b.n	800c08c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800c1b4:	f1bb 0f00 	cmp.w	fp, #0
 800c1b8:	f43f af5c 	beq.w	800c074 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800c1bc:	e777      	b.n	800c0ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800c1be <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800c1be:	b530      	push	{r4, r5, lr}
 800c1c0:	8a44      	ldrh	r4, [r0, #18]
 800c1c2:	8ac5      	ldrh	r5, [r0, #22]
 800c1c4:	82c3      	strh	r3, [r0, #22]
 800c1c6:	442c      	add	r4, r5
 800c1c8:	1ae4      	subs	r4, r4, r3
 800c1ca:	8244      	strh	r4, [r0, #18]
 800c1cc:	8b03      	ldrh	r3, [r0, #24]
 800c1ce:	8a84      	ldrh	r4, [r0, #20]
 800c1d0:	4422      	add	r2, r4
 800c1d2:	440c      	add	r4, r1
 800c1d4:	1a59      	subs	r1, r3, r1
 800c1d6:	8342      	strh	r2, [r0, #26]
 800c1d8:	8284      	strh	r4, [r0, #20]
 800c1da:	8301      	strh	r1, [r0, #24]
 800c1dc:	bd30      	pop	{r4, r5, pc}

0800c1de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800c1de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c1e2:	7a43      	ldrb	r3, [r0, #9]
 800c1e4:	1eda      	subs	r2, r3, #3
 800c1e6:	b087      	sub	sp, #28
 800c1e8:	4604      	mov	r4, r0
 800c1ea:	b2d2      	uxtb	r2, r2
 800c1ec:	460f      	mov	r7, r1
 800c1ee:	2900      	cmp	r1, #0
 800c1f0:	d036      	beq.n	800c260 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800c1f2:	2a01      	cmp	r2, #1
 800c1f4:	d932      	bls.n	800c25c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800c1f6:	1e58      	subs	r0, r3, #1
 800c1f8:	f1d0 0b00 	rsbs	fp, r0, #0
 800c1fc:	eb4b 0b00 	adc.w	fp, fp, r0
 800c200:	1e99      	subs	r1, r3, #2
 800c202:	424b      	negs	r3, r1
 800c204:	414b      	adcs	r3, r1
 800c206:	9303      	str	r3, [sp, #12]
 800c208:	2300      	movs	r3, #0
 800c20a:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800c20e:	2500      	movs	r5, #0
 800c210:	8265      	strh	r5, [r4, #18]
 800c212:	82a5      	strh	r5, [r4, #20]
 800c214:	46a9      	mov	r9, r5
 800c216:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800c21a:	2300      	movs	r3, #0
 800c21c:	9305      	str	r3, [sp, #20]
 800c21e:	8823      	ldrh	r3, [r4, #0]
 800c220:	2b20      	cmp	r3, #32
 800c222:	d02b      	beq.n	800c27c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800c224:	eba3 020a 	sub.w	r2, r3, sl
 800c228:	4256      	negs	r6, r2
 800c22a:	4156      	adcs	r6, r2
 800c22c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800c230:	4293      	cmp	r3, r2
 800c232:	d004      	beq.n	800c23e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800c234:	4553      	cmp	r3, sl
 800c236:	bf16      	itet	ne
 800c238:	4699      	movne	r9, r3
 800c23a:	2601      	moveq	r6, #1
 800c23c:	2600      	movne	r6, #0
 800c23e:	ab05      	add	r3, sp, #20
 800c240:	68e2      	ldr	r2, [r4, #12]
 800c242:	7a21      	ldrb	r1, [r4, #8]
 800c244:	6860      	ldr	r0, [r4, #4]
 800c246:	f002 fd77 	bl	800ed38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c24a:	8020      	strh	r0, [r4, #0]
 800c24c:	b9c8      	cbnz	r0, 800c282 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800c24e:	8b22      	ldrh	r2, [r4, #24]
 800c250:	2300      	movs	r3, #0
 800c252:	4611      	mov	r1, r2
 800c254:	4620      	mov	r0, r4
 800c256:	f7ff ffb2 	bl	800c1be <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c25a:	e066      	b.n	800c32a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800c25c:	468b      	mov	fp, r1
 800c25e:	e7cf      	b.n	800c200 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800c260:	3b01      	subs	r3, #1
 800c262:	2a01      	cmp	r2, #1
 800c264:	bf8c      	ite	hi
 800c266:	2200      	movhi	r2, #0
 800c268:	2201      	movls	r2, #1
 800c26a:	2b01      	cmp	r3, #1
 800c26c:	bf8c      	ite	hi
 800c26e:	2300      	movhi	r3, #0
 800c270:	2301      	movls	r3, #1
 800c272:	9202      	str	r2, [sp, #8]
 800c274:	9301      	str	r3, [sp, #4]
 800c276:	9103      	str	r1, [sp, #12]
 800c278:	468b      	mov	fp, r1
 800c27a:	e7c8      	b.n	800c20e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800c27c:	4699      	mov	r9, r3
 800c27e:	2601      	movs	r6, #1
 800c280:	e7dd      	b.n	800c23e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800c282:	8ae3      	ldrh	r3, [r4, #22]
 800c284:	280a      	cmp	r0, #10
 800c286:	f103 0301 	add.w	r3, r3, #1
 800c28a:	82e3      	strh	r3, [r4, #22]
 800c28c:	d0df      	beq.n	800c24e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800c28e:	9a05      	ldr	r2, [sp, #20]
 800c290:	bb42      	cbnz	r2, 800c2e4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800c292:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c296:	4298      	cmp	r0, r3
 800c298:	d001      	beq.n	800c29e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800c29a:	4550      	cmp	r0, sl
 800c29c:	d1bd      	bne.n	800c21a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c29e:	8823      	ldrh	r3, [r4, #0]
 800c2a0:	8b21      	ldrh	r1, [r4, #24]
 800c2a2:	2b20      	cmp	r3, #32
 800c2a4:	d001      	beq.n	800c2aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800c2a6:	4553      	cmp	r3, sl
 800c2a8:	d131      	bne.n	800c30e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800c2aa:	2e00      	cmp	r6, #0
 800c2ac:	bf0a      	itet	eq
 800c2ae:	460d      	moveq	r5, r1
 800c2b0:	4630      	movne	r0, r6
 800c2b2:	2001      	moveq	r0, #1
 800c2b4:	440a      	add	r2, r1
 800c2b6:	8aa3      	ldrh	r3, [r4, #20]
 800c2b8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800c2bc:	b292      	uxth	r2, r2
 800c2be:	8322      	strh	r2, [r4, #24]
 800c2c0:	4413      	add	r3, r2
 800c2c2:	2f00      	cmp	r7, #0
 800c2c4:	d03a      	beq.n	800c33c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800c2c6:	f1bb 0f00 	cmp.w	fp, #0
 800c2ca:	d102      	bne.n	800c2d2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800c2cc:	9903      	ldr	r1, [sp, #12]
 800c2ce:	b301      	cbz	r1, 800c312 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800c2d0:	b1f8      	cbz	r0, 800c312 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800c2d2:	8ba1      	ldrh	r1, [r4, #28]
 800c2d4:	4419      	add	r1, r3
 800c2d6:	458c      	cmp	ip, r1
 800c2d8:	da2a      	bge.n	800c330 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800c2da:	8a61      	ldrh	r1, [r4, #18]
 800c2dc:	b341      	cbz	r1, 800c330 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800c2de:	4563      	cmp	r3, ip
 800c2e0:	dd9b      	ble.n	800c21a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c2e2:	e01c      	b.n	800c31e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800c2e4:	8893      	ldrh	r3, [r2, #4]
 800c2e6:	8023      	strh	r3, [r4, #0]
 800c2e8:	f892 800d 	ldrb.w	r8, [r2, #13]
 800c2ec:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800c2f0:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800c2f4:	f892 800a 	ldrb.w	r8, [r2, #10]
 800c2f8:	ea48 0800 	orr.w	r8, r8, r0
 800c2fc:	68e0      	ldr	r0, [r4, #12]
 800c2fe:	6803      	ldr	r3, [r0, #0]
 800c300:	4649      	mov	r1, r9
 800c302:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c304:	4798      	blx	r3
 800c306:	eb08 0200 	add.w	r2, r8, r0
 800c30a:	b292      	uxth	r2, r2
 800c30c:	e7c7      	b.n	800c29e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800c30e:	2000      	movs	r0, #0
 800c310:	e7d0      	b.n	800c2b4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800c312:	4563      	cmp	r3, ip
 800c314:	dd81      	ble.n	800c21a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c316:	8a63      	ldrh	r3, [r4, #18]
 800c318:	2b00      	cmp	r3, #0
 800c31a:	f43f af7e 	beq.w	800c21a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c31e:	2301      	movs	r3, #1
 800c320:	77a3      	strb	r3, [r4, #30]
 800c322:	8ba2      	ldrh	r2, [r4, #28]
 800c324:	8b63      	ldrh	r3, [r4, #26]
 800c326:	4413      	add	r3, r2
 800c328:	8363      	strh	r3, [r4, #26]
 800c32a:	b007      	add	sp, #28
 800c32c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c330:	2300      	movs	r3, #0
 800c332:	4611      	mov	r1, r2
 800c334:	4620      	mov	r0, r4
 800c336:	f7ff ff42 	bl	800c1be <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c33a:	e76e      	b.n	800c21a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c33c:	4563      	cmp	r3, ip
 800c33e:	dd14      	ble.n	800c36a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800c340:	9b02      	ldr	r3, [sp, #8]
 800c342:	b113      	cbz	r3, 800c34a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800c344:	2301      	movs	r3, #1
 800c346:	460a      	mov	r2, r1
 800c348:	e783      	b.n	800c252 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800c34a:	9b01      	ldr	r3, [sp, #4]
 800c34c:	2b00      	cmp	r3, #0
 800c34e:	f43f af64 	beq.w	800c21a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c352:	2800      	cmp	r0, #0
 800c354:	f47f af61 	bne.w	800c21a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c358:	b116      	cbz	r6, 800c360 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800c35a:	2301      	movs	r3, #1
 800c35c:	462a      	mov	r2, r5
 800c35e:	e779      	b.n	800c254 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800c360:	8a63      	ldrh	r3, [r4, #18]
 800c362:	2b00      	cmp	r3, #0
 800c364:	f43f af59 	beq.w	800c21a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c368:	e7df      	b.n	800c32a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800c36a:	2800      	cmp	r0, #0
 800c36c:	f47f af55 	bne.w	800c21a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c370:	2e00      	cmp	r6, #0
 800c372:	f43f af52 	beq.w	800c21a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c376:	2301      	movs	r3, #1
 800c378:	462a      	mov	r2, r5
 800c37a:	e7db      	b.n	800c334 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800c37c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800c37c:	b530      	push	{r4, r5, lr}
 800c37e:	4605      	mov	r5, r0
 800c380:	b08b      	sub	sp, #44	; 0x2c
 800c382:	b191      	cbz	r1, 800c3aa <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800c384:	e9cd 3100 	strd	r3, r1, [sp]
 800c388:	4613      	mov	r3, r2
 800c38a:	4601      	mov	r1, r0
 800c38c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800c390:	a802      	add	r0, sp, #8
 800c392:	f7ff fd0d 	bl	800bdb0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800c396:	2401      	movs	r4, #1
 800c398:	2100      	movs	r1, #0
 800c39a:	a802      	add	r0, sp, #8
 800c39c:	f7ff ff1f 	bl	800c1de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c3a0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800c3a4:	b163      	cbz	r3, 800c3c0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800c3a6:	3401      	adds	r4, #1
 800c3a8:	e7f6      	b.n	800c398 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800c3aa:	f002 fdbd 	bl	800ef28 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c3ae:	2401      	movs	r4, #1
 800c3b0:	280a      	cmp	r0, #10
 800c3b2:	4628      	mov	r0, r5
 800c3b4:	bf08      	it	eq
 800c3b6:	3401      	addeq	r4, #1
 800c3b8:	f002 fdb6 	bl	800ef28 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c3bc:	2800      	cmp	r0, #0
 800c3be:	d1f7      	bne.n	800c3b0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800c3c0:	b2a0      	uxth	r0, r4
 800c3c2:	b00b      	add	sp, #44	; 0x2c
 800c3c4:	bd30      	pop	{r4, r5, pc}

0800c3c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800c3c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3ca:	b0db      	sub	sp, #364	; 0x16c
 800c3cc:	4689      	mov	r9, r1
 800c3ce:	f8dd a190 	ldr.w	sl, [sp, #400]	; 0x190
 800c3d2:	900a      	str	r0, [sp, #40]	; 0x28
 800c3d4:	461c      	mov	r4, r3
 800c3d6:	f1ba 0f00 	cmp.w	sl, #0
 800c3da:	f000 80a5 	beq.w	800c528 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c3de:	681b      	ldr	r3, [r3, #0]
 800c3e0:	2b00      	cmp	r3, #0
 800c3e2:	f000 80a1 	beq.w	800c528 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c3e6:	7ba3      	ldrb	r3, [r4, #14]
 800c3e8:	2b00      	cmp	r3, #0
 800c3ea:	f000 809d 	beq.w	800c528 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c3ee:	6810      	ldr	r0, [r2, #0]
 800c3f0:	6851      	ldr	r1, [r2, #4]
 800c3f2:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800c3f6:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800c3fa:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 800c3fe:	4643      	mov	r3, r8
 800c400:	c303      	stmia	r3!, {r0, r1}
 800c402:	2500      	movs	r5, #0
 800c404:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800c408:	79a2      	ldrb	r2, [r4, #6]
 800c40a:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c40e:	a90e      	add	r1, sp, #56	; 0x38
 800c410:	4640      	mov	r0, r8
 800c412:	950e      	str	r5, [sp, #56]	; 0x38
 800c414:	f7ff fd42 	bl	800be9c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c418:	a90e      	add	r1, sp, #56	; 0x38
 800c41a:	4608      	mov	r0, r1
 800c41c:	79a2      	ldrb	r2, [r4, #6]
 800c41e:	af18      	add	r7, sp, #96	; 0x60
 800c420:	f7ff fd3c 	bl	800be9c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c424:	4638      	mov	r0, r7
 800c426:	f002 f948 	bl	800e6ba <_ZN8touchgfx12TextProviderC1Ev>
 800c42a:	6820      	ldr	r0, [r4, #0]
 800c42c:	6803      	ldr	r3, [r0, #0]
 800c42e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c430:	4798      	blx	r3
 800c432:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800c434:	4603      	mov	r3, r0
 800c436:	4651      	mov	r1, sl
 800c438:	4638      	mov	r0, r7
 800c43a:	f002 f983 	bl	800e744 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c43e:	6820      	ldr	r0, [r4, #0]
 800c440:	7923      	ldrb	r3, [r4, #4]
 800c442:	9308      	str	r3, [sp, #32]
 800c444:	6803      	ldr	r3, [r0, #0]
 800c446:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c448:	4798      	blx	r3
 800c44a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c44e:	181e      	adds	r6, r3, r0
 800c450:	42ae      	cmp	r6, r5
 800c452:	dd06      	ble.n	800c462 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 800c454:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800c458:	4282      	cmp	r2, r0
 800c45a:	bfa4      	itt	ge
 800c45c:	189d      	addge	r5, r3, r2
 800c45e:	fb95 f5f6 	sdivge	r5, r5, r6
 800c462:	a82e      	add	r0, sp, #184	; 0xb8
 800c464:	f002 f929 	bl	800e6ba <_ZN8touchgfx12TextProviderC1Ev>
 800c468:	7c23      	ldrb	r3, [r4, #16]
 800c46a:	b14b      	cbz	r3, 800c480 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 800c46c:	6820      	ldr	r0, [r4, #0]
 800c46e:	6803      	ldr	r3, [r0, #0]
 800c470:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c472:	4798      	blx	r3
 800c474:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800c476:	4603      	mov	r3, r0
 800c478:	4651      	mov	r1, sl
 800c47a:	a82e      	add	r0, sp, #184	; 0xb8
 800c47c:	f002 f962 	bl	800e744 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c480:	7c21      	ldrb	r1, [r4, #16]
 800c482:	9101      	str	r1, [sp, #4]
 800c484:	6821      	ldr	r1, [r4, #0]
 800c486:	7963      	ldrb	r3, [r4, #5]
 800c488:	9100      	str	r1, [sp, #0]
 800c48a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800c48e:	a92e      	add	r1, sp, #184	; 0xb8
 800c490:	a810      	add	r0, sp, #64	; 0x40
 800c492:	f7ff fc8d 	bl	800bdb0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800c496:	7c23      	ldrb	r3, [r4, #16]
 800c498:	b9bb      	cbnz	r3, 800c4ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x104>
 800c49a:	fa1f fa86 	uxth.w	sl, r6
 800c49e:	2d00      	cmp	r5, #0
 800c4a0:	dd45      	ble.n	800c52e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800c4a2:	4638      	mov	r0, r7
 800c4a4:	f002 fd40 	bl	800ef28 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c4a8:	2800      	cmp	r0, #0
 800c4aa:	d03d      	beq.n	800c528 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c4ac:	280a      	cmp	r0, #10
 800c4ae:	d1f6      	bne.n	800c49e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800c4b0:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800c4b4:	4453      	add	r3, sl
 800c4b6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800c4ba:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c4be:	eba3 030a 	sub.w	r3, r3, sl
 800c4c2:	3d01      	subs	r5, #1
 800c4c4:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c4c8:	e7e9      	b.n	800c49e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800c4ca:	0073      	lsls	r3, r6, #1
 800c4cc:	9309      	str	r3, [sp, #36]	; 0x24
 800c4ce:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800c4d2:	fa1f fa86 	uxth.w	sl, r6
 800c4d6:	2d00      	cmp	r5, #0
 800c4d8:	dd29      	ble.n	800c52e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800c4da:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800c4de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c4e0:	428b      	cmp	r3, r1
 800c4e2:	bfd4      	ite	le
 800c4e4:	2100      	movle	r1, #0
 800c4e6:	2101      	movgt	r1, #1
 800c4e8:	a810      	add	r0, sp, #64	; 0x40
 800c4ea:	f7ff fe78 	bl	800c1de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c4ee:	f8bd 3052 	ldrh.w	r3, [sp, #82]	; 0x52
 800c4f2:	3b01      	subs	r3, #1
 800c4f4:	b29b      	uxth	r3, r3
 800c4f6:	455b      	cmp	r3, fp
 800c4f8:	930b      	str	r3, [sp, #44]	; 0x2c
 800c4fa:	d005      	beq.n	800c508 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800c4fc:	7961      	ldrb	r1, [r4, #5]
 800c4fe:	4638      	mov	r0, r7
 800c500:	f7f6 fce4 	bl	8002ecc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c504:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c506:	e7f4      	b.n	800c4f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12c>
 800c508:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800c50c:	4453      	add	r3, sl
 800c50e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800c512:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c516:	eba3 030a 	sub.w	r3, r3, sl
 800c51a:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c51e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c522:	3d01      	subs	r5, #1
 800c524:	2b00      	cmp	r3, #0
 800c526:	d1d6      	bne.n	800c4d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x110>
 800c528:	b05b      	add	sp, #364	; 0x16c
 800c52a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c52e:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800c532:	ad44      	add	r5, sp, #272	; 0x110
 800c534:	f04f 0b00 	mov.w	fp, #0
 800c538:	7c23      	ldrb	r3, [r4, #16]
 800c53a:	2b00      	cmp	r3, #0
 800c53c:	d067      	beq.n	800c60e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800c53e:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800c542:	458a      	cmp	sl, r1
 800c544:	bfd4      	ite	le
 800c546:	2100      	movle	r1, #0
 800c548:	2101      	movgt	r1, #1
 800c54a:	a810      	add	r0, sp, #64	; 0x40
 800c54c:	f7ff fe47 	bl	800c1de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c550:	9b08      	ldr	r3, [sp, #32]
 800c552:	2b00      	cmp	r3, #0
 800c554:	d056      	beq.n	800c604 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800c556:	7c23      	ldrb	r3, [r4, #16]
 800c558:	9309      	str	r3, [sp, #36]	; 0x24
 800c55a:	2258      	movs	r2, #88	; 0x58
 800c55c:	4639      	mov	r1, r7
 800c55e:	4628      	mov	r0, r5
 800c560:	f00e ffd2 	bl	801b508 <memcpy>
 800c564:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c566:	2b00      	cmp	r3, #0
 800c568:	d059      	beq.n	800c61e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 800c56a:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 800c56e:	7922      	ldrb	r2, [r4, #4]
 800c570:	2a01      	cmp	r2, #1
 800c572:	d13d      	bne.n	800c5f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x22a>
 800c574:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 800c578:	1ac0      	subs	r0, r0, r3
 800c57a:	2302      	movs	r3, #2
 800c57c:	fb90 f0f3 	sdiv	r0, r0, r3
 800c580:	b200      	sxth	r0, r0
 800c582:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800c586:	4418      	add	r0, r3
 800c588:	7c23      	ldrb	r3, [r4, #16]
 800c58a:	f8ad 0110 	strh.w	r0, [sp, #272]	; 0x110
 800c58e:	2b00      	cmp	r3, #0
 800c590:	d03a      	beq.n	800c608 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800c592:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 800c596:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 800c59a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 800c59e:	9500      	str	r5, [sp, #0]
 800c5a0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800c5a4:	e9cd b703 	strd	fp, r7, [sp, #12]
 800c5a8:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800c5ac:	464a      	mov	r2, r9
 800c5ae:	2100      	movs	r1, #0
 800c5b0:	980a      	ldr	r0, [sp, #40]	; 0x28
 800c5b2:	f7ff fca4 	bl	800befe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800c5b6:	2800      	cmp	r0, #0
 800c5b8:	d1b6      	bne.n	800c528 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c5ba:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800c5be:	b2b2      	uxth	r2, r6
 800c5c0:	4611      	mov	r1, r2
 800c5c2:	4413      	add	r3, r2
 800c5c4:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800c5c8:	1a52      	subs	r2, r2, r1
 800c5ca:	7c21      	ldrb	r1, [r4, #16]
 800c5cc:	b21b      	sxth	r3, r3
 800c5ce:	b212      	sxth	r2, r2
 800c5d0:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800c5d4:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800c5d8:	b109      	cbz	r1, 800c5de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 800c5da:	42b2      	cmp	r2, r6
 800c5dc:	dba4      	blt.n	800c528 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c5de:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800c5e2:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800c5e6:	440a      	add	r2, r1
 800c5e8:	b212      	sxth	r2, r2
 800c5ea:	4293      	cmp	r3, r2
 800c5ec:	dda4      	ble.n	800c538 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x172>
 800c5ee:	e79b      	b.n	800c528 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c5f0:	2a02      	cmp	r2, #2
 800c5f2:	d105      	bne.n	800c600 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23a>
 800c5f4:	7be2      	ldrb	r2, [r4, #15]
 800c5f6:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 800c5fa:	1a80      	subs	r0, r0, r2
 800c5fc:	1ac0      	subs	r0, r0, r3
 800c5fe:	e7bf      	b.n	800c580 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ba>
 800c600:	2000      	movs	r0, #0
 800c602:	e7be      	b.n	800c582 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800c604:	7be0      	ldrb	r0, [r4, #15]
 800c606:	e7bc      	b.n	800c582 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800c608:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c60c:	e7c3      	b.n	800c596 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d0>
 800c60e:	9b08      	ldr	r3, [sp, #32]
 800c610:	2b00      	cmp	r3, #0
 800c612:	d0f7      	beq.n	800c604 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800c614:	2258      	movs	r2, #88	; 0x58
 800c616:	4639      	mov	r1, r7
 800c618:	4628      	mov	r0, r5
 800c61a:	f00e ff75 	bl	801b508 <memcpy>
 800c61e:	2300      	movs	r3, #0
 800c620:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c624:	6821      	ldr	r1, [r4, #0]
 800c626:	4628      	mov	r0, r5
 800c628:	f7ff fbfc 	bl	800be24 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800c62c:	b203      	sxth	r3, r0
 800c62e:	e79e      	b.n	800c56e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a8>

0800c630 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800c630:	b510      	push	{r4, lr}
 800c632:	2b02      	cmp	r3, #2
 800c634:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c638:	d00b      	beq.n	800c652 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800c63a:	2b03      	cmp	r3, #3
 800c63c:	d00e      	beq.n	800c65c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800c63e:	2b01      	cmp	r3, #1
 800c640:	d001      	beq.n	800c646 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800c642:	1860      	adds	r0, r4, r1
 800c644:	bd10      	pop	{r4, pc}
 800c646:	8880      	ldrh	r0, [r0, #4]
 800c648:	4420      	add	r0, r4
 800c64a:	b200      	sxth	r0, r0
 800c64c:	1a80      	subs	r0, r0, r2
 800c64e:	3801      	subs	r0, #1
 800c650:	e7f8      	b.n	800c644 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800c652:	8880      	ldrh	r0, [r0, #4]
 800c654:	4420      	add	r0, r4
 800c656:	b200      	sxth	r0, r0
 800c658:	1a40      	subs	r0, r0, r1
 800c65a:	e7f8      	b.n	800c64e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800c65c:	18a0      	adds	r0, r4, r2
 800c65e:	e7f1      	b.n	800c644 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800c660 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800c660:	b510      	push	{r4, lr}
 800c662:	2b02      	cmp	r3, #2
 800c664:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800c668:	d006      	beq.n	800c678 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800c66a:	2b03      	cmp	r3, #3
 800c66c:	d00a      	beq.n	800c684 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800c66e:	2b01      	cmp	r3, #1
 800c670:	bf14      	ite	ne
 800c672:	18a0      	addne	r0, r4, r2
 800c674:	1860      	addeq	r0, r4, r1
 800c676:	bd10      	pop	{r4, pc}
 800c678:	88c0      	ldrh	r0, [r0, #6]
 800c67a:	4420      	add	r0, r4
 800c67c:	b200      	sxth	r0, r0
 800c67e:	1a80      	subs	r0, r0, r2
 800c680:	3801      	subs	r0, #1
 800c682:	e7f8      	b.n	800c676 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800c684:	88c0      	ldrh	r0, [r0, #6]
 800c686:	4420      	add	r0, r4
 800c688:	b200      	sxth	r0, r0
 800c68a:	1a40      	subs	r0, r0, r1
 800c68c:	e7f8      	b.n	800c680 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800c690 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800c690:	4b01      	ldr	r3, [pc, #4]	; (800c698 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800c692:	2200      	movs	r2, #0
 800c694:	601a      	str	r2, [r3, #0]
 800c696:	4770      	bx	lr
 800c698:	2000a434 	.word	0x2000a434

0800c69c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800c69c:	4603      	mov	r3, r0
 800c69e:	b1c8      	cbz	r0, 800c6d4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800c6a0:	0c02      	lsrs	r2, r0, #16
 800c6a2:	0412      	lsls	r2, r2, #16
 800c6a4:	b9a2      	cbnz	r2, 800c6d0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800c6a6:	0403      	lsls	r3, r0, #16
 800c6a8:	2010      	movs	r0, #16
 800c6aa:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800c6ae:	bf04      	itt	eq
 800c6b0:	021b      	lsleq	r3, r3, #8
 800c6b2:	3008      	addeq	r0, #8
 800c6b4:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800c6b8:	bf04      	itt	eq
 800c6ba:	011b      	lsleq	r3, r3, #4
 800c6bc:	3004      	addeq	r0, #4
 800c6be:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800c6c2:	bf04      	itt	eq
 800c6c4:	009b      	lsleq	r3, r3, #2
 800c6c6:	3002      	addeq	r0, #2
 800c6c8:	2b00      	cmp	r3, #0
 800c6ca:	db04      	blt.n	800c6d6 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800c6cc:	3001      	adds	r0, #1
 800c6ce:	4770      	bx	lr
 800c6d0:	2000      	movs	r0, #0
 800c6d2:	e7ea      	b.n	800c6aa <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800c6d4:	2020      	movs	r0, #32
 800c6d6:	4770      	bx	lr

0800c6d8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800c6d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6dc:	b087      	sub	sp, #28
 800c6de:	4681      	mov	r9, r0
 800c6e0:	4698      	mov	r8, r3
 800c6e2:	4610      	mov	r0, r2
 800c6e4:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800c6e8:	460d      	mov	r5, r1
 800c6ea:	b981      	cbnz	r1, 800c70e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800c6ec:	b14b      	cbz	r3, 800c702 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800c6ee:	460b      	mov	r3, r1
 800c6f0:	e9cd 4700 	strd	r4, r7, [sp]
 800c6f4:	464a      	mov	r2, r9
 800c6f6:	4641      	mov	r1, r8
 800c6f8:	f7ff ffee 	bl	800c6d8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c6fc:	b007      	add	sp, #28
 800c6fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c702:	f04f 33ff 	mov.w	r3, #4294967295
 800c706:	603b      	str	r3, [r7, #0]
 800c708:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800c70c:	e7f6      	b.n	800c6fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800c70e:	fa32 fa01 	lsrs.w	sl, r2, r1
 800c712:	d107      	bne.n	800c724 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800c714:	fb09 f602 	mul.w	r6, r9, r2
 800c718:	fbb6 f0f4 	udiv	r0, r6, r4
 800c71c:	fb04 6610 	mls	r6, r4, r0, r6
 800c720:	603e      	str	r6, [r7, #0]
 800c722:	e7eb      	b.n	800c6fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800c724:	2601      	movs	r6, #1
 800c726:	408e      	lsls	r6, r1
 800c728:	3e01      	subs	r6, #1
 800c72a:	4016      	ands	r6, r2
 800c72c:	fa09 fb01 	lsl.w	fp, r9, r1
 800c730:	4630      	mov	r0, r6
 800c732:	fbbb f3f4 	udiv	r3, fp, r4
 800c736:	9302      	str	r3, [sp, #8]
 800c738:	fb0a f303 	mul.w	r3, sl, r3
 800c73c:	9303      	str	r3, [sp, #12]
 800c73e:	f7ff ffad 	bl	800c69c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c742:	464a      	mov	r2, r9
 800c744:	460b      	mov	r3, r1
 800c746:	e9cd 4700 	strd	r4, r7, [sp]
 800c74a:	4601      	mov	r1, r0
 800c74c:	4630      	mov	r0, r6
 800c74e:	f7ff ffc3 	bl	800c6d8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c752:	9b02      	ldr	r3, [sp, #8]
 800c754:	fb04 bb13 	mls	fp, r4, r3, fp
 800c758:	4606      	mov	r6, r0
 800c75a:	4658      	mov	r0, fp
 800c75c:	eb05 0108 	add.w	r1, r5, r8
 800c760:	f7ff ff9c 	bl	800c69c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c764:	ab05      	add	r3, sp, #20
 800c766:	e9cd 4300 	strd	r4, r3, [sp]
 800c76a:	465a      	mov	r2, fp
 800c76c:	4603      	mov	r3, r0
 800c76e:	4650      	mov	r0, sl
 800c770:	f7ff ffb2 	bl	800c6d8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c774:	6839      	ldr	r1, [r7, #0]
 800c776:	9a05      	ldr	r2, [sp, #20]
 800c778:	9b03      	ldr	r3, [sp, #12]
 800c77a:	4411      	add	r1, r2
 800c77c:	fbb1 f2f4 	udiv	r2, r1, r4
 800c780:	18d3      	adds	r3, r2, r3
 800c782:	441e      	add	r6, r3
 800c784:	fb04 1412 	mls	r4, r4, r2, r1
 800c788:	4430      	add	r0, r6
 800c78a:	603c      	str	r4, [r7, #0]
 800c78c:	e7b6      	b.n	800c6fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800c78e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800c78e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c792:	b085      	sub	sp, #20
 800c794:	f1b0 0900 	subs.w	r9, r0, #0
 800c798:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800c79a:	461d      	mov	r5, r3
 800c79c:	bfbf      	itttt	lt
 800c79e:	6823      	ldrlt	r3, [r4, #0]
 800c7a0:	425b      	neglt	r3, r3
 800c7a2:	f1c9 0900 	rsblt	r9, r9, #0
 800c7a6:	6023      	strlt	r3, [r4, #0]
 800c7a8:	bfb4      	ite	lt
 800c7aa:	f04f 36ff 	movlt.w	r6, #4294967295
 800c7ae:	2601      	movge	r6, #1
 800c7b0:	2a00      	cmp	r2, #0
 800c7b2:	4617      	mov	r7, r2
 800c7b4:	da04      	bge.n	800c7c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800c7b6:	6823      	ldr	r3, [r4, #0]
 800c7b8:	425b      	negs	r3, r3
 800c7ba:	4257      	negs	r7, r2
 800c7bc:	4276      	negs	r6, r6
 800c7be:	6023      	str	r3, [r4, #0]
 800c7c0:	2d00      	cmp	r5, #0
 800c7c2:	4638      	mov	r0, r7
 800c7c4:	bfba      	itte	lt
 800c7c6:	426d      	neglt	r5, r5
 800c7c8:	f04f 38ff 	movlt.w	r8, #4294967295
 800c7cc:	f04f 0801 	movge.w	r8, #1
 800c7d0:	f7ff ff64 	bl	800c69c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c7d4:	ab03      	add	r3, sp, #12
 800c7d6:	e9cd 5300 	strd	r5, r3, [sp]
 800c7da:	463a      	mov	r2, r7
 800c7dc:	4603      	mov	r3, r0
 800c7de:	4648      	mov	r0, r9
 800c7e0:	f7ff ff7a 	bl	800c6d8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c7e4:	6823      	ldr	r3, [r4, #0]
 800c7e6:	9a03      	ldr	r2, [sp, #12]
 800c7e8:	4546      	cmp	r6, r8
 800c7ea:	441a      	add	r2, r3
 800c7ec:	fb92 f3f5 	sdiv	r3, r2, r5
 800c7f0:	4418      	add	r0, r3
 800c7f2:	bf18      	it	ne
 800c7f4:	4240      	negne	r0, r0
 800c7f6:	fb05 2313 	mls	r3, r5, r3, r2
 800c7fa:	1c72      	adds	r2, r6, #1
 800c7fc:	6023      	str	r3, [r4, #0]
 800c7fe:	d105      	bne.n	800c80c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800c800:	2b00      	cmp	r3, #0
 800c802:	f1c3 0200 	rsb	r2, r3, #0
 800c806:	db0b      	blt.n	800c820 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800c808:	6022      	str	r2, [r4, #0]
 800c80a:	e006      	b.n	800c81a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c80c:	2e01      	cmp	r6, #1
 800c80e:	d104      	bne.n	800c81a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c810:	2b00      	cmp	r3, #0
 800c812:	da02      	bge.n	800c81a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c814:	442b      	add	r3, r5
 800c816:	3801      	subs	r0, #1
 800c818:	6023      	str	r3, [r4, #0]
 800c81a:	b005      	add	sp, #20
 800c81c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c820:	3801      	subs	r0, #1
 800c822:	1b52      	subs	r2, r2, r5
 800c824:	e7f0      	b.n	800c808 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800c828 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800c828:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c82c:	4c1c      	ldr	r4, [pc, #112]	; (800c8a0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800c82e:	6807      	ldr	r7, [r0, #0]
 800c830:	69a3      	ldr	r3, [r4, #24]
 800c832:	4605      	mov	r5, r0
 800c834:	b92b      	cbnz	r3, 800c842 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800c836:	6840      	ldr	r0, [r0, #4]
 800c838:	e9c5 7000 	strd	r7, r0, [r5]
 800c83c:	b004      	add	sp, #16
 800c83e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c842:	68a2      	ldr	r2, [r4, #8]
 800c844:	6820      	ldr	r0, [r4, #0]
 800c846:	ae04      	add	r6, sp, #16
 800c848:	f04f 0802 	mov.w	r8, #2
 800c84c:	fb93 f1f8 	sdiv	r1, r3, r8
 800c850:	440a      	add	r2, r1
 800c852:	f846 2d04 	str.w	r2, [r6, #-4]!
 800c856:	69e1      	ldr	r1, [r4, #28]
 800c858:	9600      	str	r6, [sp, #0]
 800c85a:	463a      	mov	r2, r7
 800c85c:	f7ff ff97 	bl	800c78e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c860:	69a3      	ldr	r3, [r4, #24]
 800c862:	686a      	ldr	r2, [r5, #4]
 800c864:	6a21      	ldr	r1, [r4, #32]
 800c866:	9600      	str	r6, [sp, #0]
 800c868:	4607      	mov	r7, r0
 800c86a:	6860      	ldr	r0, [r4, #4]
 800c86c:	f7ff ff8f 	bl	800c78e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c870:	6962      	ldr	r2, [r4, #20]
 800c872:	69a3      	ldr	r3, [r4, #24]
 800c874:	fb93 f8f8 	sdiv	r8, r3, r8
 800c878:	4442      	add	r2, r8
 800c87a:	9203      	str	r2, [sp, #12]
 800c87c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c87e:	682a      	ldr	r2, [r5, #0]
 800c880:	9600      	str	r6, [sp, #0]
 800c882:	4407      	add	r7, r0
 800c884:	68e0      	ldr	r0, [r4, #12]
 800c886:	f7ff ff82 	bl	800c78e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c88a:	9600      	str	r6, [sp, #0]
 800c88c:	4680      	mov	r8, r0
 800c88e:	69a3      	ldr	r3, [r4, #24]
 800c890:	686a      	ldr	r2, [r5, #4]
 800c892:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800c894:	6920      	ldr	r0, [r4, #16]
 800c896:	f7ff ff7a 	bl	800c78e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c89a:	4440      	add	r0, r8
 800c89c:	e7cc      	b.n	800c838 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800c89e:	bf00      	nop
 800c8a0:	2000a438 	.word	0x2000a438

0800c8a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800c8a4:	b510      	push	{r4, lr}
 800c8a6:	4b07      	ldr	r3, [pc, #28]	; (800c8c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800c8a8:	781b      	ldrb	r3, [r3, #0]
 800c8aa:	2b01      	cmp	r3, #1
 800c8ac:	d108      	bne.n	800c8c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800c8ae:	4b06      	ldr	r3, [pc, #24]	; (800c8c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800c8b0:	880c      	ldrh	r4, [r1, #0]
 800c8b2:	881b      	ldrh	r3, [r3, #0]
 800c8b4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c8b8:	3b01      	subs	r3, #1
 800c8ba:	1b1b      	subs	r3, r3, r4
 800c8bc:	8003      	strh	r3, [r0, #0]
 800c8be:	800a      	strh	r2, [r1, #0]
 800c8c0:	bd10      	pop	{r4, pc}
 800c8c2:	bf00      	nop
 800c8c4:	2000a424 	.word	0x2000a424
 800c8c8:	2000a428 	.word	0x2000a428

0800c8cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800c8cc:	b510      	push	{r4, lr}
 800c8ce:	4b0a      	ldr	r3, [pc, #40]	; (800c8f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800c8d0:	781b      	ldrb	r3, [r3, #0]
 800c8d2:	2b01      	cmp	r3, #1
 800c8d4:	d10e      	bne.n	800c8f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800c8d6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c8da:	8843      	ldrh	r3, [r0, #2]
 800c8dc:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c8e0:	8044      	strh	r4, [r0, #2]
 800c8e2:	18ca      	adds	r2, r1, r3
 800c8e4:	4b05      	ldr	r3, [pc, #20]	; (800c8fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800c8e6:	881b      	ldrh	r3, [r3, #0]
 800c8e8:	1a9b      	subs	r3, r3, r2
 800c8ea:	8003      	strh	r3, [r0, #0]
 800c8ec:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c8f0:	80c3      	strh	r3, [r0, #6]
 800c8f2:	8081      	strh	r1, [r0, #4]
 800c8f4:	bd10      	pop	{r4, pc}
 800c8f6:	bf00      	nop
 800c8f8:	2000a424 	.word	0x2000a424
 800c8fc:	2000a420 	.word	0x2000a420

0800c900 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800c900:	b510      	push	{r4, lr}
 800c902:	4b07      	ldr	r3, [pc, #28]	; (800c920 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800c904:	781b      	ldrb	r3, [r3, #0]
 800c906:	2b01      	cmp	r3, #1
 800c908:	d108      	bne.n	800c91c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800c90a:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c90e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c912:	8003      	strh	r3, [r0, #0]
 800c914:	8893      	ldrh	r3, [r2, #4]
 800c916:	3b01      	subs	r3, #1
 800c918:	1b1b      	subs	r3, r3, r4
 800c91a:	800b      	strh	r3, [r1, #0]
 800c91c:	bd10      	pop	{r4, pc}
 800c91e:	bf00      	nop
 800c920:	2000a424 	.word	0x2000a424

0800c924 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800c924:	b513      	push	{r0, r1, r4, lr}
 800c926:	4b08      	ldr	r3, [pc, #32]	; (800c948 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800c928:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c92c:	4b07      	ldr	r3, [pc, #28]	; (800c94c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800c92e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c932:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c936:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c93a:	2400      	movs	r4, #0
 800c93c:	466a      	mov	r2, sp
 800c93e:	9400      	str	r4, [sp, #0]
 800c940:	f7ff ffde 	bl	800c900 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800c944:	b002      	add	sp, #8
 800c946:	bd10      	pop	{r4, pc}
 800c948:	2000a420 	.word	0x2000a420
 800c94c:	2000a422 	.word	0x2000a422

0800c950 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 800c950:	4b0b      	ldr	r3, [pc, #44]	; (800c980 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 800c952:	781b      	ldrb	r3, [r3, #0]
 800c954:	2b01      	cmp	r3, #1
 800c956:	d111      	bne.n	800c97c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 800c958:	680b      	ldr	r3, [r1, #0]
 800c95a:	ed90 7a00 	vldr	s14, [r0]
 800c95e:	6003      	str	r3, [r0, #0]
 800c960:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800c964:	eddf 6a07 	vldr	s13, [pc, #28]	; 800c984 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 800c968:	ee07 3a90 	vmov	s15, r3
 800c96c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c970:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c974:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800c978:	edc1 7a00 	vstr	s15, [r1]
 800c97c:	4770      	bx	lr
 800c97e:	bf00      	nop
 800c980:	2000a424 	.word	0x2000a424
 800c984:	38d1b717 	.word	0x38d1b717

0800c988 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800c988:	b510      	push	{r4, lr}
 800c98a:	4b0a      	ldr	r3, [pc, #40]	; (800c9b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800c98c:	781b      	ldrb	r3, [r3, #0]
 800c98e:	2b01      	cmp	r3, #1
 800c990:	460a      	mov	r2, r1
 800c992:	d10d      	bne.n	800c9b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800c994:	8881      	ldrh	r1, [r0, #4]
 800c996:	8803      	ldrh	r3, [r0, #0]
 800c998:	440b      	add	r3, r1
 800c99a:	4601      	mov	r1, r0
 800c99c:	3b01      	subs	r3, #1
 800c99e:	f821 3b02 	strh.w	r3, [r1], #2
 800c9a2:	f7ff ffad 	bl	800c900 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800c9a6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c9aa:	88c2      	ldrh	r2, [r0, #6]
 800c9ac:	8082      	strh	r2, [r0, #4]
 800c9ae:	80c3      	strh	r3, [r0, #6]
 800c9b0:	bd10      	pop	{r4, pc}
 800c9b2:	bf00      	nop
 800c9b4:	2000a424 	.word	0x2000a424

0800c9b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800c9b8:	b507      	push	{r0, r1, r2, lr}
 800c9ba:	4b09      	ldr	r3, [pc, #36]	; (800c9e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800c9bc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c9c0:	4b08      	ldr	r3, [pc, #32]	; (800c9e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800c9c2:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c9c6:	2100      	movs	r1, #0
 800c9c8:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c9cc:	9100      	str	r1, [sp, #0]
 800c9ce:	4669      	mov	r1, sp
 800c9d0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c9d4:	f7ff ffd8 	bl	800c988 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800c9d8:	b003      	add	sp, #12
 800c9da:	f85d fb04 	ldr.w	pc, [sp], #4
 800c9de:	bf00      	nop
 800c9e0:	2000a420 	.word	0x2000a420
 800c9e4:	2000a422 	.word	0x2000a422

0800c9e8 <_ZN8touchgfx11Application13requestRedrawEv>:
 800c9e8:	4b06      	ldr	r3, [pc, #24]	; (800ca04 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800c9ea:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c9ee:	4b06      	ldr	r3, [pc, #24]	; (800ca08 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800c9f0:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800c9f4:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c9f8:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800c9fc:	2100      	movs	r1, #0
 800c9fe:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800ca02:	4770      	bx	lr
 800ca04:	2000a420 	.word	0x2000a420
 800ca08:	2000a422 	.word	0x2000a422

0800ca0c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800ca0c:	4b03      	ldr	r3, [pc, #12]	; (800ca1c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800ca0e:	6818      	ldr	r0, [r3, #0]
 800ca10:	b110      	cbz	r0, 800ca18 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800ca12:	6803      	ldr	r3, [r0, #0]
 800ca14:	699b      	ldr	r3, [r3, #24]
 800ca16:	4718      	bx	r3
 800ca18:	4770      	bx	lr
 800ca1a:	bf00      	nop
 800ca1c:	2000a468 	.word	0x2000a468

0800ca20 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800ca20:	4770      	bx	lr
	...

0800ca24 <_ZN8touchgfx11Application4drawEv>:
 800ca24:	b507      	push	{r0, r1, r2, lr}
 800ca26:	4b09      	ldr	r3, [pc, #36]	; (800ca4c <_ZN8touchgfx11Application4drawEv+0x28>)
 800ca28:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ca2c:	4b08      	ldr	r3, [pc, #32]	; (800ca50 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800ca2e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ca32:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ca36:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ca3a:	6803      	ldr	r3, [r0, #0]
 800ca3c:	2100      	movs	r1, #0
 800ca3e:	9100      	str	r1, [sp, #0]
 800ca40:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ca42:	4669      	mov	r1, sp
 800ca44:	4798      	blx	r3
 800ca46:	b003      	add	sp, #12
 800ca48:	f85d fb04 	ldr.w	pc, [sp], #4
 800ca4c:	2000a420 	.word	0x2000a420
 800ca50:	2000a422 	.word	0x2000a422

0800ca54 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800ca54:	4b03      	ldr	r3, [pc, #12]	; (800ca64 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800ca56:	6818      	ldr	r0, [r3, #0]
 800ca58:	b110      	cbz	r0, 800ca60 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800ca5a:	6803      	ldr	r3, [r0, #0]
 800ca5c:	69db      	ldr	r3, [r3, #28]
 800ca5e:	4718      	bx	r3
 800ca60:	4770      	bx	lr
 800ca62:	bf00      	nop
 800ca64:	2000a468 	.word	0x2000a468

0800ca68 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800ca68:	4b03      	ldr	r3, [pc, #12]	; (800ca78 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800ca6a:	6818      	ldr	r0, [r3, #0]
 800ca6c:	b110      	cbz	r0, 800ca74 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800ca6e:	6803      	ldr	r3, [r0, #0]
 800ca70:	6a1b      	ldr	r3, [r3, #32]
 800ca72:	4718      	bx	r3
 800ca74:	4770      	bx	lr
 800ca76:	bf00      	nop
 800ca78:	2000a468 	.word	0x2000a468

0800ca7c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800ca7c:	4b03      	ldr	r3, [pc, #12]	; (800ca8c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800ca7e:	6818      	ldr	r0, [r3, #0]
 800ca80:	b110      	cbz	r0, 800ca88 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800ca82:	6803      	ldr	r3, [r0, #0]
 800ca84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ca86:	4718      	bx	r3
 800ca88:	4770      	bx	lr
 800ca8a:	bf00      	nop
 800ca8c:	2000a468 	.word	0x2000a468

0800ca90 <_ZN8touchgfx11Application15handleTickEventEv>:
 800ca90:	b570      	push	{r4, r5, r6, lr}
 800ca92:	4d34      	ldr	r5, [pc, #208]	; (800cb64 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800ca94:	4604      	mov	r4, r0
 800ca96:	6828      	ldr	r0, [r5, #0]
 800ca98:	b140      	cbz	r0, 800caac <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800ca9a:	7a03      	ldrb	r3, [r0, #8]
 800ca9c:	b933      	cbnz	r3, 800caac <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800ca9e:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800caa2:	6803      	ldr	r3, [r0, #0]
 800caa4:	689b      	ldr	r3, [r3, #8]
 800caa6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800caaa:	4718      	bx	r3
 800caac:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800cab0:	b97b      	cbnz	r3, 800cad2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cab2:	b170      	cbz	r0, 800cad2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cab4:	7a03      	ldrb	r3, [r0, #8]
 800cab6:	b163      	cbz	r3, 800cad2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cab8:	4b2b      	ldr	r3, [pc, #172]	; (800cb68 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800caba:	6818      	ldr	r0, [r3, #0]
 800cabc:	b110      	cbz	r0, 800cac4 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800cabe:	6803      	ldr	r3, [r0, #0]
 800cac0:	691b      	ldr	r3, [r3, #16]
 800cac2:	4798      	blx	r3
 800cac4:	6828      	ldr	r0, [r5, #0]
 800cac6:	6803      	ldr	r3, [r0, #0]
 800cac8:	68db      	ldr	r3, [r3, #12]
 800caca:	4798      	blx	r3
 800cacc:	2301      	movs	r3, #1
 800cace:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800cad2:	2500      	movs	r5, #0
 800cad4:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800cad8:	42a8      	cmp	r0, r5
 800cada:	dd0c      	ble.n	800caf6 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800cadc:	1963      	adds	r3, r4, r5
 800cade:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800cae2:	b132      	cbz	r2, 800caf2 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800cae4:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800cae8:	4413      	add	r3, r2
 800caea:	6858      	ldr	r0, [r3, #4]
 800caec:	6803      	ldr	r3, [r0, #0]
 800caee:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800caf0:	4798      	blx	r3
 800caf2:	3501      	adds	r5, #1
 800caf4:	e7ee      	b.n	800cad4 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800caf6:	2300      	movs	r3, #0
 800caf8:	461a      	mov	r2, r3
 800cafa:	4298      	cmp	r0, r3
 800cafc:	d114      	bne.n	800cb28 <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800cafe:	1d25      	adds	r5, r4, #4
 800cb00:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800cb04:	1e48      	subs	r0, r1, #1
 800cb06:	b280      	uxth	r0, r0
 800cb08:	4291      	cmp	r1, r2
 800cb0a:	dd24      	ble.n	800cb56 <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800cb0c:	4288      	cmp	r0, r1
 800cb0e:	d2fb      	bcs.n	800cb08 <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800cb10:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800cb14:	3304      	adds	r3, #4
 800cb16:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800cb1a:	428b      	cmp	r3, r1
 800cb1c:	d018      	beq.n	800cb50 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800cb1e:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800cb22:	f843 6c04 	str.w	r6, [r3, #-4]
 800cb26:	e7f8      	b.n	800cb1a <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800cb28:	18e1      	adds	r1, r4, r3
 800cb2a:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800cb2e:	b16d      	cbz	r5, 800cb4c <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800cb30:	429a      	cmp	r2, r3
 800cb32:	d00a      	beq.n	800cb4a <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800cb34:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800cb38:	4431      	add	r1, r6
 800cb3a:	684e      	ldr	r6, [r1, #4]
 800cb3c:	b291      	uxth	r1, r2
 800cb3e:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800cb42:	604e      	str	r6, [r1, #4]
 800cb44:	18a1      	adds	r1, r4, r2
 800cb46:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800cb4a:	3201      	adds	r2, #1
 800cb4c:	3301      	adds	r3, #1
 800cb4e:	e7d4      	b.n	800cafa <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800cb50:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800cb54:	e7d4      	b.n	800cb00 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800cb56:	4b04      	ldr	r3, [pc, #16]	; (800cb68 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800cb58:	6818      	ldr	r0, [r3, #0]
 800cb5a:	b110      	cbz	r0, 800cb62 <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800cb5c:	6803      	ldr	r3, [r0, #0]
 800cb5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb60:	e7a1      	b.n	800caa6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800cb62:	bd70      	pop	{r4, r5, r6, pc}
 800cb64:	2000a46c 	.word	0x2000a46c
 800cb68:	2000a468 	.word	0x2000a468

0800cb6c <_ZN8touchgfx11ApplicationD1Ev>:
 800cb6c:	4770      	bx	lr

0800cb6e <_ZN8touchgfx11ApplicationD0Ev>:
 800cb6e:	b510      	push	{r4, lr}
 800cb70:	f44f 719c 	mov.w	r1, #312	; 0x138
 800cb74:	4604      	mov	r4, r0
 800cb76:	f00e fc1b 	bl	801b3b0 <_ZdlPvj>
 800cb7a:	4620      	mov	r0, r4
 800cb7c:	bd10      	pop	{r4, pc}
	...

0800cb80 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800cb80:	b570      	push	{r4, r5, r6, lr}
 800cb82:	4606      	mov	r6, r0
 800cb84:	460c      	mov	r4, r1
 800cb86:	b929      	cbnz	r1, 800cb94 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800cb88:	4b0c      	ldr	r3, [pc, #48]	; (800cbbc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800cb8a:	4a0d      	ldr	r2, [pc, #52]	; (800cbc0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800cb8c:	480d      	ldr	r0, [pc, #52]	; (800cbc4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800cb8e:	2164      	movs	r1, #100	; 0x64
 800cb90:	f00e fc3c 	bl	801b40c <__assert_func>
 800cb94:	4d0c      	ldr	r5, [pc, #48]	; (800cbc8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800cb96:	2300      	movs	r3, #0
 800cb98:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800cb9c:	6828      	ldr	r0, [r5, #0]
 800cb9e:	b110      	cbz	r0, 800cba6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800cba0:	6803      	ldr	r3, [r0, #0]
 800cba2:	695b      	ldr	r3, [r3, #20]
 800cba4:	4798      	blx	r3
 800cba6:	602c      	str	r4, [r5, #0]
 800cba8:	6823      	ldr	r3, [r4, #0]
 800cbaa:	4620      	mov	r0, r4
 800cbac:	68db      	ldr	r3, [r3, #12]
 800cbae:	4798      	blx	r3
 800cbb0:	6833      	ldr	r3, [r6, #0]
 800cbb2:	4630      	mov	r0, r6
 800cbb4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cbb6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cbba:	4718      	bx	r3
 800cbbc:	0801e56e 	.word	0x0801e56e
 800cbc0:	0801e668 	.word	0x0801e668
 800cbc4:	0801e578 	.word	0x0801e578
 800cbc8:	2000a468 	.word	0x2000a468

0800cbcc <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800cbcc:	b510      	push	{r4, lr}
 800cbce:	f9b1 4000 	ldrsh.w	r4, [r1]
 800cbd2:	888a      	ldrh	r2, [r1, #4]
 800cbd4:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cbd8:	4422      	add	r2, r4
 800cbda:	b212      	sxth	r2, r2
 800cbdc:	4293      	cmp	r3, r2
 800cbde:	da15      	bge.n	800cc0c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cbe0:	8882      	ldrh	r2, [r0, #4]
 800cbe2:	4413      	add	r3, r2
 800cbe4:	b21b      	sxth	r3, r3
 800cbe6:	429c      	cmp	r4, r3
 800cbe8:	da10      	bge.n	800cc0c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cbea:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800cbee:	88c9      	ldrh	r1, [r1, #6]
 800cbf0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800cbf4:	4419      	add	r1, r3
 800cbf6:	b209      	sxth	r1, r1
 800cbf8:	428a      	cmp	r2, r1
 800cbfa:	da07      	bge.n	800cc0c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cbfc:	88c0      	ldrh	r0, [r0, #6]
 800cbfe:	4410      	add	r0, r2
 800cc00:	b200      	sxth	r0, r0
 800cc02:	4283      	cmp	r3, r0
 800cc04:	bfac      	ite	ge
 800cc06:	2000      	movge	r0, #0
 800cc08:	2001      	movlt	r0, #1
 800cc0a:	bd10      	pop	{r4, pc}
 800cc0c:	2000      	movs	r0, #0
 800cc0e:	e7fc      	b.n	800cc0a <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800cc10 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800cc10:	b570      	push	{r4, r5, r6, lr}
 800cc12:	f9b1 4000 	ldrsh.w	r4, [r1]
 800cc16:	f9b0 5000 	ldrsh.w	r5, [r0]
 800cc1a:	42ac      	cmp	r4, r5
 800cc1c:	db18      	blt.n	800cc50 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800cc1e:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800cc22:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800cc26:	429a      	cmp	r2, r3
 800cc28:	db12      	blt.n	800cc50 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800cc2a:	8886      	ldrh	r6, [r0, #4]
 800cc2c:	4435      	add	r5, r6
 800cc2e:	888e      	ldrh	r6, [r1, #4]
 800cc30:	4434      	add	r4, r6
 800cc32:	b22d      	sxth	r5, r5
 800cc34:	b224      	sxth	r4, r4
 800cc36:	42a5      	cmp	r5, r4
 800cc38:	db0a      	blt.n	800cc50 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800cc3a:	88c0      	ldrh	r0, [r0, #6]
 800cc3c:	4418      	add	r0, r3
 800cc3e:	88cb      	ldrh	r3, [r1, #6]
 800cc40:	441a      	add	r2, r3
 800cc42:	b200      	sxth	r0, r0
 800cc44:	b212      	sxth	r2, r2
 800cc46:	4290      	cmp	r0, r2
 800cc48:	bfb4      	ite	lt
 800cc4a:	2000      	movlt	r0, #0
 800cc4c:	2001      	movge	r0, #1
 800cc4e:	bd70      	pop	{r4, r5, r6, pc}
 800cc50:	2000      	movs	r0, #0
 800cc52:	e7fc      	b.n	800cc4e <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800cc54 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800cc54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cc56:	4604      	mov	r4, r0
 800cc58:	4608      	mov	r0, r1
 800cc5a:	460d      	mov	r5, r1
 800cc5c:	f7fc fdd9 	bl	8009812 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cc60:	b978      	cbnz	r0, 800cc82 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800cc62:	4620      	mov	r0, r4
 800cc64:	f7fc fdd5 	bl	8009812 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cc68:	f9b5 6000 	ldrsh.w	r6, [r5]
 800cc6c:	b150      	cbz	r0, 800cc84 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800cc6e:	8026      	strh	r6, [r4, #0]
 800cc70:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800cc74:	8063      	strh	r3, [r4, #2]
 800cc76:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800cc7a:	80a3      	strh	r3, [r4, #4]
 800cc7c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800cc80:	80e3      	strh	r3, [r4, #6]
 800cc82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cc84:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cc88:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800cc8c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800cc90:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800cc94:	88ed      	ldrh	r5, [r5, #6]
 800cc96:	42b1      	cmp	r1, r6
 800cc98:	460f      	mov	r7, r1
 800cc9a:	bfa8      	it	ge
 800cc9c:	4637      	movge	r7, r6
 800cc9e:	4293      	cmp	r3, r2
 800cca0:	4618      	mov	r0, r3
 800cca2:	4466      	add	r6, ip
 800cca4:	bfa8      	it	ge
 800cca6:	4610      	movge	r0, r2
 800cca8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800ccac:	8027      	strh	r7, [r4, #0]
 800ccae:	442a      	add	r2, r5
 800ccb0:	88e5      	ldrh	r5, [r4, #6]
 800ccb2:	8060      	strh	r0, [r4, #2]
 800ccb4:	4461      	add	r1, ip
 800ccb6:	442b      	add	r3, r5
 800ccb8:	b236      	sxth	r6, r6
 800ccba:	b209      	sxth	r1, r1
 800ccbc:	b212      	sxth	r2, r2
 800ccbe:	b21b      	sxth	r3, r3
 800ccc0:	428e      	cmp	r6, r1
 800ccc2:	bfac      	ite	ge
 800ccc4:	ebc7 0106 	rsbge	r1, r7, r6
 800ccc8:	ebc7 0101 	rsblt	r1, r7, r1
 800cccc:	429a      	cmp	r2, r3
 800ccce:	bfac      	ite	ge
 800ccd0:	ebc0 0202 	rsbge	r2, r0, r2
 800ccd4:	ebc0 0203 	rsblt	r2, r0, r3
 800ccd8:	80a1      	strh	r1, [r4, #4]
 800ccda:	80e2      	strh	r2, [r4, #6]
 800ccdc:	e7d1      	b.n	800cc82 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800cce0 <_ZN8touchgfx11Application11getInstanceEv>:
 800cce0:	4b01      	ldr	r3, [pc, #4]	; (800cce8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800cce2:	6818      	ldr	r0, [r3, #0]
 800cce4:	4770      	bx	lr
 800cce6:	bf00      	nop
 800cce8:	2000a478 	.word	0x2000a478

0800ccec <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 800ccec:	b570      	push	{r4, r5, r6, lr}
 800ccee:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 800ccf2:	1d04      	adds	r4, r0, #4
 800ccf4:	2200      	movs	r2, #0
 800ccf6:	b295      	uxth	r5, r2
 800ccf8:	42ab      	cmp	r3, r5
 800ccfa:	d90f      	bls.n	800cd1c <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x30>
 800ccfc:	f854 6b04 	ldr.w	r6, [r4], #4
 800cd00:	428e      	cmp	r6, r1
 800cd02:	4615      	mov	r5, r2
 800cd04:	f102 0201 	add.w	r2, r2, #1
 800cd08:	d1f5      	bne.n	800ccf6 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 800cd0a:	4428      	add	r0, r5
 800cd0c:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 800cd10:	2bff      	cmp	r3, #255	; 0xff
 800cd12:	d002      	beq.n	800cd1a <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 800cd14:	3301      	adds	r3, #1
 800cd16:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 800cd1a:	bd70      	pop	{r4, r5, r6, pc}
 800cd1c:	2b20      	cmp	r3, #32
 800cd1e:	d106      	bne.n	800cd2e <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x42>
 800cd20:	4b08      	ldr	r3, [pc, #32]	; (800cd44 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x58>)
 800cd22:	4a09      	ldr	r2, [pc, #36]	; (800cd48 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x5c>)
 800cd24:	4809      	ldr	r0, [pc, #36]	; (800cd4c <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x60>)
 800cd26:	f44f 7117 	mov.w	r1, #604	; 0x25c
 800cd2a:	f00e fb6f 	bl	801b40c <__assert_func>
 800cd2e:	18c2      	adds	r2, r0, r3
 800cd30:	2401      	movs	r4, #1
 800cd32:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 800cd36:	191a      	adds	r2, r3, r4
 800cd38:	f8a0 2084 	strh.w	r2, [r0, #132]	; 0x84
 800cd3c:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800cd40:	6041      	str	r1, [r0, #4]
 800cd42:	e7ea      	b.n	800cd1a <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 800cd44:	0801e5a2 	.word	0x0801e5a2
 800cd48:	0801e6ac 	.word	0x0801e6ac
 800cd4c:	0801e578 	.word	0x0801e578

0800cd50 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 800cd50:	b570      	push	{r4, r5, r6, lr}
 800cd52:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 800cd56:	1d04      	adds	r4, r0, #4
 800cd58:	2300      	movs	r3, #0
 800cd5a:	b29a      	uxth	r2, r3
 800cd5c:	4296      	cmp	r6, r2
 800cd5e:	d90a      	bls.n	800cd76 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 800cd60:	f854 2b04 	ldr.w	r2, [r4], #4
 800cd64:	428a      	cmp	r2, r1
 800cd66:	d107      	bne.n	800cd78 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 800cd68:	18c5      	adds	r5, r0, r3
 800cd6a:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 800cd6e:	b11a      	cbz	r2, 800cd78 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 800cd70:	3a01      	subs	r2, #1
 800cd72:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 800cd76:	bd70      	pop	{r4, r5, r6, pc}
 800cd78:	3301      	adds	r3, #1
 800cd7a:	e7ee      	b.n	800cd5a <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

0800cd7c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800cd7c:	2300      	movs	r3, #0
 800cd7e:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800cd82:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800cd86:	30a8      	adds	r0, #168	; 0xa8
 800cd88:	f802 3b01 	strb.w	r3, [r2], #1
 800cd8c:	4282      	cmp	r2, r0
 800cd8e:	d1fb      	bne.n	800cd88 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800cd90:	4770      	bx	lr

0800cd92 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800cd92:	4603      	mov	r3, r0
 800cd94:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800cd98:	2200      	movs	r2, #0
 800cd9a:	801a      	strh	r2, [r3, #0]
 800cd9c:	805a      	strh	r2, [r3, #2]
 800cd9e:	809a      	strh	r2, [r3, #4]
 800cda0:	80da      	strh	r2, [r3, #6]
 800cda2:	3308      	adds	r3, #8
 800cda4:	428b      	cmp	r3, r1
 800cda6:	d1f8      	bne.n	800cd9a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800cda8:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800cdac:	4770      	bx	lr
	...

0800cdb0 <_ZN8touchgfx11ApplicationC1Ev>:
 800cdb0:	b570      	push	{r4, r5, r6, lr}
 800cdb2:	4b1a      	ldr	r3, [pc, #104]	; (800ce1c <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800cdb4:	6003      	str	r3, [r0, #0]
 800cdb6:	2500      	movs	r5, #0
 800cdb8:	4604      	mov	r4, r0
 800cdba:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800cdbe:	30a8      	adds	r0, #168	; 0xa8
 800cdc0:	f7ff ffe7 	bl	800cd92 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800cdc4:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800cdc8:	f7ff ffe3 	bl	800cd92 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800cdcc:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800cdd0:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800cdd4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800cdd8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800cddc:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800cde0:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800cde4:	490e      	ldr	r1, [pc, #56]	; (800ce20 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800cde6:	480f      	ldr	r0, [pc, #60]	; (800ce24 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800cde8:	4e0f      	ldr	r6, [pc, #60]	; (800ce28 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800cdea:	f00e f9bb 	bl	801b164 <CRC_Lock>
 800cdee:	4b0f      	ldr	r3, [pc, #60]	; (800ce2c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800cdf0:	b158      	cbz	r0, 800ce0a <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800cdf2:	801d      	strh	r5, [r3, #0]
 800cdf4:	4a0e      	ldr	r2, [pc, #56]	; (800ce30 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800cdf6:	2300      	movs	r3, #0
 800cdf8:	6013      	str	r3, [r2, #0]
 800cdfa:	4a0e      	ldr	r2, [pc, #56]	; (800ce34 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800cdfc:	6033      	str	r3, [r6, #0]
 800cdfe:	4620      	mov	r0, r4
 800ce00:	6013      	str	r3, [r2, #0]
 800ce02:	f7ff ffbb 	bl	800cd7c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800ce06:	4620      	mov	r0, r4
 800ce08:	bd70      	pop	{r4, r5, r6, pc}
 800ce0a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ce0e:	2002      	movs	r0, #2
 800ce10:	801a      	strh	r2, [r3, #0]
 800ce12:	6030      	str	r0, [r6, #0]
 800ce14:	f001 faa0 	bl	800e358 <_ZN8touchgfx6Screen4drawEv>
 800ce18:	e7ec      	b.n	800cdf4 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800ce1a:	bf00      	nop
 800ce1c:	0801e62c 	.word	0x0801e62c
 800ce20:	b5e8b5cd 	.word	0xb5e8b5cd
 800ce24:	f407a5c2 	.word	0xf407a5c2
 800ce28:	2000a468 	.word	0x2000a468
 800ce2c:	20000060 	.word	0x20000060
 800ce30:	2000a478 	.word	0x2000a478
 800ce34:	2000a46c 	.word	0x2000a46c

0800ce38 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800ce38:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800ce3c:	428b      	cmp	r3, r1
 800ce3e:	b510      	push	{r4, lr}
 800ce40:	d90e      	bls.n	800ce60 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800ce42:	3b01      	subs	r3, #1
 800ce44:	b29b      	uxth	r3, r3
 800ce46:	428b      	cmp	r3, r1
 800ce48:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800ce4c:	d908      	bls.n	800ce60 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800ce4e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800ce52:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800ce56:	681a      	ldr	r2, [r3, #0]
 800ce58:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800ce5c:	685a      	ldr	r2, [r3, #4]
 800ce5e:	6062      	str	r2, [r4, #4]
 800ce60:	bd10      	pop	{r4, pc}
	...

0800ce64 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800ce64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ce66:	466b      	mov	r3, sp
 800ce68:	e883 0006 	stmia.w	r3, {r1, r2}
 800ce6c:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800ce70:	2a07      	cmp	r2, #7
 800ce72:	4604      	mov	r4, r0
 800ce74:	d906      	bls.n	800ce84 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800ce76:	4b09      	ldr	r3, [pc, #36]	; (800ce9c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800ce78:	4a09      	ldr	r2, [pc, #36]	; (800cea0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800ce7a:	480a      	ldr	r0, [pc, #40]	; (800cea4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800ce7c:	f240 118f 	movw	r1, #399	; 0x18f
 800ce80:	f00e fac4 	bl	801b40c <__assert_func>
 800ce84:	1c51      	adds	r1, r2, #1
 800ce86:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800ce8a:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800ce8e:	cb03      	ldmia	r3!, {r0, r1}
 800ce90:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800ce94:	6069      	str	r1, [r5, #4]
 800ce96:	b003      	add	sp, #12
 800ce98:	bd30      	pop	{r4, r5, pc}
 800ce9a:	bf00      	nop
 800ce9c:	0801e5ca 	.word	0x0801e5ca
 800cea0:	0801e6f1 	.word	0x0801e6f1
 800cea4:	0801e5f9 	.word	0x0801e5f9

0800cea8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800cea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ceac:	b08d      	sub	sp, #52	; 0x34
 800ceae:	ac08      	add	r4, sp, #32
 800ceb0:	4683      	mov	fp, r0
 800ceb2:	4620      	mov	r0, r4
 800ceb4:	e884 0006 	stmia.w	r4, {r1, r2}
 800ceb8:	f7fc fcab 	bl	8009812 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cebc:	2800      	cmp	r0, #0
 800cebe:	d16a      	bne.n	800cf96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800cec0:	9402      	str	r4, [sp, #8]
 800cec2:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800cec6:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800ceca:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800cece:	2400      	movs	r4, #0
 800ced0:	9301      	str	r3, [sp, #4]
 800ced2:	36a0      	adds	r6, #160	; 0xa0
 800ced4:	42a5      	cmp	r5, r4
 800ced6:	d00d      	beq.n	800cef4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 800ced8:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800cedc:	9802      	ldr	r0, [sp, #8]
 800cede:	f7ff fe97 	bl	800cc10 <_ZNK8touchgfx4Rect8includesERKS0_>
 800cee2:	b128      	cbz	r0, 800cef0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800cee4:	1e69      	subs	r1, r5, #1
 800cee6:	1b09      	subs	r1, r1, r4
 800cee8:	b289      	uxth	r1, r1
 800ceea:	9801      	ldr	r0, [sp, #4]
 800ceec:	f7ff ffa4 	bl	800ce38 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cef0:	3401      	adds	r4, #1
 800cef2:	e7ef      	b.n	800ced4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800cef4:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800cef8:	9703      	str	r7, [sp, #12]
 800cefa:	1e7b      	subs	r3, r7, #1
 800cefc:	9300      	str	r3, [sp, #0]
 800cefe:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800cf02:	2400      	movs	r4, #0
 800cf04:	4655      	mov	r5, sl
 800cf06:	9704      	str	r7, [sp, #16]
 800cf08:	4626      	mov	r6, r4
 800cf0a:	9b04      	ldr	r3, [sp, #16]
 800cf0c:	2b00      	cmp	r3, #0
 800cf0e:	d078      	beq.n	800d002 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 800cf10:	9902      	ldr	r1, [sp, #8]
 800cf12:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800cf16:	f7ff fe59 	bl	800cbcc <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cf1a:	b360      	cbz	r0, 800cf76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800cf1c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800cf20:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800cf24:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800cf28:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800cf2c:	45e6      	cmp	lr, ip
 800cf2e:	db35      	blt.n	800cf9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800cf30:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800cf34:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800cf38:	4472      	add	r2, lr
 800cf3a:	4463      	add	r3, ip
 800cf3c:	b212      	sxth	r2, r2
 800cf3e:	b21b      	sxth	r3, r3
 800cf40:	429a      	cmp	r2, r3
 800cf42:	dc2b      	bgt.n	800cf9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800cf44:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800cf48:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800cf4c:	fa1f f288 	uxth.w	r2, r8
 800cf50:	4413      	add	r3, r2
 800cf52:	b29b      	uxth	r3, r3
 800cf54:	45c1      	cmp	r9, r8
 800cf56:	fa0f fe83 	sxth.w	lr, r3
 800cf5a:	fa1f fc89 	uxth.w	ip, r9
 800cf5e:	db0f      	blt.n	800cf80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 800cf60:	eba3 030c 	sub.w	r3, r3, ip
 800cf64:	1ac9      	subs	r1, r1, r3
 800cf66:	b209      	sxth	r1, r1
 800cf68:	2900      	cmp	r1, #0
 800cf6a:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800cf6e:	dd12      	ble.n	800cf96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800cf70:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800cf74:	4604      	mov	r4, r0
 800cf76:	9b04      	ldr	r3, [sp, #16]
 800cf78:	3b01      	subs	r3, #1
 800cf7a:	9304      	str	r3, [sp, #16]
 800cf7c:	3d08      	subs	r5, #8
 800cf7e:	e7c4      	b.n	800cf0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800cf80:	4461      	add	r1, ip
 800cf82:	b209      	sxth	r1, r1
 800cf84:	4571      	cmp	r1, lr
 800cf86:	dc3a      	bgt.n	800cffe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800cf88:	eba2 020c 	sub.w	r2, r2, ip
 800cf8c:	b212      	sxth	r2, r2
 800cf8e:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800cf92:	2a00      	cmp	r2, #0
 800cf94:	dcee      	bgt.n	800cf74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800cf96:	b00d      	add	sp, #52	; 0x34
 800cf98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf9c:	45c1      	cmp	r9, r8
 800cf9e:	db2e      	blt.n	800cffe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800cfa0:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800cfa4:	4499      	add	r9, r3
 800cfa6:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800cfaa:	4498      	add	r8, r3
 800cfac:	fa0f f989 	sxth.w	r9, r9
 800cfb0:	fa0f f888 	sxth.w	r8, r8
 800cfb4:	45c1      	cmp	r9, r8
 800cfb6:	dc22      	bgt.n	800cffe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800cfb8:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800cfbc:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800cfc0:	fa1f f28c 	uxth.w	r2, ip
 800cfc4:	4413      	add	r3, r2
 800cfc6:	b29b      	uxth	r3, r3
 800cfc8:	45e6      	cmp	lr, ip
 800cfca:	fa1f f88e 	uxth.w	r8, lr
 800cfce:	fa0f f983 	sxth.w	r9, r3
 800cfd2:	db0a      	blt.n	800cfea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 800cfd4:	eba3 0308 	sub.w	r3, r3, r8
 800cfd8:	1ac9      	subs	r1, r1, r3
 800cfda:	b209      	sxth	r1, r1
 800cfdc:	2900      	cmp	r1, #0
 800cfde:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800cfe2:	ddd8      	ble.n	800cf96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800cfe4:	f8ad 9020 	strh.w	r9, [sp, #32]
 800cfe8:	e7c4      	b.n	800cf74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800cfea:	4441      	add	r1, r8
 800cfec:	b209      	sxth	r1, r1
 800cfee:	4549      	cmp	r1, r9
 800cff0:	dc05      	bgt.n	800cffe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800cff2:	eba2 0208 	sub.w	r2, r2, r8
 800cff6:	b212      	sxth	r2, r2
 800cff8:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800cffc:	e7c9      	b.n	800cf92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800cffe:	4606      	mov	r6, r0
 800d000:	e7b9      	b.n	800cf76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800d002:	2c00      	cmp	r4, #0
 800d004:	f47f af7d 	bne.w	800cf02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800d008:	2e00      	cmp	r6, #0
 800d00a:	f000 81dd 	beq.w	800d3c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800d00e:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800d012:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800d016:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800d01a:	b2b9      	uxth	r1, r7
 800d01c:	9104      	str	r1, [sp, #16]
 800d01e:	9804      	ldr	r0, [sp, #16]
 800d020:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800d024:	4401      	add	r1, r0
 800d026:	b2b3      	uxth	r3, r6
 800d028:	b289      	uxth	r1, r1
 800d02a:	441a      	add	r2, r3
 800d02c:	9105      	str	r1, [sp, #20]
 800d02e:	b292      	uxth	r2, r2
 800d030:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800d034:	fa0f f882 	sxth.w	r8, r2
 800d038:	4655      	mov	r5, sl
 800d03a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800d03e:	9b03      	ldr	r3, [sp, #12]
 800d040:	2b00      	cmp	r3, #0
 800d042:	d054      	beq.n	800d0ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800d044:	9902      	ldr	r1, [sp, #8]
 800d046:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800d04a:	f7ff fdbf 	bl	800cbcc <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d04e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800d052:	b1d8      	cbz	r0, 800d08c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800d054:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800d058:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800d05c:	4576      	cmp	r6, lr
 800d05e:	dc26      	bgt.n	800d0ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d060:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800d064:	44f4      	add	ip, lr
 800d066:	fa0f fc8c 	sxth.w	ip, ip
 800d06a:	45e0      	cmp	r8, ip
 800d06c:	db1f      	blt.n	800d0ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d06e:	428f      	cmp	r7, r1
 800d070:	fa1f fc81 	uxth.w	ip, r1
 800d074:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800d078:	dc0f      	bgt.n	800d09a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800d07a:	9805      	ldr	r0, [sp, #20]
 800d07c:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800d080:	eba0 0c0c 	sub.w	ip, r0, ip
 800d084:	eba1 010c 	sub.w	r1, r1, ip
 800d088:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800d08c:	4620      	mov	r0, r4
 800d08e:	9903      	ldr	r1, [sp, #12]
 800d090:	3901      	subs	r1, #1
 800d092:	9103      	str	r1, [sp, #12]
 800d094:	3d08      	subs	r5, #8
 800d096:	4604      	mov	r4, r0
 800d098:	e7cf      	b.n	800d03a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 800d09a:	4461      	add	r1, ip
 800d09c:	b209      	sxth	r1, r1
 800d09e:	4549      	cmp	r1, r9
 800d0a0:	dcf5      	bgt.n	800d08e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d0a2:	9904      	ldr	r1, [sp, #16]
 800d0a4:	eba1 0c0c 	sub.w	ip, r1, ip
 800d0a8:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800d0ac:	e7ee      	b.n	800d08c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800d0ae:	428f      	cmp	r7, r1
 800d0b0:	dced      	bgt.n	800d08e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d0b2:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800d0b6:	4461      	add	r1, ip
 800d0b8:	b209      	sxth	r1, r1
 800d0ba:	4589      	cmp	r9, r1
 800d0bc:	dbe7      	blt.n	800d08e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d0be:	4576      	cmp	r6, lr
 800d0c0:	fa1f fc8e 	uxth.w	ip, lr
 800d0c4:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800d0c8:	dc08      	bgt.n	800d0dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 800d0ca:	eba2 0c0c 	sub.w	ip, r2, ip
 800d0ce:	eba1 010c 	sub.w	r1, r1, ip
 800d0d2:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800d0d6:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800d0da:	e7d7      	b.n	800d08c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800d0dc:	4461      	add	r1, ip
 800d0de:	b209      	sxth	r1, r1
 800d0e0:	4588      	cmp	r8, r1
 800d0e2:	dbd4      	blt.n	800d08e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d0e4:	eba3 0c0c 	sub.w	ip, r3, ip
 800d0e8:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800d0ec:	e7ce      	b.n	800d08c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800d0ee:	2c00      	cmp	r4, #0
 800d0f0:	f000 816a 	beq.w	800d3c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800d0f4:	9b00      	ldr	r3, [sp, #0]
 800d0f6:	3301      	adds	r3, #1
 800d0f8:	f000 8166 	beq.w	800d3c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800d0fc:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800d100:	4621      	mov	r1, r4
 800d102:	9802      	ldr	r0, [sp, #8]
 800d104:	f7ff fd84 	bl	800cc10 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d108:	b120      	cbz	r0, 800d114 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 800d10a:	f8bd 1000 	ldrh.w	r1, [sp]
 800d10e:	9801      	ldr	r0, [sp, #4]
 800d110:	f7ff fe92 	bl	800ce38 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d114:	9902      	ldr	r1, [sp, #8]
 800d116:	4620      	mov	r0, r4
 800d118:	f7ff fd58 	bl	800cbcc <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d11c:	2800      	cmp	r0, #0
 800d11e:	f000 809b 	beq.w	800d258 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 800d122:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800d126:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800d12a:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800d12e:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800d132:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800d136:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800d13a:	fa1f f288 	uxth.w	r2, r8
 800d13e:	19d5      	adds	r5, r2, r7
 800d140:	fa1f f985 	uxth.w	r9, r5
 800d144:	fa0f f589 	sxth.w	r5, r9
 800d148:	b2a1      	uxth	r1, r4
 800d14a:	440b      	add	r3, r1
 800d14c:	9503      	str	r5, [sp, #12]
 800d14e:	45a0      	cmp	r8, r4
 800d150:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800d154:	9507      	str	r5, [sp, #28]
 800d156:	b29b      	uxth	r3, r3
 800d158:	f340 809d 	ble.w	800d296 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800d15c:	1a52      	subs	r2, r2, r1
 800d15e:	b292      	uxth	r2, r2
 800d160:	4584      	cmp	ip, r0
 800d162:	fa0f fe83 	sxth.w	lr, r3
 800d166:	b215      	sxth	r5, r2
 800d168:	dd2f      	ble.n	800d1ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800d16a:	9e00      	ldr	r6, [sp, #0]
 800d16c:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800d170:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800d174:	9e03      	ldr	r6, [sp, #12]
 800d176:	eba6 060e 	sub.w	r6, r6, lr
 800d17a:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800d17e:	fa1f fc8c 	uxth.w	ip, ip
 800d182:	b280      	uxth	r0, r0
 800d184:	ebac 0300 	sub.w	r3, ip, r0
 800d188:	448c      	add	ip, r1
 800d18a:	4470      	add	r0, lr
 800d18c:	b29b      	uxth	r3, r3
 800d18e:	fa0f fc8c 	sxth.w	ip, ip
 800d192:	b200      	sxth	r0, r0
 800d194:	b21c      	sxth	r4, r3
 800d196:	ebac 0000 	sub.w	r0, ip, r0
 800d19a:	4366      	muls	r6, r4
 800d19c:	4368      	muls	r0, r5
 800d19e:	4286      	cmp	r6, r0
 800d1a0:	db09      	blt.n	800d1b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 800d1a2:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800d1a6:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800d1aa:	4417      	add	r7, r2
 800d1ac:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d1b0:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800d1b4:	e685      	b.n	800cec2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d1b6:	440b      	add	r3, r1
 800d1b8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800d1bc:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800d1c0:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800d1c4:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d1c8:	e67b      	b.n	800cec2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d1ca:	9e03      	ldr	r6, [sp, #12]
 800d1cc:	45b6      	cmp	lr, r6
 800d1ce:	da28      	bge.n	800d222 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 800d1d0:	9b00      	ldr	r3, [sp, #0]
 800d1d2:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800d1d6:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800d1da:	eb04 030c 	add.w	r3, r4, ip
 800d1de:	fa1f f883 	uxth.w	r8, r3
 800d1e2:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800d1e6:	4403      	add	r3, r0
 800d1e8:	eba3 0308 	sub.w	r3, r3, r8
 800d1ec:	b29b      	uxth	r3, r3
 800d1ee:	fa0f f988 	sxth.w	r9, r8
 800d1f2:	eba0 000c 	sub.w	r0, r0, ip
 800d1f6:	fa0f f883 	sxth.w	r8, r3
 800d1fa:	eba6 060e 	sub.w	r6, r6, lr
 800d1fe:	4368      	muls	r0, r5
 800d200:	fb08 f606 	mul.w	r6, r8, r6
 800d204:	42b0      	cmp	r0, r6
 800d206:	dc06      	bgt.n	800d216 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 800d208:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800d20c:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800d210:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800d214:	e7c9      	b.n	800d1aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 800d216:	4423      	add	r3, r4
 800d218:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800d21c:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800d220:	e64f      	b.n	800cec2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d222:	9807      	ldr	r0, [sp, #28]
 800d224:	eba3 0309 	sub.w	r3, r3, r9
 800d228:	b29b      	uxth	r3, r3
 800d22a:	2806      	cmp	r0, #6
 800d22c:	fa0f fc83 	sxth.w	ip, r3
 800d230:	d818      	bhi.n	800d264 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 800d232:	4652      	mov	r2, sl
 800d234:	ab0a      	add	r3, sp, #40	; 0x28
 800d236:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800d23a:	6851      	ldr	r1, [r2, #4]
 800d23c:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800d240:	c303      	stmia	r3!, {r0, r1}
 800d242:	9b03      	ldr	r3, [sp, #12]
 800d244:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800d248:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800d24c:	ab0a      	add	r3, sp, #40	; 0x28
 800d24e:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d252:	9801      	ldr	r0, [sp, #4]
 800d254:	f7ff fe06 	bl	800ce64 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d258:	9b00      	ldr	r3, [sp, #0]
 800d25a:	3b01      	subs	r3, #1
 800d25c:	9300      	str	r3, [sp, #0]
 800d25e:	f1aa 0a08 	sub.w	sl, sl, #8
 800d262:	e747      	b.n	800d0f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800d264:	9800      	ldr	r0, [sp, #0]
 800d266:	45ac      	cmp	ip, r5
 800d268:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800d26c:	db0c      	blt.n	800d288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 800d26e:	4417      	add	r7, r2
 800d270:	b2bf      	uxth	r7, r7
 800d272:	4458      	add	r0, fp
 800d274:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800d278:	440f      	add	r7, r1
 800d27a:	f8ad 4020 	strh.w	r4, [sp, #32]
 800d27e:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800d282:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800d286:	e61c      	b.n	800cec2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d288:	4458      	add	r0, fp
 800d28a:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800d28e:	443b      	add	r3, r7
 800d290:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800d294:	e615      	b.n	800cec2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d296:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800d29a:	fa1f f18c 	uxth.w	r1, ip
 800d29e:	eb01 0e05 	add.w	lr, r1, r5
 800d2a2:	b282      	uxth	r2, r0
 800d2a4:	fa1f fe8e 	uxth.w	lr, lr
 800d2a8:	9204      	str	r2, [sp, #16]
 800d2aa:	fa0f f28e 	sxth.w	r2, lr
 800d2ae:	9205      	str	r2, [sp, #20]
 800d2b0:	9e04      	ldr	r6, [sp, #16]
 800d2b2:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800d2b6:	4432      	add	r2, r6
 800d2b8:	b292      	uxth	r2, r2
 800d2ba:	4584      	cmp	ip, r0
 800d2bc:	9206      	str	r2, [sp, #24]
 800d2be:	da26      	bge.n	800d30e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 800d2c0:	eba3 0309 	sub.w	r3, r3, r9
 800d2c4:	eba2 020e 	sub.w	r2, r2, lr
 800d2c8:	b29b      	uxth	r3, r3
 800d2ca:	b292      	uxth	r2, r2
 800d2cc:	fa0f fa83 	sxth.w	sl, r3
 800d2d0:	b211      	sxth	r1, r2
 800d2d2:	eba0 000c 	sub.w	r0, r0, ip
 800d2d6:	eba4 0408 	sub.w	r4, r4, r8
 800d2da:	fb0a f000 	mul.w	r0, sl, r0
 800d2de:	434c      	muls	r4, r1
 800d2e0:	42a0      	cmp	r0, r4
 800d2e2:	9800      	ldr	r0, [sp, #0]
 800d2e4:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800d2e8:	dc06      	bgt.n	800d2f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 800d2ea:	4458      	add	r0, fp
 800d2ec:	9a05      	ldr	r2, [sp, #20]
 800d2ee:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800d2f2:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800d2f6:	e7ca      	b.n	800d28e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800d2f8:	eb0b 0300 	add.w	r3, fp, r0
 800d2fc:	9903      	ldr	r1, [sp, #12]
 800d2fe:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800d302:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800d306:	442a      	add	r2, r5
 800d308:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800d30c:	e5d9      	b.n	800cec2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d30e:	9e04      	ldr	r6, [sp, #16]
 800d310:	9a03      	ldr	r2, [sp, #12]
 800d312:	1b89      	subs	r1, r1, r6
 800d314:	b21e      	sxth	r6, r3
 800d316:	b289      	uxth	r1, r1
 800d318:	4296      	cmp	r6, r2
 800d31a:	fa0f fc81 	sxth.w	ip, r1
 800d31e:	dd26      	ble.n	800d36e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 800d320:	eba3 0309 	sub.w	r3, r3, r9
 800d324:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800d328:	9e05      	ldr	r6, [sp, #20]
 800d32a:	b29b      	uxth	r3, r3
 800d32c:	eba6 0902 	sub.w	r9, r6, r2
 800d330:	b218      	sxth	r0, r3
 800d332:	eba4 0408 	sub.w	r4, r4, r8
 800d336:	fb0c f404 	mul.w	r4, ip, r4
 800d33a:	fb00 f909 	mul.w	r9, r0, r9
 800d33e:	9a00      	ldr	r2, [sp, #0]
 800d340:	454c      	cmp	r4, r9
 800d342:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d346:	db03      	blt.n	800d350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 800d348:	445a      	add	r2, fp
 800d34a:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800d34e:	e79e      	b.n	800d28e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800d350:	eb0b 0302 	add.w	r3, fp, r2
 800d354:	9a03      	ldr	r2, [sp, #12]
 800d356:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800d35a:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800d35e:	4429      	add	r1, r5
 800d360:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800d364:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d368:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800d36c:	e5a9      	b.n	800cec2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d36e:	9b06      	ldr	r3, [sp, #24]
 800d370:	9c07      	ldr	r4, [sp, #28]
 800d372:	eba3 020e 	sub.w	r2, r3, lr
 800d376:	b292      	uxth	r2, r2
 800d378:	2c06      	cmp	r4, #6
 800d37a:	b213      	sxth	r3, r2
 800d37c:	d80d      	bhi.n	800d39a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 800d37e:	4651      	mov	r1, sl
 800d380:	aa0a      	add	r2, sp, #40	; 0x28
 800d382:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800d386:	6849      	ldr	r1, [r1, #4]
 800d388:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800d38c:	9b05      	ldr	r3, [sp, #20]
 800d38e:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800d392:	c203      	stmia	r2!, {r0, r1}
 800d394:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800d398:	e758      	b.n	800d24c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 800d39a:	9c00      	ldr	r4, [sp, #0]
 800d39c:	4563      	cmp	r3, ip
 800d39e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800d3a2:	db0d      	blt.n	800d3c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 800d3a4:	4429      	add	r1, r5
 800d3a6:	9a04      	ldr	r2, [sp, #16]
 800d3a8:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d3ac:	b289      	uxth	r1, r1
 800d3ae:	445c      	add	r4, fp
 800d3b0:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800d3b4:	4411      	add	r1, r2
 800d3b6:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800d3ba:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800d3be:	e580      	b.n	800cec2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d3c0:	445c      	add	r4, fp
 800d3c2:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800d3c6:	e79e      	b.n	800d306 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 800d3c8:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800d3cc:	2f07      	cmp	r7, #7
 800d3ce:	d806      	bhi.n	800d3de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 800d3d0:	ab08      	add	r3, sp, #32
 800d3d2:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d3d6:	9801      	ldr	r0, [sp, #4]
 800d3d8:	f7ff fd44 	bl	800ce64 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d3dc:	e5db      	b.n	800cf96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800d3de:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800d3e2:	f107 39ff 	add.w	r9, r7, #4294967295
 800d3e6:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800d3ea:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800d3ee:	f04f 35ff 	mov.w	r5, #4294967295
 800d3f2:	2400      	movs	r4, #0
 800d3f4:	9304      	str	r3, [sp, #16]
 800d3f6:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800d3fa:	9300      	str	r3, [sp, #0]
 800d3fc:	f109 32ff 	add.w	r2, r9, #4294967295
 800d400:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800d404:	9303      	str	r3, [sp, #12]
 800d406:	4690      	mov	r8, r2
 800d408:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800d40c:	f1b8 3fff 	cmp.w	r8, #4294967295
 800d410:	bf14      	ite	ne
 800d412:	9904      	ldrne	r1, [sp, #16]
 800d414:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800d418:	6818      	ldr	r0, [r3, #0]
 800d41a:	9206      	str	r2, [sp, #24]
 800d41c:	bf18      	it	ne
 800d41e:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800d422:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800d426:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800d42a:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800d42e:	9305      	str	r3, [sp, #20]
 800d430:	fb16 f601 	smulbb	r6, r6, r1
 800d434:	6859      	ldr	r1, [r3, #4]
 800d436:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d43a:	4671      	mov	r1, lr
 800d43c:	a80a      	add	r0, sp, #40	; 0x28
 800d43e:	f7ff fc09 	bl	800cc54 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d442:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800d446:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800d44a:	9b03      	ldr	r3, [sp, #12]
 800d44c:	9a00      	ldr	r2, [sp, #0]
 800d44e:	fb11 f100 	smulbb	r1, r1, r0
 800d452:	fb02 6603 	mla	r6, r2, r3, r6
 800d456:	1b8e      	subs	r6, r1, r6
 800d458:	2008      	movs	r0, #8
 800d45a:	fb91 f1f0 	sdiv	r1, r1, r0
 800d45e:	42b1      	cmp	r1, r6
 800d460:	dc21      	bgt.n	800d4a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800d462:	4556      	cmp	r6, sl
 800d464:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800d468:	da03      	bge.n	800d472 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800d46a:	b1e6      	cbz	r6, 800d4a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800d46c:	46b2      	mov	sl, r6
 800d46e:	4645      	mov	r5, r8
 800d470:	464c      	mov	r4, r9
 800d472:	f108 38ff 	add.w	r8, r8, #4294967295
 800d476:	f118 0f02 	cmn.w	r8, #2
 800d47a:	d1c7      	bne.n	800d40c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 800d47c:	f1b2 3fff 	cmp.w	r2, #4294967295
 800d480:	f1a7 0708 	sub.w	r7, r7, #8
 800d484:	4691      	mov	r9, r2
 800d486:	d1b6      	bne.n	800d3f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 800d488:	9b01      	ldr	r3, [sp, #4]
 800d48a:	b2a6      	uxth	r6, r4
 800d48c:	00e4      	lsls	r4, r4, #3
 800d48e:	1918      	adds	r0, r3, r4
 800d490:	1c6b      	adds	r3, r5, #1
 800d492:	d10b      	bne.n	800d4ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 800d494:	4601      	mov	r1, r0
 800d496:	9802      	ldr	r0, [sp, #8]
 800d498:	f7ff fbdc 	bl	800cc54 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d49c:	4631      	mov	r1, r6
 800d49e:	9801      	ldr	r0, [sp, #4]
 800d4a0:	f7ff fcca 	bl	800ce38 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d4a4:	e50d      	b.n	800cec2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d4a6:	4645      	mov	r5, r8
 800d4a8:	464c      	mov	r4, r9
 800d4aa:	e7ed      	b.n	800d488 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 800d4ac:	9b01      	ldr	r3, [sp, #4]
 800d4ae:	00ed      	lsls	r5, r5, #3
 800d4b0:	1959      	adds	r1, r3, r5
 800d4b2:	f7ff fbcf 	bl	800cc54 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d4b6:	9b02      	ldr	r3, [sp, #8]
 800d4b8:	cb03      	ldmia	r3!, {r0, r1}
 800d4ba:	445d      	add	r5, fp
 800d4bc:	445c      	add	r4, fp
 800d4be:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800d4c2:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800d4c6:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800d4ca:	9b02      	ldr	r3, [sp, #8]
 800d4cc:	6861      	ldr	r1, [r4, #4]
 800d4ce:	c303      	stmia	r3!, {r0, r1}
 800d4d0:	e7e4      	b.n	800d49c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

0800d4d4 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800d4d4:	b530      	push	{r4, r5, lr}
 800d4d6:	4b1d      	ldr	r3, [pc, #116]	; (800d54c <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800d4d8:	b085      	sub	sp, #20
 800d4da:	460c      	mov	r4, r1
 800d4dc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d4e0:	4b1b      	ldr	r3, [pc, #108]	; (800d550 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800d4e2:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d4e6:	2100      	movs	r1, #0
 800d4e8:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d4ec:	9100      	str	r1, [sp, #0]
 800d4ee:	4605      	mov	r5, r0
 800d4f0:	6861      	ldr	r1, [r4, #4]
 800d4f2:	6820      	ldr	r0, [r4, #0]
 800d4f4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d4f8:	ab02      	add	r3, sp, #8
 800d4fa:	c303      	stmia	r3!, {r0, r1}
 800d4fc:	4669      	mov	r1, sp
 800d4fe:	a802      	add	r0, sp, #8
 800d500:	f7fc f944 	bl	800978c <_ZN8touchgfx4RectaNERKS0_>
 800d504:	ab02      	add	r3, sp, #8
 800d506:	cb03      	ldmia	r3!, {r0, r1}
 800d508:	4b12      	ldr	r3, [pc, #72]	; (800d554 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800d50a:	6020      	str	r0, [r4, #0]
 800d50c:	6818      	ldr	r0, [r3, #0]
 800d50e:	6061      	str	r1, [r4, #4]
 800d510:	b138      	cbz	r0, 800d522 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d512:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800d516:	b133      	cbz	r3, 800d526 <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800d518:	6821      	ldr	r1, [r4, #0]
 800d51a:	6862      	ldr	r2, [r4, #4]
 800d51c:	4628      	mov	r0, r5
 800d51e:	f7ff fcc3 	bl	800cea8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d522:	b005      	add	sp, #20
 800d524:	bd30      	pop	{r4, r5, pc}
 800d526:	6803      	ldr	r3, [r0, #0]
 800d528:	4621      	mov	r1, r4
 800d52a:	689b      	ldr	r3, [r3, #8]
 800d52c:	4798      	blx	r3
 800d52e:	4b0a      	ldr	r3, [pc, #40]	; (800d558 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800d530:	6818      	ldr	r0, [r3, #0]
 800d532:	b118      	cbz	r0, 800d53c <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800d534:	6803      	ldr	r3, [r0, #0]
 800d536:	4621      	mov	r1, r4
 800d538:	689b      	ldr	r3, [r3, #8]
 800d53a:	4798      	blx	r3
 800d53c:	4b07      	ldr	r3, [pc, #28]	; (800d55c <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800d53e:	6818      	ldr	r0, [r3, #0]
 800d540:	6803      	ldr	r3, [r0, #0]
 800d542:	4621      	mov	r1, r4
 800d544:	695b      	ldr	r3, [r3, #20]
 800d546:	4798      	blx	r3
 800d548:	e7eb      	b.n	800d522 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d54a:	bf00      	nop
 800d54c:	2000a420 	.word	0x2000a420
 800d550:	2000a422 	.word	0x2000a422
 800d554:	2000a468 	.word	0x2000a468
 800d558:	2000a464 	.word	0x2000a464
 800d55c:	2000a42c 	.word	0x2000a42c

0800d560 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800d560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d564:	4604      	mov	r4, r0
 800d566:	b09b      	sub	sp, #108	; 0x6c
 800d568:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800d56c:	b129      	cbz	r1, 800d57a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800d56e:	2300      	movs	r3, #0
 800d570:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800d574:	b01b      	add	sp, #108	; 0x6c
 800d576:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d57a:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800d57e:	4630      	mov	r0, r6
 800d580:	f7fc f947 	bl	8009812 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d584:	4605      	mov	r5, r0
 800d586:	b940      	cbnz	r0, 800d59a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800d588:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d58c:	4620      	mov	r0, r4
 800d58e:	f7ff fc8b 	bl	800cea8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d592:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800d596:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800d59a:	4ba6      	ldr	r3, [pc, #664]	; (800d834 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d4>)
 800d59c:	681b      	ldr	r3, [r3, #0]
 800d59e:	b33b      	cbz	r3, 800d5f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800d5a0:	4da5      	ldr	r5, [pc, #660]	; (800d838 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800d5a2:	4628      	mov	r0, r5
 800d5a4:	f7fc f935 	bl	8009812 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d5a8:	4606      	mov	r6, r0
 800d5aa:	bb08      	cbnz	r0, 800d5f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800d5ac:	4628      	mov	r0, r5
 800d5ae:	f7ff f98d 	bl	800c8cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d5b2:	6829      	ldr	r1, [r5, #0]
 800d5b4:	686a      	ldr	r2, [r5, #4]
 800d5b6:	4620      	mov	r0, r4
 800d5b8:	f7ff fc76 	bl	800cea8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d5bc:	802e      	strh	r6, [r5, #0]
 800d5be:	806e      	strh	r6, [r5, #2]
 800d5c0:	80ae      	strh	r6, [r5, #4]
 800d5c2:	80ee      	strh	r6, [r5, #6]
 800d5c4:	4f9d      	ldr	r7, [pc, #628]	; (800d83c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800d5c6:	a809      	add	r0, sp, #36	; 0x24
 800d5c8:	f7ff fbe3 	bl	800cd92 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d5cc:	883d      	ldrh	r5, [r7, #0]
 800d5ce:	462e      	mov	r6, r5
 800d5d0:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d5d4:	42b3      	cmp	r3, r6
 800d5d6:	d910      	bls.n	800d5fa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800d5d8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d5dc:	a809      	add	r0, sp, #36	; 0x24
 800d5de:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800d5e2:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800d5e6:	3601      	adds	r6, #1
 800d5e8:	f7ff fc3c 	bl	800ce64 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d5ec:	b2b6      	uxth	r6, r6
 800d5ee:	e7ef      	b.n	800d5d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800d5f0:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d5f4:	2b00      	cmp	r3, #0
 800d5f6:	d1e5      	bne.n	800d5c4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800d5f8:	e7bc      	b.n	800d574 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d5fa:	462e      	mov	r6, r5
 800d5fc:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800d600:	42b3      	cmp	r3, r6
 800d602:	d90b      	bls.n	800d61c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800d604:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d608:	4620      	mov	r0, r4
 800d60a:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800d60e:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800d612:	3601      	adds	r6, #1
 800d614:	f7ff fc48 	bl	800cea8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d618:	b2b6      	uxth	r6, r6
 800d61a:	e7ef      	b.n	800d5fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800d61c:	4a88      	ldr	r2, [pc, #544]	; (800d840 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800d61e:	6813      	ldr	r3, [r2, #0]
 800d620:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800d624:	2b01      	cmp	r3, #1
 800d626:	4690      	mov	r8, r2
 800d628:	f040 8093 	bne.w	800d752 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f2>
 800d62c:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800d630:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800d634:	33aa      	adds	r3, #170	; 0xaa
 800d636:	f04f 0900 	mov.w	r9, #0
 800d63a:	42a8      	cmp	r0, r5
 800d63c:	f103 0308 	add.w	r3, r3, #8
 800d640:	dd0a      	ble.n	800d658 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800d642:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800d646:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800d64a:	440a      	add	r2, r1
 800d64c:	b212      	sxth	r2, r2
 800d64e:	4591      	cmp	r9, r2
 800d650:	bfb8      	it	lt
 800d652:	4691      	movlt	r9, r2
 800d654:	3501      	adds	r5, #1
 800d656:	e7f0      	b.n	800d63a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800d658:	4b7a      	ldr	r3, [pc, #488]	; (800d844 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800d65a:	4e7b      	ldr	r6, [pc, #492]	; (800d848 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800d65c:	881d      	ldrh	r5, [r3, #0]
 800d65e:	2300      	movs	r3, #0
 800d660:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800d664:	2d0f      	cmp	r5, #15
 800d666:	bf8c      	ite	hi
 800d668:	08ed      	lsrhi	r5, r5, #3
 800d66a:	2501      	movls	r5, #1
 800d66c:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d670:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800d674:	f8d8 0000 	ldr.w	r0, [r8]
 800d678:	440b      	add	r3, r1
 800d67a:	b21b      	sxth	r3, r3
 800d67c:	4599      	cmp	r9, r3
 800d67e:	6802      	ldr	r2, [r0, #0]
 800d680:	dd4a      	ble.n	800d718 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1b8>
 800d682:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 800d686:	4798      	blx	r3
 800d688:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800d68c:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d690:	4413      	add	r3, r2
 800d692:	b21b      	sxth	r3, r3
 800d694:	195a      	adds	r2, r3, r5
 800d696:	4290      	cmp	r0, r2
 800d698:	da07      	bge.n	800d6aa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800d69a:	4581      	cmp	r9, r0
 800d69c:	dd05      	ble.n	800d6aa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800d69e:	4298      	cmp	r0, r3
 800d6a0:	da33      	bge.n	800d70a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800d6a2:	2b00      	cmp	r3, #0
 800d6a4:	dd31      	ble.n	800d70a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800d6a6:	4648      	mov	r0, r9
 800d6a8:	e004      	b.n	800d6b4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800d6aa:	4298      	cmp	r0, r3
 800d6ac:	dbfb      	blt.n	800d6a6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800d6ae:	4548      	cmp	r0, r9
 800d6b0:	bfa8      	it	ge
 800d6b2:	4648      	movge	r0, r9
 800d6b4:	f9b6 2000 	ldrsh.w	r2, [r6]
 800d6b8:	f8b7 a000 	ldrh.w	sl, [r7]
 800d6bc:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d6c0:	2100      	movs	r1, #0
 800d6c2:	1ac0      	subs	r0, r0, r3
 800d6c4:	f8ad 1014 	strh.w	r1, [sp, #20]
 800d6c8:	f8ad 2018 	strh.w	r2, [sp, #24]
 800d6cc:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d6d0:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d6d4:	4553      	cmp	r3, sl
 800d6d6:	d9c9      	bls.n	800d66c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800d6d8:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800d6dc:	ab07      	add	r3, sp, #28
 800d6de:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d6e2:	6851      	ldr	r1, [r2, #4]
 800d6e4:	c303      	stmia	r3!, {r0, r1}
 800d6e6:	a807      	add	r0, sp, #28
 800d6e8:	a905      	add	r1, sp, #20
 800d6ea:	f7fc f84f 	bl	800978c <_ZN8touchgfx4RectaNERKS0_>
 800d6ee:	a807      	add	r0, sp, #28
 800d6f0:	f7fc f88f 	bl	8009812 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d6f4:	b920      	cbnz	r0, 800d700 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800d6f6:	6823      	ldr	r3, [r4, #0]
 800d6f8:	a907      	add	r1, sp, #28
 800d6fa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d6fc:	4620      	mov	r0, r4
 800d6fe:	4798      	blx	r3
 800d700:	f10a 0a01 	add.w	sl, sl, #1
 800d704:	fa1f fa8a 	uxth.w	sl, sl
 800d708:	e7e2      	b.n	800d6d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800d70a:	f8d8 0000 	ldr.w	r0, [r8]
 800d70e:	6803      	ldr	r3, [r0, #0]
 800d710:	2101      	movs	r1, #1
 800d712:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d714:	4798      	blx	r3
 800d716:	e7a9      	b.n	800d66c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800d718:	69d3      	ldr	r3, [r2, #28]
 800d71a:	4798      	blx	r3
 800d71c:	4b4b      	ldr	r3, [pc, #300]	; (800d84c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800d71e:	781b      	ldrb	r3, [r3, #0]
 800d720:	2b00      	cmp	r3, #0
 800d722:	f43f af27 	beq.w	800d574 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d726:	2300      	movs	r3, #0
 800d728:	883d      	ldrh	r5, [r7, #0]
 800d72a:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800d72e:	34ea      	adds	r4, #234	; 0xea
 800d730:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800d734:	42ab      	cmp	r3, r5
 800d736:	f67f af1d 	bls.w	800d574 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d73a:	ab1a      	add	r3, sp, #104	; 0x68
 800d73c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d740:	3b44      	subs	r3, #68	; 0x44
 800d742:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d746:	4620      	mov	r0, r4
 800d748:	3501      	adds	r5, #1
 800d74a:	f7ff fb8b 	bl	800ce64 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d74e:	b2ad      	uxth	r5, r5
 800d750:	e7ee      	b.n	800d730 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d0>
 800d752:	2b02      	cmp	r3, #2
 800d754:	f040 813c 	bne.w	800d9d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x470>
 800d758:	4b3d      	ldr	r3, [pc, #244]	; (800d850 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 800d75a:	781b      	ldrb	r3, [r3, #0]
 800d75c:	2b01      	cmp	r3, #1
 800d75e:	d02c      	beq.n	800d7ba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25a>
 800d760:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800d764:	883a      	ldrh	r2, [r7, #0]
 800d766:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800d76a:	3201      	adds	r2, #1
 800d76c:	b292      	uxth	r2, r2
 800d76e:	2900      	cmp	r1, #0
 800d770:	d0d4      	beq.n	800d71c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 800d772:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800d776:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800d77a:	441d      	add	r5, r3
 800d77c:	b22d      	sxth	r5, r5
 800d77e:	4610      	mov	r0, r2
 800d780:	f04f 0a00 	mov.w	sl, #0
 800d784:	b283      	uxth	r3, r0
 800d786:	4299      	cmp	r1, r3
 800d788:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800d78c:	f240 80c4 	bls.w	800d918 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b8>
 800d790:	4426      	add	r6, r4
 800d792:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800d796:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800d79a:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800d79e:	4573      	cmp	r3, lr
 800d7a0:	4684      	mov	ip, r0
 800d7a2:	f340 80a6 	ble.w	800d8f2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x392>
 800d7a6:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800d7aa:	4475      	add	r5, lr
 800d7ac:	b22d      	sxth	r5, r5
 800d7ae:	429d      	cmp	r5, r3
 800d7b0:	bfa8      	it	ge
 800d7b2:	461d      	movge	r5, r3
 800d7b4:	3001      	adds	r0, #1
 800d7b6:	46e2      	mov	sl, ip
 800d7b8:	e7e4      	b.n	800d784 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x224>
 800d7ba:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800d7be:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800d7c2:	f1bb 0f00 	cmp.w	fp, #0
 800d7c6:	d0a9      	beq.n	800d71c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 800d7c8:	883b      	ldrh	r3, [r7, #0]
 800d7ca:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800d7ce:	3301      	adds	r3, #1
 800d7d0:	b29b      	uxth	r3, r3
 800d7d2:	2600      	movs	r6, #0
 800d7d4:	b299      	uxth	r1, r3
 800d7d6:	458b      	cmp	fp, r1
 800d7d8:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800d7dc:	d93a      	bls.n	800d854 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>
 800d7de:	4425      	add	r5, r4
 800d7e0:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800d7e4:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800d7e8:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800d7ec:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800d7f0:	4408      	add	r0, r1
 800d7f2:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800d7f6:	4471      	add	r1, lr
 800d7f8:	b200      	sxth	r0, r0
 800d7fa:	b209      	sxth	r1, r1
 800d7fc:	4288      	cmp	r0, r1
 800d7fe:	469c      	mov	ip, r3
 800d800:	da06      	bge.n	800d810 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b0>
 800d802:	4586      	cmp	lr, r0
 800d804:	4672      	mov	r2, lr
 800d806:	bfb8      	it	lt
 800d808:	4602      	movlt	r2, r0
 800d80a:	3301      	adds	r3, #1
 800d80c:	4666      	mov	r6, ip
 800d80e:	e7e1      	b.n	800d7d4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x274>
 800d810:	d10b      	bne.n	800d82a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ca>
 800d812:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800d816:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800d81a:	458c      	cmp	ip, r1
 800d81c:	bfb4      	ite	lt
 800d81e:	469c      	movlt	ip, r3
 800d820:	46b4      	movge	ip, r6
 800d822:	4572      	cmp	r2, lr
 800d824:	bfb8      	it	lt
 800d826:	4672      	movlt	r2, lr
 800d828:	e7ef      	b.n	800d80a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2aa>
 800d82a:	428a      	cmp	r2, r1
 800d82c:	bfb8      	it	lt
 800d82e:	460a      	movlt	r2, r1
 800d830:	46b4      	mov	ip, r6
 800d832:	e7ea      	b.n	800d80a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2aa>
 800d834:	2000a464 	.word	0x2000a464
 800d838:	2000a470 	.word	0x2000a470
 800d83c:	20000060 	.word	0x20000060
 800d840:	2000a42c 	.word	0x2000a42c
 800d844:	2000a422 	.word	0x2000a422
 800d848:	2000a420 	.word	0x2000a420
 800d84c:	2000a42a 	.word	0x2000a42a
 800d850:	2000a424 	.word	0x2000a424
 800d854:	1961      	adds	r1, r4, r5
 800d856:	ab07      	add	r3, sp, #28
 800d858:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800d85c:	6849      	ldr	r1, [r1, #4]
 800d85e:	c303      	stmia	r3!, {r0, r1}
 800d860:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d864:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d868:	2b13      	cmp	r3, #19
 800d86a:	bfd8      	it	le
 800d86c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800d870:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d874:	440b      	add	r3, r1
 800d876:	1a9b      	subs	r3, r3, r2
 800d878:	a807      	add	r0, sp, #28
 800d87a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d87e:	f7ff f89b 	bl	800c9b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d882:	a807      	add	r0, sp, #28
 800d884:	f7fb ffc5 	bl	8009812 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d888:	2800      	cmp	r0, #0
 800d88a:	d198      	bne.n	800d7be <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800d88c:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800d890:	f8d8 0000 	ldr.w	r0, [r8]
 800d894:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d898:	f8d0 e000 	ldr.w	lr, [r0]
 800d89c:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800d8a0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d8a4:	f1bc 0f14 	cmp.w	ip, #20
 800d8a8:	bfa8      	it	ge
 800d8aa:	f04f 0c14 	movge.w	ip, #20
 800d8ae:	fa1f fc8c 	uxth.w	ip, ip
 800d8b2:	f8cd c000 	str.w	ip, [sp]
 800d8b6:	f8de a074 	ldr.w	sl, [lr, #116]	; 0x74
 800d8ba:	47d0      	blx	sl
 800d8bc:	4682      	mov	sl, r0
 800d8be:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d8c2:	a807      	add	r0, sp, #28
 800d8c4:	f7ff f802 	bl	800c8cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d8c8:	6823      	ldr	r3, [r4, #0]
 800d8ca:	4425      	add	r5, r4
 800d8cc:	4620      	mov	r0, r4
 800d8ce:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d8d0:	a907      	add	r1, sp, #28
 800d8d2:	4798      	blx	r3
 800d8d4:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800d8d8:	eba0 000a 	sub.w	r0, r0, sl
 800d8dc:	b200      	sxth	r0, r0
 800d8de:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800d8e2:	2800      	cmp	r0, #0
 800d8e4:	f47f af6b 	bne.w	800d7be <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800d8e8:	b2b1      	uxth	r1, r6
 800d8ea:	4648      	mov	r0, r9
 800d8ec:	f7ff faa4 	bl	800ce38 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d8f0:	e765      	b.n	800d7be <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800d8f2:	d10c      	bne.n	800d90e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3ae>
 800d8f4:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800d8f8:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800d8fc:	45b4      	cmp	ip, r6
 800d8fe:	bfb4      	ite	lt
 800d900:	4684      	movlt	ip, r0
 800d902:	46d4      	movge	ip, sl
 800d904:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800d908:	4433      	add	r3, r6
 800d90a:	b21b      	sxth	r3, r3
 800d90c:	e74f      	b.n	800d7ae <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x24e>
 800d90e:	4575      	cmp	r5, lr
 800d910:	bfa8      	it	ge
 800d912:	4675      	movge	r5, lr
 800d914:	46d4      	mov	ip, sl
 800d916:	e74d      	b.n	800d7b4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x254>
 800d918:	eb0b 0006 	add.w	r0, fp, r6
 800d91c:	4426      	add	r6, r4
 800d91e:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800d922:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800d926:	f1b9 0f13 	cmp.w	r9, #19
 800d92a:	bfde      	ittt	le
 800d92c:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800d930:	444d      	addle	r5, r9
 800d932:	b22d      	sxthle	r5, r5
 800d934:	f7fb ff6d 	bl	8009812 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d938:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800d93c:	2800      	cmp	r0, #0
 800d93e:	f47f af16 	bne.w	800d76e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x20e>
 800d942:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800d946:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d94a:	eba5 050c 	sub.w	r5, r5, ip
 800d94e:	fa1f f28c 	uxth.w	r2, ip
 800d952:	fa1f f989 	uxth.w	r9, r9
 800d956:	eb02 0009 	add.w	r0, r2, r9
 800d95a:	2d14      	cmp	r5, #20
 800d95c:	bfa8      	it	ge
 800d95e:	2514      	movge	r5, #20
 800d960:	b200      	sxth	r0, r0
 800d962:	fa1f fe85 	uxth.w	lr, r5
 800d966:	eba0 000c 	sub.w	r0, r0, ip
 800d96a:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800d96e:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800d972:	f8ad 101c 	strh.w	r1, [sp, #28]
 800d976:	4586      	cmp	lr, r0
 800d978:	f8d8 0000 	ldr.w	r0, [r8]
 800d97c:	f8ad c01e 	strh.w	ip, [sp, #30]
 800d980:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d984:	bfb8      	it	lt
 800d986:	46f1      	movlt	r9, lr
 800d988:	6805      	ldr	r5, [r0, #0]
 800d98a:	f8cd 9000 	str.w	r9, [sp]
 800d98e:	b29b      	uxth	r3, r3
 800d990:	b289      	uxth	r1, r1
 800d992:	6f6d      	ldr	r5, [r5, #116]	; 0x74
 800d994:	47a8      	blx	r5
 800d996:	6823      	ldr	r3, [r4, #0]
 800d998:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d99c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d99e:	a907      	add	r1, sp, #28
 800d9a0:	4620      	mov	r0, r4
 800d9a2:	4798      	blx	r3
 800d9a4:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800d9a8:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800d9ac:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800d9b0:	1a5b      	subs	r3, r3, r1
 800d9b2:	440a      	add	r2, r1
 800d9b4:	b21b      	sxth	r3, r3
 800d9b6:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800d9ba:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800d9be:	2b00      	cmp	r3, #0
 800d9c0:	f47f aed0 	bne.w	800d764 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
 800d9c4:	fa1f f18a 	uxth.w	r1, sl
 800d9c8:	4658      	mov	r0, fp
 800d9ca:	f7ff fa35 	bl	800ce38 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d9ce:	e6c9      	b.n	800d764 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
 800d9d0:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d9d4:	42ab      	cmp	r3, r5
 800d9d6:	f67f aea1 	bls.w	800d71c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 800d9da:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800d9de:	ab07      	add	r3, sp, #28
 800d9e0:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d9e4:	6851      	ldr	r1, [r2, #4]
 800d9e6:	c303      	stmia	r3!, {r0, r1}
 800d9e8:	a807      	add	r0, sp, #28
 800d9ea:	f7fb ff12 	bl	8009812 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d9ee:	b920      	cbnz	r0, 800d9fa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x49a>
 800d9f0:	6823      	ldr	r3, [r4, #0]
 800d9f2:	a907      	add	r1, sp, #28
 800d9f4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d9f6:	4620      	mov	r0, r4
 800d9f8:	4798      	blx	r3
 800d9fa:	3501      	adds	r5, #1
 800d9fc:	b2ad      	uxth	r5, r5
 800d9fe:	e7e7      	b.n	800d9d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x470>

0800da00 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800da00:	4b03      	ldr	r3, [pc, #12]	; (800da10 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800da02:	2200      	movs	r2, #0
 800da04:	801a      	strh	r2, [r3, #0]
 800da06:	805a      	strh	r2, [r3, #2]
 800da08:	809a      	strh	r2, [r3, #4]
 800da0a:	80da      	strh	r2, [r3, #6]
 800da0c:	4770      	bx	lr
 800da0e:	bf00      	nop
 800da10:	2000a470 	.word	0x2000a470

0800da14 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800da14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da18:	4607      	mov	r7, r0
 800da1a:	b099      	sub	sp, #100	; 0x64
 800da1c:	a802      	add	r0, sp, #8
 800da1e:	4614      	mov	r4, r2
 800da20:	461d      	mov	r5, r3
 800da22:	468a      	mov	sl, r1
 800da24:	f000 fe49 	bl	800e6ba <_ZN8touchgfx12TextProviderC1Ev>
 800da28:	683b      	ldr	r3, [r7, #0]
 800da2a:	4638      	mov	r0, r7
 800da2c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800da2e:	4798      	blx	r3
 800da30:	462a      	mov	r2, r5
 800da32:	4603      	mov	r3, r0
 800da34:	4621      	mov	r1, r4
 800da36:	a802      	add	r0, sp, #8
 800da38:	f000 fe84 	bl	800e744 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800da3c:	2500      	movs	r5, #0
 800da3e:	462c      	mov	r4, r5
 800da40:	46a9      	mov	r9, r5
 800da42:	46a8      	mov	r8, r5
 800da44:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800da48:	2300      	movs	r3, #0
 800da4a:	9301      	str	r3, [sp, #4]
 800da4c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800da50:	429c      	cmp	r4, r3
 800da52:	d002      	beq.n	800da5a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x46>
 800da54:	455c      	cmp	r4, fp
 800da56:	bf18      	it	ne
 800da58:	4625      	movne	r5, r4
 800da5a:	ab01      	add	r3, sp, #4
 800da5c:	463a      	mov	r2, r7
 800da5e:	4651      	mov	r1, sl
 800da60:	a802      	add	r0, sp, #8
 800da62:	f001 f969 	bl	800ed38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800da66:	4604      	mov	r4, r0
 800da68:	b108      	cbz	r0, 800da6e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5a>
 800da6a:	280a      	cmp	r0, #10
 800da6c:	d10a      	bne.n	800da84 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>
 800da6e:	45c1      	cmp	r9, r8
 800da70:	bf38      	it	cc
 800da72:	46c1      	movcc	r9, r8
 800da74:	f04f 0800 	mov.w	r8, #0
 800da78:	2c00      	cmp	r4, #0
 800da7a:	d1e5      	bne.n	800da48 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800da7c:	4648      	mov	r0, r9
 800da7e:	b019      	add	sp, #100	; 0x64
 800da80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da84:	9a01      	ldr	r2, [sp, #4]
 800da86:	2a00      	cmp	r2, #0
 800da88:	d0de      	beq.n	800da48 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800da8a:	7b56      	ldrb	r6, [r2, #13]
 800da8c:	683b      	ldr	r3, [r7, #0]
 800da8e:	8894      	ldrh	r4, [r2, #4]
 800da90:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800da92:	0076      	lsls	r6, r6, #1
 800da94:	f406 7080 	and.w	r0, r6, #256	; 0x100
 800da98:	7a96      	ldrb	r6, [r2, #10]
 800da9a:	4629      	mov	r1, r5
 800da9c:	4306      	orrs	r6, r0
 800da9e:	4638      	mov	r0, r7
 800daa0:	4798      	blx	r3
 800daa2:	4430      	add	r0, r6
 800daa4:	4480      	add	r8, r0
 800daa6:	fa1f f888 	uxth.w	r8, r8
 800daaa:	e7e5      	b.n	800da78 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x64>

0800daac <_ZNK8touchgfx4Font12getCharWidthEt>:
 800daac:	b508      	push	{r3, lr}
 800daae:	6803      	ldr	r3, [r0, #0]
 800dab0:	68db      	ldr	r3, [r3, #12]
 800dab2:	4798      	blx	r3
 800dab4:	b128      	cbz	r0, 800dac2 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800dab6:	7b43      	ldrb	r3, [r0, #13]
 800dab8:	7a80      	ldrb	r0, [r0, #10]
 800daba:	005b      	lsls	r3, r3, #1
 800dabc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800dac0:	4318      	orrs	r0, r3
 800dac2:	bd08      	pop	{r3, pc}

0800dac4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800dac4:	b40e      	push	{r1, r2, r3}
 800dac6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dac8:	b098      	sub	sp, #96	; 0x60
 800daca:	ab1d      	add	r3, sp, #116	; 0x74
 800dacc:	4605      	mov	r5, r0
 800dace:	f853 4b04 	ldr.w	r4, [r3], #4
 800dad2:	9300      	str	r3, [sp, #0]
 800dad4:	a802      	add	r0, sp, #8
 800dad6:	f000 fdf0 	bl	800e6ba <_ZN8touchgfx12TextProviderC1Ev>
 800dada:	682b      	ldr	r3, [r5, #0]
 800dadc:	4628      	mov	r0, r5
 800dade:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dae0:	4798      	blx	r3
 800dae2:	ae18      	add	r6, sp, #96	; 0x60
 800dae4:	4603      	mov	r3, r0
 800dae6:	4621      	mov	r1, r4
 800dae8:	9a00      	ldr	r2, [sp, #0]
 800daea:	2400      	movs	r4, #0
 800daec:	a802      	add	r0, sp, #8
 800daee:	f000 fe29 	bl	800e744 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800daf2:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800daf6:	462a      	mov	r2, r5
 800daf8:	4633      	mov	r3, r6
 800dafa:	4621      	mov	r1, r4
 800dafc:	a802      	add	r0, sp, #8
 800dafe:	f001 f91b 	bl	800ed38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800db02:	b1f0      	cbz	r0, 800db42 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7e>
 800db04:	280a      	cmp	r0, #10
 800db06:	d018      	beq.n	800db3a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800db08:	9f01      	ldr	r7, [sp, #4]
 800db0a:	b1b7      	cbz	r7, 800db3a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800db0c:	7b78      	ldrb	r0, [r7, #13]
 800db0e:	7a3b      	ldrb	r3, [r7, #8]
 800db10:	88aa      	ldrh	r2, [r5, #4]
 800db12:	00c1      	lsls	r1, r0, #3
 800db14:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800db18:	4319      	orrs	r1, r3
 800db1a:	0643      	lsls	r3, r0, #25
 800db1c:	bf44      	itt	mi
 800db1e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800db22:	b219      	sxthmi	r1, r3
 800db24:	0100      	lsls	r0, r0, #4
 800db26:	79fb      	ldrb	r3, [r7, #7]
 800db28:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800db2c:	4303      	orrs	r3, r0
 800db2e:	4413      	add	r3, r2
 800db30:	1a5b      	subs	r3, r3, r1
 800db32:	b29b      	uxth	r3, r3
 800db34:	42a3      	cmp	r3, r4
 800db36:	bfc8      	it	gt
 800db38:	b21c      	sxthgt	r4, r3
 800db3a:	4633      	mov	r3, r6
 800db3c:	462a      	mov	r2, r5
 800db3e:	2100      	movs	r1, #0
 800db40:	e7dc      	b.n	800dafc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x38>
 800db42:	b2a0      	uxth	r0, r4
 800db44:	b018      	add	sp, #96	; 0x60
 800db46:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800db4a:	b003      	add	sp, #12
 800db4c:	4770      	bx	lr

0800db4e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800db4e:	b40e      	push	{r1, r2, r3}
 800db50:	b530      	push	{r4, r5, lr}
 800db52:	b098      	sub	sp, #96	; 0x60
 800db54:	ab1b      	add	r3, sp, #108	; 0x6c
 800db56:	4604      	mov	r4, r0
 800db58:	f853 5b04 	ldr.w	r5, [r3], #4
 800db5c:	9301      	str	r3, [sp, #4]
 800db5e:	a802      	add	r0, sp, #8
 800db60:	f000 fdab 	bl	800e6ba <_ZN8touchgfx12TextProviderC1Ev>
 800db64:	6823      	ldr	r3, [r4, #0]
 800db66:	4620      	mov	r0, r4
 800db68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800db6a:	4798      	blx	r3
 800db6c:	9a01      	ldr	r2, [sp, #4]
 800db6e:	4603      	mov	r3, r0
 800db70:	4629      	mov	r1, r5
 800db72:	a802      	add	r0, sp, #8
 800db74:	f000 fde6 	bl	800e744 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800db78:	a802      	add	r0, sp, #8
 800db7a:	f001 f9d5 	bl	800ef28 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800db7e:	2401      	movs	r4, #1
 800db80:	b2a3      	uxth	r3, r4
 800db82:	b140      	cbz	r0, 800db96 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800db84:	280a      	cmp	r0, #10
 800db86:	bf08      	it	eq
 800db88:	3301      	addeq	r3, #1
 800db8a:	a802      	add	r0, sp, #8
 800db8c:	bf08      	it	eq
 800db8e:	b21c      	sxtheq	r4, r3
 800db90:	f001 f9ca 	bl	800ef28 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800db94:	e7f4      	b.n	800db80 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800db96:	4618      	mov	r0, r3
 800db98:	b018      	add	sp, #96	; 0x60
 800db9a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800db9e:	b003      	add	sp, #12
 800dba0:	4770      	bx	lr

0800dba2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800dba2:	b40e      	push	{r1, r2, r3}
 800dba4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dba6:	b098      	sub	sp, #96	; 0x60
 800dba8:	ab1d      	add	r3, sp, #116	; 0x74
 800dbaa:	4604      	mov	r4, r0
 800dbac:	f853 5b04 	ldr.w	r5, [r3], #4
 800dbb0:	9300      	str	r3, [sp, #0]
 800dbb2:	a802      	add	r0, sp, #8
 800dbb4:	f000 fd81 	bl	800e6ba <_ZN8touchgfx12TextProviderC1Ev>
 800dbb8:	6823      	ldr	r3, [r4, #0]
 800dbba:	4620      	mov	r0, r4
 800dbbc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dbbe:	4798      	blx	r3
 800dbc0:	4629      	mov	r1, r5
 800dbc2:	4603      	mov	r3, r0
 800dbc4:	9a00      	ldr	r2, [sp, #0]
 800dbc6:	a802      	add	r0, sp, #8
 800dbc8:	ad18      	add	r5, sp, #96	; 0x60
 800dbca:	f000 fdbb 	bl	800e744 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800dbce:	2100      	movs	r1, #0
 800dbd0:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800dbd4:	4622      	mov	r2, r4
 800dbd6:	462b      	mov	r3, r5
 800dbd8:	a802      	add	r0, sp, #8
 800dbda:	f001 f8ad 	bl	800ed38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dbde:	26ff      	movs	r6, #255	; 0xff
 800dbe0:	b1d8      	cbz	r0, 800dc1a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800dbe2:	280a      	cmp	r0, #10
 800dbe4:	d012      	beq.n	800dc0c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800dbe6:	9801      	ldr	r0, [sp, #4]
 800dbe8:	b180      	cbz	r0, 800dc0c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800dbea:	7b47      	ldrb	r7, [r0, #13]
 800dbec:	7922      	ldrb	r2, [r4, #4]
 800dbee:	00fb      	lsls	r3, r7, #3
 800dbf0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800dbf4:	7a03      	ldrb	r3, [r0, #8]
 800dbf6:	430b      	orrs	r3, r1
 800dbf8:	0679      	lsls	r1, r7, #25
 800dbfa:	bf44      	itt	mi
 800dbfc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800dc00:	b21b      	sxthmi	r3, r3
 800dc02:	1ad3      	subs	r3, r2, r3
 800dc04:	b2db      	uxtb	r3, r3
 800dc06:	429e      	cmp	r6, r3
 800dc08:	bf28      	it	cs
 800dc0a:	461e      	movcs	r6, r3
 800dc0c:	462b      	mov	r3, r5
 800dc0e:	4622      	mov	r2, r4
 800dc10:	2100      	movs	r1, #0
 800dc12:	a802      	add	r0, sp, #8
 800dc14:	f001 f890 	bl	800ed38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dc18:	e7e2      	b.n	800dbe0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800dc1a:	4630      	mov	r0, r6
 800dc1c:	b018      	add	sp, #96	; 0x60
 800dc1e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800dc22:	b003      	add	sp, #12
 800dc24:	4770      	bx	lr

0800dc26 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800dc26:	b513      	push	{r0, r1, r4, lr}
 800dc28:	1d01      	adds	r1, r0, #4
 800dc2a:	4603      	mov	r3, r0
 800dc2c:	c903      	ldmia	r1, {r0, r1}
 800dc2e:	466a      	mov	r2, sp
 800dc30:	e882 0003 	stmia.w	r2, {r0, r1}
 800dc34:	2100      	movs	r1, #0
 800dc36:	9100      	str	r1, [sp, #0]
 800dc38:	6819      	ldr	r1, [r3, #0]
 800dc3a:	4618      	mov	r0, r3
 800dc3c:	690c      	ldr	r4, [r1, #16]
 800dc3e:	4611      	mov	r1, r2
 800dc40:	47a0      	blx	r4
 800dc42:	b002      	add	sp, #8
 800dc44:	bd10      	pop	{r4, pc}

0800dc46 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800dc46:	b538      	push	{r3, r4, r5, lr}
 800dc48:	680b      	ldr	r3, [r1, #0]
 800dc4a:	460c      	mov	r4, r1
 800dc4c:	68db      	ldr	r3, [r3, #12]
 800dc4e:	4605      	mov	r5, r0
 800dc50:	4798      	blx	r3
 800dc52:	6823      	ldr	r3, [r4, #0]
 800dc54:	4620      	mov	r0, r4
 800dc56:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dc58:	4629      	mov	r1, r5
 800dc5a:	4798      	blx	r3
 800dc5c:	4628      	mov	r0, r5
 800dc5e:	bd38      	pop	{r3, r4, r5, pc}

0800dc60 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800dc60:	b410      	push	{r4}
 800dc62:	880a      	ldrh	r2, [r1, #0]
 800dc64:	8884      	ldrh	r4, [r0, #4]
 800dc66:	4422      	add	r2, r4
 800dc68:	800a      	strh	r2, [r1, #0]
 800dc6a:	88c4      	ldrh	r4, [r0, #6]
 800dc6c:	884a      	ldrh	r2, [r1, #2]
 800dc6e:	4422      	add	r2, r4
 800dc70:	804a      	strh	r2, [r1, #2]
 800dc72:	6940      	ldr	r0, [r0, #20]
 800dc74:	b120      	cbz	r0, 800dc80 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800dc76:	6803      	ldr	r3, [r0, #0]
 800dc78:	f85d 4b04 	ldr.w	r4, [sp], #4
 800dc7c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dc7e:	4718      	bx	r3
 800dc80:	f85d 4b04 	ldr.w	r4, [sp], #4
 800dc84:	4770      	bx	lr

0800dc86 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800dc86:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dc88:	460b      	mov	r3, r1
 800dc8a:	b085      	sub	sp, #20
 800dc8c:	4604      	mov	r4, r0
 800dc8e:	b901      	cbnz	r1, 800dc92 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800dc90:	b322      	cbz	r2, 800dcdc <_ZN8touchgfx8Drawable12moveRelativeEss+0x56>
 800dc92:	1d27      	adds	r7, r4, #4
 800dc94:	e897 0003 	ldmia.w	r7, {r0, r1}
 800dc98:	466e      	mov	r6, sp
 800dc9a:	e886 0003 	stmia.w	r6, {r0, r1}
 800dc9e:	88a1      	ldrh	r1, [r4, #4]
 800dca0:	88e5      	ldrh	r5, [r4, #6]
 800dca2:	4419      	add	r1, r3
 800dca4:	6823      	ldr	r3, [r4, #0]
 800dca6:	442a      	add	r2, r5
 800dca8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dcaa:	b209      	sxth	r1, r1
 800dcac:	4620      	mov	r0, r4
 800dcae:	b215      	sxth	r5, r2
 800dcb0:	4798      	blx	r3
 800dcb2:	6823      	ldr	r3, [r4, #0]
 800dcb4:	4629      	mov	r1, r5
 800dcb6:	4620      	mov	r0, r4
 800dcb8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dcba:	4798      	blx	r3
 800dcbc:	e897 0003 	ldmia.w	r7, {r0, r1}
 800dcc0:	ad02      	add	r5, sp, #8
 800dcc2:	e885 0003 	stmia.w	r5, {r0, r1}
 800dcc6:	6960      	ldr	r0, [r4, #20]
 800dcc8:	b150      	cbz	r0, 800dce0 <_ZN8touchgfx8Drawable12moveRelativeEss+0x5a>
 800dcca:	6803      	ldr	r3, [r0, #0]
 800dccc:	4631      	mov	r1, r6
 800dcce:	691b      	ldr	r3, [r3, #16]
 800dcd0:	4798      	blx	r3
 800dcd2:	6960      	ldr	r0, [r4, #20]
 800dcd4:	6803      	ldr	r3, [r0, #0]
 800dcd6:	691b      	ldr	r3, [r3, #16]
 800dcd8:	4629      	mov	r1, r5
 800dcda:	4798      	blx	r3
 800dcdc:	b005      	add	sp, #20
 800dcde:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dce0:	f7fe fffe 	bl	800cce0 <_ZN8touchgfx11Application11getInstanceEv>
 800dce4:	6803      	ldr	r3, [r0, #0]
 800dce6:	4631      	mov	r1, r6
 800dce8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800dcea:	4798      	blx	r3
 800dcec:	f7fe fff8 	bl	800cce0 <_ZN8touchgfx11Application11getInstanceEv>
 800dcf0:	6803      	ldr	r3, [r0, #0]
 800dcf2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800dcf4:	e7f0      	b.n	800dcd8 <_ZN8touchgfx8Drawable12moveRelativeEss+0x52>

0800dcf6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800dcf6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dcf8:	8882      	ldrh	r2, [r0, #4]
 800dcfa:	880b      	ldrh	r3, [r1, #0]
 800dcfc:	4413      	add	r3, r2
 800dcfe:	800b      	strh	r3, [r1, #0]
 800dd00:	88c2      	ldrh	r2, [r0, #6]
 800dd02:	884b      	ldrh	r3, [r1, #2]
 800dd04:	4413      	add	r3, r2
 800dd06:	4602      	mov	r2, r0
 800dd08:	804b      	strh	r3, [r1, #2]
 800dd0a:	4605      	mov	r5, r0
 800dd0c:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800dd10:	460c      	mov	r4, r1
 800dd12:	6851      	ldr	r1, [r2, #4]
 800dd14:	466b      	mov	r3, sp
 800dd16:	c303      	stmia	r3!, {r0, r1}
 800dd18:	4621      	mov	r1, r4
 800dd1a:	4668      	mov	r0, sp
 800dd1c:	f7fb fd36 	bl	800978c <_ZN8touchgfx4RectaNERKS0_>
 800dd20:	466b      	mov	r3, sp
 800dd22:	cb03      	ldmia	r3!, {r0, r1}
 800dd24:	6020      	str	r0, [r4, #0]
 800dd26:	6061      	str	r1, [r4, #4]
 800dd28:	6968      	ldr	r0, [r5, #20]
 800dd2a:	b128      	cbz	r0, 800dd38 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800dd2c:	6803      	ldr	r3, [r0, #0]
 800dd2e:	691b      	ldr	r3, [r3, #16]
 800dd30:	4621      	mov	r1, r4
 800dd32:	4798      	blx	r3
 800dd34:	b003      	add	sp, #12
 800dd36:	bd30      	pop	{r4, r5, pc}
 800dd38:	f7fe ffd2 	bl	800cce0 <_ZN8touchgfx11Application11getInstanceEv>
 800dd3c:	6803      	ldr	r3, [r0, #0]
 800dd3e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800dd40:	e7f6      	b.n	800dd30 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800dd42 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800dd42:	b570      	push	{r4, r5, r6, lr}
 800dd44:	8882      	ldrh	r2, [r0, #4]
 800dd46:	880b      	ldrh	r3, [r1, #0]
 800dd48:	4413      	add	r3, r2
 800dd4a:	800b      	strh	r3, [r1, #0]
 800dd4c:	88c2      	ldrh	r2, [r0, #6]
 800dd4e:	884b      	ldrh	r3, [r1, #2]
 800dd50:	460c      	mov	r4, r1
 800dd52:	4413      	add	r3, r2
 800dd54:	804b      	strh	r3, [r1, #2]
 800dd56:	4605      	mov	r5, r0
 800dd58:	1d01      	adds	r1, r0, #4
 800dd5a:	4620      	mov	r0, r4
 800dd5c:	f7fb fd16 	bl	800978c <_ZN8touchgfx4RectaNERKS0_>
 800dd60:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800dd64:	2b00      	cmp	r3, #0
 800dd66:	dd0b      	ble.n	800dd80 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800dd68:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800dd6c:	2b00      	cmp	r3, #0
 800dd6e:	dd07      	ble.n	800dd80 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800dd70:	6968      	ldr	r0, [r5, #20]
 800dd72:	b128      	cbz	r0, 800dd80 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800dd74:	6803      	ldr	r3, [r0, #0]
 800dd76:	4621      	mov	r1, r4
 800dd78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dd7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dd7e:	4718      	bx	r3
 800dd80:	bd70      	pop	{r4, r5, r6, pc}

0800dd82 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800dd82:	b510      	push	{r4, lr}
 800dd84:	4604      	mov	r4, r0
 800dd86:	4608      	mov	r0, r1
 800dd88:	2300      	movs	r3, #0
 800dd8a:	8023      	strh	r3, [r4, #0]
 800dd8c:	8063      	strh	r3, [r4, #2]
 800dd8e:	6803      	ldr	r3, [r0, #0]
 800dd90:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800dd94:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800dd98:	80a1      	strh	r1, [r4, #4]
 800dd9a:	80e2      	strh	r2, [r4, #6]
 800dd9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dd9e:	4621      	mov	r1, r4
 800dda0:	4798      	blx	r3
 800dda2:	4620      	mov	r0, r4
 800dda4:	bd10      	pop	{r4, pc}
	...

0800dda8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800dda8:	b530      	push	{r4, r5, lr}
 800ddaa:	8083      	strh	r3, [r0, #4]
 800ddac:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800ddb0:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800ddb4:	7183      	strb	r3, [r0, #6]
 800ddb6:	79c3      	ldrb	r3, [r0, #7]
 800ddb8:	6101      	str	r1, [r0, #16]
 800ddba:	f365 0306 	bfi	r3, r5, #0, #7
 800ddbe:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800ddc2:	8282      	strh	r2, [r0, #20]
 800ddc4:	f365 13c7 	bfi	r3, r5, #7, #1
 800ddc8:	71c3      	strb	r3, [r0, #7]
 800ddca:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800ddce:	7203      	strb	r3, [r0, #8]
 800ddd0:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800ddd4:	7243      	strb	r3, [r0, #9]
 800ddd6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800ddda:	8143      	strh	r3, [r0, #10]
 800dddc:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800dde0:	8183      	strh	r3, [r0, #12]
 800dde2:	4b01      	ldr	r3, [pc, #4]	; (800dde8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800dde4:	6003      	str	r3, [r0, #0]
 800dde6:	bd30      	pop	{r4, r5, pc}
 800dde8:	0801e760 	.word	0x0801e760

0800ddec <_ZNK8touchgfx9ConstFont4findEt>:
 800ddec:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ddee:	6904      	ldr	r4, [r0, #16]
 800ddf0:	b3bc      	cbz	r4, 800de62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ddf2:	88a3      	ldrh	r3, [r4, #4]
 800ddf4:	8a82      	ldrh	r2, [r0, #20]
 800ddf6:	1acb      	subs	r3, r1, r3
 800ddf8:	f102 32ff 	add.w	r2, r2, #4294967295
 800ddfc:	d431      	bmi.n	800de62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ddfe:	4293      	cmp	r3, r2
 800de00:	dd0c      	ble.n	800de1c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800de02:	230e      	movs	r3, #14
 800de04:	fb03 4302 	mla	r3, r3, r2, r4
 800de08:	889b      	ldrh	r3, [r3, #4]
 800de0a:	1a5b      	subs	r3, r3, r1
 800de0c:	1ad3      	subs	r3, r2, r3
 800de0e:	429a      	cmp	r2, r3
 800de10:	db27      	blt.n	800de62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800de12:	2b00      	cmp	r3, #0
 800de14:	bfbc      	itt	lt
 800de16:	2302      	movlt	r3, #2
 800de18:	fb92 f3f3 	sdivlt	r3, r2, r3
 800de1c:	2500      	movs	r5, #0
 800de1e:	260e      	movs	r6, #14
 800de20:	4295      	cmp	r5, r2
 800de22:	dc1e      	bgt.n	800de62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800de24:	fb06 4003 	mla	r0, r6, r3, r4
 800de28:	8887      	ldrh	r7, [r0, #4]
 800de2a:	42b9      	cmp	r1, r7
 800de2c:	d01a      	beq.n	800de64 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800de2e:	d20d      	bcs.n	800de4c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800de30:	1e5a      	subs	r2, r3, #1
 800de32:	4295      	cmp	r5, r2
 800de34:	dc15      	bgt.n	800de62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800de36:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800de3a:	1a5b      	subs	r3, r3, r1
 800de3c:	1ad3      	subs	r3, r2, r3
 800de3e:	429a      	cmp	r2, r3
 800de40:	db0f      	blt.n	800de62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800de42:	429d      	cmp	r5, r3
 800de44:	ddec      	ble.n	800de20 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800de46:	1953      	adds	r3, r2, r5
 800de48:	105b      	asrs	r3, r3, #1
 800de4a:	e7e9      	b.n	800de20 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800de4c:	1c5d      	adds	r5, r3, #1
 800de4e:	42aa      	cmp	r2, r5
 800de50:	db07      	blt.n	800de62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800de52:	8a43      	ldrh	r3, [r0, #18]
 800de54:	1acb      	subs	r3, r1, r3
 800de56:	442b      	add	r3, r5
 800de58:	429d      	cmp	r5, r3
 800de5a:	dc02      	bgt.n	800de62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800de5c:	429a      	cmp	r2, r3
 800de5e:	dadf      	bge.n	800de20 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800de60:	e7f1      	b.n	800de46 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800de62:	2000      	movs	r0, #0
 800de64:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800de66 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800de66:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800de68:	4604      	mov	r4, r0
 800de6a:	4617      	mov	r7, r2
 800de6c:	461e      	mov	r6, r3
 800de6e:	b911      	cbnz	r1, 800de76 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800de70:	2500      	movs	r5, #0
 800de72:	4628      	mov	r0, r5
 800de74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800de76:	290a      	cmp	r1, #10
 800de78:	d0fa      	beq.n	800de70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800de7a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800de7e:	4291      	cmp	r1, r2
 800de80:	d0f6      	beq.n	800de70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800de82:	f242 020b 	movw	r2, #8203	; 0x200b
 800de86:	4291      	cmp	r1, r2
 800de88:	d0f2      	beq.n	800de70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800de8a:	f7ff ffaf 	bl	800ddec <_ZNK8touchgfx9ConstFont4findEt>
 800de8e:	4605      	mov	r5, r0
 800de90:	b950      	cbnz	r0, 800dea8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800de92:	6823      	ldr	r3, [r4, #0]
 800de94:	4620      	mov	r0, r4
 800de96:	691b      	ldr	r3, [r3, #16]
 800de98:	4798      	blx	r3
 800de9a:	4601      	mov	r1, r0
 800de9c:	4620      	mov	r0, r4
 800de9e:	f7ff ffa5 	bl	800ddec <_ZNK8touchgfx9ConstFont4findEt>
 800dea2:	4605      	mov	r5, r0
 800dea4:	2800      	cmp	r0, #0
 800dea6:	d0e3      	beq.n	800de70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800dea8:	6823      	ldr	r3, [r4, #0]
 800deaa:	4629      	mov	r1, r5
 800deac:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800deae:	4620      	mov	r0, r4
 800deb0:	4798      	blx	r3
 800deb2:	6038      	str	r0, [r7, #0]
 800deb4:	6823      	ldr	r3, [r4, #0]
 800deb6:	4620      	mov	r0, r4
 800deb8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800deba:	4798      	blx	r3
 800debc:	7030      	strb	r0, [r6, #0]
 800debe:	e7d8      	b.n	800de72 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800dec0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 800dec0:	b538      	push	{r3, r4, r5, lr}
 800dec2:	4605      	mov	r5, r0
 800dec4:	f001 fdf6 	bl	800fab4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800dec8:	4604      	mov	r4, r0
 800deca:	4628      	mov	r0, r5
 800decc:	f001 fd2e 	bl	800f92c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 800ded0:	2800      	cmp	r0, #0
 800ded2:	bf14      	ite	ne
 800ded4:	2002      	movne	r0, #2
 800ded6:	2000      	moveq	r0, #0
 800ded8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 800dedc:	b280      	uxth	r0, r0
 800dede:	bd38      	pop	{r3, r4, r5, pc}

0800dee0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 800dee0:	b538      	push	{r3, r4, r5, lr}
 800dee2:	4605      	mov	r5, r0
 800dee4:	f001 fde6 	bl	800fab4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800dee8:	4604      	mov	r4, r0
 800deea:	4628      	mov	r0, r5
 800deec:	f001 fd1e 	bl	800f92c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 800def0:	2800      	cmp	r0, #0
 800def2:	bf14      	ite	ne
 800def4:	2002      	movne	r0, #2
 800def6:	2000      	moveq	r0, #0
 800def8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 800defc:	f040 0001 	orr.w	r0, r0, #1
 800df00:	b280      	uxth	r0, r0
 800df02:	bd38      	pop	{r3, r4, r5, pc}

0800df04 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800df04:	2000      	movs	r0, #0
 800df06:	4770      	bx	lr

0800df08 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800df08:	2001      	movs	r0, #1
 800df0a:	4770      	bx	lr

0800df0c <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800df0c:	2002      	movs	r0, #2
 800df0e:	4770      	bx	lr

0800df10 <_ZN8touchgfx6ScreenD1Ev>:
 800df10:	4770      	bx	lr

0800df12 <_ZN8touchgfx12GestureEventD1Ev>:
 800df12:	4770      	bx	lr

0800df14 <_ZN8touchgfx9DragEventD1Ev>:
 800df14:	4770      	bx	lr

0800df16 <_ZN8touchgfx10ClickEventD1Ev>:
 800df16:	4770      	bx	lr

0800df18 <_ZN8touchgfx10ClickEventD0Ev>:
 800df18:	b510      	push	{r4, lr}
 800df1a:	210c      	movs	r1, #12
 800df1c:	4604      	mov	r4, r0
 800df1e:	f00d fa47 	bl	801b3b0 <_ZdlPvj>
 800df22:	4620      	mov	r0, r4
 800df24:	bd10      	pop	{r4, pc}

0800df26 <_ZN8touchgfx9DragEventD0Ev>:
 800df26:	b510      	push	{r4, lr}
 800df28:	2110      	movs	r1, #16
 800df2a:	4604      	mov	r4, r0
 800df2c:	f00d fa40 	bl	801b3b0 <_ZdlPvj>
 800df30:	4620      	mov	r0, r4
 800df32:	bd10      	pop	{r4, pc}

0800df34 <_ZN8touchgfx12GestureEventD0Ev>:
 800df34:	b510      	push	{r4, lr}
 800df36:	210c      	movs	r1, #12
 800df38:	4604      	mov	r4, r0
 800df3a:	f00d fa39 	bl	801b3b0 <_ZdlPvj>
 800df3e:	4620      	mov	r0, r4
 800df40:	bd10      	pop	{r4, pc}

0800df42 <_ZN8touchgfx6ScreenD0Ev>:
 800df42:	b510      	push	{r4, lr}
 800df44:	213c      	movs	r1, #60	; 0x3c
 800df46:	4604      	mov	r4, r0
 800df48:	f00d fa32 	bl	801b3b0 <_ZdlPvj>
 800df4c:	4620      	mov	r0, r4
 800df4e:	bd10      	pop	{r4, pc}

0800df50 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800df50:	b530      	push	{r4, r5, lr}
 800df52:	460d      	mov	r5, r1
 800df54:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800df56:	b087      	sub	sp, #28
 800df58:	4604      	mov	r4, r0
 800df5a:	b301      	cbz	r1, 800df9e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800df5c:	a801      	add	r0, sp, #4
 800df5e:	f7ff ff10 	bl	800dd82 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800df62:	892a      	ldrh	r2, [r5, #8]
 800df64:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800df68:	7928      	ldrb	r0, [r5, #4]
 800df6a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800df6e:	f88d 0010 	strb.w	r0, [sp, #16]
 800df72:	1ad2      	subs	r2, r2, r3
 800df74:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800df76:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800df78:	f8ad 1012 	strh.w	r1, [sp, #18]
 800df7c:	441a      	add	r2, r3
 800df7e:	896b      	ldrh	r3, [r5, #10]
 800df80:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800df84:	f8ad 2014 	strh.w	r2, [sp, #20]
 800df88:	1b5b      	subs	r3, r3, r5
 800df8a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800df8c:	442b      	add	r3, r5
 800df8e:	4d05      	ldr	r5, [pc, #20]	; (800dfa4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800df90:	9503      	str	r5, [sp, #12]
 800df92:	f8ad 3016 	strh.w	r3, [sp, #22]
 800df96:	6803      	ldr	r3, [r0, #0]
 800df98:	a903      	add	r1, sp, #12
 800df9a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800df9c:	4798      	blx	r3
 800df9e:	b007      	add	sp, #28
 800dfa0:	bd30      	pop	{r4, r5, pc}
 800dfa2:	bf00      	nop
 800dfa4:	0801e7dc 	.word	0x0801e7dc

0800dfa8 <_ZNK8touchgfx4Rect9intersectEss>:
 800dfa8:	b510      	push	{r4, lr}
 800dfaa:	f9b0 3000 	ldrsh.w	r3, [r0]
 800dfae:	428b      	cmp	r3, r1
 800dfb0:	dc10      	bgt.n	800dfd4 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800dfb2:	8884      	ldrh	r4, [r0, #4]
 800dfb4:	4423      	add	r3, r4
 800dfb6:	b21b      	sxth	r3, r3
 800dfb8:	4299      	cmp	r1, r3
 800dfba:	da0b      	bge.n	800dfd4 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800dfbc:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800dfc0:	4293      	cmp	r3, r2
 800dfc2:	dc07      	bgt.n	800dfd4 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800dfc4:	88c0      	ldrh	r0, [r0, #6]
 800dfc6:	4418      	add	r0, r3
 800dfc8:	b200      	sxth	r0, r0
 800dfca:	4282      	cmp	r2, r0
 800dfcc:	bfac      	ite	ge
 800dfce:	2000      	movge	r0, #0
 800dfd0:	2001      	movlt	r0, #1
 800dfd2:	bd10      	pop	{r4, pc}
 800dfd4:	2000      	movs	r0, #0
 800dfd6:	e7fc      	b.n	800dfd2 <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800dfd8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800dfd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dfda:	460c      	mov	r4, r1
 800dfdc:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800dfde:	b089      	sub	sp, #36	; 0x24
 800dfe0:	4605      	mov	r5, r0
 800dfe2:	2900      	cmp	r1, #0
 800dfe4:	d054      	beq.n	800e090 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800dfe6:	4668      	mov	r0, sp
 800dfe8:	f7ff fecb 	bl	800dd82 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dfec:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800dfee:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800dff0:	8922      	ldrh	r2, [r4, #8]
 800dff2:	88e1      	ldrh	r1, [r4, #6]
 800dff4:	443a      	add	r2, r7
 800dff6:	4431      	add	r1, r6
 800dff8:	b212      	sxth	r2, r2
 800dffa:	b209      	sxth	r1, r1
 800dffc:	4668      	mov	r0, sp
 800dffe:	f7ff ffd3 	bl	800dfa8 <_ZNK8touchgfx4Rect9intersectEss>
 800e002:	b1d0      	cbz	r0, 800e03a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800e004:	89a2      	ldrh	r2, [r4, #12]
 800e006:	8961      	ldrh	r1, [r4, #10]
 800e008:	443a      	add	r2, r7
 800e00a:	4431      	add	r1, r6
 800e00c:	b212      	sxth	r2, r2
 800e00e:	b209      	sxth	r1, r1
 800e010:	4668      	mov	r0, sp
 800e012:	f7ff ffc9 	bl	800dfa8 <_ZNK8touchgfx4Rect9intersectEss>
 800e016:	4603      	mov	r3, r0
 800e018:	b978      	cbnz	r0, 800e03a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800e01a:	4a1e      	ldr	r2, [pc, #120]	; (800e094 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800e01c:	9204      	str	r2, [sp, #16]
 800e01e:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e020:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e024:	2202      	movs	r2, #2
 800e026:	f88d 2014 	strb.w	r2, [sp, #20]
 800e02a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e02e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e032:	6803      	ldr	r3, [r0, #0]
 800e034:	a904      	add	r1, sp, #16
 800e036:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e038:	4798      	blx	r3
 800e03a:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800e03c:	a802      	add	r0, sp, #8
 800e03e:	f7ff fea0 	bl	800dd82 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e042:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800e046:	88e0      	ldrh	r0, [r4, #6]
 800e048:	8961      	ldrh	r1, [r4, #10]
 800e04a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800e04e:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800e052:	8923      	ldrh	r3, [r4, #8]
 800e054:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800e056:	7927      	ldrb	r7, [r4, #4]
 800e058:	f88d 7014 	strb.w	r7, [sp, #20]
 800e05c:	1a80      	subs	r0, r0, r2
 800e05e:	1a89      	subs	r1, r1, r2
 800e060:	89a2      	ldrh	r2, [r4, #12]
 800e062:	4c0d      	ldr	r4, [pc, #52]	; (800e098 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800e064:	9404      	str	r4, [sp, #16]
 800e066:	4460      	add	r0, ip
 800e068:	eba3 030e 	sub.w	r3, r3, lr
 800e06c:	eba2 020e 	sub.w	r2, r2, lr
 800e070:	f8ad 0016 	strh.w	r0, [sp, #22]
 800e074:	4433      	add	r3, r6
 800e076:	4461      	add	r1, ip
 800e078:	4432      	add	r2, r6
 800e07a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e07c:	f8ad 101a 	strh.w	r1, [sp, #26]
 800e080:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e084:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e088:	6803      	ldr	r3, [r0, #0]
 800e08a:	a904      	add	r1, sp, #16
 800e08c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e08e:	4798      	blx	r3
 800e090:	b009      	add	sp, #36	; 0x24
 800e092:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e094:	0801e7b4 	.word	0x0801e7b4
 800e098:	0801e7c8 	.word	0x0801e7c8

0800e09c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800e09c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e0a0:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800e0a4:	790b      	ldrb	r3, [r1, #4]
 800e0a6:	b0a1      	sub	sp, #132	; 0x84
 800e0a8:	4604      	mov	r4, r0
 800e0aa:	460d      	mov	r5, r1
 800e0ac:	f1b9 0f00 	cmp.w	r9, #0
 800e0b0:	d00f      	beq.n	800e0d2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800e0b2:	2b00      	cmp	r3, #0
 800e0b4:	f040 80a0 	bne.w	800e1f8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800e0b8:	b021      	add	sp, #132	; 0x84
 800e0ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e0be:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800e0c2:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e0c6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e0ca:	1d20      	adds	r0, r4, #4
 800e0cc:	f7fb faa4 	bl	8009618 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800e0d0:	e092      	b.n	800e1f8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800e0d2:	2b00      	cmp	r3, #0
 800e0d4:	d1f0      	bne.n	800e0b8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e0d6:	4b5e      	ldr	r3, [pc, #376]	; (800e250 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800e0d8:	681b      	ldr	r3, [r3, #0]
 800e0da:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800e0de:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800e0e2:	f1ba 0f03 	cmp.w	sl, #3
 800e0e6:	ddea      	ble.n	800e0be <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800e0e8:	f1ba 0f0c 	cmp.w	sl, #12
 800e0ec:	f04f 0303 	mov.w	r3, #3
 800e0f0:	bfdc      	itt	le
 800e0f2:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800e0f6:	fb92 f3f3 	sdivle	r3, r2, r3
 800e0fa:	9301      	str	r3, [sp, #4]
 800e0fc:	4b55      	ldr	r3, [pc, #340]	; (800e254 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800e0fe:	4956      	ldr	r1, [pc, #344]	; (800e258 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800e100:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e104:	4b55      	ldr	r3, [pc, #340]	; (800e25c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800e106:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e10a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e10e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e112:	ab0e      	add	r3, sp, #56	; 0x38
 800e114:	2248      	movs	r2, #72	; 0x48
 800e116:	2600      	movs	r6, #0
 800e118:	4618      	mov	r0, r3
 800e11a:	960a      	str	r6, [sp, #40]	; 0x28
 800e11c:	f00d f9f4 	bl	801b508 <memcpy>
 800e120:	f04f 32ff 	mov.w	r2, #4294967295
 800e124:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800e128:	f8cd a008 	str.w	sl, [sp, #8]
 800e12c:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800e130:	fb93 f3f2 	sdiv	r3, r3, r2
 800e134:	b29b      	uxth	r3, r3
 800e136:	46b3      	mov	fp, r6
 800e138:	9303      	str	r3, [sp, #12]
 800e13a:	2300      	movs	r3, #0
 800e13c:	9309      	str	r3, [sp, #36]	; 0x24
 800e13e:	9b07      	ldr	r3, [sp, #28]
 800e140:	9a03      	ldr	r2, [sp, #12]
 800e142:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800e146:	88ef      	ldrh	r7, [r5, #6]
 800e148:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800e14c:	fb13 f302 	smulbb	r3, r3, r2
 800e150:	b29b      	uxth	r3, r3
 800e152:	9304      	str	r3, [sp, #16]
 800e154:	9b07      	ldr	r3, [sp, #28]
 800e156:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800e15a:	a80a      	add	r0, sp, #40	; 0x28
 800e15c:	685b      	ldr	r3, [r3, #4]
 800e15e:	fb13 f302 	smulbb	r3, r3, r2
 800e162:	b29b      	uxth	r3, r3
 800e164:	9305      	str	r3, [sp, #20]
 800e166:	9b04      	ldr	r3, [sp, #16]
 800e168:	441f      	add	r7, r3
 800e16a:	9b05      	ldr	r3, [sp, #20]
 800e16c:	4498      	add	r8, r3
 800e16e:	b23f      	sxth	r7, r7
 800e170:	fa0f f888 	sxth.w	r8, r8
 800e174:	4642      	mov	r2, r8
 800e176:	4639      	mov	r1, r7
 800e178:	f7ff ff16 	bl	800dfa8 <_ZNK8touchgfx4Rect9intersectEss>
 800e17c:	b380      	cbz	r0, 800e1e0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e17e:	4639      	mov	r1, r7
 800e180:	ab09      	add	r3, sp, #36	; 0x24
 800e182:	4642      	mov	r2, r8
 800e184:	1d20      	adds	r0, r4, #4
 800e186:	f7fb fa47 	bl	8009618 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800e18a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e18c:	b341      	cbz	r1, 800e1e0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e18e:	4549      	cmp	r1, r9
 800e190:	d026      	beq.n	800e1e0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e192:	a80c      	add	r0, sp, #48	; 0x30
 800e194:	f7ff fdf5 	bl	800dd82 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e198:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800e19c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800e1a0:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800e1a4:	2002      	movs	r0, #2
 800e1a6:	fb92 f2f0 	sdiv	r2, r2, r0
 800e1aa:	440a      	add	r2, r1
 800e1ac:	1a99      	subs	r1, r3, r2
 800e1ae:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800e1b2:	fb93 f3f0 	sdiv	r3, r3, r0
 800e1b6:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800e1ba:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e1be:	4403      	add	r3, r0
 800e1c0:	1ad3      	subs	r3, r2, r3
 800e1c2:	435b      	muls	r3, r3
 800e1c4:	9a06      	ldr	r2, [sp, #24]
 800e1c6:	fb01 3301 	mla	r3, r1, r1, r3
 800e1ca:	4293      	cmp	r3, r2
 800e1cc:	d208      	bcs.n	800e1e0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e1ce:	9a04      	ldr	r2, [sp, #16]
 800e1d0:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800e1d4:	86a2      	strh	r2, [r4, #52]	; 0x34
 800e1d6:	9a05      	ldr	r2, [sp, #20]
 800e1d8:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800e1dc:	86e2      	strh	r2, [r4, #54]	; 0x36
 800e1de:	9306      	str	r3, [sp, #24]
 800e1e0:	f10b 0b02 	add.w	fp, fp, #2
 800e1e4:	f1bb 0f08 	cmp.w	fp, #8
 800e1e8:	dda7      	ble.n	800e13a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e1ea:	9b02      	ldr	r3, [sp, #8]
 800e1ec:	4453      	add	r3, sl
 800e1ee:	9302      	str	r3, [sp, #8]
 800e1f0:	9b01      	ldr	r3, [sp, #4]
 800e1f2:	3601      	adds	r6, #1
 800e1f4:	42b3      	cmp	r3, r6
 800e1f6:	d199      	bne.n	800e12c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800e1f8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e1fa:	2900      	cmp	r1, #0
 800e1fc:	f43f af5c 	beq.w	800e0b8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e200:	a80c      	add	r0, sp, #48	; 0x30
 800e202:	f7ff fdbe 	bl	800dd82 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e206:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800e20a:	88ea      	ldrh	r2, [r5, #6]
 800e20c:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800e210:	7929      	ldrb	r1, [r5, #4]
 800e212:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800e216:	1ad2      	subs	r2, r2, r3
 800e218:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800e21a:	441a      	add	r2, r3
 800e21c:	892b      	ldrh	r3, [r5, #8]
 800e21e:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800e222:	1a1b      	subs	r3, r3, r0
 800e224:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800e226:	4403      	add	r3, r0
 800e228:	480d      	ldr	r0, [pc, #52]	; (800e260 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800e22a:	900e      	str	r0, [sp, #56]	; 0x38
 800e22c:	2600      	movs	r6, #0
 800e22e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e230:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800e234:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800e238:	6803      	ldr	r3, [r0, #0]
 800e23a:	a90e      	add	r1, sp, #56	; 0x38
 800e23c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e23e:	4798      	blx	r3
 800e240:	792b      	ldrb	r3, [r5, #4]
 800e242:	2b00      	cmp	r3, #0
 800e244:	f43f af38 	beq.w	800e0b8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e248:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800e24c:	e734      	b.n	800e0b8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e24e:	bf00      	nop
 800e250:	2000a42c 	.word	0x2000a42c
 800e254:	2000a420 	.word	0x2000a420
 800e258:	0801c584 	.word	0x0801c584
 800e25c:	2000a422 	.word	0x2000a422
 800e260:	0801e7b4 	.word	0x0801e7b4

0800e264 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800e264:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e266:	4604      	mov	r4, r0
 800e268:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800e26c:	3201      	adds	r2, #1
 800e26e:	d112      	bne.n	800e296 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800e270:	6803      	ldr	r3, [r0, #0]
 800e272:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e276:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e27a:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e27e:	2500      	movs	r5, #0
 800e280:	9500      	str	r5, [sp, #0]
 800e282:	466d      	mov	r5, sp
 800e284:	4629      	mov	r1, r5
 800e286:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e28a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e28c:	4798      	blx	r3
 800e28e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e292:	e884 0003 	stmia.w	r4, {r0, r1}
 800e296:	4620      	mov	r0, r4
 800e298:	b003      	add	sp, #12
 800e29a:	bd30      	pop	{r4, r5, pc}

0800e29c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800e29c:	b513      	push	{r0, r1, r4, lr}
 800e29e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800e2a2:	3301      	adds	r3, #1
 800e2a4:	4604      	mov	r4, r0
 800e2a6:	d109      	bne.n	800e2bc <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800e2a8:	4601      	mov	r1, r0
 800e2aa:	4668      	mov	r0, sp
 800e2ac:	f7ff fd69 	bl	800dd82 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e2b0:	f8bd 3000 	ldrh.w	r3, [sp]
 800e2b4:	8423      	strh	r3, [r4, #32]
 800e2b6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e2ba:	8463      	strh	r3, [r4, #34]	; 0x22
 800e2bc:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800e2c0:	b002      	add	sp, #8
 800e2c2:	bd10      	pop	{r4, pc}

0800e2c4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800e2c4:	b513      	push	{r0, r1, r4, lr}
 800e2c6:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800e2ca:	3301      	adds	r3, #1
 800e2cc:	4604      	mov	r4, r0
 800e2ce:	d109      	bne.n	800e2e4 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800e2d0:	4601      	mov	r1, r0
 800e2d2:	4668      	mov	r0, sp
 800e2d4:	f7ff fd55 	bl	800dd82 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e2d8:	f8bd 3000 	ldrh.w	r3, [sp]
 800e2dc:	8423      	strh	r3, [r4, #32]
 800e2de:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e2e2:	8463      	strh	r3, [r4, #34]	; 0x22
 800e2e4:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800e2e8:	b002      	add	sp, #8
 800e2ea:	bd10      	pop	{r4, pc}

0800e2ec <_ZN8touchgfx6ScreenC1Ev>:
 800e2ec:	b570      	push	{r4, r5, r6, lr}
 800e2ee:	4605      	mov	r5, r0
 800e2f0:	4b15      	ldr	r3, [pc, #84]	; (800e348 <_ZN8touchgfx6ScreenC1Ev+0x5c>)
 800e2f2:	f845 3b04 	str.w	r3, [r5], #4
 800e2f6:	2300      	movs	r3, #0
 800e2f8:	8103      	strh	r3, [r0, #8]
 800e2fa:	8143      	strh	r3, [r0, #10]
 800e2fc:	8183      	strh	r3, [r0, #12]
 800e2fe:	81c3      	strh	r3, [r0, #14]
 800e300:	8203      	strh	r3, [r0, #16]
 800e302:	8243      	strh	r3, [r0, #18]
 800e304:	8283      	strh	r3, [r0, #20]
 800e306:	82c3      	strh	r3, [r0, #22]
 800e308:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800e30c:	6203      	str	r3, [r0, #32]
 800e30e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800e312:	4a0e      	ldr	r2, [pc, #56]	; (800e34c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800e314:	6343      	str	r3, [r0, #52]	; 0x34
 800e316:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800e31a:	4b0d      	ldr	r3, [pc, #52]	; (800e350 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800e31c:	6042      	str	r2, [r0, #4]
 800e31e:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e322:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800e324:	4a0b      	ldr	r2, [pc, #44]	; (800e354 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800e326:	4604      	mov	r4, r0
 800e328:	2101      	movs	r1, #1
 800e32a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800e32e:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800e332:	f9b2 1000 	ldrsh.w	r1, [r2]
 800e336:	4628      	mov	r0, r5
 800e338:	4798      	blx	r3
 800e33a:	6863      	ldr	r3, [r4, #4]
 800e33c:	4628      	mov	r0, r5
 800e33e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e340:	4631      	mov	r1, r6
 800e342:	4798      	blx	r3
 800e344:	4620      	mov	r0, r4
 800e346:	bd70      	pop	{r4, r5, r6, pc}
 800e348:	0801e7f0 	.word	0x0801e7f0
 800e34c:	0801db54 	.word	0x0801db54
 800e350:	2000a422 	.word	0x2000a422
 800e354:	2000a420 	.word	0x2000a420

0800e358 <_ZN8touchgfx6Screen4drawEv>:
 800e358:	b507      	push	{r0, r1, r2, lr}
 800e35a:	4b09      	ldr	r3, [pc, #36]	; (800e380 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800e35c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e360:	4b08      	ldr	r3, [pc, #32]	; (800e384 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800e362:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e366:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e36a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e36e:	6803      	ldr	r3, [r0, #0]
 800e370:	2100      	movs	r1, #0
 800e372:	9100      	str	r1, [sp, #0]
 800e374:	689b      	ldr	r3, [r3, #8]
 800e376:	4669      	mov	r1, sp
 800e378:	4798      	blx	r3
 800e37a:	b003      	add	sp, #12
 800e37c:	f85d fb04 	ldr.w	pc, [sp], #4
 800e380:	2000a420 	.word	0x2000a420
 800e384:	2000a422 	.word	0x2000a422

0800e388 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800e388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e38c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800e390:	2b00      	cmp	r3, #0
 800e392:	b089      	sub	sp, #36	; 0x24
 800e394:	4680      	mov	r8, r0
 800e396:	460c      	mov	r4, r1
 800e398:	4615      	mov	r5, r2
 800e39a:	dd0e      	ble.n	800e3ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e39c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800e3a0:	2b00      	cmp	r3, #0
 800e3a2:	dd0a      	ble.n	800e3ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e3a4:	4628      	mov	r0, r5
 800e3a6:	f7ff ff5d 	bl	800e264 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e3aa:	4621      	mov	r1, r4
 800e3ac:	f7fe fc0e 	bl	800cbcc <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e3b0:	69eb      	ldr	r3, [r5, #28]
 800e3b2:	b928      	cbnz	r0, 800e3c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800e3b4:	461d      	mov	r5, r3
 800e3b6:	2b00      	cmp	r3, #0
 800e3b8:	d1f4      	bne.n	800e3a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800e3ba:	b009      	add	sp, #36	; 0x24
 800e3bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e3c0:	ae04      	add	r6, sp, #16
 800e3c2:	2b00      	cmp	r3, #0
 800e3c4:	f000 80b5 	beq.w	800e532 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e3c8:	682b      	ldr	r3, [r5, #0]
 800e3ca:	4629      	mov	r1, r5
 800e3cc:	68db      	ldr	r3, [r3, #12]
 800e3ce:	a802      	add	r0, sp, #8
 800e3d0:	4798      	blx	r3
 800e3d2:	4628      	mov	r0, r5
 800e3d4:	f7ff ff62 	bl	800e29c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e3d8:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800e3dc:	4407      	add	r7, r0
 800e3de:	4628      	mov	r0, r5
 800e3e0:	f7ff ff70 	bl	800e2c4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e3e4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e3e8:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e3ec:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e3f0:	4418      	add	r0, r3
 800e3f2:	4621      	mov	r1, r4
 800e3f4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800e3f8:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e3fc:	b23f      	sxth	r7, r7
 800e3fe:	4630      	mov	r0, r6
 800e400:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e404:	f8ad 7010 	strh.w	r7, [sp, #16]
 800e408:	f7fb f9c0 	bl	800978c <_ZN8touchgfx4RectaNERKS0_>
 800e40c:	4628      	mov	r0, r5
 800e40e:	f7ff ff29 	bl	800e264 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e412:	4602      	mov	r2, r0
 800e414:	e896 0003 	ldmia.w	r6, {r0, r1}
 800e418:	ab06      	add	r3, sp, #24
 800e41a:	e883 0003 	stmia.w	r3, {r0, r1}
 800e41e:	4611      	mov	r1, r2
 800e420:	4618      	mov	r0, r3
 800e422:	f7fb f9b3 	bl	800978c <_ZN8touchgfx4RectaNERKS0_>
 800e426:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e42a:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e42e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800e432:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800e436:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800e43a:	4299      	cmp	r1, r3
 800e43c:	d10b      	bne.n	800e456 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e43e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e442:	4552      	cmp	r2, sl
 800e444:	d107      	bne.n	800e456 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e446:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800e44a:	455a      	cmp	r2, fp
 800e44c:	d103      	bne.n	800e456 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e44e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e452:	454a      	cmp	r2, r9
 800e454:	d06d      	beq.n	800e532 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e456:	f1bb 0f00 	cmp.w	fp, #0
 800e45a:	dd65      	ble.n	800e528 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e45c:	f1b9 0f00 	cmp.w	r9, #0
 800e460:	dd62      	ble.n	800e528 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e462:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e466:	fa1f f08a 	uxth.w	r0, sl
 800e46a:	4552      	cmp	r2, sl
 800e46c:	9000      	str	r0, [sp, #0]
 800e46e:	da12      	bge.n	800e496 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800e470:	9301      	str	r3, [sp, #4]
 800e472:	9b00      	ldr	r3, [sp, #0]
 800e474:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e478:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e47c:	1a9a      	subs	r2, r3, r2
 800e47e:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e482:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e486:	f8ad 2016 	strh.w	r2, [sp, #22]
 800e48a:	69ea      	ldr	r2, [r5, #28]
 800e48c:	4631      	mov	r1, r6
 800e48e:	4640      	mov	r0, r8
 800e490:	f7ff ff7a 	bl	800e388 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e494:	9b01      	ldr	r3, [sp, #4]
 800e496:	f9b4 2000 	ldrsh.w	r2, [r4]
 800e49a:	429a      	cmp	r2, r3
 800e49c:	b29f      	uxth	r7, r3
 800e49e:	da0d      	bge.n	800e4bc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800e4a0:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e4a4:	1aba      	subs	r2, r7, r2
 800e4a6:	f8ad a012 	strh.w	sl, [sp, #18]
 800e4aa:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e4ae:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e4b2:	69ea      	ldr	r2, [r5, #28]
 800e4b4:	4631      	mov	r1, r6
 800e4b6:	4640      	mov	r0, r8
 800e4b8:	f7ff ff66 	bl	800e388 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e4bc:	8822      	ldrh	r2, [r4, #0]
 800e4be:	88a3      	ldrh	r3, [r4, #4]
 800e4c0:	445f      	add	r7, fp
 800e4c2:	4413      	add	r3, r2
 800e4c4:	b29b      	uxth	r3, r3
 800e4c6:	b2bf      	uxth	r7, r7
 800e4c8:	b23a      	sxth	r2, r7
 800e4ca:	b219      	sxth	r1, r3
 800e4cc:	4291      	cmp	r1, r2
 800e4ce:	dd0d      	ble.n	800e4ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800e4d0:	1bdb      	subs	r3, r3, r7
 800e4d2:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e4d6:	f8ad a012 	strh.w	sl, [sp, #18]
 800e4da:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e4de:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e4e2:	69ea      	ldr	r2, [r5, #28]
 800e4e4:	4631      	mov	r1, r6
 800e4e6:	4640      	mov	r0, r8
 800e4e8:	f7ff ff4e 	bl	800e388 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e4ec:	88e2      	ldrh	r2, [r4, #6]
 800e4ee:	8863      	ldrh	r3, [r4, #2]
 800e4f0:	4413      	add	r3, r2
 800e4f2:	9a00      	ldr	r2, [sp, #0]
 800e4f4:	444a      	add	r2, r9
 800e4f6:	b29b      	uxth	r3, r3
 800e4f8:	fa1f f982 	uxth.w	r9, r2
 800e4fc:	fa0f f289 	sxth.w	r2, r9
 800e500:	b219      	sxth	r1, r3
 800e502:	428a      	cmp	r2, r1
 800e504:	da15      	bge.n	800e532 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e506:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e50a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e50e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e512:	eba3 0309 	sub.w	r3, r3, r9
 800e516:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e51a:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e51e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e522:	69ea      	ldr	r2, [r5, #28]
 800e524:	4631      	mov	r1, r6
 800e526:	e001      	b.n	800e52c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800e528:	69ea      	ldr	r2, [r5, #28]
 800e52a:	4621      	mov	r1, r4
 800e52c:	4640      	mov	r0, r8
 800e52e:	f7ff ff2b 	bl	800e388 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e532:	4628      	mov	r0, r5
 800e534:	f7ff fe96 	bl	800e264 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e538:	6861      	ldr	r1, [r4, #4]
 800e53a:	4602      	mov	r2, r0
 800e53c:	6820      	ldr	r0, [r4, #0]
 800e53e:	4633      	mov	r3, r6
 800e540:	c303      	stmia	r3!, {r0, r1}
 800e542:	4611      	mov	r1, r2
 800e544:	4630      	mov	r0, r6
 800e546:	f7fb f921 	bl	800978c <_ZN8touchgfx4RectaNERKS0_>
 800e54a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e54e:	2b00      	cmp	r3, #0
 800e550:	f77f af33 	ble.w	800e3ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e554:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e558:	2b00      	cmp	r3, #0
 800e55a:	f77f af2e 	ble.w	800e3ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e55e:	4628      	mov	r0, r5
 800e560:	f7ff fe9c 	bl	800e29c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e564:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e568:	1a18      	subs	r0, r3, r0
 800e56a:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e56e:	4628      	mov	r0, r5
 800e570:	f7ff fea8 	bl	800e2c4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e574:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e578:	1a18      	subs	r0, r3, r0
 800e57a:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e57e:	682b      	ldr	r3, [r5, #0]
 800e580:	4631      	mov	r1, r6
 800e582:	689b      	ldr	r3, [r3, #8]
 800e584:	4628      	mov	r0, r5
 800e586:	4798      	blx	r3
 800e588:	e717      	b.n	800e3ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800e58a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800e58a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e58c:	aa02      	add	r2, sp, #8
 800e58e:	2300      	movs	r3, #0
 800e590:	f842 3d04 	str.w	r3, [r2, #-4]!
 800e594:	4604      	mov	r4, r0
 800e596:	3004      	adds	r0, #4
 800e598:	460d      	mov	r5, r1
 800e59a:	f7fb f9cf 	bl	800993c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800e59e:	9a01      	ldr	r2, [sp, #4]
 800e5a0:	b11a      	cbz	r2, 800e5aa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800e5a2:	4629      	mov	r1, r5
 800e5a4:	4620      	mov	r0, r4
 800e5a6:	f7ff feef 	bl	800e388 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e5aa:	b003      	add	sp, #12
 800e5ac:	bd30      	pop	{r4, r5, pc}

0800e5ae <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800e5ae:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e5b0:	4602      	mov	r2, r0
 800e5b2:	4604      	mov	r4, r0
 800e5b4:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800e5b8:	460d      	mov	r5, r1
 800e5ba:	6851      	ldr	r1, [r2, #4]
 800e5bc:	466b      	mov	r3, sp
 800e5be:	c303      	stmia	r3!, {r0, r1}
 800e5c0:	4629      	mov	r1, r5
 800e5c2:	4668      	mov	r0, sp
 800e5c4:	f7fb f8e2 	bl	800978c <_ZN8touchgfx4RectaNERKS0_>
 800e5c8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e5cc:	4669      	mov	r1, sp
 800e5ce:	b123      	cbz	r3, 800e5da <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800e5d0:	4620      	mov	r0, r4
 800e5d2:	f7ff ffda 	bl	800e58a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800e5d6:	b003      	add	sp, #12
 800e5d8:	bd30      	pop	{r4, r5, pc}
 800e5da:	1d20      	adds	r0, r4, #4
 800e5dc:	f7fb f975 	bl	80098ca <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800e5e0:	e7f9      	b.n	800e5d6 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800e5e2 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800e5e2:	680a      	ldr	r2, [r1, #0]
 800e5e4:	460b      	mov	r3, r1
 800e5e6:	6992      	ldr	r2, [r2, #24]
 800e5e8:	1d01      	adds	r1, r0, #4
 800e5ea:	4618      	mov	r0, r3
 800e5ec:	4710      	bx	r2

0800e5ee <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 800e5ee:	b510      	push	{r4, lr}
 800e5f0:	4298      	cmp	r0, r3
 800e5f2:	eb01 0402 	add.w	r4, r1, r2
 800e5f6:	b224      	sxth	r4, r4
 800e5f8:	d22c      	bcs.n	800e654 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x66>
 800e5fa:	b35b      	cbz	r3, 800e654 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x66>
 800e5fc:	ee07 0a90 	vmov	s15, r0
 800e600:	eeb8 6a67 	vcvt.f32.u32	s12, s15
 800e604:	ee07 3a90 	vmov	s15, r3
 800e608:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800e60c:	ee07 2a90 	vmov	s15, r2
 800e610:	ee86 7a26 	vdiv.f32	s14, s12, s13
 800e614:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e618:	ee37 7a66 	vsub.f32	s14, s14, s13
 800e61c:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 800e620:	ee67 5a07 	vmul.f32	s11, s14, s14
 800e624:	ee07 1a90 	vmov	s15, r1
 800e628:	eee5 6a87 	vfma.f32	s13, s11, s14
 800e62c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e630:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800e634:	eee6 7a26 	vfma.f32	s15, s12, s13
 800e638:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800e63c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e640:	bfcc      	ite	gt
 800e642:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800e646:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800e64a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e64e:	ee17 3a90 	vmov	r3, s15
 800e652:	b21c      	sxth	r4, r3
 800e654:	4620      	mov	r0, r4
 800e656:	bd10      	pop	{r4, pc}

0800e658 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 800e658:	b510      	push	{r4, lr}
 800e65a:	4298      	cmp	r0, r3
 800e65c:	eb01 0402 	add.w	r4, r1, r2
 800e660:	b224      	sxth	r4, r4
 800e662:	d226      	bcs.n	800e6b2 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x5a>
 800e664:	b32b      	cbz	r3, 800e6b2 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x5a>
 800e666:	ee07 2a90 	vmov	s15, r2
 800e66a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800e66e:	ee07 0a90 	vmov	s15, r0
 800e672:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e676:	ee07 3a90 	vmov	s15, r3
 800e67a:	ee67 6a26 	vmul.f32	s13, s14, s13
 800e67e:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 800e682:	ee07 1a90 	vmov	s15, r1
 800e686:	ee86 7a86 	vdiv.f32	s14, s13, s12
 800e68a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e68e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e692:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800e696:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800e69a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e69e:	bfcc      	ite	gt
 800e6a0:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800e6a4:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800e6a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e6ac:	ee17 3a90 	vmov	r3, s15
 800e6b0:	b21c      	sxth	r4, r3
 800e6b2:	4620      	mov	r0, r4
 800e6b4:	bd10      	pop	{r4, pc}

0800e6b6 <_ZN8touchgfx15EasingEquations12linearEaseInEtsst>:
 800e6b6:	f7ff bfcf 	b.w	800e658 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>

0800e6ba <_ZN8touchgfx12TextProviderC1Ev>:
 800e6ba:	b510      	push	{r4, lr}
 800e6bc:	2300      	movs	r3, #0
 800e6be:	2201      	movs	r2, #1
 800e6c0:	4604      	mov	r4, r0
 800e6c2:	e9c0 3300 	strd	r3, r3, [r0]
 800e6c6:	60c3      	str	r3, [r0, #12]
 800e6c8:	7403      	strb	r3, [r0, #16]
 800e6ca:	82c3      	strh	r3, [r0, #22]
 800e6cc:	8303      	strh	r3, [r0, #24]
 800e6ce:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800e6d0:	8603      	strh	r3, [r0, #48]	; 0x30
 800e6d2:	86c3      	strh	r3, [r0, #54]	; 0x36
 800e6d4:	8703      	strh	r3, [r0, #56]	; 0x38
 800e6d6:	63c3      	str	r3, [r0, #60]	; 0x3c
 800e6d8:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800e6dc:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800e6e0:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800e6e4:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800e6e8:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800e6ec:	f7f4 fc30 	bl	8002f50 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800e6f0:	4620      	mov	r0, r4
 800e6f2:	bd10      	pop	{r4, pc}

0800e6f4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800e6f4:	b530      	push	{r4, r5, lr}
 800e6f6:	2500      	movs	r5, #0
 800e6f8:	2401      	movs	r4, #1
 800e6fa:	6843      	ldr	r3, [r0, #4]
 800e6fc:	b913      	cbnz	r3, 800e704 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800e6fe:	6803      	ldr	r3, [r0, #0]
 800e700:	b1f3      	cbz	r3, 800e740 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800e702:	6043      	str	r3, [r0, #4]
 800e704:	7c03      	ldrb	r3, [r0, #16]
 800e706:	b143      	cbz	r3, 800e71a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800e708:	68c3      	ldr	r3, [r0, #12]
 800e70a:	b12b      	cbz	r3, 800e718 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e70c:	881a      	ldrh	r2, [r3, #0]
 800e70e:	b11a      	cbz	r2, 800e718 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e710:	1c9a      	adds	r2, r3, #2
 800e712:	60c2      	str	r2, [r0, #12]
 800e714:	8818      	ldrh	r0, [r3, #0]
 800e716:	bd30      	pop	{r4, r5, pc}
 800e718:	7405      	strb	r5, [r0, #16]
 800e71a:	6843      	ldr	r3, [r0, #4]
 800e71c:	8819      	ldrh	r1, [r3, #0]
 800e71e:	b179      	cbz	r1, 800e740 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800e720:	1c9a      	adds	r2, r3, #2
 800e722:	2902      	cmp	r1, #2
 800e724:	6042      	str	r2, [r0, #4]
 800e726:	d1f5      	bne.n	800e714 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800e728:	6883      	ldr	r3, [r0, #8]
 800e72a:	1d1a      	adds	r2, r3, #4
 800e72c:	6082      	str	r2, [r0, #8]
 800e72e:	681b      	ldr	r3, [r3, #0]
 800e730:	60c3      	str	r3, [r0, #12]
 800e732:	2b00      	cmp	r3, #0
 800e734:	d0e1      	beq.n	800e6fa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e736:	881b      	ldrh	r3, [r3, #0]
 800e738:	2b00      	cmp	r3, #0
 800e73a:	d0de      	beq.n	800e6fa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e73c:	7404      	strb	r4, [r0, #16]
 800e73e:	e7dc      	b.n	800e6fa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e740:	2000      	movs	r0, #0
 800e742:	e7e8      	b.n	800e716 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e744 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800e744:	b410      	push	{r4}
 800e746:	63c3      	str	r3, [r0, #60]	; 0x3c
 800e748:	2300      	movs	r3, #0
 800e74a:	6082      	str	r2, [r0, #8]
 800e74c:	6001      	str	r1, [r0, #0]
 800e74e:	6043      	str	r3, [r0, #4]
 800e750:	60c3      	str	r3, [r0, #12]
 800e752:	7403      	strb	r3, [r0, #16]
 800e754:	8603      	strh	r3, [r0, #48]	; 0x30
 800e756:	8303      	strh	r3, [r0, #24]
 800e758:	8703      	strh	r3, [r0, #56]	; 0x38
 800e75a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e75e:	f7f4 bbf7 	b.w	8002f50 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800e762 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e762:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e764:	4605      	mov	r5, r0
 800e766:	4608      	mov	r0, r1
 800e768:	b1e9      	cbz	r1, 800e7a6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800e76a:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800e76e:	460b      	mov	r3, r1
 800e770:	f101 0708 	add.w	r7, r1, #8
 800e774:	4622      	mov	r2, r4
 800e776:	6818      	ldr	r0, [r3, #0]
 800e778:	6859      	ldr	r1, [r3, #4]
 800e77a:	4626      	mov	r6, r4
 800e77c:	c603      	stmia	r6!, {r0, r1}
 800e77e:	3308      	adds	r3, #8
 800e780:	42bb      	cmp	r3, r7
 800e782:	4634      	mov	r4, r6
 800e784:	d1f7      	bne.n	800e776 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800e786:	6818      	ldr	r0, [r3, #0]
 800e788:	6030      	str	r0, [r6, #0]
 800e78a:	889b      	ldrh	r3, [r3, #4]
 800e78c:	80b3      	strh	r3, [r6, #4]
 800e78e:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800e792:	015b      	lsls	r3, r3, #5
 800e794:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e798:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800e79c:	430b      	orrs	r3, r1
 800e79e:	425b      	negs	r3, r3
 800e7a0:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800e7a4:	4610      	mov	r0, r2
 800e7a6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e7a8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e7a8:	b538      	push	{r3, r4, r5, lr}
 800e7aa:	460c      	mov	r4, r1
 800e7ac:	6811      	ldr	r1, [r2, #0]
 800e7ae:	4610      	mov	r0, r2
 800e7b0:	68cd      	ldr	r5, [r1, #12]
 800e7b2:	4619      	mov	r1, r3
 800e7b4:	47a8      	blx	r5
 800e7b6:	2800      	cmp	r0, #0
 800e7b8:	bf08      	it	eq
 800e7ba:	4620      	moveq	r0, r4
 800e7bc:	bd38      	pop	{r3, r4, r5, pc}
	...

0800e7c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800e7c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e7c2:	4604      	mov	r4, r0
 800e7c4:	4615      	mov	r5, r2
 800e7c6:	4608      	mov	r0, r1
 800e7c8:	b93a      	cbnz	r2, 800e7da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e7ca:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800e7ce:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800e7d2:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800e7d6:	4628      	mov	r0, r5
 800e7d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e7da:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800e7de:	8893      	ldrh	r3, [r2, #4]
 800e7e0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800e7e4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e7e8:	79ee      	ldrb	r6, [r5, #7]
 800e7ea:	4316      	orrs	r6, r2
 800e7ec:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800e7f0:	189a      	adds	r2, r3, r2
 800e7f2:	b291      	uxth	r1, r2
 800e7f4:	291d      	cmp	r1, #29
 800e7f6:	b2b7      	uxth	r7, r6
 800e7f8:	f200 8083 	bhi.w	800e902 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e7fc:	2201      	movs	r2, #1
 800e7fe:	408a      	lsls	r2, r1
 800e800:	4978      	ldr	r1, [pc, #480]	; (800e9e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800e802:	420a      	tst	r2, r1
 800e804:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800e808:	d12d      	bne.n	800e866 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800e80a:	f412 7f60 	tst.w	r2, #896	; 0x380
 800e80e:	d078      	beq.n	800e902 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e810:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800e814:	462b      	mov	r3, r5
 800e816:	f105 0e08 	add.w	lr, r5, #8
 800e81a:	4615      	mov	r5, r2
 800e81c:	6818      	ldr	r0, [r3, #0]
 800e81e:	6859      	ldr	r1, [r3, #4]
 800e820:	4694      	mov	ip, r2
 800e822:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e826:	3308      	adds	r3, #8
 800e828:	4573      	cmp	r3, lr
 800e82a:	4662      	mov	r2, ip
 800e82c:	d1f6      	bne.n	800e81c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800e82e:	6818      	ldr	r0, [r3, #0]
 800e830:	f8cc 0000 	str.w	r0, [ip]
 800e834:	889b      	ldrh	r3, [r3, #4]
 800e836:	f8ac 3004 	strh.w	r3, [ip, #4]
 800e83a:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800e83e:	f894 004d 	ldrb.w	r0, [r4, #77]	; 0x4d
 800e842:	b2b3      	uxth	r3, r6
 800e844:	1aca      	subs	r2, r1, r3
 800e846:	b292      	uxth	r2, r2
 800e848:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 800e84c:	10d2      	asrs	r2, r2, #3
 800e84e:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800e852:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800e856:	4302      	orrs	r2, r0
 800e858:	1bcf      	subs	r7, r1, r7
 800e85a:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
 800e85e:	1afb      	subs	r3, r7, r3
 800e860:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 800e864:	e7b7      	b.n	800e7d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e866:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e868:	b92b      	cbnz	r3, 800e876 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800e86a:	4b5f      	ldr	r3, [pc, #380]	; (800e9e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800e86c:	4a5f      	ldr	r2, [pc, #380]	; (800e9ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800e86e:	4860      	ldr	r0, [pc, #384]	; (800e9f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800e870:	21c0      	movs	r1, #192	; 0xc0
 800e872:	f00c fdcb 	bl	801b40c <__assert_func>
 800e876:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800e878:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e87c:	8b59      	ldrh	r1, [r3, #26]
 800e87e:	f640 6333 	movw	r3, #3635	; 0xe33
 800e882:	4299      	cmp	r1, r3
 800e884:	d110      	bne.n	800e8a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800e886:	6803      	ldr	r3, [r0, #0]
 800e888:	68db      	ldr	r3, [r3, #12]
 800e88a:	4798      	blx	r3
 800e88c:	7b41      	ldrb	r1, [r0, #13]
 800e88e:	00cb      	lsls	r3, r1, #3
 800e890:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e894:	7a03      	ldrb	r3, [r0, #8]
 800e896:	0648      	lsls	r0, r1, #25
 800e898:	ea43 0302 	orr.w	r3, r3, r2
 800e89c:	bf44      	itt	mi
 800e89e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e8a2:	b21b      	sxthmi	r3, r3
 800e8a4:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800e8a8:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 800e8ac:	443b      	add	r3, r7
 800e8ae:	4433      	add	r3, r6
 800e8b0:	b29b      	uxth	r3, r3
 800e8b2:	f104 0640 	add.w	r6, r4, #64	; 0x40
 800e8b6:	462a      	mov	r2, r5
 800e8b8:	f105 0c08 	add.w	ip, r5, #8
 800e8bc:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800e8c0:	4635      	mov	r5, r6
 800e8c2:	6810      	ldr	r0, [r2, #0]
 800e8c4:	6851      	ldr	r1, [r2, #4]
 800e8c6:	4637      	mov	r7, r6
 800e8c8:	c703      	stmia	r7!, {r0, r1}
 800e8ca:	3208      	adds	r2, #8
 800e8cc:	4562      	cmp	r2, ip
 800e8ce:	463e      	mov	r6, r7
 800e8d0:	d1f7      	bne.n	800e8c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800e8d2:	6810      	ldr	r0, [r2, #0]
 800e8d4:	6038      	str	r0, [r7, #0]
 800e8d6:	8892      	ldrh	r2, [r2, #4]
 800e8d8:	80ba      	strh	r2, [r7, #4]
 800e8da:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800e8de:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800e8e2:	10db      	asrs	r3, r3, #3
 800e8e4:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e8e8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e8ec:	4313      	orrs	r3, r2
 800e8ee:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800e8f2:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800e8f6:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800e8fa:	1a9b      	subs	r3, r3, r2
 800e8fc:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800e900:	e769      	b.n	800e7d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e902:	f023 0204 	bic.w	r2, r3, #4
 800e906:	f640 611b 	movw	r1, #3611	; 0xe1b
 800e90a:	428a      	cmp	r2, r1
 800e90c:	d003      	beq.n	800e916 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800e90e:	f640 621d 	movw	r2, #3613	; 0xe1d
 800e912:	4293      	cmp	r3, r2
 800e914:	d120      	bne.n	800e958 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800e916:	3b01      	subs	r3, #1
 800e918:	4602      	mov	r2, r0
 800e91a:	b29b      	uxth	r3, r3
 800e91c:	4629      	mov	r1, r5
 800e91e:	4620      	mov	r0, r4
 800e920:	f7ff ff42 	bl	800e7a8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e924:	7b41      	ldrb	r1, [r0, #13]
 800e926:	00cb      	lsls	r3, r1, #3
 800e928:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e92c:	7a03      	ldrb	r3, [r0, #8]
 800e92e:	0649      	lsls	r1, r1, #25
 800e930:	ea43 0302 	orr.w	r3, r3, r2
 800e934:	bf44      	itt	mi
 800e936:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e93a:	b21b      	sxthmi	r3, r3
 800e93c:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800e940:	7b6b      	ldrb	r3, [r5, #13]
 800e942:	7aaa      	ldrb	r2, [r5, #10]
 800e944:	005b      	lsls	r3, r3, #1
 800e946:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e94a:	4313      	orrs	r3, r2
 800e94c:	115a      	asrs	r2, r3, #5
 800e94e:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800e952:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e956:	e036      	b.n	800e9c6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800e958:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800e95c:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800e960:	7a2a      	ldrb	r2, [r5, #8]
 800e962:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800e966:	ea42 0201 	orr.w	r2, r2, r1
 800e96a:	bf1c      	itt	ne
 800e96c:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800e970:	b212      	sxthne	r2, r2
 800e972:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800e976:	f640 6109 	movw	r1, #3593	; 0xe09
 800e97a:	f023 0210 	bic.w	r2, r3, #16
 800e97e:	428a      	cmp	r2, r1
 800e980:	d003      	beq.n	800e98a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800e982:	f640 6213 	movw	r2, #3603	; 0xe13
 800e986:	4293      	cmp	r3, r2
 800e988:	d12a      	bne.n	800e9e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800e98a:	7b6e      	ldrb	r6, [r5, #13]
 800e98c:	0076      	lsls	r6, r6, #1
 800e98e:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e992:	7aae      	ldrb	r6, [r5, #10]
 800e994:	4316      	orrs	r6, r2
 800e996:	f640 6213 	movw	r2, #3603	; 0xe13
 800e99a:	4293      	cmp	r3, r2
 800e99c:	bf18      	it	ne
 800e99e:	f103 33ff 	addne.w	r3, r3, #4294967295
 800e9a2:	4602      	mov	r2, r0
 800e9a4:	bf14      	ite	ne
 800e9a6:	b29b      	uxthne	r3, r3
 800e9a8:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800e9ac:	4629      	mov	r1, r5
 800e9ae:	4620      	mov	r0, r4
 800e9b0:	f7ff fefa 	bl	800e7a8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e9b4:	7b43      	ldrb	r3, [r0, #13]
 800e9b6:	7a82      	ldrb	r2, [r0, #10]
 800e9b8:	005b      	lsls	r3, r3, #1
 800e9ba:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e9be:	4313      	orrs	r3, r2
 800e9c0:	1af6      	subs	r6, r6, r3
 800e9c2:	f8a4 6052 	strh.w	r6, [r4, #82]	; 0x52
 800e9c6:	7b69      	ldrb	r1, [r5, #13]
 800e9c8:	00cb      	lsls	r3, r1, #3
 800e9ca:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e9ce:	7a2b      	ldrb	r3, [r5, #8]
 800e9d0:	4313      	orrs	r3, r2
 800e9d2:	064a      	lsls	r2, r1, #25
 800e9d4:	bf44      	itt	mi
 800e9d6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e9da:	b21b      	sxthmi	r3, r3
 800e9dc:	1bdb      	subs	r3, r3, r7
 800e9de:	e73f      	b.n	800e860 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800e9e0:	2300      	movs	r3, #0
 800e9e2:	e7b6      	b.n	800e952 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800e9e4:	3fc00079 	.word	0x3fc00079
 800e9e8:	0801d3f4 	.word	0x0801d3f4
 800e9ec:	0801ea4b 	.word	0x0801ea4b
 800e9f0:	0801d4c6 	.word	0x0801d4c6

0800e9f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800e9f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e9f8:	4604      	mov	r4, r0
 800e9fa:	b942      	cbnz	r2, 800ea0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800e9fc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800ea00:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800ea04:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800ea08:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800ea0c:	e046      	b.n	800ea9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800ea0e:	7b51      	ldrb	r1, [r2, #13]
 800ea10:	8893      	ldrh	r3, [r2, #4]
 800ea12:	010f      	lsls	r7, r1, #4
 800ea14:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800ea18:	79d7      	ldrb	r7, [r2, #7]
 800ea1a:	4307      	orrs	r7, r0
 800ea1c:	2f04      	cmp	r7, #4
 800ea1e:	b2bd      	uxth	r5, r7
 800ea20:	bfcc      	ite	gt
 800ea22:	08bf      	lsrgt	r7, r7, #2
 800ea24:	2701      	movle	r7, #1
 800ea26:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800ea2a:	f200 80ab 	bhi.w	800eb84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800ea2e:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800ea32:	4283      	cmp	r3, r0
 800ea34:	d216      	bcs.n	800ea64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ea36:	f240 605b 	movw	r0, #1627	; 0x65b
 800ea3a:	4283      	cmp	r3, r0
 800ea3c:	d859      	bhi.n	800eaf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800ea3e:	f240 6057 	movw	r0, #1623	; 0x657
 800ea42:	4283      	cmp	r3, r0
 800ea44:	d20e      	bcs.n	800ea64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ea46:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800ea4a:	d24a      	bcs.n	800eae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800ea4c:	f240 604e 	movw	r0, #1614	; 0x64e
 800ea50:	4283      	cmp	r3, r0
 800ea52:	d207      	bcs.n	800ea64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ea54:	f240 601a 	movw	r0, #1562	; 0x61a
 800ea58:	4283      	cmp	r3, r0
 800ea5a:	d02a      	beq.n	800eab2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ea5c:	d821      	bhi.n	800eaa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800ea5e:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800ea62:	d35b      	bcc.n	800eb1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ea64:	f9b4 304e 	ldrsh.w	r3, [r4, #78]	; 0x4e
 800ea68:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ea6c:	f040 80d0 	bne.w	800ec10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800ea70:	f9b4 0050 	ldrsh.w	r0, [r4, #80]	; 0x50
 800ea74:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ea78:	f040 80ca 	bne.w	800ec10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800ea7c:	00cb      	lsls	r3, r1, #3
 800ea7e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800ea82:	7a13      	ldrb	r3, [r2, #8]
 800ea84:	0649      	lsls	r1, r1, #25
 800ea86:	ea43 0300 	orr.w	r3, r3, r0
 800ea8a:	bf44      	itt	mi
 800ea8c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ea90:	b21b      	sxthmi	r3, r3
 800ea92:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800ea96:	1b5d      	subs	r5, r3, r5
 800ea98:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800ea9c:	4610      	mov	r0, r2
 800ea9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eaa2:	f240 604b 	movw	r0, #1611	; 0x64b
 800eaa6:	4283      	cmp	r3, r0
 800eaa8:	d338      	bcc.n	800eb1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800eaaa:	f240 604c 	movw	r0, #1612	; 0x64c
 800eaae:	4283      	cmp	r3, r0
 800eab0:	d9d8      	bls.n	800ea64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800eab2:	f9b4 004e 	ldrsh.w	r0, [r4, #78]	; 0x4e
 800eab6:	f9b4 3050 	ldrsh.w	r3, [r4, #80]	; 0x50
 800eaba:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800eabe:	f040 80f1 	bne.w	800eca4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800eac2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800eac6:	f040 80ed 	bne.w	800eca4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800eaca:	00cb      	lsls	r3, r1, #3
 800eacc:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800ead0:	7a13      	ldrb	r3, [r2, #8]
 800ead2:	064e      	lsls	r6, r1, #25
 800ead4:	ea43 0300 	orr.w	r3, r3, r0
 800ead8:	bf44      	itt	mi
 800eada:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800eade:	b21b      	sxthmi	r3, r3
 800eae0:	e7d9      	b.n	800ea96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800eae2:	f240 6054 	movw	r0, #1620	; 0x654
 800eae6:	4283      	cmp	r3, r0
 800eae8:	d8e3      	bhi.n	800eab2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800eaea:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800eaee:	d9e0      	bls.n	800eab2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800eaf0:	e7b8      	b.n	800ea64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800eaf2:	f240 6074 	movw	r0, #1652	; 0x674
 800eaf6:	4283      	cmp	r3, r0
 800eaf8:	d0b4      	beq.n	800ea64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800eafa:	d82d      	bhi.n	800eb58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800eafc:	f240 605e 	movw	r0, #1630	; 0x65e
 800eb00:	4283      	cmp	r3, r0
 800eb02:	d804      	bhi.n	800eb0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800eb04:	f240 605d 	movw	r0, #1629	; 0x65d
 800eb08:	4283      	cmp	r3, r0
 800eb0a:	d3d2      	bcc.n	800eab2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800eb0c:	e7aa      	b.n	800ea64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800eb0e:	f240 605f 	movw	r0, #1631	; 0x65f
 800eb12:	4283      	cmp	r3, r0
 800eb14:	d0cd      	beq.n	800eab2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800eb16:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800eb1a:	d0a3      	beq.n	800ea64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800eb1c:	00cb      	lsls	r3, r1, #3
 800eb1e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800eb22:	7a13      	ldrb	r3, [r2, #8]
 800eb24:	0649      	lsls	r1, r1, #25
 800eb26:	ea43 0300 	orr.w	r3, r3, r0
 800eb2a:	bf44      	itt	mi
 800eb2c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800eb30:	b21b      	sxthmi	r3, r3
 800eb32:	1b5d      	subs	r5, r3, r5
 800eb34:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800eb38:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800eb3c:	7b53      	ldrb	r3, [r2, #13]
 800eb3e:	015b      	lsls	r3, r3, #5
 800eb40:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800eb44:	7993      	ldrb	r3, [r2, #6]
 800eb46:	430b      	orrs	r3, r1
 800eb48:	005b      	lsls	r3, r3, #1
 800eb4a:	2105      	movs	r1, #5
 800eb4c:	fb93 f3f1 	sdiv	r3, r3, r1
 800eb50:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800eb54:	440b      	add	r3, r1
 800eb56:	e757      	b.n	800ea08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800eb58:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800eb5c:	4283      	cmp	r3, r0
 800eb5e:	d809      	bhi.n	800eb74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800eb60:	f240 60df 	movw	r0, #1759	; 0x6df
 800eb64:	4283      	cmp	r3, r0
 800eb66:	f4bf af7d 	bcs.w	800ea64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800eb6a:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800eb6e:	2b05      	cmp	r3, #5
 800eb70:	d8d4      	bhi.n	800eb1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800eb72:	e777      	b.n	800ea64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800eb74:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800eb78:	4283      	cmp	r3, r0
 800eb7a:	d09a      	beq.n	800eab2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800eb7c:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800eb80:	4283      	cmp	r3, r0
 800eb82:	e7ca      	b.n	800eb1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800eb84:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800eb88:	d22b      	bcs.n	800ebe2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800eb8a:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800eb8e:	4283      	cmp	r3, r0
 800eb90:	d28f      	bcs.n	800eab2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800eb92:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800eb96:	4283      	cmp	r3, r0
 800eb98:	d816      	bhi.n	800ebc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800eb9a:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800eb9e:	4283      	cmp	r3, r0
 800eba0:	f4bf af60 	bcs.w	800ea64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800eba4:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800eba8:	4283      	cmp	r3, r0
 800ebaa:	d80a      	bhi.n	800ebc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800ebac:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800ebb0:	4283      	cmp	r3, r0
 800ebb2:	f4bf af57 	bcs.w	800ea64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ebb6:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800ebba:	4283      	cmp	r3, r0
 800ebbc:	f43f af79 	beq.w	800eab2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ebc0:	e7ac      	b.n	800eb1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ebc2:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800ebc6:	e7f8      	b.n	800ebba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800ebc8:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800ebcc:	4283      	cmp	r3, r0
 800ebce:	d802      	bhi.n	800ebd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800ebd0:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800ebd4:	e798      	b.n	800eb08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800ebd6:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800ebda:	4283      	cmp	r3, r0
 800ebdc:	f47f af42 	bne.w	800ea64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ebe0:	e767      	b.n	800eab2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ebe2:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800ebe6:	4283      	cmp	r3, r0
 800ebe8:	f43f af63 	beq.w	800eab2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ebec:	d802      	bhi.n	800ebf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800ebee:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800ebf2:	e7f2      	b.n	800ebda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800ebf4:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800ebf8:	4283      	cmp	r3, r0
 800ebfa:	d805      	bhi.n	800ec08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800ebfc:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800ec00:	4283      	cmp	r3, r0
 800ec02:	f4ff af2f 	bcc.w	800ea64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ec06:	e754      	b.n	800eab2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ec08:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800ec0c:	4283      	cmp	r3, r0
 800ec0e:	e7af      	b.n	800eb70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800ec10:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 800ec14:	4617      	mov	r7, r2
 800ec16:	f102 0808 	add.w	r8, r2, #8
 800ec1a:	4666      	mov	r6, ip
 800ec1c:	6838      	ldr	r0, [r7, #0]
 800ec1e:	6879      	ldr	r1, [r7, #4]
 800ec20:	46e6      	mov	lr, ip
 800ec22:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800ec26:	3708      	adds	r7, #8
 800ec28:	4547      	cmp	r7, r8
 800ec2a:	46f4      	mov	ip, lr
 800ec2c:	d1f6      	bne.n	800ec1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800ec2e:	6838      	ldr	r0, [r7, #0]
 800ec30:	f8ce 0000 	str.w	r0, [lr]
 800ec34:	88b9      	ldrh	r1, [r7, #4]
 800ec36:	f8ae 1004 	strh.w	r1, [lr, #4]
 800ec3a:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800ec3e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ec42:	d009      	beq.n	800ec58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800ec44:	7b51      	ldrb	r1, [r2, #13]
 800ec46:	7992      	ldrb	r2, [r2, #6]
 800ec48:	0149      	lsls	r1, r1, #5
 800ec4a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800ec4e:	4311      	orrs	r1, r2
 800ec50:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800ec54:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800ec58:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ec5c:	d00d      	beq.n	800ec7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800ec5e:	442b      	add	r3, r5
 800ec60:	b29b      	uxth	r3, r3
 800ec62:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800ec66:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800ec6a:	10db      	asrs	r3, r3, #3
 800ec6c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800ec70:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800ec74:	4313      	orrs	r3, r2
 800ec76:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800ec7a:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800ec7e:	00cb      	lsls	r3, r1, #3
 800ec80:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ec84:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800ec88:	064f      	lsls	r7, r1, #25
 800ec8a:	ea43 0302 	orr.w	r3, r3, r2
 800ec8e:	bf44      	itt	mi
 800ec90:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ec94:	b21b      	sxthmi	r3, r3
 800ec96:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800ec9a:	1b5d      	subs	r5, r3, r5
 800ec9c:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800eca0:	4632      	mov	r2, r6
 800eca2:	e6fb      	b.n	800ea9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800eca4:	f104 0e40 	add.w	lr, r4, #64	; 0x40
 800eca8:	4694      	mov	ip, r2
 800ecaa:	f102 0908 	add.w	r9, r2, #8
 800ecae:	4676      	mov	r6, lr
 800ecb0:	f8dc 0000 	ldr.w	r0, [ip]
 800ecb4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800ecb8:	46f0      	mov	r8, lr
 800ecba:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800ecbe:	f10c 0c08 	add.w	ip, ip, #8
 800ecc2:	45cc      	cmp	ip, r9
 800ecc4:	46c6      	mov	lr, r8
 800ecc6:	d1f3      	bne.n	800ecb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800ecc8:	f8dc 0000 	ldr.w	r0, [ip]
 800eccc:	f8c8 0000 	str.w	r0, [r8]
 800ecd0:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800ecd4:	f8a8 1004 	strh.w	r1, [r8, #4]
 800ecd8:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800ecdc:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ece0:	d009      	beq.n	800ecf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800ece2:	7b51      	ldrb	r1, [r2, #13]
 800ece4:	7992      	ldrb	r2, [r2, #6]
 800ece6:	0149      	lsls	r1, r1, #5
 800ece8:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800ecec:	4311      	orrs	r1, r2
 800ecee:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800ecf2:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800ecf6:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ecfa:	d00d      	beq.n	800ed18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800ecfc:	1bdb      	subs	r3, r3, r7
 800ecfe:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800ed02:	b29b      	uxth	r3, r3
 800ed04:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800ed08:	10db      	asrs	r3, r3, #3
 800ed0a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800ed0e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800ed12:	4313      	orrs	r3, r2
 800ed14:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800ed18:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800ed1c:	00cb      	lsls	r3, r1, #3
 800ed1e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ed22:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800ed26:	0648      	lsls	r0, r1, #25
 800ed28:	ea43 0302 	orr.w	r3, r3, r2
 800ed2c:	bf44      	itt	mi
 800ed2e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ed32:	b21b      	sxthmi	r3, r3
 800ed34:	e7b1      	b.n	800ec9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800ed38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800ed38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ed3c:	461e      	mov	r6, r3
 800ed3e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800ed40:	4604      	mov	r4, r0
 800ed42:	4617      	mov	r7, r2
 800ed44:	b92b      	cbnz	r3, 800ed52 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800ed46:	4b25      	ldr	r3, [pc, #148]	; (800eddc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800ed48:	4a25      	ldr	r2, [pc, #148]	; (800ede0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800ed4a:	4826      	ldr	r0, [pc, #152]	; (800ede4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800ed4c:	21c0      	movs	r1, #192	; 0xc0
 800ed4e:	f00c fb5d 	bl	801b40c <__assert_func>
 800ed52:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800ed54:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800ed58:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800ed5c:	f7f4 f8b6 	bl	8002ecc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ed60:	4605      	mov	r5, r0
 800ed62:	b918      	cbnz	r0, 800ed6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800ed64:	6030      	str	r0, [r6, #0]
 800ed66:	4628      	mov	r0, r5
 800ed68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ed6c:	683b      	ldr	r3, [r7, #0]
 800ed6e:	4601      	mov	r1, r0
 800ed70:	68db      	ldr	r3, [r3, #12]
 800ed72:	4638      	mov	r0, r7
 800ed74:	4798      	blx	r3
 800ed76:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800ed7a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800ed7e:	4602      	mov	r2, r0
 800ed80:	6030      	str	r0, [r6, #0]
 800ed82:	d213      	bcs.n	800edac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800ed84:	4643      	mov	r3, r8
 800ed86:	4639      	mov	r1, r7
 800ed88:	4620      	mov	r0, r4
 800ed8a:	f7ff fe33 	bl	800e9f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800ed8e:	6030      	str	r0, [r6, #0]
 800ed90:	6833      	ldr	r3, [r6, #0]
 800ed92:	b143      	cbz	r3, 800eda6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800ed94:	7b5a      	ldrb	r2, [r3, #13]
 800ed96:	7a9b      	ldrb	r3, [r3, #10]
 800ed98:	0052      	lsls	r2, r2, #1
 800ed9a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800ed9e:	4313      	orrs	r3, r2
 800eda0:	bf0c      	ite	eq
 800eda2:	2301      	moveq	r3, #1
 800eda4:	2300      	movne	r3, #0
 800eda6:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800edaa:	e7dc      	b.n	800ed66 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800edac:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800edb0:	b29b      	uxth	r3, r3
 800edb2:	2b7f      	cmp	r3, #127	; 0x7f
 800edb4:	d804      	bhi.n	800edc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800edb6:	4639      	mov	r1, r7
 800edb8:	4620      	mov	r0, r4
 800edba:	f7ff fd01 	bl	800e7c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800edbe:	e7e6      	b.n	800ed8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800edc0:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800edc4:	2b00      	cmp	r3, #0
 800edc6:	d0e3      	beq.n	800ed90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800edc8:	f640 1302 	movw	r3, #2306	; 0x902
 800edcc:	429d      	cmp	r5, r3
 800edce:	d1df      	bne.n	800ed90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800edd0:	4601      	mov	r1, r0
 800edd2:	4620      	mov	r0, r4
 800edd4:	f7ff fcc5 	bl	800e762 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800edd8:	e7d9      	b.n	800ed8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800edda:	bf00      	nop
 800eddc:	0801d3f4 	.word	0x0801d3f4
 800ede0:	0801ea4b 	.word	0x0801ea4b
 800ede4:	0801d4c6 	.word	0x0801d4c6

0800ede8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800ede8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800edec:	461e      	mov	r6, r3
 800edee:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800edf0:	4604      	mov	r4, r0
 800edf2:	4617      	mov	r7, r2
 800edf4:	b92b      	cbnz	r3, 800ee02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800edf6:	4b26      	ldr	r3, [pc, #152]	; (800ee90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800edf8:	4a26      	ldr	r2, [pc, #152]	; (800ee94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800edfa:	4827      	ldr	r0, [pc, #156]	; (800ee98 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800edfc:	21c0      	movs	r1, #192	; 0xc0
 800edfe:	f00c fb05 	bl	801b40c <__assert_func>
 800ee02:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800ee04:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800ee08:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800ee0c:	f7f4 f85e 	bl	8002ecc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ee10:	4605      	mov	r5, r0
 800ee12:	b918      	cbnz	r0, 800ee1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800ee14:	6030      	str	r0, [r6, #0]
 800ee16:	4628      	mov	r0, r5
 800ee18:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ee1c:	683b      	ldr	r3, [r7, #0]
 800ee1e:	4601      	mov	r1, r0
 800ee20:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800ee24:	4638      	mov	r0, r7
 800ee26:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800ee2a:	47c8      	blx	r9
 800ee2c:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800ee30:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800ee34:	4602      	mov	r2, r0
 800ee36:	6030      	str	r0, [r6, #0]
 800ee38:	d213      	bcs.n	800ee62 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800ee3a:	4643      	mov	r3, r8
 800ee3c:	4639      	mov	r1, r7
 800ee3e:	4620      	mov	r0, r4
 800ee40:	f7ff fdd8 	bl	800e9f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800ee44:	6030      	str	r0, [r6, #0]
 800ee46:	6833      	ldr	r3, [r6, #0]
 800ee48:	b143      	cbz	r3, 800ee5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800ee4a:	7b5a      	ldrb	r2, [r3, #13]
 800ee4c:	7a9b      	ldrb	r3, [r3, #10]
 800ee4e:	0052      	lsls	r2, r2, #1
 800ee50:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800ee54:	4313      	orrs	r3, r2
 800ee56:	bf0c      	ite	eq
 800ee58:	2301      	moveq	r3, #1
 800ee5a:	2300      	movne	r3, #0
 800ee5c:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800ee60:	e7d9      	b.n	800ee16 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800ee62:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800ee66:	b29b      	uxth	r3, r3
 800ee68:	2b7f      	cmp	r3, #127	; 0x7f
 800ee6a:	d804      	bhi.n	800ee76 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800ee6c:	4639      	mov	r1, r7
 800ee6e:	4620      	mov	r0, r4
 800ee70:	f7ff fca6 	bl	800e7c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800ee74:	e7e6      	b.n	800ee44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800ee76:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800ee7a:	2b00      	cmp	r3, #0
 800ee7c:	d0e3      	beq.n	800ee46 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800ee7e:	f640 1302 	movw	r3, #2306	; 0x902
 800ee82:	429d      	cmp	r5, r3
 800ee84:	d1df      	bne.n	800ee46 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800ee86:	4601      	mov	r1, r0
 800ee88:	4620      	mov	r0, r4
 800ee8a:	f7ff fc6a 	bl	800e762 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800ee8e:	e7d9      	b.n	800ee44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800ee90:	0801d3f4 	.word	0x0801d3f4
 800ee94:	0801ea4b 	.word	0x0801ea4b
 800ee98:	0801d4c6 	.word	0x0801d4c6

0800ee9c <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800ee9c:	b510      	push	{r4, lr}
 800ee9e:	4604      	mov	r4, r0
 800eea0:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800eea2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800eea4:	b9d9      	cbnz	r1, 800eede <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 800eea6:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800eea8:	2b0a      	cmp	r3, #10
 800eeaa:	d036      	beq.n	800ef1a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800eeac:	4620      	mov	r0, r4
 800eeae:	f7ff fc21 	bl	800e6f4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800eeb2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800eeb4:	2b09      	cmp	r3, #9
 800eeb6:	d906      	bls.n	800eec6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 800eeb8:	4b18      	ldr	r3, [pc, #96]	; (800ef1c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 800eeba:	4a19      	ldr	r2, [pc, #100]	; (800ef20 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800eebc:	4819      	ldr	r0, [pc, #100]	; (800ef24 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800eebe:	f44f 7182 	mov.w	r1, #260	; 0x104
 800eec2:	f00c faa3 	bl	801b40c <__assert_func>
 800eec6:	1c5a      	adds	r2, r3, #1
 800eec8:	8622      	strh	r2, [r4, #48]	; 0x30
 800eeca:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800eecc:	4413      	add	r3, r2
 800eece:	b29b      	uxth	r3, r3
 800eed0:	2b09      	cmp	r3, #9
 800eed2:	bf88      	it	hi
 800eed4:	3b0a      	subhi	r3, #10
 800eed6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800eeda:	8358      	strh	r0, [r3, #26]
 800eedc:	e7e3      	b.n	800eea6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 800eede:	2b0a      	cmp	r3, #10
 800eee0:	d01b      	beq.n	800ef1a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800eee2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800eee4:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800eee8:	3901      	subs	r1, #1
 800eeea:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 800eeec:	8721      	strh	r1, [r4, #56]	; 0x38
 800eeee:	1c51      	adds	r1, r2, #1
 800eef0:	b289      	uxth	r1, r1
 800eef2:	2901      	cmp	r1, #1
 800eef4:	bf8a      	itet	hi
 800eef6:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800eefa:	86e1      	strhls	r1, [r4, #54]	; 0x36
 800eefc:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 800eefe:	2b09      	cmp	r3, #9
 800ef00:	d8da      	bhi.n	800eeb8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 800ef02:	1c5a      	adds	r2, r3, #1
 800ef04:	8622      	strh	r2, [r4, #48]	; 0x30
 800ef06:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800ef08:	4413      	add	r3, r2
 800ef0a:	b29b      	uxth	r3, r3
 800ef0c:	2b09      	cmp	r3, #9
 800ef0e:	bf88      	it	hi
 800ef10:	3b0a      	subhi	r3, #10
 800ef12:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ef16:	8358      	strh	r0, [r3, #26]
 800ef18:	e7c2      	b.n	800eea0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800ef1a:	bd10      	pop	{r4, pc}
 800ef1c:	0801e81c 	.word	0x0801e81c
 800ef20:	0801eba1 	.word	0x0801eba1
 800ef24:	0801d4c6 	.word	0x0801d4c6

0800ef28 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800ef28:	b538      	push	{r3, r4, r5, lr}
 800ef2a:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800ef2c:	4604      	mov	r4, r0
 800ef2e:	b92a      	cbnz	r2, 800ef3c <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800ef30:	4b13      	ldr	r3, [pc, #76]	; (800ef80 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800ef32:	4a14      	ldr	r2, [pc, #80]	; (800ef84 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800ef34:	4814      	ldr	r0, [pc, #80]	; (800ef88 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800ef36:	21d5      	movs	r1, #213	; 0xd5
 800ef38:	f00c fa68 	bl	801b40c <__assert_func>
 800ef3c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800ef3e:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800ef42:	3a01      	subs	r2, #1
 800ef44:	8b4d      	ldrh	r5, [r1, #26]
 800ef46:	8602      	strh	r2, [r0, #48]	; 0x30
 800ef48:	1c5a      	adds	r2, r3, #1
 800ef4a:	b292      	uxth	r2, r2
 800ef4c:	2a09      	cmp	r2, #9
 800ef4e:	bf86      	itte	hi
 800ef50:	3b09      	subhi	r3, #9
 800ef52:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 800ef54:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 800ef56:	f7ff ffa1 	bl	800ee9c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ef5a:	8b23      	ldrh	r3, [r4, #24]
 800ef5c:	2b01      	cmp	r3, #1
 800ef5e:	bf9c      	itt	ls
 800ef60:	3301      	addls	r3, #1
 800ef62:	8323      	strhls	r3, [r4, #24]
 800ef64:	8ae3      	ldrh	r3, [r4, #22]
 800ef66:	b90b      	cbnz	r3, 800ef6c <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800ef68:	2302      	movs	r3, #2
 800ef6a:	82e3      	strh	r3, [r4, #22]
 800ef6c:	8ae3      	ldrh	r3, [r4, #22]
 800ef6e:	3b01      	subs	r3, #1
 800ef70:	b29b      	uxth	r3, r3
 800ef72:	82e3      	strh	r3, [r4, #22]
 800ef74:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ef78:	4628      	mov	r0, r5
 800ef7a:	8265      	strh	r5, [r4, #18]
 800ef7c:	bd38      	pop	{r3, r4, r5, pc}
 800ef7e:	bf00      	nop
 800ef80:	0801d3f4 	.word	0x0801d3f4
 800ef84:	0801eaf6 	.word	0x0801eaf6
 800ef88:	0801d4c6 	.word	0x0801d4c6

0800ef8c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800ef8c:	b538      	push	{r3, r4, r5, lr}
 800ef8e:	428a      	cmp	r2, r1
 800ef90:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 800ef92:	d90c      	bls.n	800efae <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800ef94:	b92c      	cbnz	r4, 800efa2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800ef96:	4b1c      	ldr	r3, [pc, #112]	; (800f008 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800ef98:	4a1c      	ldr	r2, [pc, #112]	; (800f00c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800ef9a:	21e1      	movs	r1, #225	; 0xe1
 800ef9c:	481c      	ldr	r0, [pc, #112]	; (800f010 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800ef9e:	f00c fa35 	bl	801b40c <__assert_func>
 800efa2:	3c01      	subs	r4, #1
 800efa4:	8604      	strh	r4, [r0, #48]	; 0x30
 800efa6:	4b1b      	ldr	r3, [pc, #108]	; (800f014 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800efa8:	4a1b      	ldr	r2, [pc, #108]	; (800f018 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800efaa:	21c5      	movs	r1, #197	; 0xc5
 800efac:	e7f6      	b.n	800ef9c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800efae:	428c      	cmp	r4, r1
 800efb0:	d203      	bcs.n	800efba <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800efb2:	4b1a      	ldr	r3, [pc, #104]	; (800f01c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800efb4:	4a1a      	ldr	r2, [pc, #104]	; (800f020 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800efb6:	21cb      	movs	r1, #203	; 0xcb
 800efb8:	e7f0      	b.n	800ef9c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800efba:	1a64      	subs	r4, r4, r1
 800efbc:	8604      	strh	r4, [r0, #48]	; 0x30
 800efbe:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 800efc0:	4421      	add	r1, r4
 800efc2:	b289      	uxth	r1, r1
 800efc4:	2909      	cmp	r1, #9
 800efc6:	bf88      	it	hi
 800efc8:	390a      	subhi	r1, #10
 800efca:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800efcc:	250a      	movs	r5, #10
 800efce:	b1ba      	cbz	r2, 800f000 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800efd0:	3a01      	subs	r2, #1
 800efd2:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 800efd4:	b292      	uxth	r2, r2
 800efd6:	2909      	cmp	r1, #9
 800efd8:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800efdc:	d903      	bls.n	800efe6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800efde:	4b11      	ldr	r3, [pc, #68]	; (800f024 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800efe0:	4a11      	ldr	r2, [pc, #68]	; (800f028 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800efe2:	21e6      	movs	r1, #230	; 0xe6
 800efe4:	e7da      	b.n	800ef9c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800efe6:	3101      	adds	r1, #1
 800efe8:	8601      	strh	r1, [r0, #48]	; 0x30
 800efea:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800efec:	b901      	cbnz	r1, 800eff0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800efee:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800eff0:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800eff2:	3901      	subs	r1, #1
 800eff4:	b289      	uxth	r1, r1
 800eff6:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800eff8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800effc:	834c      	strh	r4, [r1, #26]
 800effe:	e7e6      	b.n	800efce <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800f000:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f004:	f7ff bf4a 	b.w	800ee9c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800f008:	0801d3f4 	.word	0x0801d3f4
 800f00c:	0801e8cf 	.word	0x0801e8cf
 800f010:	0801d4c6 	.word	0x0801d4c6
 800f014:	0801d4f2 	.word	0x0801d4f2
 800f018:	0801e979 	.word	0x0801e979
 800f01c:	0801e828 	.word	0x0801e828
 800f020:	0801ec50 	.word	0x0801ec50
 800f024:	0801e834 	.word	0x0801e834
 800f028:	0801e847 	.word	0x0801e847

0800f02c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800f02c:	3a01      	subs	r2, #1
 800f02e:	b570      	push	{r4, r5, r6, lr}
 800f030:	b292      	uxth	r2, r2
 800f032:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800f036:	42b2      	cmp	r2, r6
 800f038:	d019      	beq.n	800f06e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800f03a:	8b04      	ldrh	r4, [r0, #24]
 800f03c:	f831 5b02 	ldrh.w	r5, [r1], #2
 800f040:	4294      	cmp	r4, r2
 800f042:	d805      	bhi.n	800f050 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800f044:	4b19      	ldr	r3, [pc, #100]	; (800f0ac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800f046:	4a1a      	ldr	r2, [pc, #104]	; (800f0b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800f048:	481a      	ldr	r0, [pc, #104]	; (800f0b4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800f04a:	21c5      	movs	r1, #197	; 0xc5
 800f04c:	f00c f9de 	bl	801b40c <__assert_func>
 800f050:	8ac4      	ldrh	r4, [r0, #22]
 800f052:	4414      	add	r4, r2
 800f054:	b2a4      	uxth	r4, r4
 800f056:	2c01      	cmp	r4, #1
 800f058:	bf88      	it	hi
 800f05a:	3c02      	subhi	r4, #2
 800f05c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800f060:	3a01      	subs	r2, #1
 800f062:	8a64      	ldrh	r4, [r4, #18]
 800f064:	42ac      	cmp	r4, r5
 800f066:	b292      	uxth	r2, r2
 800f068:	d0e5      	beq.n	800f036 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800f06a:	2000      	movs	r0, #0
 800f06c:	bd70      	pop	{r4, r5, r6, pc}
 800f06e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800f072:	2400      	movs	r4, #0
 800f074:	4413      	add	r3, r2
 800f076:	b2a2      	uxth	r2, r4
 800f078:	429a      	cmp	r2, r3
 800f07a:	da14      	bge.n	800f0a6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800f07c:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800f07e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800f082:	4296      	cmp	r6, r2
 800f084:	d802      	bhi.n	800f08c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800f086:	4b09      	ldr	r3, [pc, #36]	; (800f0ac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800f088:	4a0b      	ldr	r2, [pc, #44]	; (800f0b8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800f08a:	e7dd      	b.n	800f048 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800f08c:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 800f08e:	4432      	add	r2, r6
 800f090:	b292      	uxth	r2, r2
 800f092:	2a09      	cmp	r2, #9
 800f094:	bf88      	it	hi
 800f096:	3a0a      	subhi	r2, #10
 800f098:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800f09c:	3401      	adds	r4, #1
 800f09e:	8b52      	ldrh	r2, [r2, #26]
 800f0a0:	42aa      	cmp	r2, r5
 800f0a2:	d0e8      	beq.n	800f076 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800f0a4:	e7e1      	b.n	800f06a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800f0a6:	2001      	movs	r0, #1
 800f0a8:	e7e0      	b.n	800f06c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800f0aa:	bf00      	nop
 800f0ac:	0801d4f2 	.word	0x0801d4f2
 800f0b0:	0801ecd4 	.word	0x0801ecd4
 800f0b4:	0801d4c6 	.word	0x0801d4c6
 800f0b8:	0801e979 	.word	0x0801e979

0800f0bc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800f0bc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f0c0:	4605      	mov	r5, r0
 800f0c2:	4616      	mov	r6, r2
 800f0c4:	1c8c      	adds	r4, r1, #2
 800f0c6:	8809      	ldrh	r1, [r1, #0]
 800f0c8:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800f0cc:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800f0d0:	42b3      	cmp	r3, r6
 800f0d2:	d124      	bne.n	800f11e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800f0d4:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800f0d8:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800f0dc:	f001 070f 	and.w	r7, r1, #15
 800f0e0:	f8cd 8000 	str.w	r8, [sp]
 800f0e4:	464b      	mov	r3, r9
 800f0e6:	4652      	mov	r2, sl
 800f0e8:	4621      	mov	r1, r4
 800f0ea:	4628      	mov	r0, r5
 800f0ec:	f7ff ff9e 	bl	800f02c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800f0f0:	4683      	mov	fp, r0
 800f0f2:	b168      	cbz	r0, 800f110 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800f0f4:	eb0a 0109 	add.w	r1, sl, r9
 800f0f8:	4441      	add	r1, r8
 800f0fa:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800f0fe:	463a      	mov	r2, r7
 800f100:	4649      	mov	r1, r9
 800f102:	4628      	mov	r0, r5
 800f104:	f7ff ff42 	bl	800ef8c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800f108:	4658      	mov	r0, fp
 800f10a:	b003      	add	sp, #12
 800f10c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f110:	eb07 010a 	add.w	r1, r7, sl
 800f114:	4449      	add	r1, r9
 800f116:	4441      	add	r1, r8
 800f118:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800f11c:	e7d2      	b.n	800f0c4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800f11e:	f04f 0b00 	mov.w	fp, #0
 800f122:	e7f1      	b.n	800f108 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800f124 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800f124:	b570      	push	{r4, r5, r6, lr}
 800f126:	8810      	ldrh	r0, [r2, #0]
 800f128:	4298      	cmp	r0, r3
 800f12a:	d817      	bhi.n	800f15c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f12c:	1e48      	subs	r0, r1, #1
 800f12e:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800f132:	4298      	cmp	r0, r3
 800f134:	d312      	bcc.n	800f15c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f136:	2400      	movs	r4, #0
 800f138:	428c      	cmp	r4, r1
 800f13a:	d20f      	bcs.n	800f15c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f13c:	1860      	adds	r0, r4, r1
 800f13e:	1040      	asrs	r0, r0, #1
 800f140:	0085      	lsls	r5, r0, #2
 800f142:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800f146:	42b3      	cmp	r3, r6
 800f148:	d902      	bls.n	800f150 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800f14a:	3001      	adds	r0, #1
 800f14c:	b284      	uxth	r4, r0
 800f14e:	e7f3      	b.n	800f138 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f150:	d201      	bcs.n	800f156 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800f152:	b281      	uxth	r1, r0
 800f154:	e7f0      	b.n	800f138 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f156:	442a      	add	r2, r5
 800f158:	8850      	ldrh	r0, [r2, #2]
 800f15a:	bd70      	pop	{r4, r5, r6, pc}
 800f15c:	2000      	movs	r0, #0
 800f15e:	e7fc      	b.n	800f15a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800f160 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800f160:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f164:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800f166:	886f      	ldrh	r7, [r5, #2]
 800f168:	4604      	mov	r4, r0
 800f16a:	087f      	lsrs	r7, r7, #1
 800f16c:	260b      	movs	r6, #11
 800f16e:	3e01      	subs	r6, #1
 800f170:	d01b      	beq.n	800f1aa <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800f172:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f174:	b92b      	cbnz	r3, 800f182 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800f176:	4b0e      	ldr	r3, [pc, #56]	; (800f1b0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800f178:	4a0e      	ldr	r2, [pc, #56]	; (800f1b4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800f17a:	480f      	ldr	r0, [pc, #60]	; (800f1b8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800f17c:	21c0      	movs	r1, #192	; 0xc0
 800f17e:	f00c f945 	bl	801b40c <__assert_func>
 800f182:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800f184:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f188:	462a      	mov	r2, r5
 800f18a:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800f18e:	4639      	mov	r1, r7
 800f190:	4643      	mov	r3, r8
 800f192:	4620      	mov	r0, r4
 800f194:	f7ff ffc6 	bl	800f124 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800f198:	b138      	cbz	r0, 800f1aa <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800f19a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800f19e:	4642      	mov	r2, r8
 800f1a0:	4620      	mov	r0, r4
 800f1a2:	f7ff ff8b 	bl	800f0bc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800f1a6:	2800      	cmp	r0, #0
 800f1a8:	d1e1      	bne.n	800f16e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800f1aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f1ae:	bf00      	nop
 800f1b0:	0801d3f4 	.word	0x0801d3f4
 800f1b4:	0801ea4b 	.word	0x0801ea4b
 800f1b8:	0801d4c6 	.word	0x0801d4c6

0800f1bc <_ZN8touchgfx8ceil28_4El>:
 800f1bc:	f110 030f 	adds.w	r3, r0, #15
 800f1c0:	d401      	bmi.n	800f1c6 <_ZN8touchgfx8ceil28_4El+0xa>
 800f1c2:	1118      	asrs	r0, r3, #4
 800f1c4:	4770      	bx	lr
 800f1c6:	f1c0 0001 	rsb	r0, r0, #1
 800f1ca:	f010 000f 	ands.w	r0, r0, #15
 800f1ce:	bf18      	it	ne
 800f1d0:	2001      	movne	r0, #1
 800f1d2:	2210      	movs	r2, #16
 800f1d4:	fb93 f3f2 	sdiv	r3, r3, r2
 800f1d8:	1a18      	subs	r0, r3, r0
 800f1da:	4770      	bx	lr

0800f1dc <_ZN8touchgfx11floorDivModEllRlS0_>:
 800f1dc:	2900      	cmp	r1, #0
 800f1de:	b538      	push	{r3, r4, r5, lr}
 800f1e0:	dc05      	bgt.n	800f1ee <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 800f1e2:	4b0f      	ldr	r3, [pc, #60]	; (800f220 <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 800f1e4:	4a0f      	ldr	r2, [pc, #60]	; (800f224 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 800f1e6:	4810      	ldr	r0, [pc, #64]	; (800f228 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 800f1e8:	21fa      	movs	r1, #250	; 0xfa
 800f1ea:	f00c f90f 	bl	801b40c <__assert_func>
 800f1ee:	2800      	cmp	r0, #0
 800f1f0:	db06      	blt.n	800f200 <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 800f1f2:	fb90 f4f1 	sdiv	r4, r0, r1
 800f1f6:	6014      	str	r4, [r2, #0]
 800f1f8:	fb01 0114 	mls	r1, r1, r4, r0
 800f1fc:	6019      	str	r1, [r3, #0]
 800f1fe:	bd38      	pop	{r3, r4, r5, pc}
 800f200:	4240      	negs	r0, r0
 800f202:	fb90 f4f1 	sdiv	r4, r0, r1
 800f206:	4265      	negs	r5, r4
 800f208:	fb01 0014 	mls	r0, r1, r4, r0
 800f20c:	6015      	str	r5, [r2, #0]
 800f20e:	6018      	str	r0, [r3, #0]
 800f210:	2800      	cmp	r0, #0
 800f212:	d0f4      	beq.n	800f1fe <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 800f214:	6810      	ldr	r0, [r2, #0]
 800f216:	3801      	subs	r0, #1
 800f218:	6010      	str	r0, [r2, #0]
 800f21a:	6818      	ldr	r0, [r3, #0]
 800f21c:	1a09      	subs	r1, r1, r0
 800f21e:	e7ed      	b.n	800f1fc <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 800f220:	0801eda5 	.word	0x0801eda5
 800f224:	0801ede4 	.word	0x0801ede4
 800f228:	0801edb5 	.word	0x0801edb5

0800f22c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800f22c:	b570      	push	{r4, r5, r6, lr}
 800f22e:	694a      	ldr	r2, [r1, #20]
 800f230:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800f232:	684b      	ldr	r3, [r1, #4]
 800f234:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800f236:	1b54      	subs	r4, r2, r5
 800f238:	f000 8106 	beq.w	800f448 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800f23c:	1b9b      	subs	r3, r3, r6
 800f23e:	d003      	beq.n	800f248 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f240:	4363      	muls	r3, r4
 800f242:	2210      	movs	r2, #16
 800f244:	fb93 f3f2 	sdiv	r3, r3, r2
 800f248:	680c      	ldr	r4, [r1, #0]
 800f24a:	698a      	ldr	r2, [r1, #24]
 800f24c:	1b65      	subs	r5, r4, r5
 800f24e:	f000 80fd 	beq.w	800f44c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800f252:	1b92      	subs	r2, r2, r6
 800f254:	d003      	beq.n	800f25e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f256:	436a      	muls	r2, r5
 800f258:	2410      	movs	r4, #16
 800f25a:	fb92 f2f4 	sdiv	r2, r2, r4
 800f25e:	1a9b      	subs	r3, r3, r2
 800f260:	ee07 3a90 	vmov	s15, r3
 800f264:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800f488 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800f268:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f26c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f270:	ee67 7a84 	vmul.f32	s15, s15, s8
 800f274:	460a      	mov	r2, r1
 800f276:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800f27a:	4603      	mov	r3, r0
 800f27c:	f100 040c 	add.w	r4, r0, #12
 800f280:	eeb1 6a43 	vneg.f32	s12, s6
 800f284:	edd2 7a02 	vldr	s15, [r2, #8]
 800f288:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800f28c:	3214      	adds	r2, #20
 800f28e:	ece3 6a01 	vstmia	r3!, {s13}
 800f292:	ed52 7a02 	vldr	s15, [r2, #-8]
 800f296:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f29a:	429c      	cmp	r4, r3
 800f29c:	edc3 7a02 	vstr	s15, [r3, #8]
 800f2a0:	ed52 7a01 	vldr	s15, [r2, #-4]
 800f2a4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f2a8:	edc3 7a05 	vstr	s15, [r3, #20]
 800f2ac:	d1ea      	bne.n	800f284 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800f2ae:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f2b0:	698b      	ldr	r3, [r1, #24]
 800f2b2:	edd0 4a02 	vldr	s9, [r0, #8]
 800f2b6:	edd0 3a00 	vldr	s7, [r0]
 800f2ba:	edd0 6a01 	vldr	s13, [r0, #4]
 800f2be:	ed90 5a05 	vldr	s10, [r0, #20]
 800f2c2:	ed90 2a03 	vldr	s4, [r0, #12]
 800f2c6:	edd0 5a04 	vldr	s11, [r0, #16]
 800f2ca:	ed90 1a07 	vldr	s2, [r0, #28]
 800f2ce:	edd0 2a06 	vldr	s5, [r0, #24]
 800f2d2:	1a9b      	subs	r3, r3, r2
 800f2d4:	ee07 3a90 	vmov	s15, r3
 800f2d8:	684b      	ldr	r3, [r1, #4]
 800f2da:	1a9b      	subs	r3, r3, r2
 800f2dc:	ee07 3a10 	vmov	s14, r3
 800f2e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f2e4:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800f2e8:	ee67 7a84 	vmul.f32	s15, s15, s8
 800f2ec:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800f2f0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f2f4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800f2f8:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f2fc:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800f300:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f304:	ee32 5a45 	vsub.f32	s10, s4, s10
 800f308:	ee67 7a83 	vmul.f32	s15, s15, s6
 800f30c:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800f310:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f312:	694a      	ldr	r2, [r1, #20]
 800f314:	1b13      	subs	r3, r2, r4
 800f316:	ee07 3a10 	vmov	s14, r3
 800f31a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f31e:	680b      	ldr	r3, [r1, #0]
 800f320:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f324:	1b1b      	subs	r3, r3, r4
 800f326:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800f32a:	ee07 3a10 	vmov	s14, r3
 800f32e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f332:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f336:	eee6 4a87 	vfma.f32	s9, s13, s14
 800f33a:	ee64 4a86 	vmul.f32	s9, s9, s12
 800f33e:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800f342:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f344:	698b      	ldr	r3, [r1, #24]
 800f346:	1a9b      	subs	r3, r3, r2
 800f348:	ee06 3a90 	vmov	s13, r3
 800f34c:	684b      	ldr	r3, [r1, #4]
 800f34e:	1a9b      	subs	r3, r3, r2
 800f350:	ee07 3a10 	vmov	s14, r3
 800f354:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f358:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f35c:	ee66 6a84 	vmul.f32	s13, s13, s8
 800f360:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f364:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800f368:	eee5 6a87 	vfma.f32	s13, s11, s14
 800f36c:	ee66 6a83 	vmul.f32	s13, s13, s6
 800f370:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800f374:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f376:	694a      	ldr	r2, [r1, #20]
 800f378:	1b13      	subs	r3, r2, r4
 800f37a:	ee07 3a10 	vmov	s14, r3
 800f37e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f382:	680b      	ldr	r3, [r1, #0]
 800f384:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f388:	1b1b      	subs	r3, r3, r4
 800f38a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800f38e:	ee07 3a10 	vmov	s14, r3
 800f392:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f396:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f39a:	eea5 5a87 	vfma.f32	s10, s11, s14
 800f39e:	edd0 5a08 	vldr	s11, [r0, #32]
 800f3a2:	ee25 5a06 	vmul.f32	s10, s10, s12
 800f3a6:	ee31 1a65 	vsub.f32	s2, s2, s11
 800f3aa:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800f3ae:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f3b0:	698b      	ldr	r3, [r1, #24]
 800f3b2:	1a9b      	subs	r3, r3, r2
 800f3b4:	ee07 3a10 	vmov	s14, r3
 800f3b8:	684b      	ldr	r3, [r1, #4]
 800f3ba:	1a9b      	subs	r3, r3, r2
 800f3bc:	ee01 3a90 	vmov	s3, r3
 800f3c0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f3c4:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800f3c8:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f3cc:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800f3d0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800f3d4:	ee61 1a84 	vmul.f32	s3, s3, s8
 800f3d8:	eea1 7a21 	vfma.f32	s14, s2, s3
 800f3dc:	ee27 7a03 	vmul.f32	s14, s14, s6
 800f3e0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800f3e4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f3e6:	694a      	ldr	r2, [r1, #20]
 800f3e8:	1b13      	subs	r3, r2, r4
 800f3ea:	ee03 3a10 	vmov	s6, r3
 800f3ee:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800f3f2:	680b      	ldr	r3, [r1, #0]
 800f3f4:	ee23 3a04 	vmul.f32	s6, s6, s8
 800f3f8:	1b1b      	subs	r3, r3, r4
 800f3fa:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800f3fe:	ee03 3a10 	vmov	s6, r3
 800f402:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800f406:	ee23 4a04 	vmul.f32	s8, s6, s8
 800f40a:	eee1 5a04 	vfma.f32	s11, s2, s8
 800f40e:	ee25 6a86 	vmul.f32	s12, s11, s12
 800f412:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800f416:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800f41a:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800f41e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800f422:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f426:	dd13      	ble.n	800f450 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800f428:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800f42c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800f430:	63c3      	str	r3, [r0, #60]	; 0x3c
 800f432:	eee3 7a87 	vfma.f32	s15, s7, s14
 800f436:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800f43a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f43e:	dd15      	ble.n	800f46c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800f440:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800f444:	6403      	str	r3, [r0, #64]	; 0x40
 800f446:	bd70      	pop	{r4, r5, r6, pc}
 800f448:	4623      	mov	r3, r4
 800f44a:	e6fd      	b.n	800f248 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f44c:	462a      	mov	r2, r5
 800f44e:	e706      	b.n	800f25e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f450:	d502      	bpl.n	800f458 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800f452:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800f456:	e7e9      	b.n	800f42c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800f458:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800f45c:	eea3 2a85 	vfma.f32	s4, s7, s10
 800f460:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800f464:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f468:	dade      	bge.n	800f428 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800f46a:	e7f2      	b.n	800f452 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800f46c:	d502      	bpl.n	800f474 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800f46e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800f472:	e7e7      	b.n	800f444 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800f474:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800f478:	eee3 4a86 	vfma.f32	s9, s7, s12
 800f47c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800f480:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f484:	dadc      	bge.n	800f440 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800f486:	e7f2      	b.n	800f46e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800f488:	3d800000 	.word	0x3d800000

0800f48c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800f48c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f490:	f04f 0814 	mov.w	r8, #20
 800f494:	fb08 f903 	mul.w	r9, r8, r3
 800f498:	eb02 0a09 	add.w	sl, r2, r9
 800f49c:	4604      	mov	r4, r0
 800f49e:	f8da 0004 	ldr.w	r0, [sl, #4]
 800f4a2:	4617      	mov	r7, r2
 800f4a4:	460d      	mov	r5, r1
 800f4a6:	461e      	mov	r6, r3
 800f4a8:	f7ff fe88 	bl	800f1bc <_ZN8touchgfx8ceil28_4El>
 800f4ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f4ae:	6160      	str	r0, [r4, #20]
 800f4b0:	fb08 f803 	mul.w	r8, r8, r3
 800f4b4:	eb07 0b08 	add.w	fp, r7, r8
 800f4b8:	9001      	str	r0, [sp, #4]
 800f4ba:	f8db 0004 	ldr.w	r0, [fp, #4]
 800f4be:	f7ff fe7d 	bl	800f1bc <_ZN8touchgfx8ceil28_4El>
 800f4c2:	9a01      	ldr	r2, [sp, #4]
 800f4c4:	1a80      	subs	r0, r0, r2
 800f4c6:	61a0      	str	r0, [r4, #24]
 800f4c8:	2800      	cmp	r0, #0
 800f4ca:	f000 8088 	beq.w	800f5de <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 800f4ce:	f857 3009 	ldr.w	r3, [r7, r9]
 800f4d2:	f857 c008 	ldr.w	ip, [r7, r8]
 800f4d6:	f8da 1004 	ldr.w	r1, [sl, #4]
 800f4da:	f8db 0004 	ldr.w	r0, [fp, #4]
 800f4de:	ebac 0c03 	sub.w	ip, ip, r3
 800f4e2:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 800f4e6:	fb0b f202 	mul.w	r2, fp, r2
 800f4ea:	fb0c 2211 	mls	r2, ip, r1, r2
 800f4ee:	1a40      	subs	r0, r0, r1
 800f4f0:	ea4f 1800 	mov.w	r8, r0, lsl #4
 800f4f4:	fb00 2003 	mla	r0, r0, r3, r2
 800f4f8:	3801      	subs	r0, #1
 800f4fa:	f104 0310 	add.w	r3, r4, #16
 800f4fe:	4622      	mov	r2, r4
 800f500:	4641      	mov	r1, r8
 800f502:	4440      	add	r0, r8
 800f504:	f7ff fe6a 	bl	800f1dc <_ZN8touchgfx11floorDivModEllRlS0_>
 800f508:	f104 0308 	add.w	r3, r4, #8
 800f50c:	1d22      	adds	r2, r4, #4
 800f50e:	4641      	mov	r1, r8
 800f510:	4658      	mov	r0, fp
 800f512:	f7ff fe63 	bl	800f1dc <_ZN8touchgfx11floorDivModEllRlS0_>
 800f516:	f8c4 800c 	str.w	r8, [r4, #12]
 800f51a:	f8da 3004 	ldr.w	r3, [sl, #4]
 800f51e:	6962      	ldr	r2, [r4, #20]
 800f520:	eddf 6a31 	vldr	s13, [pc, #196]	; 800f5e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800f524:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800f528:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800f52c:	ee07 3a10 	vmov	s14, r3
 800f530:	6822      	ldr	r2, [r4, #0]
 800f532:	f857 3009 	ldr.w	r3, [r7, r9]
 800f536:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800f53a:	ee07 3a90 	vmov	s15, r3
 800f53e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f542:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f546:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 800f54a:	ee27 7a26 	vmul.f32	s14, s14, s13
 800f54e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f552:	edd3 6a00 	vldr	s13, [r3]
 800f556:	eee6 6a07 	vfma.f32	s13, s12, s14
 800f55a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800f55e:	eee6 6a27 	vfma.f32	s13, s12, s15
 800f562:	edc4 6a07 	vstr	s13, [r4, #28]
 800f566:	edd4 6a01 	vldr	s13, [r4, #4]
 800f56a:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 800f56e:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800f572:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f576:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f57a:	ed84 6a08 	vstr	s12, [r4, #32]
 800f57e:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 800f580:	6262      	str	r2, [r4, #36]	; 0x24
 800f582:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 800f586:	ed93 6a03 	vldr	s12, [r3, #12]
 800f58a:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f58e:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800f592:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800f596:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 800f59a:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800f59e:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 800f5a2:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f5a6:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 800f5aa:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 800f5ac:	6322      	str	r2, [r4, #48]	; 0x30
 800f5ae:	ed93 6a06 	vldr	s12, [r3, #24]
 800f5b2:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 800f5b6:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f5ba:	eeb0 7a46 	vmov.f32	s14, s12
 800f5be:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 800f5c2:	eea6 7a27 	vfma.f32	s14, s12, s15
 800f5c6:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 800f5ca:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 800f5ce:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 800f5d2:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f5d6:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 800f5da:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800f5dc:	63e3      	str	r3, [r4, #60]	; 0x3c
 800f5de:	4620      	mov	r0, r4
 800f5e0:	b003      	add	sp, #12
 800f5e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f5e6:	bf00      	nop
 800f5e8:	3d800000 	.word	0x3d800000

0800f5ec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800f5ec:	4b01      	ldr	r3, [pc, #4]	; (800f5f4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800f5ee:	6018      	str	r0, [r3, #0]
 800f5f0:	4770      	bx	lr
 800f5f2:	bf00      	nop
 800f5f4:	2000a48c 	.word	0x2000a48c

0800f5f8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800f5f8:	4b06      	ldr	r3, [pc, #24]	; (800f614 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800f5fa:	881a      	ldrh	r2, [r3, #0]
 800f5fc:	4282      	cmp	r2, r0
 800f5fe:	d807      	bhi.n	800f610 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800f600:	4b05      	ldr	r3, [pc, #20]	; (800f618 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800f602:	881b      	ldrh	r3, [r3, #0]
 800f604:	4413      	add	r3, r2
 800f606:	4298      	cmp	r0, r3
 800f608:	bfac      	ite	ge
 800f60a:	2000      	movge	r0, #0
 800f60c:	2001      	movlt	r0, #1
 800f60e:	4770      	bx	lr
 800f610:	2000      	movs	r0, #0
 800f612:	4770      	bx	lr
 800f614:	2000a4ac 	.word	0x2000a4ac
 800f618:	2000a4b0 	.word	0x2000a4b0

0800f61c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800f61c:	b508      	push	{r3, lr}
 800f61e:	4601      	mov	r1, r0
 800f620:	f7ff ffea 	bl	800f5f8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800f624:	b118      	cbz	r0, 800f62e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800f626:	4b02      	ldr	r3, [pc, #8]	; (800f630 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800f628:	681b      	ldr	r3, [r3, #0]
 800f62a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800f62e:	bd08      	pop	{r3, pc}
 800f630:	2000a490 	.word	0x2000a490

0800f634 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800f634:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f638:	4d28      	ldr	r5, [pc, #160]	; (800f6dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800f63a:	682b      	ldr	r3, [r5, #0]
 800f63c:	2b00      	cmp	r3, #0
 800f63e:	d04a      	beq.n	800f6d6 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800f640:	4a27      	ldr	r2, [pc, #156]	; (800f6e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800f642:	4e28      	ldr	r6, [pc, #160]	; (800f6e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800f644:	8810      	ldrh	r0, [r2, #0]
 800f646:	f8b6 8000 	ldrh.w	r8, [r6]
 800f64a:	4c27      	ldr	r4, [pc, #156]	; (800f6e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800f64c:	4f27      	ldr	r7, [pc, #156]	; (800f6ec <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800f64e:	4440      	add	r0, r8
 800f650:	1c41      	adds	r1, r0, #1
 800f652:	f021 0101 	bic.w	r1, r1, #1
 800f656:	0409      	lsls	r1, r1, #16
 800f658:	0c09      	lsrs	r1, r1, #16
 800f65a:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 800f65e:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800f662:	eb03 020e 	add.w	r2, r3, lr
 800f666:	eb0e 010c 	add.w	r1, lr, ip
 800f66a:	6022      	str	r2, [r4, #0]
 800f66c:	185a      	adds	r2, r3, r1
 800f66e:	603a      	str	r2, [r7, #0]
 800f670:	220e      	movs	r2, #14
 800f672:	fb02 f208 	mul.w	r2, r2, r8
 800f676:	3203      	adds	r2, #3
 800f678:	f022 0203 	bic.w	r2, r2, #3
 800f67c:	4411      	add	r1, r2
 800f67e:	440b      	add	r3, r1
 800f680:	491b      	ldr	r1, [pc, #108]	; (800f6f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800f682:	600b      	str	r3, [r1, #0]
 800f684:	491b      	ldr	r1, [pc, #108]	; (800f6f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800f686:	2300      	movs	r3, #0
 800f688:	800b      	strh	r3, [r1, #0]
 800f68a:	491b      	ldr	r1, [pc, #108]	; (800f6f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800f68c:	6809      	ldr	r1, [r1, #0]
 800f68e:	eba1 010e 	sub.w	r1, r1, lr
 800f692:	eba1 010c 	sub.w	r1, r1, ip
 800f696:	1a8a      	subs	r2, r1, r2
 800f698:	4918      	ldr	r1, [pc, #96]	; (800f6fc <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 800f69a:	600a      	str	r2, [r1, #0]
 800f69c:	4a18      	ldr	r2, [pc, #96]	; (800f700 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 800f69e:	469c      	mov	ip, r3
 800f6a0:	8013      	strh	r3, [r2, #0]
 800f6a2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f6a6:	4283      	cmp	r3, r0
 800f6a8:	d10d      	bne.n	800f6c6 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 800f6aa:	8835      	ldrh	r5, [r6, #0]
 800f6ac:	6838      	ldr	r0, [r7, #0]
 800f6ae:	2300      	movs	r3, #0
 800f6b0:	240e      	movs	r4, #14
 800f6b2:	429d      	cmp	r5, r3
 800f6b4:	d90f      	bls.n	800f6d6 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800f6b6:	fb04 0203 	mla	r2, r4, r3, r0
 800f6ba:	3301      	adds	r3, #1
 800f6bc:	7b11      	ldrb	r1, [r2, #12]
 800f6be:	f36f 1145 	bfc	r1, #5, #1
 800f6c2:	7311      	strb	r1, [r2, #12]
 800f6c4:	e7f5      	b.n	800f6b2 <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 800f6c6:	682a      	ldr	r2, [r5, #0]
 800f6c8:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800f6cc:	6822      	ldr	r2, [r4, #0]
 800f6ce:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800f6d2:	3301      	adds	r3, #1
 800f6d4:	e7e7      	b.n	800f6a6 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 800f6d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f6da:	bf00      	nop
 800f6dc:	2000a490 	.word	0x2000a490
 800f6e0:	2000a4ac 	.word	0x2000a4ac
 800f6e4:	2000a4b0 	.word	0x2000a4b0
 800f6e8:	2000a4a4 	.word	0x2000a4a4
 800f6ec:	2000a494 	.word	0x2000a494
 800f6f0:	2000a49c 	.word	0x2000a49c
 800f6f4:	2000a4ae 	.word	0x2000a4ae
 800f6f8:	2000a498 	.word	0x2000a498
 800f6fc:	2000a4a8 	.word	0x2000a4a8
 800f700:	2000a4a0 	.word	0x2000a4a0

0800f704 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800f704:	b510      	push	{r4, lr}
 800f706:	4b10      	ldr	r3, [pc, #64]	; (800f748 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800f708:	681b      	ldr	r3, [r3, #0]
 800f70a:	b9db      	cbnz	r3, 800f744 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f70c:	b1d1      	cbz	r1, 800f744 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f70e:	4b0f      	ldr	r3, [pc, #60]	; (800f74c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800f710:	801a      	strh	r2, [r3, #0]
 800f712:	4b0f      	ldr	r3, [pc, #60]	; (800f750 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800f714:	881b      	ldrh	r3, [r3, #0]
 800f716:	b292      	uxth	r2, r2
 800f718:	240e      	movs	r4, #14
 800f71a:	4413      	add	r3, r2
 800f71c:	4362      	muls	r2, r4
 800f71e:	2406      	movs	r4, #6
 800f720:	fb04 2203 	mla	r2, r4, r3, r2
 800f724:	428a      	cmp	r2, r1
 800f726:	d305      	bcc.n	800f734 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800f728:	4b0a      	ldr	r3, [pc, #40]	; (800f754 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800f72a:	4a0b      	ldr	r2, [pc, #44]	; (800f758 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800f72c:	480b      	ldr	r0, [pc, #44]	; (800f75c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800f72e:	2137      	movs	r1, #55	; 0x37
 800f730:	f00b fe6c 	bl	801b40c <__assert_func>
 800f734:	4b0a      	ldr	r3, [pc, #40]	; (800f760 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800f736:	6019      	str	r1, [r3, #0]
 800f738:	4b0a      	ldr	r3, [pc, #40]	; (800f764 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800f73a:	6018      	str	r0, [r3, #0]
 800f73c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f740:	f7ff bf78 	b.w	800f634 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800f744:	bd10      	pop	{r4, pc}
 800f746:	bf00      	nop
 800f748:	2000a49c 	.word	0x2000a49c
 800f74c:	2000a4b0 	.word	0x2000a4b0
 800f750:	2000a4ac 	.word	0x2000a4ac
 800f754:	0801ee82 	.word	0x0801ee82
 800f758:	0801eedb 	.word	0x0801eedb
 800f75c:	0801ee5d 	.word	0x0801ee5d
 800f760:	2000a498 	.word	0x2000a498
 800f764:	2000a490 	.word	0x2000a490

0800f768 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800f768:	b470      	push	{r4, r5, r6}
 800f76a:	4c07      	ldr	r4, [pc, #28]	; (800f788 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800f76c:	6826      	ldr	r6, [r4, #0]
 800f76e:	4605      	mov	r5, r0
 800f770:	4610      	mov	r0, r2
 800f772:	9a03      	ldr	r2, [sp, #12]
 800f774:	b936      	cbnz	r6, 800f784 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800f776:	6025      	str	r5, [r4, #0]
 800f778:	4c04      	ldr	r4, [pc, #16]	; (800f78c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800f77a:	8021      	strh	r1, [r4, #0]
 800f77c:	bc70      	pop	{r4, r5, r6}
 800f77e:	4619      	mov	r1, r3
 800f780:	f7ff bfc0 	b.w	800f704 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800f784:	bc70      	pop	{r4, r5, r6}
 800f786:	4770      	bx	lr
 800f788:	2000a4b4 	.word	0x2000a4b4
 800f78c:	2000a4ac 	.word	0x2000a4ac

0800f790 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800f790:	b508      	push	{r3, lr}
 800f792:	4b14      	ldr	r3, [pc, #80]	; (800f7e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800f794:	6819      	ldr	r1, [r3, #0]
 800f796:	b931      	cbnz	r1, 800f7a6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800f798:	4b13      	ldr	r3, [pc, #76]	; (800f7e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800f79a:	4a14      	ldr	r2, [pc, #80]	; (800f7ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800f79c:	4814      	ldr	r0, [pc, #80]	; (800f7f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800f79e:	f240 3187 	movw	r1, #903	; 0x387
 800f7a2:	f00b fe33 	bl	801b40c <__assert_func>
 800f7a6:	4a13      	ldr	r2, [pc, #76]	; (800f7f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800f7a8:	8803      	ldrh	r3, [r0, #0]
 800f7aa:	8812      	ldrh	r2, [r2, #0]
 800f7ac:	4293      	cmp	r3, r2
 800f7ae:	d204      	bcs.n	800f7ba <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800f7b0:	2214      	movs	r2, #20
 800f7b2:	fb02 1303 	mla	r3, r2, r3, r1
 800f7b6:	8918      	ldrh	r0, [r3, #8]
 800f7b8:	bd08      	pop	{r3, pc}
 800f7ba:	490f      	ldr	r1, [pc, #60]	; (800f7f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800f7bc:	8809      	ldrh	r1, [r1, #0]
 800f7be:	4411      	add	r1, r2
 800f7c0:	428b      	cmp	r3, r1
 800f7c2:	da06      	bge.n	800f7d2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800f7c4:	1a9b      	subs	r3, r3, r2
 800f7c6:	4a0d      	ldr	r2, [pc, #52]	; (800f7fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800f7c8:	6812      	ldr	r2, [r2, #0]
 800f7ca:	210e      	movs	r1, #14
 800f7cc:	fb01 2303 	mla	r3, r1, r3, r2
 800f7d0:	e7f1      	b.n	800f7b6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800f7d2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f7d6:	4293      	cmp	r3, r2
 800f7d8:	bf0a      	itet	eq
 800f7da:	4b09      	ldreq	r3, [pc, #36]	; (800f800 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800f7dc:	2000      	movne	r0, #0
 800f7de:	8818      	ldrheq	r0, [r3, #0]
 800f7e0:	e7ea      	b.n	800f7b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800f7e2:	bf00      	nop
 800f7e4:	2000a4b4 	.word	0x2000a4b4
 800f7e8:	0801e3d0 	.word	0x0801e3d0
 800f7ec:	0801ef88 	.word	0x0801ef88
 800f7f0:	0801ee5d 	.word	0x0801ee5d
 800f7f4:	2000a4ac 	.word	0x2000a4ac
 800f7f8:	2000a4b0 	.word	0x2000a4b0
 800f7fc:	2000a494 	.word	0x2000a494
 800f800:	2000a420 	.word	0x2000a420

0800f804 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800f804:	b508      	push	{r3, lr}
 800f806:	4b14      	ldr	r3, [pc, #80]	; (800f858 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800f808:	6819      	ldr	r1, [r3, #0]
 800f80a:	b931      	cbnz	r1, 800f81a <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800f80c:	4b13      	ldr	r3, [pc, #76]	; (800f85c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800f80e:	4a14      	ldr	r2, [pc, #80]	; (800f860 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800f810:	4814      	ldr	r0, [pc, #80]	; (800f864 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800f812:	f240 319b 	movw	r1, #923	; 0x39b
 800f816:	f00b fdf9 	bl	801b40c <__assert_func>
 800f81a:	4a13      	ldr	r2, [pc, #76]	; (800f868 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800f81c:	8803      	ldrh	r3, [r0, #0]
 800f81e:	8812      	ldrh	r2, [r2, #0]
 800f820:	4293      	cmp	r3, r2
 800f822:	d204      	bcs.n	800f82e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800f824:	2214      	movs	r2, #20
 800f826:	fb02 1303 	mla	r3, r2, r3, r1
 800f82a:	8958      	ldrh	r0, [r3, #10]
 800f82c:	bd08      	pop	{r3, pc}
 800f82e:	490f      	ldr	r1, [pc, #60]	; (800f86c <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800f830:	8809      	ldrh	r1, [r1, #0]
 800f832:	4411      	add	r1, r2
 800f834:	428b      	cmp	r3, r1
 800f836:	da06      	bge.n	800f846 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800f838:	1a9b      	subs	r3, r3, r2
 800f83a:	4a0d      	ldr	r2, [pc, #52]	; (800f870 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800f83c:	6812      	ldr	r2, [r2, #0]
 800f83e:	210e      	movs	r1, #14
 800f840:	fb01 2303 	mla	r3, r1, r3, r2
 800f844:	e7f1      	b.n	800f82a <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800f846:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f84a:	4293      	cmp	r3, r2
 800f84c:	bf0a      	itet	eq
 800f84e:	4b09      	ldreq	r3, [pc, #36]	; (800f874 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800f850:	2000      	movne	r0, #0
 800f852:	8818      	ldrheq	r0, [r3, #0]
 800f854:	e7ea      	b.n	800f82c <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800f856:	bf00      	nop
 800f858:	2000a4b4 	.word	0x2000a4b4
 800f85c:	0801e3d0 	.word	0x0801e3d0
 800f860:	0801efb4 	.word	0x0801efb4
 800f864:	0801ee5d 	.word	0x0801ee5d
 800f868:	2000a4ac 	.word	0x2000a4ac
 800f86c:	2000a4b0 	.word	0x2000a4b0
 800f870:	2000a494 	.word	0x2000a494
 800f874:	2000a422 	.word	0x2000a422

0800f878 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800f878:	b510      	push	{r4, lr}
 800f87a:	4b23      	ldr	r3, [pc, #140]	; (800f908 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800f87c:	681c      	ldr	r4, [r3, #0]
 800f87e:	b934      	cbnz	r4, 800f88e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800f880:	4b22      	ldr	r3, [pc, #136]	; (800f90c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800f882:	4a23      	ldr	r2, [pc, #140]	; (800f910 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800f884:	4823      	ldr	r0, [pc, #140]	; (800f914 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800f886:	f240 31af 	movw	r1, #943	; 0x3af
 800f88a:	f00b fdbf 	bl	801b40c <__assert_func>
 800f88e:	4a22      	ldr	r2, [pc, #136]	; (800f918 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800f890:	880b      	ldrh	r3, [r1, #0]
 800f892:	8812      	ldrh	r2, [r2, #0]
 800f894:	4293      	cmp	r3, r2
 800f896:	d211      	bcs.n	800f8bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800f898:	2214      	movs	r2, #20
 800f89a:	fb02 4303 	mla	r3, r2, r3, r4
 800f89e:	8a1a      	ldrh	r2, [r3, #16]
 800f8a0:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800f8a4:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800f8a8:	8a5b      	ldrh	r3, [r3, #18]
 800f8aa:	8004      	strh	r4, [r0, #0]
 800f8ac:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800f8b0:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800f8b4:	8041      	strh	r1, [r0, #2]
 800f8b6:	8082      	strh	r2, [r0, #4]
 800f8b8:	80c3      	strh	r3, [r0, #6]
 800f8ba:	e00e      	b.n	800f8da <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800f8bc:	4917      	ldr	r1, [pc, #92]	; (800f91c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800f8be:	8809      	ldrh	r1, [r1, #0]
 800f8c0:	4411      	add	r1, r2
 800f8c2:	428b      	cmp	r3, r1
 800f8c4:	da0a      	bge.n	800f8dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800f8c6:	1a9b      	subs	r3, r3, r2
 800f8c8:	4a15      	ldr	r2, [pc, #84]	; (800f920 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800f8ca:	6812      	ldr	r2, [r2, #0]
 800f8cc:	210e      	movs	r1, #14
 800f8ce:	fb01 2303 	mla	r3, r1, r3, r2
 800f8d2:	681a      	ldr	r2, [r3, #0]
 800f8d4:	6002      	str	r2, [r0, #0]
 800f8d6:	685a      	ldr	r2, [r3, #4]
 800f8d8:	6042      	str	r2, [r0, #4]
 800f8da:	bd10      	pop	{r4, pc}
 800f8dc:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f8e0:	4293      	cmp	r3, r2
 800f8e2:	d10b      	bne.n	800f8fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800f8e4:	4b0f      	ldr	r3, [pc, #60]	; (800f924 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800f8e6:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f8ea:	4b0f      	ldr	r3, [pc, #60]	; (800f928 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800f8ec:	8081      	strh	r1, [r0, #4]
 800f8ee:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f8f2:	80c2      	strh	r2, [r0, #6]
 800f8f4:	2300      	movs	r3, #0
 800f8f6:	8003      	strh	r3, [r0, #0]
 800f8f8:	8043      	strh	r3, [r0, #2]
 800f8fa:	e7ee      	b.n	800f8da <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800f8fc:	2300      	movs	r3, #0
 800f8fe:	8003      	strh	r3, [r0, #0]
 800f900:	8043      	strh	r3, [r0, #2]
 800f902:	8083      	strh	r3, [r0, #4]
 800f904:	e7d8      	b.n	800f8b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800f906:	bf00      	nop
 800f908:	2000a4b4 	.word	0x2000a4b4
 800f90c:	0801e3d0 	.word	0x0801e3d0
 800f910:	0801ef21 	.word	0x0801ef21
 800f914:	0801ee5d 	.word	0x0801ee5d
 800f918:	2000a4ac 	.word	0x2000a4ac
 800f91c:	2000a4b0 	.word	0x2000a4b0
 800f920:	2000a494 	.word	0x2000a494
 800f924:	2000a420 	.word	0x2000a420
 800f928:	2000a422 	.word	0x2000a422

0800f92c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800f92c:	4b18      	ldr	r3, [pc, #96]	; (800f990 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800f92e:	681b      	ldr	r3, [r3, #0]
 800f930:	b34b      	cbz	r3, 800f986 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800f932:	4a18      	ldr	r2, [pc, #96]	; (800f994 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800f934:	8800      	ldrh	r0, [r0, #0]
 800f936:	8812      	ldrh	r2, [r2, #0]
 800f938:	4290      	cmp	r0, r2
 800f93a:	d211      	bcs.n	800f960 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800f93c:	2214      	movs	r2, #20
 800f93e:	fb02 3300 	mla	r3, r2, r0, r3
 800f942:	8a1a      	ldrh	r2, [r3, #16]
 800f944:	8919      	ldrh	r1, [r3, #8]
 800f946:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800f94a:	428a      	cmp	r2, r1
 800f94c:	db1d      	blt.n	800f98a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800f94e:	8a58      	ldrh	r0, [r3, #18]
 800f950:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800f954:	895b      	ldrh	r3, [r3, #10]
 800f956:	4298      	cmp	r0, r3
 800f958:	bfac      	ite	ge
 800f95a:	2000      	movge	r0, #0
 800f95c:	2001      	movlt	r0, #1
 800f95e:	4770      	bx	lr
 800f960:	4b0d      	ldr	r3, [pc, #52]	; (800f998 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800f962:	881b      	ldrh	r3, [r3, #0]
 800f964:	4413      	add	r3, r2
 800f966:	4298      	cmp	r0, r3
 800f968:	da0d      	bge.n	800f986 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800f96a:	4b0c      	ldr	r3, [pc, #48]	; (800f99c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800f96c:	681b      	ldr	r3, [r3, #0]
 800f96e:	1a80      	subs	r0, r0, r2
 800f970:	220e      	movs	r2, #14
 800f972:	fb02 3300 	mla	r3, r2, r0, r3
 800f976:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800f97a:	891a      	ldrh	r2, [r3, #8]
 800f97c:	4291      	cmp	r1, r2
 800f97e:	db04      	blt.n	800f98a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800f980:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800f984:	e7e6      	b.n	800f954 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800f986:	2000      	movs	r0, #0
 800f988:	4770      	bx	lr
 800f98a:	2001      	movs	r0, #1
 800f98c:	4770      	bx	lr
 800f98e:	bf00      	nop
 800f990:	2000a4b4 	.word	0x2000a4b4
 800f994:	2000a4ac 	.word	0x2000a4ac
 800f998:	2000a4b0 	.word	0x2000a4b0
 800f99c:	2000a494 	.word	0x2000a494

0800f9a0 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800f9a0:	b508      	push	{r3, lr}
 800f9a2:	4b12      	ldr	r3, [pc, #72]	; (800f9ec <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800f9a4:	6819      	ldr	r1, [r3, #0]
 800f9a6:	b931      	cbnz	r1, 800f9b6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800f9a8:	4b11      	ldr	r3, [pc, #68]	; (800f9f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800f9aa:	4a12      	ldr	r2, [pc, #72]	; (800f9f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800f9ac:	4812      	ldr	r0, [pc, #72]	; (800f9f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800f9ae:	f240 31d3 	movw	r1, #979	; 0x3d3
 800f9b2:	f00b fd2b 	bl	801b40c <__assert_func>
 800f9b6:	8803      	ldrh	r3, [r0, #0]
 800f9b8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f9bc:	4293      	cmp	r3, r2
 800f9be:	d012      	beq.n	800f9e6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800f9c0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f9c4:	4293      	cmp	r3, r2
 800f9c6:	d103      	bne.n	800f9d0 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800f9c8:	4b0c      	ldr	r3, [pc, #48]	; (800f9fc <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800f9ca:	681b      	ldr	r3, [r3, #0]
 800f9cc:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800f9ce:	bd08      	pop	{r3, pc}
 800f9d0:	4a0b      	ldr	r2, [pc, #44]	; (800fa00 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800f9d2:	6812      	ldr	r2, [r2, #0]
 800f9d4:	b11a      	cbz	r2, 800f9de <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800f9d6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800f9da:	2800      	cmp	r0, #0
 800f9dc:	d1f7      	bne.n	800f9ce <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f9de:	2214      	movs	r2, #20
 800f9e0:	4353      	muls	r3, r2
 800f9e2:	58c8      	ldr	r0, [r1, r3]
 800f9e4:	e7f3      	b.n	800f9ce <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f9e6:	2000      	movs	r0, #0
 800f9e8:	e7f1      	b.n	800f9ce <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f9ea:	bf00      	nop
 800f9ec:	2000a4b4 	.word	0x2000a4b4
 800f9f0:	0801e3d0 	.word	0x0801e3d0
 800f9f4:	0801ef57 	.word	0x0801ef57
 800f9f8:	0801ee5d 	.word	0x0801ee5d
 800f9fc:	2000a42c 	.word	0x2000a42c
 800fa00:	2000a490 	.word	0x2000a490

0800fa04 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800fa04:	8802      	ldrh	r2, [r0, #0]
 800fa06:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800fa0a:	429a      	cmp	r2, r3
 800fa0c:	d845      	bhi.n	800fa9a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fa0e:	4b24      	ldr	r3, [pc, #144]	; (800faa0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800fa10:	8818      	ldrh	r0, [r3, #0]
 800fa12:	4282      	cmp	r2, r0
 800fa14:	d221      	bcs.n	800fa5a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 800fa16:	4b23      	ldr	r3, [pc, #140]	; (800faa4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800fa18:	6819      	ldr	r1, [r3, #0]
 800fa1a:	2314      	movs	r3, #20
 800fa1c:	fb03 1302 	mla	r3, r3, r2, r1
 800fa20:	6858      	ldr	r0, [r3, #4]
 800fa22:	2800      	cmp	r0, #0
 800fa24:	d03a      	beq.n	800fa9c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fa26:	4920      	ldr	r1, [pc, #128]	; (800faa8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800fa28:	6809      	ldr	r1, [r1, #0]
 800fa2a:	2900      	cmp	r1, #0
 800fa2c:	d036      	beq.n	800fa9c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fa2e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800fa32:	2900      	cmp	r1, #0
 800fa34:	d032      	beq.n	800fa9c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fa36:	891a      	ldrh	r2, [r3, #8]
 800fa38:	8958      	ldrh	r0, [r3, #10]
 800fa3a:	4350      	muls	r0, r2
 800fa3c:	7c5a      	ldrb	r2, [r3, #17]
 800fa3e:	7cdb      	ldrb	r3, [r3, #19]
 800fa40:	0952      	lsrs	r2, r2, #5
 800fa42:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800fa46:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800fa4a:	2b0b      	cmp	r3, #11
 800fa4c:	bf18      	it	ne
 800fa4e:	0040      	lslne	r0, r0, #1
 800fa50:	3003      	adds	r0, #3
 800fa52:	f020 0003 	bic.w	r0, r0, #3
 800fa56:	4408      	add	r0, r1
 800fa58:	4770      	bx	lr
 800fa5a:	4b14      	ldr	r3, [pc, #80]	; (800faac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 800fa5c:	881b      	ldrh	r3, [r3, #0]
 800fa5e:	4403      	add	r3, r0
 800fa60:	429a      	cmp	r2, r3
 800fa62:	da1a      	bge.n	800fa9a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fa64:	4b12      	ldr	r3, [pc, #72]	; (800fab0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 800fa66:	681b      	ldr	r3, [r3, #0]
 800fa68:	1a10      	subs	r0, r2, r0
 800fa6a:	210e      	movs	r1, #14
 800fa6c:	fb01 3000 	mla	r0, r1, r0, r3
 800fa70:	7b03      	ldrb	r3, [r0, #12]
 800fa72:	f003 031f 	and.w	r3, r3, #31
 800fa76:	2b0b      	cmp	r3, #11
 800fa78:	d10b      	bne.n	800fa92 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800fa7a:	8903      	ldrh	r3, [r0, #8]
 800fa7c:	8940      	ldrh	r0, [r0, #10]
 800fa7e:	4358      	muls	r0, r3
 800fa80:	4b09      	ldr	r3, [pc, #36]	; (800faa8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800fa82:	6819      	ldr	r1, [r3, #0]
 800fa84:	3003      	adds	r0, #3
 800fa86:	f020 0303 	bic.w	r3, r0, #3
 800fa8a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800fa8e:	4418      	add	r0, r3
 800fa90:	4770      	bx	lr
 800fa92:	2b0d      	cmp	r3, #13
 800fa94:	d101      	bne.n	800fa9a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fa96:	300d      	adds	r0, #13
 800fa98:	4770      	bx	lr
 800fa9a:	2000      	movs	r0, #0
 800fa9c:	4770      	bx	lr
 800fa9e:	bf00      	nop
 800faa0:	2000a4ac 	.word	0x2000a4ac
 800faa4:	2000a4b4 	.word	0x2000a4b4
 800faa8:	2000a490 	.word	0x2000a490
 800faac:	2000a4b0 	.word	0x2000a4b0
 800fab0:	2000a494 	.word	0x2000a494

0800fab4 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800fab4:	4b19      	ldr	r3, [pc, #100]	; (800fb1c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800fab6:	6819      	ldr	r1, [r3, #0]
 800fab8:	8803      	ldrh	r3, [r0, #0]
 800faba:	b1e9      	cbz	r1, 800faf8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800fabc:	4a18      	ldr	r2, [pc, #96]	; (800fb20 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800fabe:	8812      	ldrh	r2, [r2, #0]
 800fac0:	429a      	cmp	r2, r3
 800fac2:	d90a      	bls.n	800fada <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fac4:	2214      	movs	r2, #20
 800fac6:	fb02 1303 	mla	r3, r2, r3, r1
 800faca:	7c58      	ldrb	r0, [r3, #17]
 800facc:	0942      	lsrs	r2, r0, #5
 800face:	7cd8      	ldrb	r0, [r3, #19]
 800fad0:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800fad4:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800fad8:	4770      	bx	lr
 800fada:	4912      	ldr	r1, [pc, #72]	; (800fb24 <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 800fadc:	8809      	ldrh	r1, [r1, #0]
 800fade:	4411      	add	r1, r2
 800fae0:	428b      	cmp	r3, r1
 800fae2:	da09      	bge.n	800faf8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800fae4:	1a9b      	subs	r3, r3, r2
 800fae6:	4a10      	ldr	r2, [pc, #64]	; (800fb28 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 800fae8:	6812      	ldr	r2, [r2, #0]
 800faea:	210e      	movs	r1, #14
 800faec:	fb01 2303 	mla	r3, r1, r3, r2
 800faf0:	7b18      	ldrb	r0, [r3, #12]
 800faf2:	f000 001f 	and.w	r0, r0, #31
 800faf6:	4770      	bx	lr
 800faf8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fafc:	4293      	cmp	r3, r2
 800fafe:	d10a      	bne.n	800fb16 <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 800fb00:	4b0a      	ldr	r3, [pc, #40]	; (800fb2c <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 800fb02:	681b      	ldr	r3, [r3, #0]
 800fb04:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800fb08:	b10a      	cbz	r2, 800fb0e <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800fb0a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800fb0c:	b900      	cbnz	r0, 800fb10 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800fb0e:	6898      	ldr	r0, [r3, #8]
 800fb10:	6803      	ldr	r3, [r0, #0]
 800fb12:	6a1b      	ldr	r3, [r3, #32]
 800fb14:	4718      	bx	r3
 800fb16:	2000      	movs	r0, #0
 800fb18:	4770      	bx	lr
 800fb1a:	bf00      	nop
 800fb1c:	2000a4b4 	.word	0x2000a4b4
 800fb20:	2000a4ac 	.word	0x2000a4ac
 800fb24:	2000a4b0 	.word	0x2000a4b0
 800fb28:	2000a494 	.word	0x2000a494
 800fb2c:	2000a42c 	.word	0x2000a42c

0800fb30 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800fb30:	2010      	movs	r0, #16
 800fb32:	4770      	bx	lr

0800fb34 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800fb34:	2000      	movs	r0, #0
 800fb36:	4770      	bx	lr

0800fb38 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 800fb38:	00d2      	lsls	r2, r2, #3
 800fb3a:	0209      	lsls	r1, r1, #8
 800fb3c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800fb40:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 800fb44:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 800fb48:	4310      	orrs	r0, r2
 800fb4a:	4770      	bx	lr

0800fb4c <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 800fb4c:	0a09      	lsrs	r1, r1, #8
 800fb4e:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800fb52:	4770      	bx	lr

0800fb54 <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 800fb54:	08c9      	lsrs	r1, r1, #3
 800fb56:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 800fb5a:	4770      	bx	lr

0800fb5c <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 800fb5c:	00c9      	lsls	r1, r1, #3
 800fb5e:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800fb62:	4770      	bx	lr

0800fb64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800fb64:	2bff      	cmp	r3, #255	; 0xff
 800fb66:	d050      	beq.n	800fc0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800fb68:	2a0b      	cmp	r2, #11
 800fb6a:	d04a      	beq.n	800fc02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fb6c:	d80e      	bhi.n	800fb8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800fb6e:	2a03      	cmp	r2, #3
 800fb70:	d03f      	beq.n	800fbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800fb72:	d804      	bhi.n	800fb7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800fb74:	2a01      	cmp	r2, #1
 800fb76:	d03e      	beq.n	800fbf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800fb78:	d93f      	bls.n	800fbfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800fb7a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800fb7c:	4770      	bx	lr
 800fb7e:	2a09      	cmp	r2, #9
 800fb80:	d03f      	beq.n	800fc02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fb82:	d83c      	bhi.n	800fbfe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fb84:	2a08      	cmp	r2, #8
 800fb86:	d03a      	beq.n	800fbfe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fb88:	2000      	movs	r0, #0
 800fb8a:	4770      	bx	lr
 800fb8c:	2a2f      	cmp	r2, #47	; 0x2f
 800fb8e:	d024      	beq.n	800fbda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800fb90:	d80d      	bhi.n	800fbae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800fb92:	2a2d      	cmp	r2, #45	; 0x2d
 800fb94:	d014      	beq.n	800fbc0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800fb96:	d826      	bhi.n	800fbe6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800fb98:	2a2c      	cmp	r2, #44	; 0x2c
 800fb9a:	d1f5      	bne.n	800fb88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fb9c:	684b      	ldr	r3, [r1, #4]
 800fb9e:	781b      	ldrb	r3, [r3, #0]
 800fba0:	2b01      	cmp	r3, #1
 800fba2:	d018      	beq.n	800fbd6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800fba4:	d323      	bcc.n	800fbee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800fba6:	2b02      	cmp	r3, #2
 800fba8:	d1ee      	bne.n	800fb88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fbaa:	6880      	ldr	r0, [r0, #8]
 800fbac:	4770      	bx	lr
 800fbae:	2a31      	cmp	r2, #49	; 0x31
 800fbb0:	d004      	beq.n	800fbbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800fbb2:	d328      	bcc.n	800fc06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fbb4:	2a32      	cmp	r2, #50	; 0x32
 800fbb6:	d026      	beq.n	800fc06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fbb8:	2a33      	cmp	r2, #51	; 0x33
 800fbba:	d1e5      	bne.n	800fb88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fbbc:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800fbbe:	4770      	bx	lr
 800fbc0:	684b      	ldr	r3, [r1, #4]
 800fbc2:	781b      	ldrb	r3, [r3, #0]
 800fbc4:	2b01      	cmp	r3, #1
 800fbc6:	d004      	beq.n	800fbd2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800fbc8:	d30b      	bcc.n	800fbe2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800fbca:	2b02      	cmp	r3, #2
 800fbcc:	d1dc      	bne.n	800fb88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fbce:	6900      	ldr	r0, [r0, #16]
 800fbd0:	4770      	bx	lr
 800fbd2:	6a00      	ldr	r0, [r0, #32]
 800fbd4:	4770      	bx	lr
 800fbd6:	6980      	ldr	r0, [r0, #24]
 800fbd8:	4770      	bx	lr
 800fbda:	684b      	ldr	r3, [r1, #4]
 800fbdc:	781b      	ldrb	r3, [r3, #0]
 800fbde:	2b00      	cmp	r3, #0
 800fbe0:	d1d2      	bne.n	800fb88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fbe2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800fbe4:	4770      	bx	lr
 800fbe6:	684b      	ldr	r3, [r1, #4]
 800fbe8:	781b      	ldrb	r3, [r3, #0]
 800fbea:	2b00      	cmp	r3, #0
 800fbec:	d1cc      	bne.n	800fb88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fbee:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800fbf0:	4770      	bx	lr
 800fbf2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800fbf4:	4770      	bx	lr
 800fbf6:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800fbf8:	4770      	bx	lr
 800fbfa:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800fbfc:	4770      	bx	lr
 800fbfe:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800fc00:	4770      	bx	lr
 800fc02:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800fc04:	4770      	bx	lr
 800fc06:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800fc08:	4770      	bx	lr
 800fc0a:	2a0b      	cmp	r2, #11
 800fc0c:	d049      	beq.n	800fca2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fc0e:	d80e      	bhi.n	800fc2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800fc10:	2a03      	cmp	r2, #3
 800fc12:	d040      	beq.n	800fc96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800fc14:	d804      	bhi.n	800fc20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800fc16:	2a01      	cmp	r2, #1
 800fc18:	d03f      	beq.n	800fc9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800fc1a:	d940      	bls.n	800fc9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800fc1c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800fc1e:	4770      	bx	lr
 800fc20:	2a09      	cmp	r2, #9
 800fc22:	d03e      	beq.n	800fca2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fc24:	d801      	bhi.n	800fc2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800fc26:	2a08      	cmp	r2, #8
 800fc28:	d1ae      	bne.n	800fb88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc2a:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800fc2c:	4770      	bx	lr
 800fc2e:	2a2f      	cmp	r2, #47	; 0x2f
 800fc30:	d024      	beq.n	800fc7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800fc32:	d80d      	bhi.n	800fc50 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800fc34:	2a2d      	cmp	r2, #45	; 0x2d
 800fc36:	d014      	beq.n	800fc62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800fc38:	d826      	bhi.n	800fc88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800fc3a:	2a2c      	cmp	r2, #44	; 0x2c
 800fc3c:	d1a4      	bne.n	800fb88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc3e:	684b      	ldr	r3, [r1, #4]
 800fc40:	781b      	ldrb	r3, [r3, #0]
 800fc42:	2b01      	cmp	r3, #1
 800fc44:	d018      	beq.n	800fc78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800fc46:	d324      	bcc.n	800fc92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800fc48:	2b02      	cmp	r3, #2
 800fc4a:	d19d      	bne.n	800fb88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc4c:	68c0      	ldr	r0, [r0, #12]
 800fc4e:	4770      	bx	lr
 800fc50:	2a31      	cmp	r2, #49	; 0x31
 800fc52:	d004      	beq.n	800fc5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800fc54:	d327      	bcc.n	800fca6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fc56:	2a32      	cmp	r2, #50	; 0x32
 800fc58:	d025      	beq.n	800fca6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fc5a:	2a33      	cmp	r2, #51	; 0x33
 800fc5c:	d194      	bne.n	800fb88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc5e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800fc60:	4770      	bx	lr
 800fc62:	684b      	ldr	r3, [r1, #4]
 800fc64:	781b      	ldrb	r3, [r3, #0]
 800fc66:	2b01      	cmp	r3, #1
 800fc68:	d004      	beq.n	800fc74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800fc6a:	d30b      	bcc.n	800fc84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800fc6c:	2b02      	cmp	r3, #2
 800fc6e:	d18b      	bne.n	800fb88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc70:	6940      	ldr	r0, [r0, #20]
 800fc72:	4770      	bx	lr
 800fc74:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800fc76:	4770      	bx	lr
 800fc78:	69c0      	ldr	r0, [r0, #28]
 800fc7a:	4770      	bx	lr
 800fc7c:	684b      	ldr	r3, [r1, #4]
 800fc7e:	781b      	ldrb	r3, [r3, #0]
 800fc80:	2b00      	cmp	r3, #0
 800fc82:	d181      	bne.n	800fb88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc84:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800fc86:	4770      	bx	lr
 800fc88:	684b      	ldr	r3, [r1, #4]
 800fc8a:	781b      	ldrb	r3, [r3, #0]
 800fc8c:	2b00      	cmp	r3, #0
 800fc8e:	f47f af7b 	bne.w	800fb88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc92:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800fc94:	4770      	bx	lr
 800fc96:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fc98:	4770      	bx	lr
 800fc9a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800fc9c:	4770      	bx	lr
 800fc9e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800fca0:	4770      	bx	lr
 800fca2:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800fca4:	4770      	bx	lr
 800fca6:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800fca8:	4770      	bx	lr

0800fcaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fcaa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fcae:	b087      	sub	sp, #28
 800fcb0:	9815      	ldr	r0, [sp, #84]	; 0x54
 800fcb2:	9205      	str	r2, [sp, #20]
 800fcb4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800fcb8:	9202      	str	r2, [sp, #8]
 800fcba:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800fcbe:	9101      	str	r1, [sp, #4]
 800fcc0:	6841      	ldr	r1, [r0, #4]
 800fcc2:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800fcc6:	fb01 2404 	mla	r4, r1, r4, r2
 800fcca:	6802      	ldr	r2, [r0, #0]
 800fccc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fcd0:	f8de 2000 	ldr.w	r2, [lr]
 800fcd4:	9203      	str	r2, [sp, #12]
 800fcd6:	f8de 2004 	ldr.w	r2, [lr, #4]
 800fcda:	3204      	adds	r2, #4
 800fcdc:	9204      	str	r2, [sp, #16]
 800fcde:	9a02      	ldr	r2, [sp, #8]
 800fce0:	43d6      	mvns	r6, r2
 800fce2:	b2f6      	uxtb	r6, r6
 800fce4:	9a01      	ldr	r2, [sp, #4]
 800fce6:	2a00      	cmp	r2, #0
 800fce8:	dc03      	bgt.n	800fcf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 800fcea:	9a05      	ldr	r2, [sp, #20]
 800fcec:	2a00      	cmp	r2, #0
 800fcee:	f340 8129 	ble.w	800ff44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800fcf2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fcf4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800fcf8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800fcfc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fd00:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fd02:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fd06:	2b00      	cmp	r3, #0
 800fd08:	dd0e      	ble.n	800fd28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800fd0a:	1408      	asrs	r0, r1, #16
 800fd0c:	d405      	bmi.n	800fd1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fd0e:	4560      	cmp	r0, ip
 800fd10:	da03      	bge.n	800fd1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fd12:	1410      	asrs	r0, r2, #16
 800fd14:	d401      	bmi.n	800fd1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fd16:	42b8      	cmp	r0, r7
 800fd18:	db07      	blt.n	800fd2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800fd1a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fd1c:	4401      	add	r1, r0
 800fd1e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800fd20:	3b01      	subs	r3, #1
 800fd22:	4402      	add	r2, r0
 800fd24:	3402      	adds	r4, #2
 800fd26:	e7ee      	b.n	800fd06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 800fd28:	d071      	beq.n	800fe0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800fd2a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fd2c:	1e58      	subs	r0, r3, #1
 800fd2e:	fb05 1500 	mla	r5, r5, r0, r1
 800fd32:	142d      	asrs	r5, r5, #16
 800fd34:	d45f      	bmi.n	800fdf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fd36:	4565      	cmp	r5, ip
 800fd38:	da5d      	bge.n	800fdf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fd3a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fd3c:	fb05 2000 	mla	r0, r5, r0, r2
 800fd40:	1400      	asrs	r0, r0, #16
 800fd42:	d458      	bmi.n	800fdf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fd44:	42b8      	cmp	r0, r7
 800fd46:	da56      	bge.n	800fdf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fd48:	f8bd b008 	ldrh.w	fp, [sp, #8]
 800fd4c:	4699      	mov	r9, r3
 800fd4e:	46a2      	mov	sl, r4
 800fd50:	f1b9 0f00 	cmp.w	r9, #0
 800fd54:	dd57      	ble.n	800fe06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 800fd56:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800fd5a:	9803      	ldr	r0, [sp, #12]
 800fd5c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800fd60:	140d      	asrs	r5, r1, #16
 800fd62:	fb07 000c 	mla	r0, r7, ip, r0
 800fd66:	f109 39ff 	add.w	r9, r9, #4294967295
 800fd6a:	5d40      	ldrb	r0, [r0, r5]
 800fd6c:	9d04      	ldr	r5, [sp, #16]
 800fd6e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800fd72:	f8ba 5000 	ldrh.w	r5, [sl]
 800fd76:	122f      	asrs	r7, r5, #8
 800fd78:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800fd7c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fd80:	fb17 f706 	smulbb	r7, r7, r6
 800fd84:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800fd88:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fd8c:	00ed      	lsls	r5, r5, #3
 800fd8e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800fd92:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800fd96:	10c7      	asrs	r7, r0, #3
 800fd98:	b2ed      	uxtb	r5, r5
 800fd9a:	00c0      	lsls	r0, r0, #3
 800fd9c:	fb18 f806 	smulbb	r8, r8, r6
 800fda0:	fb15 f506 	smulbb	r5, r5, r6
 800fda4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800fda8:	b2c0      	uxtb	r0, r0
 800fdaa:	fa1f fc8c 	uxth.w	ip, ip
 800fdae:	fb07 870b 	mla	r7, r7, fp, r8
 800fdb2:	fb00 500b 	mla	r0, r0, fp, r5
 800fdb6:	b280      	uxth	r0, r0
 800fdb8:	b2bf      	uxth	r7, r7
 800fdba:	f10c 0501 	add.w	r5, ip, #1
 800fdbe:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800fdc2:	f107 0801 	add.w	r8, r7, #1
 800fdc6:	1c45      	adds	r5, r0, #1
 800fdc8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800fdcc:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 800fdd0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fdd2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fdd6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800fdda:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800fdde:	ea4c 0c05 	orr.w	ip, ip, r5
 800fde2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 800fde6:	4401      	add	r1, r0
 800fde8:	9814      	ldr	r0, [sp, #80]	; 0x50
 800fdea:	ea4c 0c08 	orr.w	ip, ip, r8
 800fdee:	f82a cb02 	strh.w	ip, [sl], #2
 800fdf2:	4402      	add	r2, r0
 800fdf4:	e7ac      	b.n	800fd50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800fdf6:	f8bd a008 	ldrh.w	sl, [sp, #8]
 800fdfa:	f04f 0800 	mov.w	r8, #0
 800fdfe:	eb03 0008 	add.w	r0, r3, r8
 800fe02:	2800      	cmp	r0, #0
 800fe04:	dc41      	bgt.n	800fe8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800fe06:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fe0a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fe0e:	9b01      	ldr	r3, [sp, #4]
 800fe10:	2b00      	cmp	r3, #0
 800fe12:	f340 8097 	ble.w	800ff44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800fe16:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fe1a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800fe1e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800fe22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe24:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fe28:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fe2c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fe30:	eef0 6a62 	vmov.f32	s13, s5
 800fe34:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fe38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fe3c:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fe40:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800fe44:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fe48:	eef0 6a43 	vmov.f32	s13, s6
 800fe4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fe50:	ee12 2a90 	vmov	r2, s5
 800fe54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fe58:	fb92 f3f3 	sdiv	r3, r2, r3
 800fe5c:	ee13 2a10 	vmov	r2, s6
 800fe60:	9313      	str	r3, [sp, #76]	; 0x4c
 800fe62:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe64:	fb92 f3f3 	sdiv	r3, r2, r3
 800fe68:	9314      	str	r3, [sp, #80]	; 0x50
 800fe6a:	9b01      	ldr	r3, [sp, #4]
 800fe6c:	9a05      	ldr	r2, [sp, #20]
 800fe6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fe72:	3b01      	subs	r3, #1
 800fe74:	9301      	str	r3, [sp, #4]
 800fe76:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800fe7a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe7c:	eeb0 3a67 	vmov.f32	s6, s15
 800fe80:	bf08      	it	eq
 800fe82:	4613      	moveq	r3, r2
 800fe84:	eef0 2a47 	vmov.f32	s5, s14
 800fe88:	e72c      	b.n	800fce4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 800fe8a:	140f      	asrs	r7, r1, #16
 800fe8c:	d453      	bmi.n	800ff36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800fe8e:	f8de 5008 	ldr.w	r5, [lr, #8]
 800fe92:	42bd      	cmp	r5, r7
 800fe94:	dd4f      	ble.n	800ff36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800fe96:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800fe9a:	d44c      	bmi.n	800ff36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800fe9c:	f8de 000c 	ldr.w	r0, [lr, #12]
 800fea0:	4560      	cmp	r0, ip
 800fea2:	dd48      	ble.n	800ff36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800fea4:	9803      	ldr	r0, [sp, #12]
 800fea6:	b22d      	sxth	r5, r5
 800fea8:	fb0c 0505 	mla	r5, ip, r5, r0
 800feac:	5de8      	ldrb	r0, [r5, r7]
 800feae:	9d04      	ldr	r5, [sp, #16]
 800feb0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800feb4:	f06f 0501 	mvn.w	r5, #1
 800feb8:	fb05 fb08 	mul.w	fp, r5, r8
 800febc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800fec0:	f834 500b 	ldrh.w	r5, [r4, fp]
 800fec4:	122f      	asrs	r7, r5, #8
 800fec6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800feca:	fb17 f706 	smulbb	r7, r7, r6
 800fece:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800fed2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fed6:	00ed      	lsls	r5, r5, #3
 800fed8:	fb0c 7c0a 	mla	ip, ip, sl, r7
 800fedc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800fee0:	10c7      	asrs	r7, r0, #3
 800fee2:	b2ed      	uxtb	r5, r5
 800fee4:	00c0      	lsls	r0, r0, #3
 800fee6:	fb19 f906 	smulbb	r9, r9, r6
 800feea:	fb15 f506 	smulbb	r5, r5, r6
 800feee:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800fef2:	b2c0      	uxtb	r0, r0
 800fef4:	fa1f fc8c 	uxth.w	ip, ip
 800fef8:	fb07 970a 	mla	r7, r7, sl, r9
 800fefc:	fb00 500a 	mla	r0, r0, sl, r5
 800ff00:	b2bf      	uxth	r7, r7
 800ff02:	b280      	uxth	r0, r0
 800ff04:	f10c 0501 	add.w	r5, ip, #1
 800ff08:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800ff0c:	f107 0901 	add.w	r9, r7, #1
 800ff10:	1c45      	adds	r5, r0, #1
 800ff12:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800ff16:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800ff1a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ff1e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800ff22:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800ff26:	ea4c 0c05 	orr.w	ip, ip, r5
 800ff2a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800ff2e:	ea4c 0c09 	orr.w	ip, ip, r9
 800ff32:	f824 c00b 	strh.w	ip, [r4, fp]
 800ff36:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ff38:	4401      	add	r1, r0
 800ff3a:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ff3c:	f108 38ff 	add.w	r8, r8, #4294967295
 800ff40:	4402      	add	r2, r0
 800ff42:	e75c      	b.n	800fdfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 800ff44:	b007      	add	sp, #28
 800ff46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ff4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800ff4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff4e:	b085      	sub	sp, #20
 800ff50:	4693      	mov	fp, r2
 800ff52:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800ff54:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800ff56:	6870      	ldr	r0, [r6, #4]
 800ff58:	9100      	str	r1, [sp, #0]
 800ff5a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800ff5e:	fb00 2404 	mla	r4, r0, r4, r2
 800ff62:	6832      	ldr	r2, [r6, #0]
 800ff64:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ff68:	682a      	ldr	r2, [r5, #0]
 800ff6a:	9201      	str	r2, [sp, #4]
 800ff6c:	686a      	ldr	r2, [r5, #4]
 800ff6e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 800ff72:	3204      	adds	r2, #4
 800ff74:	9202      	str	r2, [sp, #8]
 800ff76:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800ff7a:	9a00      	ldr	r2, [sp, #0]
 800ff7c:	2a00      	cmp	r2, #0
 800ff7e:	dc03      	bgt.n	800ff88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800ff80:	f1bb 0f00 	cmp.w	fp, #0
 800ff84:	f340 80a0 	ble.w	80100c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800ff88:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800ff8a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800ff8e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800ff92:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800ff96:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ff98:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ff9c:	2b00      	cmp	r3, #0
 800ff9e:	dd0c      	ble.n	800ffba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ffa0:	1406      	asrs	r6, r0, #16
 800ffa2:	d405      	bmi.n	800ffb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800ffa4:	454e      	cmp	r6, r9
 800ffa6:	da03      	bge.n	800ffb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800ffa8:	1416      	asrs	r6, r2, #16
 800ffaa:	d401      	bmi.n	800ffb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800ffac:	4546      	cmp	r6, r8
 800ffae:	db05      	blt.n	800ffbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800ffb0:	4470      	add	r0, lr
 800ffb2:	4462      	add	r2, ip
 800ffb4:	3b01      	subs	r3, #1
 800ffb6:	3402      	adds	r4, #2
 800ffb8:	e7f0      	b.n	800ff9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800ffba:	d00f      	beq.n	800ffdc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800ffbc:	1e5e      	subs	r6, r3, #1
 800ffbe:	fb0e 0706 	mla	r7, lr, r6, r0
 800ffc2:	143f      	asrs	r7, r7, #16
 800ffc4:	d541      	bpl.n	801004a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 800ffc6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 800ffca:	4698      	mov	r8, r3
 800ffcc:	9603      	str	r6, [sp, #12]
 800ffce:	f1b8 0f00 	cmp.w	r8, #0
 800ffd2:	dc59      	bgt.n	8010088 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800ffd4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ffd8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ffdc:	9b00      	ldr	r3, [sp, #0]
 800ffde:	2b00      	cmp	r3, #0
 800ffe0:	dd72      	ble.n	80100c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800ffe2:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ffe6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ffea:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ffee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fff0:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fff4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fff8:	eeb0 6a62 	vmov.f32	s12, s5
 800fffc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010000:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010004:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010008:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801000c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010010:	eeb0 6a43 	vmov.f32	s12, s6
 8010014:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010018:	ee12 2a90 	vmov	r2, s5
 801001c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010020:	fb92 fef3 	sdiv	lr, r2, r3
 8010024:	ee13 2a10 	vmov	r2, s6
 8010028:	fb92 fcf3 	sdiv	ip, r2, r3
 801002c:	9b00      	ldr	r3, [sp, #0]
 801002e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010032:	3b01      	subs	r3, #1
 8010034:	9300      	str	r3, [sp, #0]
 8010036:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801003a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801003c:	eeb0 3a67 	vmov.f32	s6, s15
 8010040:	bf08      	it	eq
 8010042:	465b      	moveq	r3, fp
 8010044:	eef0 2a47 	vmov.f32	s5, s14
 8010048:	e797      	b.n	800ff7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801004a:	454f      	cmp	r7, r9
 801004c:	dabb      	bge.n	800ffc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801004e:	fb0c 2606 	mla	r6, ip, r6, r2
 8010052:	1436      	asrs	r6, r6, #16
 8010054:	d4b7      	bmi.n	800ffc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010056:	4546      	cmp	r6, r8
 8010058:	dab5      	bge.n	800ffc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801005a:	461e      	mov	r6, r3
 801005c:	46a0      	mov	r8, r4
 801005e:	2e00      	cmp	r6, #0
 8010060:	ddb8      	ble.n	800ffd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8010062:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8010066:	9901      	ldr	r1, [sp, #4]
 8010068:	1417      	asrs	r7, r2, #16
 801006a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801006e:	fb0a 1707 	mla	r7, sl, r7, r1
 8010072:	9902      	ldr	r1, [sp, #8]
 8010074:	f817 7009 	ldrb.w	r7, [r7, r9]
 8010078:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801007c:	f828 7b02 	strh.w	r7, [r8], #2
 8010080:	4470      	add	r0, lr
 8010082:	4462      	add	r2, ip
 8010084:	3e01      	subs	r6, #1
 8010086:	e7ea      	b.n	801005e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8010088:	ea5f 4920 	movs.w	r9, r0, asr #16
 801008c:	d417      	bmi.n	80100be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801008e:	68ae      	ldr	r6, [r5, #8]
 8010090:	454e      	cmp	r6, r9
 8010092:	dd14      	ble.n	80100be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010094:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8010098:	d411      	bmi.n	80100be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801009a:	68ef      	ldr	r7, [r5, #12]
 801009c:	4557      	cmp	r7, sl
 801009e:	dd0e      	ble.n	80100be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80100a0:	9f01      	ldr	r7, [sp, #4]
 80100a2:	b236      	sxth	r6, r6
 80100a4:	fb0a 7606 	mla	r6, sl, r6, r7
 80100a8:	9f02      	ldr	r7, [sp, #8]
 80100aa:	f816 6009 	ldrb.w	r6, [r6, r9]
 80100ae:	f06f 0101 	mvn.w	r1, #1
 80100b2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80100b6:	fb01 f608 	mul.w	r6, r1, r8
 80100ba:	9903      	ldr	r1, [sp, #12]
 80100bc:	538f      	strh	r7, [r1, r6]
 80100be:	4470      	add	r0, lr
 80100c0:	4462      	add	r2, ip
 80100c2:	f108 38ff 	add.w	r8, r8, #4294967295
 80100c6:	e782      	b.n	800ffce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80100c8:	b005      	add	sp, #20
 80100ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080100ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80100ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80100d2:	b087      	sub	sp, #28
 80100d4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80100d6:	9205      	str	r2, [sp, #20]
 80100d8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80100dc:	9203      	str	r2, [sp, #12]
 80100de:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80100e2:	9102      	str	r1, [sp, #8]
 80100e4:	6861      	ldr	r1, [r4, #4]
 80100e6:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80100ea:	fb01 2000 	mla	r0, r1, r0, r2
 80100ee:	6822      	ldr	r2, [r4, #0]
 80100f0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80100f4:	9200      	str	r2, [sp, #0]
 80100f6:	f8dc 2000 	ldr.w	r2, [ip]
 80100fa:	9204      	str	r2, [sp, #16]
 80100fc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010100:	3204      	adds	r2, #4
 8010102:	9201      	str	r2, [sp, #4]
 8010104:	9a03      	ldr	r2, [sp, #12]
 8010106:	43d5      	mvns	r5, r2
 8010108:	b2ed      	uxtb	r5, r5
 801010a:	9a02      	ldr	r2, [sp, #8]
 801010c:	2a00      	cmp	r2, #0
 801010e:	dc03      	bgt.n	8010118 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8010110:	9a05      	ldr	r2, [sp, #20]
 8010112:	2a00      	cmp	r2, #0
 8010114:	f340 812c 	ble.w	8010370 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8010118:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801011a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801011e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8010122:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010126:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010128:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801012c:	2b00      	cmp	r3, #0
 801012e:	dd10      	ble.n	8010152 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010130:	140c      	asrs	r4, r1, #16
 8010132:	d405      	bmi.n	8010140 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010134:	4574      	cmp	r4, lr
 8010136:	da03      	bge.n	8010140 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010138:	1414      	asrs	r4, r2, #16
 801013a:	d401      	bmi.n	8010140 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801013c:	42bc      	cmp	r4, r7
 801013e:	db09      	blt.n	8010154 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8010140:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010142:	9800      	ldr	r0, [sp, #0]
 8010144:	4421      	add	r1, r4
 8010146:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010148:	3002      	adds	r0, #2
 801014a:	4422      	add	r2, r4
 801014c:	3b01      	subs	r3, #1
 801014e:	9000      	str	r0, [sp, #0]
 8010150:	e7ec      	b.n	801012c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8010152:	d071      	beq.n	8010238 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8010154:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010156:	1e5c      	subs	r4, r3, #1
 8010158:	fb06 1604 	mla	r6, r6, r4, r1
 801015c:	1436      	asrs	r6, r6, #16
 801015e:	d45d      	bmi.n	801021c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010160:	4576      	cmp	r6, lr
 8010162:	da5b      	bge.n	801021c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010164:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8010166:	fb06 2404 	mla	r4, r6, r4, r2
 801016a:	1424      	asrs	r4, r4, #16
 801016c:	d456      	bmi.n	801021c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801016e:	42bc      	cmp	r4, r7
 8010170:	da54      	bge.n	801021c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010172:	f8dd 9000 	ldr.w	r9, [sp]
 8010176:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801017a:	4698      	mov	r8, r3
 801017c:	f1b8 0f00 	cmp.w	r8, #0
 8010180:	dd54      	ble.n	801022c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8010182:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8010186:	9804      	ldr	r0, [sp, #16]
 8010188:	1414      	asrs	r4, r2, #16
 801018a:	fb07 0404 	mla	r4, r7, r4, r0
 801018e:	140e      	asrs	r6, r1, #16
 8010190:	9801      	ldr	r0, [sp, #4]
 8010192:	f814 e006 	ldrb.w	lr, [r4, r6]
 8010196:	f8b9 4000 	ldrh.w	r4, [r9]
 801019a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801019e:	eb00 0b0e 	add.w	fp, r0, lr
 80101a2:	1227      	asrs	r7, r4, #8
 80101a4:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80101a8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80101ac:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80101b0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80101b2:	fb16 f60a 	smulbb	r6, r6, sl
 80101b6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80101ba:	fb07 6705 	mla	r7, r7, r5, r6
 80101be:	10e6      	asrs	r6, r4, #3
 80101c0:	00e4      	lsls	r4, r4, #3
 80101c2:	b2e4      	uxtb	r4, r4
 80101c4:	fb1b fb0a 	smulbb	fp, fp, sl
 80101c8:	fb14 f405 	smulbb	r4, r4, r5
 80101cc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80101d0:	b2bf      	uxth	r7, r7
 80101d2:	fb06 b605 	mla	r6, r6, r5, fp
 80101d6:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80101da:	b2b6      	uxth	r6, r6
 80101dc:	fa1f fe8e 	uxth.w	lr, lr
 80101e0:	1c7c      	adds	r4, r7, #1
 80101e2:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80101e6:	f106 0b01 	add.w	fp, r6, #1
 80101ea:	f10e 0401 	add.w	r4, lr, #1
 80101ee:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80101f2:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80101f6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80101fa:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80101fe:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010202:	4327      	orrs	r7, r4
 8010204:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8010208:	4401      	add	r1, r0
 801020a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801020c:	ea47 070b 	orr.w	r7, r7, fp
 8010210:	f829 7b02 	strh.w	r7, [r9], #2
 8010214:	4402      	add	r2, r0
 8010216:	f108 38ff 	add.w	r8, r8, #4294967295
 801021a:	e7af      	b.n	801017c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801021c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8010220:	f04f 0e00 	mov.w	lr, #0
 8010224:	eb03 040e 	add.w	r4, r3, lr
 8010228:	2c00      	cmp	r4, #0
 801022a:	dc43      	bgt.n	80102b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801022c:	9a00      	ldr	r2, [sp, #0]
 801022e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010232:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8010236:	9300      	str	r3, [sp, #0]
 8010238:	9b02      	ldr	r3, [sp, #8]
 801023a:	2b00      	cmp	r3, #0
 801023c:	f340 8098 	ble.w	8010370 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8010240:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010244:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8010248:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801024c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801024e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010252:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010256:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801025a:	eef0 6a62 	vmov.f32	s13, s5
 801025e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010262:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010266:	ee77 2a62 	vsub.f32	s5, s14, s5
 801026a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801026e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010272:	eef0 6a43 	vmov.f32	s13, s6
 8010276:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801027a:	ee12 2a90 	vmov	r2, s5
 801027e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010282:	fb92 f3f3 	sdiv	r3, r2, r3
 8010286:	ee13 2a10 	vmov	r2, s6
 801028a:	9313      	str	r3, [sp, #76]	; 0x4c
 801028c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801028e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010292:	9314      	str	r3, [sp, #80]	; 0x50
 8010294:	9b02      	ldr	r3, [sp, #8]
 8010296:	9a05      	ldr	r2, [sp, #20]
 8010298:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801029c:	3b01      	subs	r3, #1
 801029e:	9302      	str	r3, [sp, #8]
 80102a0:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80102a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80102a6:	eeb0 3a67 	vmov.f32	s6, s15
 80102aa:	bf08      	it	eq
 80102ac:	4613      	moveq	r3, r2
 80102ae:	eef0 2a47 	vmov.f32	s5, s14
 80102b2:	e72a      	b.n	801010a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80102b4:	140f      	asrs	r7, r1, #16
 80102b6:	d454      	bmi.n	8010362 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80102b8:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80102bc:	42be      	cmp	r6, r7
 80102be:	dd50      	ble.n	8010362 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80102c0:	ea5f 4822 	movs.w	r8, r2, asr #16
 80102c4:	d44d      	bmi.n	8010362 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80102c6:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80102ca:	4544      	cmp	r4, r8
 80102cc:	dd49      	ble.n	8010362 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80102ce:	9c04      	ldr	r4, [sp, #16]
 80102d0:	b236      	sxth	r6, r6
 80102d2:	fb08 4606 	mla	r6, r8, r6, r4
 80102d6:	f06f 0001 	mvn.w	r0, #1
 80102da:	f816 8007 	ldrb.w	r8, [r6, r7]
 80102de:	9c01      	ldr	r4, [sp, #4]
 80102e0:	fb00 fa0e 	mul.w	sl, r0, lr
 80102e4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80102e8:	9800      	ldr	r0, [sp, #0]
 80102ea:	eb04 0b08 	add.w	fp, r4, r8
 80102ee:	f830 400a 	ldrh.w	r4, [r0, sl]
 80102f2:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80102f6:	9801      	ldr	r0, [sp, #4]
 80102f8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80102fc:	f810 8008 	ldrb.w	r8, [r0, r8]
 8010300:	9800      	ldr	r0, [sp, #0]
 8010302:	1227      	asrs	r7, r4, #8
 8010304:	fb16 f609 	smulbb	r6, r6, r9
 8010308:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801030c:	fb07 6705 	mla	r7, r7, r5, r6
 8010310:	10e6      	asrs	r6, r4, #3
 8010312:	00e4      	lsls	r4, r4, #3
 8010314:	b2e4      	uxtb	r4, r4
 8010316:	fb1b fb09 	smulbb	fp, fp, r9
 801031a:	fb14 f405 	smulbb	r4, r4, r5
 801031e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010322:	b2bf      	uxth	r7, r7
 8010324:	fb06 b605 	mla	r6, r6, r5, fp
 8010328:	fb08 4809 	mla	r8, r8, r9, r4
 801032c:	b2b6      	uxth	r6, r6
 801032e:	fa1f f888 	uxth.w	r8, r8
 8010332:	1c7c      	adds	r4, r7, #1
 8010334:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8010338:	f106 0b01 	add.w	fp, r6, #1
 801033c:	f108 0401 	add.w	r4, r8, #1
 8010340:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8010344:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8010348:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801034c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8010350:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010354:	4327      	orrs	r7, r4
 8010356:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801035a:	ea47 070b 	orr.w	r7, r7, fp
 801035e:	f820 700a 	strh.w	r7, [r0, sl]
 8010362:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010364:	4401      	add	r1, r0
 8010366:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010368:	f10e 3eff 	add.w	lr, lr, #4294967295
 801036c:	4402      	add	r2, r0
 801036e:	e759      	b.n	8010224 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8010370:	b007      	add	sp, #28
 8010372:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08010378 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801037c:	b085      	sub	sp, #20
 801037e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010382:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010384:	9203      	str	r2, [sp, #12]
 8010386:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801038a:	6870      	ldr	r0, [r6, #4]
 801038c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801038e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8010392:	686f      	ldr	r7, [r5, #4]
 8010394:	9101      	str	r1, [sp, #4]
 8010396:	fb00 2404 	mla	r4, r0, r4, r2
 801039a:	6832      	ldr	r2, [r6, #0]
 801039c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80103a0:	682a      	ldr	r2, [r5, #0]
 80103a2:	9202      	str	r2, [sp, #8]
 80103a4:	3704      	adds	r7, #4
 80103a6:	9a01      	ldr	r2, [sp, #4]
 80103a8:	2a00      	cmp	r2, #0
 80103aa:	dc03      	bgt.n	80103b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80103ac:	9a03      	ldr	r2, [sp, #12]
 80103ae:	2a00      	cmp	r2, #0
 80103b0:	f340 80cc 	ble.w	801054c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80103b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80103b6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80103ba:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80103be:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80103c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80103c4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80103c8:	2b00      	cmp	r3, #0
 80103ca:	dd0d      	ble.n	80103e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80103cc:	1406      	asrs	r6, r0, #16
 80103ce:	d405      	bmi.n	80103dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80103d0:	454e      	cmp	r6, r9
 80103d2:	da03      	bge.n	80103dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80103d4:	1416      	asrs	r6, r2, #16
 80103d6:	d401      	bmi.n	80103dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80103d8:	4546      	cmp	r6, r8
 80103da:	db06      	blt.n	80103ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80103dc:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80103de:	4460      	add	r0, ip
 80103e0:	4432      	add	r2, r6
 80103e2:	3b01      	subs	r3, #1
 80103e4:	3402      	adds	r4, #2
 80103e6:	e7ef      	b.n	80103c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80103e8:	d00f      	beq.n	801040a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80103ea:	1e5e      	subs	r6, r3, #1
 80103ec:	fb0c 0e06 	mla	lr, ip, r6, r0
 80103f0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80103f4:	d543      	bpl.n	801047e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80103f6:	4698      	mov	r8, r3
 80103f8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80103fc:	f1b8 0f00 	cmp.w	r8, #0
 8010400:	dc71      	bgt.n	80104e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8010402:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010406:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801040a:	9b01      	ldr	r3, [sp, #4]
 801040c:	2b00      	cmp	r3, #0
 801040e:	f340 809d 	ble.w	801054c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010412:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010416:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801041a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801041e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010420:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010424:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010428:	eeb0 6a62 	vmov.f32	s12, s5
 801042c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010430:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010434:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010438:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801043c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010440:	eeb0 6a43 	vmov.f32	s12, s6
 8010444:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010448:	ee12 2a90 	vmov	r2, s5
 801044c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010450:	fb92 fcf3 	sdiv	ip, r2, r3
 8010454:	ee13 2a10 	vmov	r2, s6
 8010458:	fb92 f3f3 	sdiv	r3, r2, r3
 801045c:	9312      	str	r3, [sp, #72]	; 0x48
 801045e:	9b01      	ldr	r3, [sp, #4]
 8010460:	9a03      	ldr	r2, [sp, #12]
 8010462:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010466:	3b01      	subs	r3, #1
 8010468:	9301      	str	r3, [sp, #4]
 801046a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801046e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010470:	eeb0 3a67 	vmov.f32	s6, s15
 8010474:	bf08      	it	eq
 8010476:	4613      	moveq	r3, r2
 8010478:	eef0 2a47 	vmov.f32	s5, s14
 801047c:	e793      	b.n	80103a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801047e:	45ce      	cmp	lr, r9
 8010480:	dab9      	bge.n	80103f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010482:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010484:	fb01 2606 	mla	r6, r1, r6, r2
 8010488:	1436      	asrs	r6, r6, #16
 801048a:	d4b4      	bmi.n	80103f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801048c:	4546      	cmp	r6, r8
 801048e:	dab2      	bge.n	80103f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010490:	4698      	mov	r8, r3
 8010492:	46a2      	mov	sl, r4
 8010494:	f1b8 0f00 	cmp.w	r8, #0
 8010498:	ddb3      	ble.n	8010402 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801049a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801049e:	9902      	ldr	r1, [sp, #8]
 80104a0:	1416      	asrs	r6, r2, #16
 80104a2:	fb09 1606 	mla	r6, r9, r6, r1
 80104a6:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80104aa:	492a      	ldr	r1, [pc, #168]	; (8010554 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80104ac:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80104b0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80104b4:	eb07 0b0e 	add.w	fp, r7, lr
 80104b8:	4460      	add	r0, ip
 80104ba:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80104be:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80104c2:	00f6      	lsls	r6, r6, #3
 80104c4:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80104c8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80104cc:	ea49 0606 	orr.w	r6, r9, r6
 80104d0:	f817 900e 	ldrb.w	r9, [r7, lr]
 80104d4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80104d6:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80104da:	f82a 6b02 	strh.w	r6, [sl], #2
 80104de:	440a      	add	r2, r1
 80104e0:	f108 38ff 	add.w	r8, r8, #4294967295
 80104e4:	e7d6      	b.n	8010494 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80104e6:	ea5f 4920 	movs.w	r9, r0, asr #16
 80104ea:	d429      	bmi.n	8010540 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80104ec:	68ae      	ldr	r6, [r5, #8]
 80104ee:	454e      	cmp	r6, r9
 80104f0:	dd26      	ble.n	8010540 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80104f2:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80104f6:	d423      	bmi.n	8010540 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80104f8:	68e9      	ldr	r1, [r5, #12]
 80104fa:	4559      	cmp	r1, fp
 80104fc:	dd20      	ble.n	8010540 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80104fe:	9902      	ldr	r1, [sp, #8]
 8010500:	fa0f fe86 	sxth.w	lr, r6
 8010504:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8010508:	f06f 0101 	mvn.w	r1, #1
 801050c:	f81e e009 	ldrb.w	lr, [lr, r9]
 8010510:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010514:	eb07 060e 	add.w	r6, r7, lr
 8010518:	fb01 f908 	mul.w	r9, r1, r8
 801051c:	f896 b002 	ldrb.w	fp, [r6, #2]
 8010520:	7876      	ldrb	r6, [r6, #1]
 8010522:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8010526:	00f6      	lsls	r6, r6, #3
 8010528:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801052c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010530:	ea4b 0606 	orr.w	r6, fp, r6
 8010534:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8010538:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801053c:	f82a 6009 	strh.w	r6, [sl, r9]
 8010540:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010542:	4460      	add	r0, ip
 8010544:	440a      	add	r2, r1
 8010546:	f108 38ff 	add.w	r8, r8, #4294967295
 801054a:	e757      	b.n	80103fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801054c:	b005      	add	sp, #20
 801054e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010552:	bf00      	nop
 8010554:	fffff800 	.word	0xfffff800

08010558 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801055c:	b087      	sub	sp, #28
 801055e:	468b      	mov	fp, r1
 8010560:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010562:	9204      	str	r2, [sp, #16]
 8010564:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010568:	9205      	str	r2, [sp, #20]
 801056a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801056e:	6841      	ldr	r1, [r0, #4]
 8010570:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8010574:	fb01 2404 	mla	r4, r1, r4, r2
 8010578:	6802      	ldr	r2, [r0, #0]
 801057a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801057e:	f8dc 2000 	ldr.w	r2, [ip]
 8010582:	9201      	str	r2, [sp, #4]
 8010584:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010588:	3204      	adds	r2, #4
 801058a:	9202      	str	r2, [sp, #8]
 801058c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010590:	f1bb 0f00 	cmp.w	fp, #0
 8010594:	dc03      	bgt.n	801059e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8010596:	9a04      	ldr	r2, [sp, #16]
 8010598:	2a00      	cmp	r2, #0
 801059a:	f340 8138 	ble.w	801080e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801059e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80105a0:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80105a4:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80105a8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80105ac:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80105ae:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80105b2:	2b00      	cmp	r3, #0
 80105b4:	dd0e      	ble.n	80105d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80105b6:	1402      	asrs	r2, r0, #16
 80105b8:	d405      	bmi.n	80105c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80105ba:	42ba      	cmp	r2, r7
 80105bc:	da03      	bge.n	80105c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80105be:	140a      	asrs	r2, r1, #16
 80105c0:	d401      	bmi.n	80105c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80105c2:	42b2      	cmp	r2, r6
 80105c4:	db07      	blt.n	80105d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80105c6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80105c8:	4410      	add	r0, r2
 80105ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80105cc:	3b01      	subs	r3, #1
 80105ce:	4411      	add	r1, r2
 80105d0:	3402      	adds	r4, #2
 80105d2:	e7ee      	b.n	80105b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80105d4:	d019      	beq.n	801060a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80105d6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80105d8:	1e5a      	subs	r2, r3, #1
 80105da:	fb05 0502 	mla	r5, r5, r2, r0
 80105de:	142d      	asrs	r5, r5, #16
 80105e0:	d409      	bmi.n	80105f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80105e2:	42bd      	cmp	r5, r7
 80105e4:	da07      	bge.n	80105f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80105e6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80105e8:	fb05 1202 	mla	r2, r5, r2, r1
 80105ec:	1412      	asrs	r2, r2, #16
 80105ee:	d402      	bmi.n	80105f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80105f0:	42b2      	cmp	r2, r6
 80105f2:	f2c0 80ac 	blt.w	801074e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80105f6:	f04f 0e00 	mov.w	lr, #0
 80105fa:	eb03 020e 	add.w	r2, r3, lr
 80105fe:	2a00      	cmp	r2, #0
 8010600:	dc3e      	bgt.n	8010680 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8010602:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010606:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801060a:	f1bb 0f00 	cmp.w	fp, #0
 801060e:	f340 80fe 	ble.w	801080e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8010612:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010616:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801061a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801061e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010620:	f1bb 0b01 	subs.w	fp, fp, #1
 8010624:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010628:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801062c:	eeb0 6a62 	vmov.f32	s12, s5
 8010630:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010634:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010638:	ee77 2a62 	vsub.f32	s5, s14, s5
 801063c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010640:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010644:	eeb0 6a43 	vmov.f32	s12, s6
 8010648:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801064c:	ee12 2a90 	vmov	r2, s5
 8010650:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010654:	fb92 f3f3 	sdiv	r3, r2, r3
 8010658:	ee13 2a10 	vmov	r2, s6
 801065c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010660:	9313      	str	r3, [sp, #76]	; 0x4c
 8010662:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010664:	fb92 f3f3 	sdiv	r3, r2, r3
 8010668:	9a04      	ldr	r2, [sp, #16]
 801066a:	9314      	str	r3, [sp, #80]	; 0x50
 801066c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010670:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010672:	eeb0 3a67 	vmov.f32	s6, s15
 8010676:	bf08      	it	eq
 8010678:	4613      	moveq	r3, r2
 801067a:	eef0 2a47 	vmov.f32	s5, s14
 801067e:	e787      	b.n	8010590 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8010680:	1406      	asrs	r6, r0, #16
 8010682:	d45d      	bmi.n	8010740 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010684:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8010688:	42b5      	cmp	r5, r6
 801068a:	dd59      	ble.n	8010740 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801068c:	140f      	asrs	r7, r1, #16
 801068e:	d457      	bmi.n	8010740 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010690:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8010694:	42ba      	cmp	r2, r7
 8010696:	dd53      	ble.n	8010740 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010698:	9a01      	ldr	r2, [sp, #4]
 801069a:	b22d      	sxth	r5, r5
 801069c:	fb07 2505 	mla	r5, r7, r5, r2
 80106a0:	5daa      	ldrb	r2, [r5, r6]
 80106a2:	9d02      	ldr	r5, [sp, #8]
 80106a4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80106a8:	0e2e      	lsrs	r6, r5, #24
 80106aa:	d049      	beq.n	8010740 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80106ac:	f06f 0201 	mvn.w	r2, #1
 80106b0:	fb02 f20e 	mul.w	r2, r2, lr
 80106b4:	9203      	str	r2, [sp, #12]
 80106b6:	f834 8002 	ldrh.w	r8, [r4, r2]
 80106ba:	9a05      	ldr	r2, [sp, #20]
 80106bc:	4356      	muls	r6, r2
 80106be:	1c72      	adds	r2, r6, #1
 80106c0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80106c4:	1212      	asrs	r2, r2, #8
 80106c6:	fa1f f982 	uxth.w	r9, r2
 80106ca:	ea4f 2728 	mov.w	r7, r8, asr #8
 80106ce:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80106d2:	43d2      	mvns	r2, r2
 80106d4:	b2d2      	uxtb	r2, r2
 80106d6:	fb16 f609 	smulbb	r6, r6, r9
 80106da:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80106de:	fb07 6702 	mla	r7, r7, r2, r6
 80106e2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80106e6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80106ea:	b2ed      	uxtb	r5, r5
 80106ec:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80106f0:	fa5f f888 	uxtb.w	r8, r8
 80106f4:	fb15 f509 	smulbb	r5, r5, r9
 80106f8:	fb08 5502 	mla	r5, r8, r2, r5
 80106fc:	b2bf      	uxth	r7, r7
 80106fe:	fb1a fa09 	smulbb	sl, sl, r9
 8010702:	b2ad      	uxth	r5, r5
 8010704:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010708:	fb06 a602 	mla	r6, r6, r2, sl
 801070c:	1c7a      	adds	r2, r7, #1
 801070e:	f105 0a01 	add.w	sl, r5, #1
 8010712:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010716:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801071a:	b2b6      	uxth	r6, r6
 801071c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010720:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010724:	ea47 070a 	orr.w	r7, r7, sl
 8010728:	f106 0a01 	add.w	sl, r6, #1
 801072c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010730:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010734:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010738:	9a03      	ldr	r2, [sp, #12]
 801073a:	ea47 070a 	orr.w	r7, r7, sl
 801073e:	52a7      	strh	r7, [r4, r2]
 8010740:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010742:	4410      	add	r0, r2
 8010744:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010746:	f10e 3eff 	add.w	lr, lr, #4294967295
 801074a:	4411      	add	r1, r2
 801074c:	e755      	b.n	80105fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801074e:	f04f 0800 	mov.w	r8, #0
 8010752:	eba3 0208 	sub.w	r2, r3, r8
 8010756:	2a00      	cmp	r2, #0
 8010758:	f77f af53 	ble.w	8010602 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801075c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8010760:	9f01      	ldr	r7, [sp, #4]
 8010762:	140a      	asrs	r2, r1, #16
 8010764:	1405      	asrs	r5, r0, #16
 8010766:	fb06 7202 	mla	r2, r6, r2, r7
 801076a:	5d52      	ldrb	r2, [r2, r5]
 801076c:	9d02      	ldr	r5, [sp, #8]
 801076e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010772:	0e2e      	lsrs	r6, r5, #24
 8010774:	d044      	beq.n	8010800 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8010776:	9a05      	ldr	r2, [sp, #20]
 8010778:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801077c:	4356      	muls	r6, r2
 801077e:	1c72      	adds	r2, r6, #1
 8010780:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010784:	1212      	asrs	r2, r2, #8
 8010786:	fa1f f982 	uxth.w	r9, r2
 801078a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801078e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010792:	43d2      	mvns	r2, r2
 8010794:	b2d2      	uxtb	r2, r2
 8010796:	fb16 f609 	smulbb	r6, r6, r9
 801079a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801079e:	fb07 6702 	mla	r7, r7, r2, r6
 80107a2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80107a6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80107aa:	b2ed      	uxtb	r5, r5
 80107ac:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80107b0:	fa5f fe8e 	uxtb.w	lr, lr
 80107b4:	fb15 f509 	smulbb	r5, r5, r9
 80107b8:	fb0e 5502 	mla	r5, lr, r2, r5
 80107bc:	b2bf      	uxth	r7, r7
 80107be:	fb1a fa09 	smulbb	sl, sl, r9
 80107c2:	b2ad      	uxth	r5, r5
 80107c4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80107c8:	fb06 a602 	mla	r6, r6, r2, sl
 80107cc:	1c7a      	adds	r2, r7, #1
 80107ce:	f105 0a01 	add.w	sl, r5, #1
 80107d2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80107d6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80107da:	b2b6      	uxth	r6, r6
 80107dc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80107e0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80107e4:	ea47 070a 	orr.w	r7, r7, sl
 80107e8:	f106 0a01 	add.w	sl, r6, #1
 80107ec:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80107f0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80107f4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80107f8:	ea47 070a 	orr.w	r7, r7, sl
 80107fc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010800:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010802:	4410      	add	r0, r2
 8010804:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010806:	f108 0801 	add.w	r8, r8, #1
 801080a:	4411      	add	r1, r2
 801080c:	e7a1      	b.n	8010752 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801080e:	b007      	add	sp, #28
 8010810:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010814 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010818:	b085      	sub	sp, #20
 801081a:	468b      	mov	fp, r1
 801081c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801081e:	9203      	str	r2, [sp, #12]
 8010820:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010824:	6841      	ldr	r1, [r0, #4]
 8010826:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801082a:	fb01 2404 	mla	r4, r1, r4, r2
 801082e:	6802      	ldr	r2, [r0, #0]
 8010830:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010834:	f8de 2000 	ldr.w	r2, [lr]
 8010838:	9200      	str	r2, [sp, #0]
 801083a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801083e:	3204      	adds	r2, #4
 8010840:	9201      	str	r2, [sp, #4]
 8010842:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010846:	f1bb 0f00 	cmp.w	fp, #0
 801084a:	dc03      	bgt.n	8010854 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801084c:	9a03      	ldr	r2, [sp, #12]
 801084e:	2a00      	cmp	r2, #0
 8010850:	f340 8153 	ble.w	8010afa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010854:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010856:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801085a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801085e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010862:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010864:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010868:	2b00      	cmp	r3, #0
 801086a:	dd0e      	ble.n	801088a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801086c:	1408      	asrs	r0, r1, #16
 801086e:	d405      	bmi.n	801087c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010870:	42b8      	cmp	r0, r7
 8010872:	da03      	bge.n	801087c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010874:	1410      	asrs	r0, r2, #16
 8010876:	d401      	bmi.n	801087c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010878:	42b0      	cmp	r0, r6
 801087a:	db07      	blt.n	801088c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801087c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801087e:	4401      	add	r1, r0
 8010880:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010882:	3b01      	subs	r3, #1
 8010884:	4402      	add	r2, r0
 8010886:	3402      	adds	r4, #2
 8010888:	e7ee      	b.n	8010868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801088a:	d017      	beq.n	80108bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801088c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801088e:	1e58      	subs	r0, r3, #1
 8010890:	fb05 1500 	mla	r5, r5, r0, r1
 8010894:	142d      	asrs	r5, r5, #16
 8010896:	d409      	bmi.n	80108ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010898:	42bd      	cmp	r5, r7
 801089a:	da07      	bge.n	80108ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801089c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801089e:	fb05 2000 	mla	r0, r5, r0, r2
 80108a2:	1400      	asrs	r0, r0, #16
 80108a4:	d402      	bmi.n	80108ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80108a6:	42b0      	cmp	r0, r6
 80108a8:	f2c0 80bc 	blt.w	8010a24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80108ac:	2600      	movs	r6, #0
 80108ae:	1998      	adds	r0, r3, r6
 80108b0:	2800      	cmp	r0, #0
 80108b2:	dc3e      	bgt.n	8010932 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80108b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80108b8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80108bc:	f1bb 0f00 	cmp.w	fp, #0
 80108c0:	f340 811b 	ble.w	8010afa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80108c4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80108c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80108cc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80108d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80108d2:	f1bb 0b01 	subs.w	fp, fp, #1
 80108d6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80108da:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80108de:	eeb0 6a62 	vmov.f32	s12, s5
 80108e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80108e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80108ea:	ee77 2a62 	vsub.f32	s5, s14, s5
 80108ee:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80108f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80108f6:	eeb0 6a43 	vmov.f32	s12, s6
 80108fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80108fe:	ee12 2a90 	vmov	r2, s5
 8010902:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010906:	fb92 f3f3 	sdiv	r3, r2, r3
 801090a:	ee13 2a10 	vmov	r2, s6
 801090e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010912:	9311      	str	r3, [sp, #68]	; 0x44
 8010914:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010916:	fb92 f3f3 	sdiv	r3, r2, r3
 801091a:	9a03      	ldr	r2, [sp, #12]
 801091c:	9312      	str	r3, [sp, #72]	; 0x48
 801091e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010922:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010924:	eeb0 3a67 	vmov.f32	s6, s15
 8010928:	bf08      	it	eq
 801092a:	4613      	moveq	r3, r2
 801092c:	eef0 2a47 	vmov.f32	s5, s14
 8010930:	e789      	b.n	8010846 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8010932:	140f      	asrs	r7, r1, #16
 8010934:	d45e      	bmi.n	80109f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010936:	f8de 5008 	ldr.w	r5, [lr, #8]
 801093a:	42bd      	cmp	r5, r7
 801093c:	dd5a      	ble.n	80109f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801093e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010942:	d457      	bmi.n	80109f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010944:	f8de 000c 	ldr.w	r0, [lr, #12]
 8010948:	4560      	cmp	r0, ip
 801094a:	dd53      	ble.n	80109f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801094c:	9800      	ldr	r0, [sp, #0]
 801094e:	b22d      	sxth	r5, r5
 8010950:	fb0c 0505 	mla	r5, ip, r5, r0
 8010954:	5de8      	ldrb	r0, [r5, r7]
 8010956:	9d01      	ldr	r5, [sp, #4]
 8010958:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801095c:	0e07      	lsrs	r7, r0, #24
 801095e:	2fff      	cmp	r7, #255	; 0xff
 8010960:	d04e      	beq.n	8010a00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8010962:	b2fd      	uxtb	r5, r7
 8010964:	2f00      	cmp	r7, #0
 8010966:	d045      	beq.n	80109f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010968:	f06f 0701 	mvn.w	r7, #1
 801096c:	4377      	muls	r7, r6
 801096e:	fa1f f985 	uxth.w	r9, r5
 8010972:	f834 8007 	ldrh.w	r8, [r4, r7]
 8010976:	9702      	str	r7, [sp, #8]
 8010978:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801097c:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8010980:	43ed      	mvns	r5, r5
 8010982:	b2ed      	uxtb	r5, r5
 8010984:	fb17 f709 	smulbb	r7, r7, r9
 8010988:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801098c:	fb0c 7c05 	mla	ip, ip, r5, r7
 8010990:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010994:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8010998:	b2c0      	uxtb	r0, r0
 801099a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801099e:	fa5f f888 	uxtb.w	r8, r8
 80109a2:	fb10 f009 	smulbb	r0, r0, r9
 80109a6:	fb08 0005 	mla	r0, r8, r5, r0
 80109aa:	b280      	uxth	r0, r0
 80109ac:	fa1f fc8c 	uxth.w	ip, ip
 80109b0:	fb1a fa09 	smulbb	sl, sl, r9
 80109b4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80109b8:	fb07 a705 	mla	r7, r7, r5, sl
 80109bc:	f100 0a01 	add.w	sl, r0, #1
 80109c0:	f10c 0501 	add.w	r5, ip, #1
 80109c4:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80109c8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80109cc:	b2bf      	uxth	r7, r7
 80109ce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80109d2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80109d6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80109da:	f107 0a01 	add.w	sl, r7, #1
 80109de:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80109e2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80109e6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80109ea:	9802      	ldr	r0, [sp, #8]
 80109ec:	ea4c 0c0a 	orr.w	ip, ip, sl
 80109f0:	f824 c000 	strh.w	ip, [r4, r0]
 80109f4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80109f6:	4401      	add	r1, r0
 80109f8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80109fa:	3e01      	subs	r6, #1
 80109fc:	4402      	add	r2, r0
 80109fe:	e756      	b.n	80108ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8010a00:	f06f 0501 	mvn.w	r5, #1
 8010a04:	fb05 f706 	mul.w	r7, r5, r6
 8010a08:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8010a0c:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8010a10:	0945      	lsrs	r5, r0, #5
 8010a12:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010a16:	ea4c 0505 	orr.w	r5, ip, r5
 8010a1a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010a1e:	4305      	orrs	r5, r0
 8010a20:	53e5      	strh	r5, [r4, r7]
 8010a22:	e7e7      	b.n	80109f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010a24:	f04f 0800 	mov.w	r8, #0
 8010a28:	eba3 0008 	sub.w	r0, r3, r8
 8010a2c:	2800      	cmp	r0, #0
 8010a2e:	f77f af41 	ble.w	80108b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010a32:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010a36:	9f00      	ldr	r7, [sp, #0]
 8010a38:	1410      	asrs	r0, r2, #16
 8010a3a:	140d      	asrs	r5, r1, #16
 8010a3c:	fb06 7000 	mla	r0, r6, r0, r7
 8010a40:	5d40      	ldrb	r0, [r0, r5]
 8010a42:	9d01      	ldr	r5, [sp, #4]
 8010a44:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010a48:	0e06      	lsrs	r6, r0, #24
 8010a4a:	2eff      	cmp	r6, #255	; 0xff
 8010a4c:	d048      	beq.n	8010ae0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8010a4e:	b2f5      	uxtb	r5, r6
 8010a50:	2e00      	cmp	r6, #0
 8010a52:	d03e      	beq.n	8010ad2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8010a54:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8010a58:	fa1f f985 	uxth.w	r9, r5
 8010a5c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010a60:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8010a64:	43ed      	mvns	r5, r5
 8010a66:	b2ed      	uxtb	r5, r5
 8010a68:	fb16 f609 	smulbb	r6, r6, r9
 8010a6c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010a70:	fb07 6705 	mla	r7, r7, r5, r6
 8010a74:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010a78:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010a7c:	b2c0      	uxtb	r0, r0
 8010a7e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010a82:	fa5f fc8c 	uxtb.w	ip, ip
 8010a86:	fb10 f009 	smulbb	r0, r0, r9
 8010a8a:	fb0c 0005 	mla	r0, ip, r5, r0
 8010a8e:	b2bf      	uxth	r7, r7
 8010a90:	fb1a fa09 	smulbb	sl, sl, r9
 8010a94:	b280      	uxth	r0, r0
 8010a96:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010a9a:	fb06 a605 	mla	r6, r6, r5, sl
 8010a9e:	1c7d      	adds	r5, r7, #1
 8010aa0:	f100 0a01 	add.w	sl, r0, #1
 8010aa4:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8010aa8:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010aac:	b2b6      	uxth	r6, r6
 8010aae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010ab2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010ab6:	ea47 070a 	orr.w	r7, r7, sl
 8010aba:	f106 0a01 	add.w	sl, r6, #1
 8010abe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010ac2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010ac6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010aca:	ea47 070a 	orr.w	r7, r7, sl
 8010ace:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010ad2:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010ad4:	4401      	add	r1, r0
 8010ad6:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010ad8:	f108 0801 	add.w	r8, r8, #1
 8010adc:	4402      	add	r2, r0
 8010ade:	e7a3      	b.n	8010a28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8010ae0:	4d07      	ldr	r5, [pc, #28]	; (8010b00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8010ae2:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 8010ae6:	0945      	lsrs	r5, r0, #5
 8010ae8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010aec:	4335      	orrs	r5, r6
 8010aee:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010af2:	4305      	orrs	r5, r0
 8010af4:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8010af8:	e7eb      	b.n	8010ad2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8010afa:	b005      	add	sp, #20
 8010afc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b00:	fffff800 	.word	0xfffff800

08010b04 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010b04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b08:	b087      	sub	sp, #28
 8010b0a:	468b      	mov	fp, r1
 8010b0c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010b0e:	9204      	str	r2, [sp, #16]
 8010b10:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010b14:	9205      	str	r2, [sp, #20]
 8010b16:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010b1a:	6861      	ldr	r1, [r4, #4]
 8010b1c:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8010b20:	fb01 2000 	mla	r0, r1, r0, r2
 8010b24:	6822      	ldr	r2, [r4, #0]
 8010b26:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010b2a:	f8de 2000 	ldr.w	r2, [lr]
 8010b2e:	9201      	str	r2, [sp, #4]
 8010b30:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010b34:	9202      	str	r2, [sp, #8]
 8010b36:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010b3a:	f1bb 0f00 	cmp.w	fp, #0
 8010b3e:	dc03      	bgt.n	8010b48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8010b40:	9a04      	ldr	r2, [sp, #16]
 8010b42:	2a00      	cmp	r2, #0
 8010b44:	f340 8142 	ble.w	8010dcc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010b48:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010b4a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010b4e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010b52:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010b56:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010b58:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010b5c:	2b00      	cmp	r3, #0
 8010b5e:	dd0e      	ble.n	8010b7e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8010b60:	140c      	asrs	r4, r1, #16
 8010b62:	d405      	bmi.n	8010b70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010b64:	42bc      	cmp	r4, r7
 8010b66:	da03      	bge.n	8010b70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010b68:	1414      	asrs	r4, r2, #16
 8010b6a:	d401      	bmi.n	8010b70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010b6c:	42b4      	cmp	r4, r6
 8010b6e:	db07      	blt.n	8010b80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010b70:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010b72:	4421      	add	r1, r4
 8010b74:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010b76:	3b01      	subs	r3, #1
 8010b78:	4422      	add	r2, r4
 8010b7a:	3002      	adds	r0, #2
 8010b7c:	e7ee      	b.n	8010b5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8010b7e:	d019      	beq.n	8010bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8010b80:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010b82:	1e5c      	subs	r4, r3, #1
 8010b84:	fb05 1504 	mla	r5, r5, r4, r1
 8010b88:	142d      	asrs	r5, r5, #16
 8010b8a:	d409      	bmi.n	8010ba0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010b8c:	42bd      	cmp	r5, r7
 8010b8e:	da07      	bge.n	8010ba0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010b90:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010b92:	fb05 2404 	mla	r4, r5, r4, r2
 8010b96:	1424      	asrs	r4, r4, #16
 8010b98:	d402      	bmi.n	8010ba0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010b9a:	42b4      	cmp	r4, r6
 8010b9c:	f2c0 80b1 	blt.w	8010d02 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8010ba0:	f04f 0800 	mov.w	r8, #0
 8010ba4:	eb03 0408 	add.w	r4, r3, r8
 8010ba8:	2c00      	cmp	r4, #0
 8010baa:	dc3e      	bgt.n	8010c2a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8010bac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010bb0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010bb4:	f1bb 0f00 	cmp.w	fp, #0
 8010bb8:	f340 8108 	ble.w	8010dcc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010bbc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010bc0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010bc4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010bc8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010bca:	f1bb 0b01 	subs.w	fp, fp, #1
 8010bce:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010bd2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010bd6:	eeb0 6a62 	vmov.f32	s12, s5
 8010bda:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010bde:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010be2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010be6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010bea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010bee:	eeb0 6a43 	vmov.f32	s12, s6
 8010bf2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010bf6:	ee12 2a90 	vmov	r2, s5
 8010bfa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010bfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8010c02:	ee13 2a10 	vmov	r2, s6
 8010c06:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010c0a:	9313      	str	r3, [sp, #76]	; 0x4c
 8010c0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010c0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010c12:	9a04      	ldr	r2, [sp, #16]
 8010c14:	9314      	str	r3, [sp, #80]	; 0x50
 8010c16:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010c1a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010c1c:	eeb0 3a67 	vmov.f32	s6, s15
 8010c20:	bf08      	it	eq
 8010c22:	4613      	moveq	r3, r2
 8010c24:	eef0 2a47 	vmov.f32	s5, s14
 8010c28:	e787      	b.n	8010b3a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8010c2a:	140e      	asrs	r6, r1, #16
 8010c2c:	d462      	bmi.n	8010cf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010c2e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010c32:	42b5      	cmp	r5, r6
 8010c34:	dd5e      	ble.n	8010cf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010c36:	1417      	asrs	r7, r2, #16
 8010c38:	d45c      	bmi.n	8010cf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010c3a:	f8de 400c 	ldr.w	r4, [lr, #12]
 8010c3e:	42bc      	cmp	r4, r7
 8010c40:	dd58      	ble.n	8010cf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010c42:	b22d      	sxth	r5, r5
 8010c44:	fb07 6505 	mla	r5, r7, r5, r6
 8010c48:	9c02      	ldr	r4, [sp, #8]
 8010c4a:	5d66      	ldrb	r6, [r4, r5]
 8010c4c:	2e00      	cmp	r6, #0
 8010c4e:	d051      	beq.n	8010cf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010c50:	9c01      	ldr	r4, [sp, #4]
 8010c52:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8010c56:	f06f 0401 	mvn.w	r4, #1
 8010c5a:	fb04 f408 	mul.w	r4, r4, r8
 8010c5e:	9403      	str	r4, [sp, #12]
 8010c60:	5b05      	ldrh	r5, [r0, r4]
 8010c62:	9c05      	ldr	r4, [sp, #20]
 8010c64:	4366      	muls	r6, r4
 8010c66:	1c74      	adds	r4, r6, #1
 8010c68:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010c6c:	1224      	asrs	r4, r4, #8
 8010c6e:	b2a7      	uxth	r7, r4
 8010c70:	122e      	asrs	r6, r5, #8
 8010c72:	43e4      	mvns	r4, r4
 8010c74:	b2e4      	uxtb	r4, r4
 8010c76:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8010c7a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010c7e:	fb16 f604 	smulbb	r6, r6, r4
 8010c82:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010c86:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010c8a:	00ed      	lsls	r5, r5, #3
 8010c8c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010c90:	b2ed      	uxtb	r5, r5
 8010c92:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8010c96:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8010c9a:	fb15 f504 	smulbb	r5, r5, r4
 8010c9e:	fa5f f989 	uxtb.w	r9, r9
 8010ca2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010ca6:	fb09 5507 	mla	r5, r9, r7, r5
 8010caa:	fb1a fa04 	smulbb	sl, sl, r4
 8010cae:	fa1f fc8c 	uxth.w	ip, ip
 8010cb2:	b2ad      	uxth	r5, r5
 8010cb4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010cb8:	fb06 a607 	mla	r6, r6, r7, sl
 8010cbc:	f10c 0401 	add.w	r4, ip, #1
 8010cc0:	f105 0a01 	add.w	sl, r5, #1
 8010cc4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010cc8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010ccc:	b2b6      	uxth	r6, r6
 8010cce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010cd2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010cd6:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010cda:	f106 0a01 	add.w	sl, r6, #1
 8010cde:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010ce2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010ce6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010cea:	9c03      	ldr	r4, [sp, #12]
 8010cec:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010cf0:	f820 c004 	strh.w	ip, [r0, r4]
 8010cf4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010cf6:	4421      	add	r1, r4
 8010cf8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010cfa:	f108 38ff 	add.w	r8, r8, #4294967295
 8010cfe:	4422      	add	r2, r4
 8010d00:	e750      	b.n	8010ba4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010d02:	f04f 0900 	mov.w	r9, #0
 8010d06:	eba3 0409 	sub.w	r4, r3, r9
 8010d0a:	2c00      	cmp	r4, #0
 8010d0c:	f77f af4e 	ble.w	8010bac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010d10:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010d14:	140d      	asrs	r5, r1, #16
 8010d16:	1414      	asrs	r4, r2, #16
 8010d18:	fb06 5404 	mla	r4, r6, r4, r5
 8010d1c:	9d02      	ldr	r5, [sp, #8]
 8010d1e:	5d2e      	ldrb	r6, [r5, r4]
 8010d20:	2e00      	cmp	r6, #0
 8010d22:	d04c      	beq.n	8010dbe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8010d24:	9d01      	ldr	r5, [sp, #4]
 8010d26:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8010d2a:	9c05      	ldr	r4, [sp, #20]
 8010d2c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8010d30:	4366      	muls	r6, r4
 8010d32:	1c74      	adds	r4, r6, #1
 8010d34:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010d38:	1224      	asrs	r4, r4, #8
 8010d3a:	b2a7      	uxth	r7, r4
 8010d3c:	122e      	asrs	r6, r5, #8
 8010d3e:	43e4      	mvns	r4, r4
 8010d40:	b2e4      	uxtb	r4, r4
 8010d42:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010d46:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010d4a:	fb16 f604 	smulbb	r6, r6, r4
 8010d4e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010d52:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010d56:	00ed      	lsls	r5, r5, #3
 8010d58:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010d5c:	b2ed      	uxtb	r5, r5
 8010d5e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8010d62:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010d66:	fb15 f504 	smulbb	r5, r5, r4
 8010d6a:	fa5f f888 	uxtb.w	r8, r8
 8010d6e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010d72:	fb08 5507 	mla	r5, r8, r7, r5
 8010d76:	fb1a fa04 	smulbb	sl, sl, r4
 8010d7a:	fa1f fc8c 	uxth.w	ip, ip
 8010d7e:	b2ad      	uxth	r5, r5
 8010d80:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010d84:	fb06 a607 	mla	r6, r6, r7, sl
 8010d88:	f10c 0401 	add.w	r4, ip, #1
 8010d8c:	f105 0a01 	add.w	sl, r5, #1
 8010d90:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010d94:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010d98:	b2b6      	uxth	r6, r6
 8010d9a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010d9e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010da2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010da6:	f106 0a01 	add.w	sl, r6, #1
 8010daa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010dae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010db2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010db6:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010dba:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8010dbe:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010dc0:	4421      	add	r1, r4
 8010dc2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010dc4:	f109 0901 	add.w	r9, r9, #1
 8010dc8:	4422      	add	r2, r4
 8010dca:	e79c      	b.n	8010d06 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8010dcc:	b007      	add	sp, #28
 8010dce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010dd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010dd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010dd6:	b085      	sub	sp, #20
 8010dd8:	468b      	mov	fp, r1
 8010dda:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010ddc:	9203      	str	r2, [sp, #12]
 8010dde:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8010de2:	6861      	ldr	r1, [r4, #4]
 8010de4:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8010de8:	fb01 2000 	mla	r0, r1, r0, r2
 8010dec:	6822      	ldr	r2, [r4, #0]
 8010dee:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010df2:	f8d8 2000 	ldr.w	r2, [r8]
 8010df6:	9200      	str	r2, [sp, #0]
 8010df8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8010dfc:	9201      	str	r2, [sp, #4]
 8010dfe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010e02:	f1bb 0f00 	cmp.w	fp, #0
 8010e06:	dc03      	bgt.n	8010e10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8010e08:	9a03      	ldr	r2, [sp, #12]
 8010e0a:	2a00      	cmp	r2, #0
 8010e0c:	f340 8146 	ble.w	801109c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8010e10:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010e12:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8010e16:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8010e1a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010e1e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010e20:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010e24:	2b00      	cmp	r3, #0
 8010e26:	dd0e      	ble.n	8010e46 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8010e28:	140c      	asrs	r4, r1, #16
 8010e2a:	d405      	bmi.n	8010e38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010e2c:	42bc      	cmp	r4, r7
 8010e2e:	da03      	bge.n	8010e38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010e30:	1414      	asrs	r4, r2, #16
 8010e32:	d401      	bmi.n	8010e38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010e34:	42b4      	cmp	r4, r6
 8010e36:	db07      	blt.n	8010e48 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8010e38:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8010e3a:	4421      	add	r1, r4
 8010e3c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8010e3e:	3b01      	subs	r3, #1
 8010e40:	4422      	add	r2, r4
 8010e42:	3002      	adds	r0, #2
 8010e44:	e7ee      	b.n	8010e24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8010e46:	d017      	beq.n	8010e78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8010e48:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010e4a:	1e5c      	subs	r4, r3, #1
 8010e4c:	fb05 1504 	mla	r5, r5, r4, r1
 8010e50:	142d      	asrs	r5, r5, #16
 8010e52:	d409      	bmi.n	8010e68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010e54:	42bd      	cmp	r5, r7
 8010e56:	da07      	bge.n	8010e68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010e58:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010e5a:	fb05 2404 	mla	r4, r5, r4, r2
 8010e5e:	1424      	asrs	r4, r4, #16
 8010e60:	d402      	bmi.n	8010e68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010e62:	42b4      	cmp	r4, r6
 8010e64:	f2c0 80b3 	blt.w	8010fce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8010e68:	2600      	movs	r6, #0
 8010e6a:	199c      	adds	r4, r3, r6
 8010e6c:	2c00      	cmp	r4, #0
 8010e6e:	dc3e      	bgt.n	8010eee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8010e70:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010e74:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010e78:	f1bb 0f00 	cmp.w	fp, #0
 8010e7c:	f340 810e 	ble.w	801109c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8010e80:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010e84:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010e88:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010e8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010e8e:	f1bb 0b01 	subs.w	fp, fp, #1
 8010e92:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010e96:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010e9a:	eeb0 6a62 	vmov.f32	s12, s5
 8010e9e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010ea2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010ea6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010eaa:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010eae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010eb2:	eeb0 6a43 	vmov.f32	s12, s6
 8010eb6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010eba:	ee12 2a90 	vmov	r2, s5
 8010ebe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010ec2:	fb92 f3f3 	sdiv	r3, r2, r3
 8010ec6:	ee13 2a10 	vmov	r2, s6
 8010eca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010ece:	9311      	str	r3, [sp, #68]	; 0x44
 8010ed0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010ed2:	fb92 f3f3 	sdiv	r3, r2, r3
 8010ed6:	9a03      	ldr	r2, [sp, #12]
 8010ed8:	9312      	str	r3, [sp, #72]	; 0x48
 8010eda:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010ede:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010ee0:	eeb0 3a67 	vmov.f32	s6, s15
 8010ee4:	bf08      	it	eq
 8010ee6:	4613      	moveq	r3, r2
 8010ee8:	eef0 2a47 	vmov.f32	s5, s14
 8010eec:	e789      	b.n	8010e02 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8010eee:	140f      	asrs	r7, r1, #16
 8010ef0:	d45f      	bmi.n	8010fb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010ef2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8010ef6:	42bd      	cmp	r5, r7
 8010ef8:	dd5b      	ble.n	8010fb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010efa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010efe:	d458      	bmi.n	8010fb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010f00:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8010f04:	4564      	cmp	r4, ip
 8010f06:	dd54      	ble.n	8010fb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010f08:	b22d      	sxth	r5, r5
 8010f0a:	fb0c 7505 	mla	r5, ip, r5, r7
 8010f0e:	9c01      	ldr	r4, [sp, #4]
 8010f10:	5d64      	ldrb	r4, [r4, r5]
 8010f12:	2cff      	cmp	r4, #255	; 0xff
 8010f14:	d053      	beq.n	8010fbe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8010f16:	2c00      	cmp	r4, #0
 8010f18:	d04b      	beq.n	8010fb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010f1a:	9f00      	ldr	r7, [sp, #0]
 8010f1c:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8010f20:	f06f 0501 	mvn.w	r5, #1
 8010f24:	4375      	muls	r5, r6
 8010f26:	9502      	str	r5, [sp, #8]
 8010f28:	5b45      	ldrh	r5, [r0, r5]
 8010f2a:	fa1f fc84 	uxth.w	ip, r4
 8010f2e:	122f      	asrs	r7, r5, #8
 8010f30:	43e4      	mvns	r4, r4
 8010f32:	b2e4      	uxtb	r4, r4
 8010f34:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8010f38:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010f3c:	fb17 f704 	smulbb	r7, r7, r4
 8010f40:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010f44:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8010f48:	00ed      	lsls	r5, r5, #3
 8010f4a:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8010f4e:	b2ed      	uxtb	r5, r5
 8010f50:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8010f54:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8010f58:	fb15 f504 	smulbb	r5, r5, r4
 8010f5c:	fa5f f989 	uxtb.w	r9, r9
 8010f60:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010f64:	fb09 550c 	mla	r5, r9, ip, r5
 8010f68:	fb1a fa04 	smulbb	sl, sl, r4
 8010f6c:	fa1f fe8e 	uxth.w	lr, lr
 8010f70:	b2ad      	uxth	r5, r5
 8010f72:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010f76:	fb07 a70c 	mla	r7, r7, ip, sl
 8010f7a:	f10e 0401 	add.w	r4, lr, #1
 8010f7e:	f105 0a01 	add.w	sl, r5, #1
 8010f82:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8010f86:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010f8a:	b2bf      	uxth	r7, r7
 8010f8c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010f90:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8010f94:	ea4e 0e0a 	orr.w	lr, lr, sl
 8010f98:	f107 0a01 	add.w	sl, r7, #1
 8010f9c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010fa0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010fa4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010fa8:	9c02      	ldr	r4, [sp, #8]
 8010faa:	ea4e 0e0a 	orr.w	lr, lr, sl
 8010fae:	f820 e004 	strh.w	lr, [r0, r4]
 8010fb2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8010fb4:	4421      	add	r1, r4
 8010fb6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8010fb8:	3e01      	subs	r6, #1
 8010fba:	4422      	add	r2, r4
 8010fbc:	e755      	b.n	8010e6a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010fbe:	9c00      	ldr	r4, [sp, #0]
 8010fc0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8010fc4:	f06f 0401 	mvn.w	r4, #1
 8010fc8:	4374      	muls	r4, r6
 8010fca:	5305      	strh	r5, [r0, r4]
 8010fcc:	e7f1      	b.n	8010fb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010fce:	f04f 0900 	mov.w	r9, #0
 8010fd2:	eba3 0409 	sub.w	r4, r3, r9
 8010fd6:	2c00      	cmp	r4, #0
 8010fd8:	f77f af4a 	ble.w	8010e70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010fdc:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8010fe0:	1414      	asrs	r4, r2, #16
 8010fe2:	140d      	asrs	r5, r1, #16
 8010fe4:	fb06 5504 	mla	r5, r6, r4, r5
 8010fe8:	9c01      	ldr	r4, [sp, #4]
 8010fea:	5d64      	ldrb	r4, [r4, r5]
 8010fec:	2cff      	cmp	r4, #255	; 0xff
 8010fee:	d04f      	beq.n	8011090 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8010ff0:	2c00      	cmp	r4, #0
 8010ff2:	d046      	beq.n	8011082 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8010ff4:	9e00      	ldr	r6, [sp, #0]
 8010ff6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8010ffa:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8010ffe:	b2a7      	uxth	r7, r4
 8011000:	122e      	asrs	r6, r5, #8
 8011002:	43e4      	mvns	r4, r4
 8011004:	b2e4      	uxtb	r4, r4
 8011006:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801100a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801100e:	fb16 f604 	smulbb	r6, r6, r4
 8011012:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011016:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801101a:	00ed      	lsls	r5, r5, #3
 801101c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011020:	b2ed      	uxtb	r5, r5
 8011022:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011026:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801102a:	fb15 f504 	smulbb	r5, r5, r4
 801102e:	fa5f fe8e 	uxtb.w	lr, lr
 8011032:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011036:	fb0e 5507 	mla	r5, lr, r7, r5
 801103a:	fb1a fa04 	smulbb	sl, sl, r4
 801103e:	fa1f fc8c 	uxth.w	ip, ip
 8011042:	b2ad      	uxth	r5, r5
 8011044:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011048:	fb06 a607 	mla	r6, r6, r7, sl
 801104c:	f10c 0401 	add.w	r4, ip, #1
 8011050:	f105 0a01 	add.w	sl, r5, #1
 8011054:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011058:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801105c:	b2b6      	uxth	r6, r6
 801105e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011062:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011066:	ea4c 0c0a 	orr.w	ip, ip, sl
 801106a:	f106 0a01 	add.w	sl, r6, #1
 801106e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011072:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011076:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801107a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801107e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8011082:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011084:	4421      	add	r1, r4
 8011086:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011088:	f109 0901 	add.w	r9, r9, #1
 801108c:	4422      	add	r2, r4
 801108e:	e7a0      	b.n	8010fd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8011090:	9c00      	ldr	r4, [sp, #0]
 8011092:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8011096:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801109a:	e7f2      	b.n	8011082 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801109c:	b005      	add	sp, #20
 801109e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080110a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80110a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80110a6:	b085      	sub	sp, #20
 80110a8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80110aa:	9203      	str	r2, [sp, #12]
 80110ac:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80110b0:	9201      	str	r2, [sp, #4]
 80110b2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80110b6:	9100      	str	r1, [sp, #0]
 80110b8:	6841      	ldr	r1, [r0, #4]
 80110ba:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80110be:	fb01 2404 	mla	r4, r1, r4, r2
 80110c2:	6802      	ldr	r2, [r0, #0]
 80110c4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80110c8:	f8de 2000 	ldr.w	r2, [lr]
 80110cc:	9202      	str	r2, [sp, #8]
 80110ce:	9a01      	ldr	r2, [sp, #4]
 80110d0:	43d6      	mvns	r6, r2
 80110d2:	b2f6      	uxtb	r6, r6
 80110d4:	9a00      	ldr	r2, [sp, #0]
 80110d6:	2a00      	cmp	r2, #0
 80110d8:	dc03      	bgt.n	80110e2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80110da:	9a03      	ldr	r2, [sp, #12]
 80110dc:	2a00      	cmp	r2, #0
 80110de:	f340 8124 	ble.w	801132a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80110e2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80110e4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80110e8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80110ec:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80110f0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80110f2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80110f6:	2b00      	cmp	r3, #0
 80110f8:	dd0e      	ble.n	8011118 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80110fa:	1408      	asrs	r0, r1, #16
 80110fc:	d405      	bmi.n	801110a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80110fe:	4560      	cmp	r0, ip
 8011100:	da03      	bge.n	801110a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011102:	1410      	asrs	r0, r2, #16
 8011104:	d401      	bmi.n	801110a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011106:	42b8      	cmp	r0, r7
 8011108:	db07      	blt.n	801111a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801110a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801110c:	4401      	add	r1, r0
 801110e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011110:	3b01      	subs	r3, #1
 8011112:	4402      	add	r2, r0
 8011114:	3402      	adds	r4, #2
 8011116:	e7ee      	b.n	80110f6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8011118:	d06e      	beq.n	80111f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801111a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801111c:	1e58      	subs	r0, r3, #1
 801111e:	fb05 1500 	mla	r5, r5, r0, r1
 8011122:	142d      	asrs	r5, r5, #16
 8011124:	d45c      	bmi.n	80111e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011126:	4565      	cmp	r5, ip
 8011128:	da5a      	bge.n	80111e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801112a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801112c:	fb05 2000 	mla	r0, r5, r0, r2
 8011130:	1400      	asrs	r0, r0, #16
 8011132:	d455      	bmi.n	80111e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011134:	42b8      	cmp	r0, r7
 8011136:	da53      	bge.n	80111e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011138:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801113c:	4699      	mov	r9, r3
 801113e:	46a2      	mov	sl, r4
 8011140:	f1b9 0f00 	cmp.w	r9, #0
 8011144:	dd54      	ble.n	80111f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011146:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801114a:	140d      	asrs	r5, r1, #16
 801114c:	1410      	asrs	r0, r2, #16
 801114e:	fb07 5000 	mla	r0, r7, r0, r5
 8011152:	9d02      	ldr	r5, [sp, #8]
 8011154:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8011158:	f8ba 5000 	ldrh.w	r5, [sl]
 801115c:	122f      	asrs	r7, r5, #8
 801115e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011162:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011166:	fb17 f706 	smulbb	r7, r7, r6
 801116a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801116e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011172:	00ed      	lsls	r5, r5, #3
 8011174:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8011178:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801117c:	10c7      	asrs	r7, r0, #3
 801117e:	b2ed      	uxtb	r5, r5
 8011180:	00c0      	lsls	r0, r0, #3
 8011182:	fb18 f806 	smulbb	r8, r8, r6
 8011186:	fb15 f506 	smulbb	r5, r5, r6
 801118a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801118e:	b2c0      	uxtb	r0, r0
 8011190:	fa1f fc8c 	uxth.w	ip, ip
 8011194:	fb07 870b 	mla	r7, r7, fp, r8
 8011198:	fb00 500b 	mla	r0, r0, fp, r5
 801119c:	b280      	uxth	r0, r0
 801119e:	b2bf      	uxth	r7, r7
 80111a0:	f10c 0501 	add.w	r5, ip, #1
 80111a4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80111a8:	f107 0801 	add.w	r8, r7, #1
 80111ac:	1c45      	adds	r5, r0, #1
 80111ae:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80111b2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80111b6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80111b8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80111bc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80111c0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80111c4:	ea4c 0c05 	orr.w	ip, ip, r5
 80111c8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80111cc:	4401      	add	r1, r0
 80111ce:	9812      	ldr	r0, [sp, #72]	; 0x48
 80111d0:	ea4c 0c08 	orr.w	ip, ip, r8
 80111d4:	f82a cb02 	strh.w	ip, [sl], #2
 80111d8:	4402      	add	r2, r0
 80111da:	f109 39ff 	add.w	r9, r9, #4294967295
 80111de:	e7af      	b.n	8011140 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80111e0:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80111e4:	f04f 0800 	mov.w	r8, #0
 80111e8:	eb03 0008 	add.w	r0, r3, r8
 80111ec:	2800      	cmp	r0, #0
 80111ee:	dc41      	bgt.n	8011274 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80111f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80111f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80111f8:	9b00      	ldr	r3, [sp, #0]
 80111fa:	2b00      	cmp	r3, #0
 80111fc:	f340 8095 	ble.w	801132a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8011200:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011204:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011208:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801120c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801120e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011212:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011216:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801121a:	eef0 6a62 	vmov.f32	s13, s5
 801121e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011222:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011226:	ee77 2a62 	vsub.f32	s5, s14, s5
 801122a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801122e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011232:	eef0 6a43 	vmov.f32	s13, s6
 8011236:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801123a:	ee12 2a90 	vmov	r2, s5
 801123e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011242:	fb92 f3f3 	sdiv	r3, r2, r3
 8011246:	ee13 2a10 	vmov	r2, s6
 801124a:	9311      	str	r3, [sp, #68]	; 0x44
 801124c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801124e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011252:	9312      	str	r3, [sp, #72]	; 0x48
 8011254:	9b00      	ldr	r3, [sp, #0]
 8011256:	9a03      	ldr	r2, [sp, #12]
 8011258:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801125c:	3b01      	subs	r3, #1
 801125e:	9300      	str	r3, [sp, #0]
 8011260:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8011264:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011266:	eeb0 3a67 	vmov.f32	s6, s15
 801126a:	bf08      	it	eq
 801126c:	4613      	moveq	r3, r2
 801126e:	eef0 2a47 	vmov.f32	s5, s14
 8011272:	e72f      	b.n	80110d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8011274:	140f      	asrs	r7, r1, #16
 8011276:	d451      	bmi.n	801131c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011278:	f8de 5008 	ldr.w	r5, [lr, #8]
 801127c:	42bd      	cmp	r5, r7
 801127e:	dd4d      	ble.n	801131c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011280:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011284:	d44a      	bmi.n	801131c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011286:	f8de 000c 	ldr.w	r0, [lr, #12]
 801128a:	4560      	cmp	r0, ip
 801128c:	dd46      	ble.n	801131c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801128e:	b22d      	sxth	r5, r5
 8011290:	fb0c 7505 	mla	r5, ip, r5, r7
 8011294:	9802      	ldr	r0, [sp, #8]
 8011296:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801129a:	f06f 0501 	mvn.w	r5, #1
 801129e:	fb05 fb08 	mul.w	fp, r5, r8
 80112a2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80112a6:	f834 500b 	ldrh.w	r5, [r4, fp]
 80112aa:	122f      	asrs	r7, r5, #8
 80112ac:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80112b0:	fb17 f706 	smulbb	r7, r7, r6
 80112b4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80112b8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80112bc:	00ed      	lsls	r5, r5, #3
 80112be:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80112c2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80112c6:	10c7      	asrs	r7, r0, #3
 80112c8:	b2ed      	uxtb	r5, r5
 80112ca:	00c0      	lsls	r0, r0, #3
 80112cc:	fb19 f906 	smulbb	r9, r9, r6
 80112d0:	fb15 f506 	smulbb	r5, r5, r6
 80112d4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80112d8:	b2c0      	uxtb	r0, r0
 80112da:	fa1f fc8c 	uxth.w	ip, ip
 80112de:	fb07 970a 	mla	r7, r7, sl, r9
 80112e2:	fb00 500a 	mla	r0, r0, sl, r5
 80112e6:	b2bf      	uxth	r7, r7
 80112e8:	b280      	uxth	r0, r0
 80112ea:	f10c 0501 	add.w	r5, ip, #1
 80112ee:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80112f2:	f107 0901 	add.w	r9, r7, #1
 80112f6:	1c45      	adds	r5, r0, #1
 80112f8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80112fc:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011300:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011304:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011308:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801130c:	ea4c 0c05 	orr.w	ip, ip, r5
 8011310:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011314:	ea4c 0c09 	orr.w	ip, ip, r9
 8011318:	f824 c00b 	strh.w	ip, [r4, fp]
 801131c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801131e:	4401      	add	r1, r0
 8011320:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011322:	f108 38ff 	add.w	r8, r8, #4294967295
 8011326:	4402      	add	r2, r0
 8011328:	e75e      	b.n	80111e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801132a:	b005      	add	sp, #20
 801132c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011330 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011330:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011334:	b085      	sub	sp, #20
 8011336:	4693      	mov	fp, r2
 8011338:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801133a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801133c:	6870      	ldr	r0, [r6, #4]
 801133e:	9101      	str	r1, [sp, #4]
 8011340:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011344:	fb00 2404 	mla	r4, r0, r4, r2
 8011348:	6832      	ldr	r2, [r6, #0]
 801134a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801134e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011352:	682a      	ldr	r2, [r5, #0]
 8011354:	9202      	str	r2, [sp, #8]
 8011356:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801135a:	9a01      	ldr	r2, [sp, #4]
 801135c:	2a00      	cmp	r2, #0
 801135e:	dc03      	bgt.n	8011368 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011360:	f1bb 0f00 	cmp.w	fp, #0
 8011364:	f340 809a 	ble.w	801149c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8011368:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801136a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801136e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011372:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011376:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011378:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801137c:	2b00      	cmp	r3, #0
 801137e:	dd0c      	ble.n	801139a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8011380:	1406      	asrs	r6, r0, #16
 8011382:	d405      	bmi.n	8011390 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011384:	454e      	cmp	r6, r9
 8011386:	da03      	bge.n	8011390 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011388:	1416      	asrs	r6, r2, #16
 801138a:	d401      	bmi.n	8011390 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801138c:	4546      	cmp	r6, r8
 801138e:	db05      	blt.n	801139c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011390:	4470      	add	r0, lr
 8011392:	4462      	add	r2, ip
 8011394:	3b01      	subs	r3, #1
 8011396:	3402      	adds	r4, #2
 8011398:	e7f0      	b.n	801137c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801139a:	d00f      	beq.n	80113bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801139c:	1e5e      	subs	r6, r3, #1
 801139e:	fb0e 0706 	mla	r7, lr, r6, r0
 80113a2:	143f      	asrs	r7, r7, #16
 80113a4:	d541      	bpl.n	801142a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80113a6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80113aa:	4698      	mov	r8, r3
 80113ac:	9603      	str	r6, [sp, #12]
 80113ae:	f1b8 0f00 	cmp.w	r8, #0
 80113b2:	dc56      	bgt.n	8011462 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80113b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80113b8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80113bc:	9b01      	ldr	r3, [sp, #4]
 80113be:	2b00      	cmp	r3, #0
 80113c0:	dd6c      	ble.n	801149c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80113c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80113c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80113ca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80113ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80113d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80113d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80113d8:	eeb0 6a62 	vmov.f32	s12, s5
 80113dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80113e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80113e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80113e8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80113ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80113f0:	eeb0 6a43 	vmov.f32	s12, s6
 80113f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80113f8:	ee12 2a90 	vmov	r2, s5
 80113fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011400:	fb92 fef3 	sdiv	lr, r2, r3
 8011404:	ee13 2a10 	vmov	r2, s6
 8011408:	fb92 fcf3 	sdiv	ip, r2, r3
 801140c:	9b01      	ldr	r3, [sp, #4]
 801140e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011412:	3b01      	subs	r3, #1
 8011414:	9301      	str	r3, [sp, #4]
 8011416:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801141a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801141c:	eeb0 3a67 	vmov.f32	s6, s15
 8011420:	bf08      	it	eq
 8011422:	465b      	moveq	r3, fp
 8011424:	eef0 2a47 	vmov.f32	s5, s14
 8011428:	e797      	b.n	801135a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801142a:	454f      	cmp	r7, r9
 801142c:	dabb      	bge.n	80113a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801142e:	fb0c 2606 	mla	r6, ip, r6, r2
 8011432:	1436      	asrs	r6, r6, #16
 8011434:	d4b7      	bmi.n	80113a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011436:	4546      	cmp	r6, r8
 8011438:	dab5      	bge.n	80113a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801143a:	461e      	mov	r6, r3
 801143c:	46a0      	mov	r8, r4
 801143e:	2e00      	cmp	r6, #0
 8011440:	ddb8      	ble.n	80113b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011442:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8011446:	9902      	ldr	r1, [sp, #8]
 8011448:	1417      	asrs	r7, r2, #16
 801144a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801144e:	fb0a 9707 	mla	r7, sl, r7, r9
 8011452:	4470      	add	r0, lr
 8011454:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8011458:	f828 7b02 	strh.w	r7, [r8], #2
 801145c:	4462      	add	r2, ip
 801145e:	3e01      	subs	r6, #1
 8011460:	e7ed      	b.n	801143e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8011462:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011466:	d414      	bmi.n	8011492 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011468:	68ae      	ldr	r6, [r5, #8]
 801146a:	454e      	cmp	r6, r9
 801146c:	dd11      	ble.n	8011492 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801146e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8011472:	d40e      	bmi.n	8011492 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011474:	68ef      	ldr	r7, [r5, #12]
 8011476:	4557      	cmp	r7, sl
 8011478:	dd0b      	ble.n	8011492 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801147a:	b236      	sxth	r6, r6
 801147c:	fb0a 9606 	mla	r6, sl, r6, r9
 8011480:	9f02      	ldr	r7, [sp, #8]
 8011482:	f06f 0101 	mvn.w	r1, #1
 8011486:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801148a:	fb01 f608 	mul.w	r6, r1, r8
 801148e:	9903      	ldr	r1, [sp, #12]
 8011490:	538f      	strh	r7, [r1, r6]
 8011492:	4470      	add	r0, lr
 8011494:	4462      	add	r2, ip
 8011496:	f108 38ff 	add.w	r8, r8, #4294967295
 801149a:	e788      	b.n	80113ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801149c:	b005      	add	sp, #20
 801149e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080114a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80114a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80114a6:	b085      	sub	sp, #20
 80114a8:	468b      	mov	fp, r1
 80114aa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80114ac:	9202      	str	r2, [sp, #8]
 80114ae:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80114b2:	9203      	str	r2, [sp, #12]
 80114b4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80114b8:	6841      	ldr	r1, [r0, #4]
 80114ba:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80114be:	fb01 2404 	mla	r4, r1, r4, r2
 80114c2:	6802      	ldr	r2, [r0, #0]
 80114c4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80114c8:	f8d8 2000 	ldr.w	r2, [r8]
 80114cc:	9200      	str	r2, [sp, #0]
 80114ce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80114d2:	f1bb 0f00 	cmp.w	fp, #0
 80114d6:	dc03      	bgt.n	80114e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80114d8:	9a02      	ldr	r2, [sp, #8]
 80114da:	2a00      	cmp	r2, #0
 80114dc:	f340 8134 	ble.w	8011748 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80114e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80114e2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80114e6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80114ea:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80114ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80114f0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80114f4:	2b00      	cmp	r3, #0
 80114f6:	dd0e      	ble.n	8011516 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80114f8:	1402      	asrs	r2, r0, #16
 80114fa:	d405      	bmi.n	8011508 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80114fc:	42ba      	cmp	r2, r7
 80114fe:	da03      	bge.n	8011508 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011500:	140a      	asrs	r2, r1, #16
 8011502:	d401      	bmi.n	8011508 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011504:	42b2      	cmp	r2, r6
 8011506:	db07      	blt.n	8011518 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011508:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801150a:	4410      	add	r0, r2
 801150c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801150e:	3b01      	subs	r3, #1
 8011510:	4411      	add	r1, r2
 8011512:	3402      	adds	r4, #2
 8011514:	e7ee      	b.n	80114f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011516:	d019      	beq.n	801154c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8011518:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801151a:	1e5a      	subs	r2, r3, #1
 801151c:	fb05 0502 	mla	r5, r5, r2, r0
 8011520:	142d      	asrs	r5, r5, #16
 8011522:	d409      	bmi.n	8011538 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011524:	42bd      	cmp	r5, r7
 8011526:	da07      	bge.n	8011538 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011528:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801152a:	fb05 1202 	mla	r2, r5, r2, r1
 801152e:	1412      	asrs	r2, r2, #16
 8011530:	d402      	bmi.n	8011538 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011532:	42b2      	cmp	r2, r6
 8011534:	f2c0 80aa 	blt.w	801168c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8011538:	f04f 0c00 	mov.w	ip, #0
 801153c:	eb03 020c 	add.w	r2, r3, ip
 8011540:	2a00      	cmp	r2, #0
 8011542:	dc3e      	bgt.n	80115c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8011544:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011548:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801154c:	f1bb 0f00 	cmp.w	fp, #0
 8011550:	f340 80fa 	ble.w	8011748 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8011554:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011558:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801155c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011560:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011562:	f1bb 0b01 	subs.w	fp, fp, #1
 8011566:	ee31 1a05 	vadd.f32	s2, s2, s10
 801156a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801156e:	eeb0 6a62 	vmov.f32	s12, s5
 8011572:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011576:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801157a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801157e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011582:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011586:	eeb0 6a43 	vmov.f32	s12, s6
 801158a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801158e:	ee12 2a90 	vmov	r2, s5
 8011592:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011596:	fb92 f3f3 	sdiv	r3, r2, r3
 801159a:	ee13 2a10 	vmov	r2, s6
 801159e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80115a2:	9311      	str	r3, [sp, #68]	; 0x44
 80115a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80115a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80115aa:	9a02      	ldr	r2, [sp, #8]
 80115ac:	9312      	str	r3, [sp, #72]	; 0x48
 80115ae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80115b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80115b4:	eeb0 3a67 	vmov.f32	s6, s15
 80115b8:	bf08      	it	eq
 80115ba:	4613      	moveq	r3, r2
 80115bc:	eef0 2a47 	vmov.f32	s5, s14
 80115c0:	e787      	b.n	80114d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80115c2:	1406      	asrs	r6, r0, #16
 80115c4:	d45b      	bmi.n	801167e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80115c6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80115ca:	42b5      	cmp	r5, r6
 80115cc:	dd57      	ble.n	801167e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80115ce:	140f      	asrs	r7, r1, #16
 80115d0:	d455      	bmi.n	801167e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80115d2:	f8d8 200c 	ldr.w	r2, [r8, #12]
 80115d6:	42ba      	cmp	r2, r7
 80115d8:	dd51      	ble.n	801167e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80115da:	b22d      	sxth	r5, r5
 80115dc:	fb07 6505 	mla	r5, r7, r5, r6
 80115e0:	9a00      	ldr	r2, [sp, #0]
 80115e2:	f852 5025 	ldr.w	r5, [r2, r5, lsl #2]
 80115e6:	0e2e      	lsrs	r6, r5, #24
 80115e8:	d049      	beq.n	801167e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80115ea:	f06f 0201 	mvn.w	r2, #1
 80115ee:	fb02 f20c 	mul.w	r2, r2, ip
 80115f2:	9201      	str	r2, [sp, #4]
 80115f4:	f834 e002 	ldrh.w	lr, [r4, r2]
 80115f8:	9a03      	ldr	r2, [sp, #12]
 80115fa:	4356      	muls	r6, r2
 80115fc:	1c72      	adds	r2, r6, #1
 80115fe:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011602:	1212      	asrs	r2, r2, #8
 8011604:	fa1f f982 	uxth.w	r9, r2
 8011608:	ea4f 272e 	mov.w	r7, lr, asr #8
 801160c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011610:	43d2      	mvns	r2, r2
 8011612:	b2d2      	uxtb	r2, r2
 8011614:	fb16 f609 	smulbb	r6, r6, r9
 8011618:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801161c:	fb07 6702 	mla	r7, r7, r2, r6
 8011620:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011624:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011628:	b2ed      	uxtb	r5, r5
 801162a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801162e:	fa5f fe8e 	uxtb.w	lr, lr
 8011632:	fb15 f509 	smulbb	r5, r5, r9
 8011636:	fb0e 5502 	mla	r5, lr, r2, r5
 801163a:	b2bf      	uxth	r7, r7
 801163c:	fb1a fa09 	smulbb	sl, sl, r9
 8011640:	b2ad      	uxth	r5, r5
 8011642:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011646:	fb06 a602 	mla	r6, r6, r2, sl
 801164a:	1c7a      	adds	r2, r7, #1
 801164c:	f105 0a01 	add.w	sl, r5, #1
 8011650:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011654:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011658:	b2b6      	uxth	r6, r6
 801165a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801165e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011662:	ea47 070a 	orr.w	r7, r7, sl
 8011666:	f106 0a01 	add.w	sl, r6, #1
 801166a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801166e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011672:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011676:	9a01      	ldr	r2, [sp, #4]
 8011678:	ea47 070a 	orr.w	r7, r7, sl
 801167c:	52a7      	strh	r7, [r4, r2]
 801167e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011680:	4410      	add	r0, r2
 8011682:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011684:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011688:	4411      	add	r1, r2
 801168a:	e757      	b.n	801153c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801168c:	f04f 0e00 	mov.w	lr, #0
 8011690:	eba3 020e 	sub.w	r2, r3, lr
 8011694:	2a00      	cmp	r2, #0
 8011696:	f77f af55 	ble.w	8011544 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801169a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801169e:	1405      	asrs	r5, r0, #16
 80116a0:	140a      	asrs	r2, r1, #16
 80116a2:	fb06 5202 	mla	r2, r6, r2, r5
 80116a6:	9d00      	ldr	r5, [sp, #0]
 80116a8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80116ac:	0e2e      	lsrs	r6, r5, #24
 80116ae:	d044      	beq.n	801173a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80116b0:	9a03      	ldr	r2, [sp, #12]
 80116b2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80116b6:	4356      	muls	r6, r2
 80116b8:	1c72      	adds	r2, r6, #1
 80116ba:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80116be:	1212      	asrs	r2, r2, #8
 80116c0:	fa1f f982 	uxth.w	r9, r2
 80116c4:	ea4f 272c 	mov.w	r7, ip, asr #8
 80116c8:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80116cc:	43d2      	mvns	r2, r2
 80116ce:	b2d2      	uxtb	r2, r2
 80116d0:	fb16 f609 	smulbb	r6, r6, r9
 80116d4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80116d8:	fb07 6702 	mla	r7, r7, r2, r6
 80116dc:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80116e0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80116e4:	b2ed      	uxtb	r5, r5
 80116e6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80116ea:	fa5f fc8c 	uxtb.w	ip, ip
 80116ee:	fb15 f509 	smulbb	r5, r5, r9
 80116f2:	fb0c 5502 	mla	r5, ip, r2, r5
 80116f6:	b2bf      	uxth	r7, r7
 80116f8:	fb1a fa09 	smulbb	sl, sl, r9
 80116fc:	b2ad      	uxth	r5, r5
 80116fe:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011702:	fb06 a602 	mla	r6, r6, r2, sl
 8011706:	1c7a      	adds	r2, r7, #1
 8011708:	f105 0a01 	add.w	sl, r5, #1
 801170c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011710:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011714:	b2b6      	uxth	r6, r6
 8011716:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801171a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801171e:	ea47 070a 	orr.w	r7, r7, sl
 8011722:	f106 0a01 	add.w	sl, r6, #1
 8011726:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801172a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801172e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011732:	ea47 070a 	orr.w	r7, r7, sl
 8011736:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801173a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801173c:	4410      	add	r0, r2
 801173e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011740:	f10e 0e01 	add.w	lr, lr, #1
 8011744:	4411      	add	r1, r2
 8011746:	e7a3      	b.n	8011690 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8011748:	b005      	add	sp, #20
 801174a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08011750 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011754:	b085      	sub	sp, #20
 8011756:	468b      	mov	fp, r1
 8011758:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801175a:	9203      	str	r2, [sp, #12]
 801175c:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8011760:	6861      	ldr	r1, [r4, #4]
 8011762:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
 8011766:	fb01 2000 	mla	r0, r1, r0, r2
 801176a:	6822      	ldr	r2, [r4, #0]
 801176c:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8011770:	f8d9 2000 	ldr.w	r2, [r9]
 8011774:	9200      	str	r2, [sp, #0]
 8011776:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801177a:	f1bb 0f00 	cmp.w	fp, #0
 801177e:	dc03      	bgt.n	8011788 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011780:	9a03      	ldr	r2, [sp, #12]
 8011782:	2a00      	cmp	r2, #0
 8011784:	f340 8154 	ble.w	8011a30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8011788:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801178a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801178e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8011792:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011796:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011798:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801179c:	2b00      	cmp	r3, #0
 801179e:	dd0e      	ble.n	80117be <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80117a0:	140c      	asrs	r4, r1, #16
 80117a2:	d405      	bmi.n	80117b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80117a4:	42bc      	cmp	r4, r7
 80117a6:	da03      	bge.n	80117b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80117a8:	1414      	asrs	r4, r2, #16
 80117aa:	d401      	bmi.n	80117b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80117ac:	42b4      	cmp	r4, r6
 80117ae:	db07      	blt.n	80117c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80117b0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80117b2:	4421      	add	r1, r4
 80117b4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80117b6:	3b01      	subs	r3, #1
 80117b8:	4422      	add	r2, r4
 80117ba:	3002      	adds	r0, #2
 80117bc:	e7ee      	b.n	801179c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80117be:	d017      	beq.n	80117f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80117c0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80117c2:	1e5c      	subs	r4, r3, #1
 80117c4:	fb05 1504 	mla	r5, r5, r4, r1
 80117c8:	142d      	asrs	r5, r5, #16
 80117ca:	d409      	bmi.n	80117e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80117cc:	42bd      	cmp	r5, r7
 80117ce:	da07      	bge.n	80117e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80117d0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80117d2:	fb05 2404 	mla	r4, r5, r4, r2
 80117d6:	1424      	asrs	r4, r4, #16
 80117d8:	d402      	bmi.n	80117e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80117da:	42b4      	cmp	r4, r6
 80117dc:	f2c0 80c0 	blt.w	8011960 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80117e0:	2700      	movs	r7, #0
 80117e2:	19dc      	adds	r4, r3, r7
 80117e4:	2c00      	cmp	r4, #0
 80117e6:	dc3e      	bgt.n	8011866 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80117e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80117ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80117f0:	f1bb 0f00 	cmp.w	fp, #0
 80117f4:	f340 811c 	ble.w	8011a30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80117f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80117fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011800:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011804:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011806:	f1bb 0b01 	subs.w	fp, fp, #1
 801180a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801180e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011812:	eeb0 6a62 	vmov.f32	s12, s5
 8011816:	ee61 7a27 	vmul.f32	s15, s2, s15
 801181a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801181e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011822:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011826:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801182a:	eeb0 6a43 	vmov.f32	s12, s6
 801182e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011832:	ee12 2a90 	vmov	r2, s5
 8011836:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801183a:	fb92 f3f3 	sdiv	r3, r2, r3
 801183e:	ee13 2a10 	vmov	r2, s6
 8011842:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011846:	9311      	str	r3, [sp, #68]	; 0x44
 8011848:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801184a:	fb92 f3f3 	sdiv	r3, r2, r3
 801184e:	9a03      	ldr	r2, [sp, #12]
 8011850:	9312      	str	r3, [sp, #72]	; 0x48
 8011852:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011856:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011858:	eeb0 3a67 	vmov.f32	s6, s15
 801185c:	bf08      	it	eq
 801185e:	4613      	moveq	r3, r2
 8011860:	eef0 2a47 	vmov.f32	s5, s14
 8011864:	e789      	b.n	801177a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8011866:	140e      	asrs	r6, r1, #16
 8011868:	d461      	bmi.n	801192e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 801186a:	f8d9 5008 	ldr.w	r5, [r9, #8]
 801186e:	42b5      	cmp	r5, r6
 8011870:	dd5d      	ble.n	801192e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8011872:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011876:	d45a      	bmi.n	801192e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8011878:	f8d9 400c 	ldr.w	r4, [r9, #12]
 801187c:	4564      	cmp	r4, ip
 801187e:	dd56      	ble.n	801192e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8011880:	b22d      	sxth	r5, r5
 8011882:	fb0c 6505 	mla	r5, ip, r5, r6
 8011886:	9c00      	ldr	r4, [sp, #0]
 8011888:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]
 801188c:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 8011890:	d04d      	beq.n	801192e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8011892:	0a26      	lsrs	r6, r4, #8
 8011894:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8011898:	fa5f f58e 	uxtb.w	r5, lr
 801189c:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 80118a0:	9601      	str	r6, [sp, #4]
 80118a2:	d04a      	beq.n	801193a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80118a4:	f06f 0601 	mvn.w	r6, #1
 80118a8:	437e      	muls	r6, r7
 80118aa:	fa1f fa85 	uxth.w	sl, r5
 80118ae:	f830 8006 	ldrh.w	r8, [r0, r6]
 80118b2:	9602      	str	r6, [sp, #8]
 80118b4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80118b8:	43ed      	mvns	r5, r5
 80118ba:	fa5f fc8c 	uxtb.w	ip, ip
 80118be:	b2ed      	uxtb	r5, r5
 80118c0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80118c4:	fb1c fc0a 	smulbb	ip, ip, sl
 80118c8:	fb0e cc05 	mla	ip, lr, r5, ip
 80118cc:	b2e4      	uxtb	r4, r4
 80118ce:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 80118d2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80118d6:	f89d 6004 	ldrb.w	r6, [sp, #4]
 80118da:	fa5f f888 	uxtb.w	r8, r8
 80118de:	fb14 f40a 	smulbb	r4, r4, sl
 80118e2:	fb08 4405 	mla	r4, r8, r5, r4
 80118e6:	b2a4      	uxth	r4, r4
 80118e8:	fa1f fc8c 	uxth.w	ip, ip
 80118ec:	fb16 f60a 	smulbb	r6, r6, sl
 80118f0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80118f4:	fb0e 6e05 	mla	lr, lr, r5, r6
 80118f8:	1c66      	adds	r6, r4, #1
 80118fa:	f10c 0501 	add.w	r5, ip, #1
 80118fe:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011902:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011906:	fa1f fe8e 	uxth.w	lr, lr
 801190a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801190e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011912:	ea4c 0c06 	orr.w	ip, ip, r6
 8011916:	f10e 0601 	add.w	r6, lr, #1
 801191a:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 801191e:	0976      	lsrs	r6, r6, #5
 8011920:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011924:	9c02      	ldr	r4, [sp, #8]
 8011926:	ea4c 0c06 	orr.w	ip, ip, r6
 801192a:	f820 c004 	strh.w	ip, [r0, r4]
 801192e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011930:	4421      	add	r1, r4
 8011932:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011934:	3f01      	subs	r7, #1
 8011936:	4422      	add	r2, r4
 8011938:	e753      	b.n	80117e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801193a:	4e3f      	ldr	r6, [pc, #252]	; (8011a38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
 801193c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011940:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 8011944:	ea4c 0c04 	orr.w	ip, ip, r4
 8011948:	9c01      	ldr	r4, [sp, #4]
 801194a:	f06f 0501 	mvn.w	r5, #1
 801194e:	00e6      	lsls	r6, r4, #3
 8011950:	437d      	muls	r5, r7
 8011952:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8011956:	ea4c 0c04 	orr.w	ip, ip, r4
 801195a:	f820 c005 	strh.w	ip, [r0, r5]
 801195e:	e7e6      	b.n	801192e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8011960:	f04f 0800 	mov.w	r8, #0
 8011964:	eba3 0408 	sub.w	r4, r3, r8
 8011968:	2c00      	cmp	r4, #0
 801196a:	f77f af3d 	ble.w	80117e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801196e:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8011972:	140d      	asrs	r5, r1, #16
 8011974:	1414      	asrs	r4, r2, #16
 8011976:	fb06 5404 	mla	r4, r6, r4, r5
 801197a:	9d00      	ldr	r5, [sp, #0]
 801197c:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8011980:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8011984:	d042      	beq.n	8011a0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8011986:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801198a:	fa5f f58c 	uxtb.w	r5, ip
 801198e:	ea4f 4714 	mov.w	r7, r4, lsr #16
 8011992:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8011996:	d040      	beq.n	8011a1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8011998:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 801199c:	fa1f fa85 	uxth.w	sl, r5
 80119a0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80119a4:	43ed      	mvns	r5, r5
 80119a6:	b2ff      	uxtb	r7, r7
 80119a8:	b2ed      	uxtb	r5, r5
 80119aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80119ae:	fb17 f70a 	smulbb	r7, r7, sl
 80119b2:	fb0c 7705 	mla	r7, ip, r5, r7
 80119b6:	b2e4      	uxtb	r4, r4
 80119b8:	ea4f 0cee 	mov.w	ip, lr, asr #3
 80119bc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80119c0:	fa5f fe8e 	uxtb.w	lr, lr
 80119c4:	fb14 f40a 	smulbb	r4, r4, sl
 80119c8:	fb0e 4405 	mla	r4, lr, r5, r4
 80119cc:	b2f6      	uxtb	r6, r6
 80119ce:	b2bf      	uxth	r7, r7
 80119d0:	fb16 f60a 	smulbb	r6, r6, sl
 80119d4:	b2a4      	uxth	r4, r4
 80119d6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80119da:	fb0c 6c05 	mla	ip, ip, r5, r6
 80119de:	1c7d      	adds	r5, r7, #1
 80119e0:	1c66      	adds	r6, r4, #1
 80119e2:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 80119e6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80119ea:	fa1f fc8c 	uxth.w	ip, ip
 80119ee:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80119f2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80119f6:	4337      	orrs	r7, r6
 80119f8:	f10c 0601 	add.w	r6, ip, #1
 80119fc:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011a00:	0976      	lsrs	r6, r6, #5
 8011a02:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011a06:	4337      	orrs	r7, r6
 8011a08:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 8011a0c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011a0e:	4421      	add	r1, r4
 8011a10:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011a12:	f108 0801 	add.w	r8, r8, #1
 8011a16:	4422      	add	r2, r4
 8011a18:	e7a4      	b.n	8011964 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8011a1a:	4d07      	ldr	r5, [pc, #28]	; (8011a38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
 8011a1c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011a20:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 8011a24:	00f6      	lsls	r6, r6, #3
 8011a26:	4327      	orrs	r7, r4
 8011a28:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8011a2c:	4327      	orrs	r7, r4
 8011a2e:	e7eb      	b.n	8011a08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b8>
 8011a30:	b005      	add	sp, #20
 8011a32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a36:	bf00      	nop
 8011a38:	fffff800 	.word	0xfffff800

08011a3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a40:	b087      	sub	sp, #28
 8011a42:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011a46:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011a48:	9204      	str	r2, [sp, #16]
 8011a4a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011a4e:	9205      	str	r2, [sp, #20]
 8011a50:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011a54:	9101      	str	r1, [sp, #4]
 8011a56:	6841      	ldr	r1, [r0, #4]
 8011a58:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8011a5c:	fb01 2404 	mla	r4, r1, r4, r2
 8011a60:	6802      	ldr	r2, [r0, #0]
 8011a62:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011a66:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8011a6a:	3201      	adds	r2, #1
 8011a6c:	f022 0201 	bic.w	r2, r2, #1
 8011a70:	9202      	str	r2, [sp, #8]
 8011a72:	f8d8 2000 	ldr.w	r2, [r8]
 8011a76:	9203      	str	r2, [sp, #12]
 8011a78:	9a01      	ldr	r2, [sp, #4]
 8011a7a:	2a00      	cmp	r2, #0
 8011a7c:	dc03      	bgt.n	8011a86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8011a7e:	9a04      	ldr	r2, [sp, #16]
 8011a80:	2a00      	cmp	r2, #0
 8011a82:	f340 814d 	ble.w	8011d20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8011a86:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011a88:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011a8c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011a90:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011a94:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011a96:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011a9a:	2b00      	cmp	r3, #0
 8011a9c:	dd0e      	ble.n	8011abc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8011a9e:	1402      	asrs	r2, r0, #16
 8011aa0:	d405      	bmi.n	8011aae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011aa2:	42ba      	cmp	r2, r7
 8011aa4:	da03      	bge.n	8011aae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011aa6:	140a      	asrs	r2, r1, #16
 8011aa8:	d401      	bmi.n	8011aae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011aaa:	42b2      	cmp	r2, r6
 8011aac:	db07      	blt.n	8011abe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8011aae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011ab0:	4410      	add	r0, r2
 8011ab2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011ab4:	3b01      	subs	r3, #1
 8011ab6:	4411      	add	r1, r2
 8011ab8:	3402      	adds	r4, #2
 8011aba:	e7ee      	b.n	8011a9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8011abc:	d019      	beq.n	8011af2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8011abe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011ac0:	1e5a      	subs	r2, r3, #1
 8011ac2:	fb05 0502 	mla	r5, r5, r2, r0
 8011ac6:	142d      	asrs	r5, r5, #16
 8011ac8:	d409      	bmi.n	8011ade <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011aca:	42bd      	cmp	r5, r7
 8011acc:	da07      	bge.n	8011ade <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011ace:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011ad0:	fb05 1202 	mla	r2, r5, r2, r1
 8011ad4:	1412      	asrs	r2, r2, #16
 8011ad6:	d402      	bmi.n	8011ade <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011ad8:	42b2      	cmp	r2, r6
 8011ada:	f2c0 80b7 	blt.w	8011c4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8011ade:	f04f 0c00 	mov.w	ip, #0
 8011ae2:	eb03 020c 	add.w	r2, r3, ip
 8011ae6:	2a00      	cmp	r2, #0
 8011ae8:	dc3f      	bgt.n	8011b6a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 8011aea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011aee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011af2:	9b01      	ldr	r3, [sp, #4]
 8011af4:	2b00      	cmp	r3, #0
 8011af6:	f340 8113 	ble.w	8011d20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8011afa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011afe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011b02:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011b06:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011b08:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011b0c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011b10:	eeb0 6a62 	vmov.f32	s12, s5
 8011b14:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011b18:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011b1c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011b20:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011b24:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011b28:	eeb0 6a43 	vmov.f32	s12, s6
 8011b2c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011b30:	ee12 2a90 	vmov	r2, s5
 8011b34:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011b38:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b3c:	ee13 2a10 	vmov	r2, s6
 8011b40:	9313      	str	r3, [sp, #76]	; 0x4c
 8011b42:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011b44:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b48:	9314      	str	r3, [sp, #80]	; 0x50
 8011b4a:	9b01      	ldr	r3, [sp, #4]
 8011b4c:	9a04      	ldr	r2, [sp, #16]
 8011b4e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011b52:	3b01      	subs	r3, #1
 8011b54:	9301      	str	r3, [sp, #4]
 8011b56:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011b5a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011b5c:	eeb0 3a67 	vmov.f32	s6, s15
 8011b60:	bf08      	it	eq
 8011b62:	4613      	moveq	r3, r2
 8011b64:	eef0 2a47 	vmov.f32	s5, s14
 8011b68:	e786      	b.n	8011a78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011b6a:	1405      	asrs	r5, r0, #16
 8011b6c:	d467      	bmi.n	8011c3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8011b6e:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8011b72:	42aa      	cmp	r2, r5
 8011b74:	dd63      	ble.n	8011c3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8011b76:	140e      	asrs	r6, r1, #16
 8011b78:	d461      	bmi.n	8011c3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8011b7a:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8011b7e:	42b2      	cmp	r2, r6
 8011b80:	dd5d      	ble.n	8011c3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8011b82:	9a02      	ldr	r2, [sp, #8]
 8011b84:	fb06 5502 	mla	r5, r6, r2, r5
 8011b88:	086a      	lsrs	r2, r5, #1
 8011b8a:	9e03      	ldr	r6, [sp, #12]
 8011b8c:	5cb2      	ldrb	r2, [r6, r2]
 8011b8e:	07ee      	lsls	r6, r5, #31
 8011b90:	bf54      	ite	pl
 8011b92:	f002 020f 	andpl.w	r2, r2, #15
 8011b96:	1112      	asrmi	r2, r2, #4
 8011b98:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011b9c:	b2d2      	uxtb	r2, r2
 8011b9e:	2a00      	cmp	r2, #0
 8011ba0:	d04d      	beq.n	8011c3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8011ba2:	f06f 0601 	mvn.w	r6, #1
 8011ba6:	fb06 fb0c 	mul.w	fp, r6, ip
 8011baa:	9e05      	ldr	r6, [sp, #20]
 8011bac:	4d5e      	ldr	r5, [pc, #376]	; (8011d28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8011bae:	f834 e00b 	ldrh.w	lr, [r4, fp]
 8011bb2:	682d      	ldr	r5, [r5, #0]
 8011bb4:	4372      	muls	r2, r6
 8011bb6:	1c56      	adds	r6, r2, #1
 8011bb8:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011bbc:	1212      	asrs	r2, r2, #8
 8011bbe:	0a2f      	lsrs	r7, r5, #8
 8011bc0:	fa1f fa82 	uxth.w	sl, r2
 8011bc4:	ea4f 262e 	mov.w	r6, lr, asr #8
 8011bc8:	43d2      	mvns	r2, r2
 8011bca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011bce:	b2d2      	uxtb	r2, r2
 8011bd0:	fb17 f70a 	smulbb	r7, r7, sl
 8011bd4:	ea4f 09d5 	mov.w	r9, r5, lsr #3
 8011bd8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011bdc:	fb06 7602 	mla	r6, r6, r2, r7
 8011be0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011be4:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011be8:	fb19 f90a 	smulbb	r9, r9, sl
 8011bec:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011bf0:	00ed      	lsls	r5, r5, #3
 8011bf2:	fb07 9702 	mla	r7, r7, r2, r9
 8011bf6:	b2ed      	uxtb	r5, r5
 8011bf8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011bfc:	b2bf      	uxth	r7, r7
 8011bfe:	fa5f fe8e 	uxtb.w	lr, lr
 8011c02:	fb15 f50a 	smulbb	r5, r5, sl
 8011c06:	b2b6      	uxth	r6, r6
 8011c08:	fb0e 5502 	mla	r5, lr, r2, r5
 8011c0c:	f107 0901 	add.w	r9, r7, #1
 8011c10:	b2ad      	uxth	r5, r5
 8011c12:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8011c16:	f106 0901 	add.w	r9, r6, #1
 8011c1a:	097f      	lsrs	r7, r7, #5
 8011c1c:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8011c20:	f105 0e01 	add.w	lr, r5, #1
 8011c24:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8011c28:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8011c2c:	eb0e 2e15 	add.w	lr, lr, r5, lsr #8
 8011c30:	4337      	orrs	r7, r6
 8011c32:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8011c36:	ea47 070e 	orr.w	r7, r7, lr
 8011c3a:	f824 700b 	strh.w	r7, [r4, fp]
 8011c3e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011c40:	4410      	add	r0, r2
 8011c42:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011c44:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011c48:	4411      	add	r1, r2
 8011c4a:	e74a      	b.n	8011ae2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011c4c:	f04f 0e00 	mov.w	lr, #0
 8011c50:	eba3 020e 	sub.w	r2, r3, lr
 8011c54:	2a00      	cmp	r2, #0
 8011c56:	f77f af48 	ble.w	8011aea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8011c5a:	9e02      	ldr	r6, [sp, #8]
 8011c5c:	1402      	asrs	r2, r0, #16
 8011c5e:	140d      	asrs	r5, r1, #16
 8011c60:	fb06 2505 	mla	r5, r6, r5, r2
 8011c64:	086a      	lsrs	r2, r5, #1
 8011c66:	9e03      	ldr	r6, [sp, #12]
 8011c68:	5cb2      	ldrb	r2, [r6, r2]
 8011c6a:	07ed      	lsls	r5, r5, #31
 8011c6c:	bf54      	ite	pl
 8011c6e:	f002 020f 	andpl.w	r2, r2, #15
 8011c72:	1112      	asrmi	r2, r2, #4
 8011c74:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011c78:	b2d2      	uxtb	r2, r2
 8011c7a:	2a00      	cmp	r2, #0
 8011c7c:	d049      	beq.n	8011d12 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011c7e:	9e05      	ldr	r6, [sp, #20]
 8011c80:	4d29      	ldr	r5, [pc, #164]	; (8011d28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8011c82:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011c86:	682d      	ldr	r5, [r5, #0]
 8011c88:	4372      	muls	r2, r6
 8011c8a:	1c56      	adds	r6, r2, #1
 8011c8c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011c90:	1212      	asrs	r2, r2, #8
 8011c92:	0a2f      	lsrs	r7, r5, #8
 8011c94:	fa1f fa82 	uxth.w	sl, r2
 8011c98:	ea4f 262c 	mov.w	r6, ip, asr #8
 8011c9c:	43d2      	mvns	r2, r2
 8011c9e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011ca2:	b2d2      	uxtb	r2, r2
 8011ca4:	fb17 f70a 	smulbb	r7, r7, sl
 8011ca8:	ea4f 09d5 	mov.w	r9, r5, lsr #3
 8011cac:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011cb0:	fb06 7602 	mla	r6, r6, r2, r7
 8011cb4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011cb8:	ea4f 07ec 	mov.w	r7, ip, asr #3
 8011cbc:	fb19 f90a 	smulbb	r9, r9, sl
 8011cc0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011cc4:	00ed      	lsls	r5, r5, #3
 8011cc6:	fb07 9702 	mla	r7, r7, r2, r9
 8011cca:	b2ed      	uxtb	r5, r5
 8011ccc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011cd0:	b2bf      	uxth	r7, r7
 8011cd2:	fa5f fc8c 	uxtb.w	ip, ip
 8011cd6:	fb15 f50a 	smulbb	r5, r5, sl
 8011cda:	b2b6      	uxth	r6, r6
 8011cdc:	fb0c 5502 	mla	r5, ip, r2, r5
 8011ce0:	f107 0901 	add.w	r9, r7, #1
 8011ce4:	b2ad      	uxth	r5, r5
 8011ce6:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8011cea:	f106 0b01 	add.w	fp, r6, #1
 8011cee:	097f      	lsrs	r7, r7, #5
 8011cf0:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8011cf4:	f105 0c01 	add.w	ip, r5, #1
 8011cf8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8011cfc:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8011d00:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8011d04:	4337      	orrs	r7, r6
 8011d06:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8011d0a:	ea47 070c 	orr.w	r7, r7, ip
 8011d0e:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8011d12:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011d14:	4410      	add	r0, r2
 8011d16:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011d18:	f10e 0e01 	add.w	lr, lr, #1
 8011d1c:	4411      	add	r1, r2
 8011d1e:	e797      	b.n	8011c50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8011d20:	b007      	add	sp, #28
 8011d22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d26:	bf00      	nop
 8011d28:	2000a434 	.word	0x2000a434

08011d2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011d2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d30:	b087      	sub	sp, #28
 8011d32:	468b      	mov	fp, r1
 8011d34:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011d36:	9205      	str	r2, [sp, #20]
 8011d38:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011d3c:	6841      	ldr	r1, [r0, #4]
 8011d3e:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8011d42:	fb01 2404 	mla	r4, r1, r4, r2
 8011d46:	6802      	ldr	r2, [r0, #0]
 8011d48:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011d4c:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8011d50:	3201      	adds	r2, #1
 8011d52:	f022 0201 	bic.w	r2, r2, #1
 8011d56:	9201      	str	r2, [sp, #4]
 8011d58:	f8d8 2000 	ldr.w	r2, [r8]
 8011d5c:	9202      	str	r2, [sp, #8]
 8011d5e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011d62:	f1bb 0f00 	cmp.w	fp, #0
 8011d66:	dc03      	bgt.n	8011d70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8011d68:	9a05      	ldr	r2, [sp, #20]
 8011d6a:	2a00      	cmp	r2, #0
 8011d6c:	f340 8156 	ble.w	801201c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011d70:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011d72:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011d76:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011d7a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011d7e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011d80:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011d84:	2b00      	cmp	r3, #0
 8011d86:	dd0e      	ble.n	8011da6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8011d88:	1402      	asrs	r2, r0, #16
 8011d8a:	d405      	bmi.n	8011d98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011d8c:	42ba      	cmp	r2, r7
 8011d8e:	da03      	bge.n	8011d98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011d90:	140a      	asrs	r2, r1, #16
 8011d92:	d401      	bmi.n	8011d98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011d94:	42b2      	cmp	r2, r6
 8011d96:	db07      	blt.n	8011da8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011d98:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011d9a:	4410      	add	r0, r2
 8011d9c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011d9e:	3b01      	subs	r3, #1
 8011da0:	4411      	add	r1, r2
 8011da2:	3402      	adds	r4, #2
 8011da4:	e7ee      	b.n	8011d84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8011da6:	d017      	beq.n	8011dd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8011da8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011daa:	1e5a      	subs	r2, r3, #1
 8011dac:	fb05 0502 	mla	r5, r5, r2, r0
 8011db0:	142d      	asrs	r5, r5, #16
 8011db2:	d409      	bmi.n	8011dc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011db4:	42bd      	cmp	r5, r7
 8011db6:	da07      	bge.n	8011dc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011db8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011dba:	fb05 1202 	mla	r2, r5, r2, r1
 8011dbe:	1412      	asrs	r2, r2, #16
 8011dc0:	d402      	bmi.n	8011dc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011dc2:	42b2      	cmp	r2, r6
 8011dc4:	f2c0 80be 	blt.w	8011f44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8011dc8:	2600      	movs	r6, #0
 8011dca:	199a      	adds	r2, r3, r6
 8011dcc:	2a00      	cmp	r2, #0
 8011dce:	dc3e      	bgt.n	8011e4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8011dd0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011dd4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011dd8:	f1bb 0f00 	cmp.w	fp, #0
 8011ddc:	f340 811e 	ble.w	801201c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011de0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011de4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011de8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011dec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011dee:	f1bb 0b01 	subs.w	fp, fp, #1
 8011df2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011df6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011dfa:	eeb0 6a62 	vmov.f32	s12, s5
 8011dfe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011e02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011e06:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011e0a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011e0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011e12:	eeb0 6a43 	vmov.f32	s12, s6
 8011e16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011e1a:	ee12 2a90 	vmov	r2, s5
 8011e1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011e22:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e26:	ee13 2a10 	vmov	r2, s6
 8011e2a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011e2e:	9313      	str	r3, [sp, #76]	; 0x4c
 8011e30:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e32:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e36:	9a05      	ldr	r2, [sp, #20]
 8011e38:	9314      	str	r3, [sp, #80]	; 0x50
 8011e3a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011e3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e40:	eeb0 3a67 	vmov.f32	s6, s15
 8011e44:	bf08      	it	eq
 8011e46:	4613      	moveq	r3, r2
 8011e48:	eef0 2a47 	vmov.f32	s5, s14
 8011e4c:	e789      	b.n	8011d62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8011e4e:	1405      	asrs	r5, r0, #16
 8011e50:	d465      	bmi.n	8011f1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011e52:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8011e56:	42aa      	cmp	r2, r5
 8011e58:	dd61      	ble.n	8011f1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011e5a:	140f      	asrs	r7, r1, #16
 8011e5c:	d45f      	bmi.n	8011f1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011e5e:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8011e62:	42ba      	cmp	r2, r7
 8011e64:	dd5b      	ble.n	8011f1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011e66:	9a01      	ldr	r2, [sp, #4]
 8011e68:	fb07 5502 	mla	r5, r7, r2, r5
 8011e6c:	086a      	lsrs	r2, r5, #1
 8011e6e:	9f02      	ldr	r7, [sp, #8]
 8011e70:	5cba      	ldrb	r2, [r7, r2]
 8011e72:	07ef      	lsls	r7, r5, #31
 8011e74:	bf54      	ite	pl
 8011e76:	f002 020f 	andpl.w	r2, r2, #15
 8011e7a:	1112      	asrmi	r2, r2, #4
 8011e7c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011e80:	b2d2      	uxtb	r2, r2
 8011e82:	2a00      	cmp	r2, #0
 8011e84:	d04b      	beq.n	8011f1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011e86:	4d67      	ldr	r5, [pc, #412]	; (8012024 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>)
 8011e88:	682f      	ldr	r7, [r5, #0]
 8011e8a:	08fd      	lsrs	r5, r7, #3
 8011e8c:	ea4f 2917 	mov.w	r9, r7, lsr #8
 8011e90:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8011e94:	00ff      	lsls	r7, r7, #3
 8011e96:	2aff      	cmp	r2, #255	; 0xff
 8011e98:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8011e9c:	9503      	str	r5, [sp, #12]
 8011e9e:	b2ff      	uxtb	r7, r7
 8011ea0:	d043      	beq.n	8011f2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8011ea2:	f06f 0501 	mvn.w	r5, #1
 8011ea6:	4375      	muls	r5, r6
 8011ea8:	fa1f fa82 	uxth.w	sl, r2
 8011eac:	f834 e005 	ldrh.w	lr, [r4, r5]
 8011eb0:	9504      	str	r5, [sp, #16]
 8011eb2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011eb6:	43d2      	mvns	r2, r2
 8011eb8:	b2d2      	uxtb	r2, r2
 8011eba:	fb19 f90a 	smulbb	r9, r9, sl
 8011ebe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011ec2:	9d03      	ldr	r5, [sp, #12]
 8011ec4:	fb0c 9c02 	mla	ip, ip, r2, r9
 8011ec8:	ea4f 09ee 	mov.w	r9, lr, asr #3
 8011ecc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011ed0:	fb15 f50a 	smulbb	r5, r5, sl
 8011ed4:	fb09 5502 	mla	r5, r9, r2, r5
 8011ed8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011edc:	b2ad      	uxth	r5, r5
 8011ede:	fa5f fe8e 	uxtb.w	lr, lr
 8011ee2:	fb17 f70a 	smulbb	r7, r7, sl
 8011ee6:	fa1f fc8c 	uxth.w	ip, ip
 8011eea:	fb0e 7702 	mla	r7, lr, r2, r7
 8011eee:	f105 0901 	add.w	r9, r5, #1
 8011ef2:	b2bf      	uxth	r7, r7
 8011ef4:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 8011ef8:	f10c 0901 	add.w	r9, ip, #1
 8011efc:	1c7a      	adds	r2, r7, #1
 8011efe:	096d      	lsrs	r5, r5, #5
 8011f00:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8011f04:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011f08:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011f0c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011f10:	ea45 050c 	orr.w	r5, r5, ip
 8011f14:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8011f18:	9a04      	ldr	r2, [sp, #16]
 8011f1a:	433d      	orrs	r5, r7
 8011f1c:	52a5      	strh	r5, [r4, r2]
 8011f1e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011f20:	4410      	add	r0, r2
 8011f22:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011f24:	3e01      	subs	r6, #1
 8011f26:	4411      	add	r1, r2
 8011f28:	e74f      	b.n	8011dca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011f2a:	f06f 0201 	mvn.w	r2, #1
 8011f2e:	fb02 fe06 	mul.w	lr, r2, r6
 8011f32:	9a03      	ldr	r2, [sp, #12]
 8011f34:	00d5      	lsls	r5, r2, #3
 8011f36:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
 8011f3a:	ea45 05d7 	orr.w	r5, r5, r7, lsr #3
 8011f3e:	f824 500e 	strh.w	r5, [r4, lr]
 8011f42:	e7ec      	b.n	8011f1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011f44:	f04f 0e00 	mov.w	lr, #0
 8011f48:	eba3 020e 	sub.w	r2, r3, lr
 8011f4c:	2a00      	cmp	r2, #0
 8011f4e:	f77f af3f 	ble.w	8011dd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8011f52:	9e01      	ldr	r6, [sp, #4]
 8011f54:	1402      	asrs	r2, r0, #16
 8011f56:	140d      	asrs	r5, r1, #16
 8011f58:	fb06 2505 	mla	r5, r6, r5, r2
 8011f5c:	086a      	lsrs	r2, r5, #1
 8011f5e:	9e02      	ldr	r6, [sp, #8]
 8011f60:	5cb2      	ldrb	r2, [r6, r2]
 8011f62:	07ed      	lsls	r5, r5, #31
 8011f64:	bf54      	ite	pl
 8011f66:	f002 020f 	andpl.w	r2, r2, #15
 8011f6a:	1112      	asrmi	r2, r2, #4
 8011f6c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011f70:	b2d2      	uxtb	r2, r2
 8011f72:	2a00      	cmp	r2, #0
 8011f74:	d045      	beq.n	8012002 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011f76:	4d2b      	ldr	r5, [pc, #172]	; (8012024 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>)
 8011f78:	682e      	ldr	r6, [r5, #0]
 8011f7a:	2aff      	cmp	r2, #255	; 0xff
 8011f7c:	ea4f 2916 	mov.w	r9, r6, lsr #8
 8011f80:	ea4f 05d6 	mov.w	r5, r6, lsr #3
 8011f84:	ea4f 06c6 	mov.w	r6, r6, lsl #3
 8011f88:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8011f8c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8011f90:	b2f6      	uxtb	r6, r6
 8011f92:	d03d      	beq.n	8012010 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8011f94:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011f98:	fa1f fa82 	uxth.w	sl, r2
 8011f9c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011fa0:	43d2      	mvns	r2, r2
 8011fa2:	b2d2      	uxtb	r2, r2
 8011fa4:	fb19 f90a 	smulbb	r9, r9, sl
 8011fa8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011fac:	fb07 9702 	mla	r7, r7, r2, r9
 8011fb0:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8011fb4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011fb8:	fb15 f50a 	smulbb	r5, r5, sl
 8011fbc:	fb09 5502 	mla	r5, r9, r2, r5
 8011fc0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011fc4:	b2ad      	uxth	r5, r5
 8011fc6:	fa5f fc8c 	uxtb.w	ip, ip
 8011fca:	fb16 f60a 	smulbb	r6, r6, sl
 8011fce:	b2bf      	uxth	r7, r7
 8011fd0:	fb0c 6602 	mla	r6, ip, r2, r6
 8011fd4:	f105 0901 	add.w	r9, r5, #1
 8011fd8:	b2b6      	uxth	r6, r6
 8011fda:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 8011fde:	f107 0901 	add.w	r9, r7, #1
 8011fe2:	096d      	lsrs	r5, r5, #5
 8011fe4:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8011fe8:	1c72      	adds	r2, r6, #1
 8011fea:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011fee:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011ff2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8011ff6:	433d      	orrs	r5, r7
 8011ff8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011ffc:	4335      	orrs	r5, r6
 8011ffe:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 8012002:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012004:	4410      	add	r0, r2
 8012006:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012008:	f10e 0e01 	add.w	lr, lr, #1
 801200c:	4411      	add	r1, r2
 801200e:	e79b      	b.n	8011f48 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21c>
 8012010:	00ed      	lsls	r5, r5, #3
 8012012:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
 8012016:	ea45 05d6 	orr.w	r5, r5, r6, lsr #3
 801201a:	e7f0      	b.n	8011ffe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801201c:	b007      	add	sp, #28
 801201e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012022:	bf00      	nop
 8012024:	2000a434 	.word	0x2000a434

08012028 <_ZN8touchgfx8LCD16bppD1Ev>:
 8012028:	4770      	bx	lr

0801202a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801202a:	4770      	bx	lr

0801202c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801202c:	4770      	bx	lr

0801202e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801202e:	4770      	bx	lr

08012030 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8012030:	4770      	bx	lr

08012032 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012032:	4770      	bx	lr

08012034 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012034:	4770      	bx	lr

08012036 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012036:	4770      	bx	lr

08012038 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012038:	4770      	bx	lr

0801203a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801203a:	4770      	bx	lr

0801203c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801203c:	4770      	bx	lr

0801203e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801203e:	4770      	bx	lr

08012040 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012040:	4770      	bx	lr

08012042 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012042:	4770      	bx	lr

08012044 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012044:	4770      	bx	lr

08012046 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012046:	4770      	bx	lr

08012048 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012048:	4770      	bx	lr

0801204a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801204a:	4770      	bx	lr

0801204c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801204c:	4770      	bx	lr

0801204e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801204e:	4770      	bx	lr

08012050 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012050:	4770      	bx	lr

08012052 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012052:	4770      	bx	lr

08012054 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8012054:	4770      	bx	lr

08012056 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012056:	4770      	bx	lr

08012058 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8012058:	4770      	bx	lr

0801205a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801205a:	4770      	bx	lr

0801205c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801205c:	4770      	bx	lr

0801205e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801205e:	4770      	bx	lr

08012060 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012060:	4770      	bx	lr
	...

08012064 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8012064:	b508      	push	{r3, lr}
 8012066:	4b06      	ldr	r3, [pc, #24]	; (8012080 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8012068:	8818      	ldrh	r0, [r3, #0]
 801206a:	b928      	cbnz	r0, 8012078 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 801206c:	4b05      	ldr	r3, [pc, #20]	; (8012084 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 801206e:	4a06      	ldr	r2, [pc, #24]	; (8012088 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8012070:	4806      	ldr	r0, [pc, #24]	; (801208c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 8012072:	2154      	movs	r1, #84	; 0x54
 8012074:	f009 f9ca 	bl	801b40c <__assert_func>
 8012078:	0040      	lsls	r0, r0, #1
 801207a:	b280      	uxth	r0, r0
 801207c:	bd08      	pop	{r3, pc}
 801207e:	bf00      	nop
 8012080:	2000a426 	.word	0x2000a426
 8012084:	0801f3ae 	.word	0x0801f3ae
 8012088:	0801f933 	.word	0x0801f933
 801208c:	0801f3f0 	.word	0x0801f3f0

08012090 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8012090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012094:	b08b      	sub	sp, #44	; 0x2c
 8012096:	460f      	mov	r7, r1
 8012098:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801209c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 80120a0:	4616      	mov	r6, r2
 80120a2:	f1bb 0f00 	cmp.w	fp, #0
 80120a6:	d046      	beq.n	8012136 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 80120a8:	6810      	ldr	r0, [r2, #0]
 80120aa:	6851      	ldr	r1, [r2, #4]
 80120ac:	ad06      	add	r5, sp, #24
 80120ae:	c503      	stmia	r5!, {r0, r1}
 80120b0:	6818      	ldr	r0, [r3, #0]
 80120b2:	6859      	ldr	r1, [r3, #4]
 80120b4:	ad08      	add	r5, sp, #32
 80120b6:	c503      	stmia	r5!, {r0, r1}
 80120b8:	a806      	add	r0, sp, #24
 80120ba:	f7fa fc7d 	bl	800c9b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80120be:	4631      	mov	r1, r6
 80120c0:	a808      	add	r0, sp, #32
 80120c2:	f7fa fc61 	bl	800c988 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80120c6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80120ca:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80120ce:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80120d2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80120d6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80120da:	fb16 2103 	smlabb	r1, r6, r3, r2
 80120de:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80120e2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80120e6:	4f5d      	ldr	r7, [pc, #372]	; (801225c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
 80120e8:	440a      	add	r2, r1
 80120ea:	f8ad 2020 	strh.w	r2, [sp, #32]
 80120ee:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80120f2:	6838      	ldr	r0, [r7, #0]
 80120f4:	4413      	add	r3, r2
 80120f6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80120fa:	6803      	ldr	r3, [r0, #0]
 80120fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80120fe:	4798      	blx	r3
 8012100:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012104:	46b9      	mov	r9, r7
 8012106:	d019      	beq.n	801213c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8012108:	f010 0f04 	tst.w	r0, #4
 801210c:	d01a      	beq.n	8012144 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801210e:	f8d9 0000 	ldr.w	r0, [r9]
 8012112:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012116:	6801      	ldr	r1, [r0, #0]
 8012118:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801211c:	e9cd b403 	strd	fp, r4, [sp, #12]
 8012120:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8012124:	9402      	str	r4, [sp, #8]
 8012126:	b2ad      	uxth	r5, r5
 8012128:	fa1f f488 	uxth.w	r4, r8
 801212c:	9501      	str	r5, [sp, #4]
 801212e:	9400      	str	r4, [sp, #0]
 8012130:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 8012132:	4631      	mov	r1, r6
 8012134:	47a0      	blx	r4
 8012136:	b00b      	add	sp, #44	; 0x2c
 8012138:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801213c:	b914      	cbnz	r4, 8012144 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801213e:	f010 0f01 	tst.w	r0, #1
 8012142:	e7e3      	b.n	801210c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8012144:	f8d9 0000 	ldr.w	r0, [r9]
 8012148:	6803      	ldr	r3, [r0, #0]
 801214a:	6a1b      	ldr	r3, [r3, #32]
 801214c:	4798      	blx	r3
 801214e:	4b44      	ldr	r3, [pc, #272]	; (8012260 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 8012150:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8012154:	881a      	ldrh	r2, [r3, #0]
 8012156:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801215a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801215e:	fb02 1404 	mla	r4, r2, r4, r1
 8012162:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012166:	469a      	mov	sl, r3
 8012168:	fb05 f502 	mul.w	r5, r5, r2
 801216c:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8012170:	d058      	beq.n	8012224 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x194>
 8012172:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8012176:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801217a:	fa1f f28b 	uxth.w	r2, fp
 801217e:	fa1f f989 	uxth.w	r9, r9
 8012182:	469e      	mov	lr, r3
 8012184:	42ac      	cmp	r4, r5
 8012186:	d263      	bcs.n	8012250 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
 8012188:	eb04 0a07 	add.w	sl, r4, r7
 801218c:	4554      	cmp	r4, sl
 801218e:	d23c      	bcs.n	801220a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x17a>
 8012190:	8821      	ldrh	r1, [r4, #0]
 8012192:	f836 3b02 	ldrh.w	r3, [r6], #2
 8012196:	1208      	asrs	r0, r1, #8
 8012198:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801219c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80121a0:	fb10 f009 	smulbb	r0, r0, r9
 80121a4:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80121a8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80121ac:	00c9      	lsls	r1, r1, #3
 80121ae:	fb0c 0c02 	mla	ip, ip, r2, r0
 80121b2:	b2c9      	uxtb	r1, r1
 80121b4:	10d8      	asrs	r0, r3, #3
 80121b6:	00db      	lsls	r3, r3, #3
 80121b8:	fb11 f109 	smulbb	r1, r1, r9
 80121bc:	b2db      	uxtb	r3, r3
 80121be:	fa1f fc8c 	uxth.w	ip, ip
 80121c2:	fb03 1302 	mla	r3, r3, r2, r1
 80121c6:	b29b      	uxth	r3, r3
 80121c8:	f10c 0101 	add.w	r1, ip, #1
 80121cc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80121d0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80121d4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80121d8:	fb1b fb09 	smulbb	fp, fp, r9
 80121dc:	1c59      	adds	r1, r3, #1
 80121de:	fb00 b002 	mla	r0, r0, r2, fp
 80121e2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80121e6:	b280      	uxth	r0, r0
 80121e8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80121ec:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80121f0:	ea4c 0c03 	orr.w	ip, ip, r3
 80121f4:	1c43      	adds	r3, r0, #1
 80121f6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80121fa:	0940      	lsrs	r0, r0, #5
 80121fc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8012200:	ea4c 0c00 	orr.w	ip, ip, r0
 8012204:	f824 cb02 	strh.w	ip, [r4], #2
 8012208:	e7c0      	b.n	801218c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 801220a:	f8be 3000 	ldrh.w	r3, [lr]
 801220e:	eba3 0308 	sub.w	r3, r3, r8
 8012212:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012216:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801221a:	eba3 0308 	sub.w	r3, r3, r8
 801221e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012222:	e7af      	b.n	8012184 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 8012224:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012228:	f8d9 0000 	ldr.w	r0, [r9]
 801222c:	42ac      	cmp	r4, r5
 801222e:	6803      	ldr	r3, [r0, #0]
 8012230:	d20e      	bcs.n	8012250 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
 8012232:	f8d3 802c 	ldr.w	r8, [r3, #44]	; 0x2c
 8012236:	4632      	mov	r2, r6
 8012238:	463b      	mov	r3, r7
 801223a:	4621      	mov	r1, r4
 801223c:	47c0      	blx	r8
 801223e:	f8ba 3000 	ldrh.w	r3, [sl]
 8012242:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012246:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801224a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801224e:	e7eb      	b.n	8012228 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x198>
 8012250:	4b02      	ldr	r3, [pc, #8]	; (801225c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
 8012252:	6818      	ldr	r0, [r3, #0]
 8012254:	6803      	ldr	r3, [r0, #0]
 8012256:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012258:	4798      	blx	r3
 801225a:	e76c      	b.n	8012136 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 801225c:	2000a42c 	.word	0x2000a42c
 8012260:	2000a426 	.word	0x2000a426

08012264 <_ZN8touchgfx8LCD16bppD0Ev>:
 8012264:	b510      	push	{r4, lr}
 8012266:	2178      	movs	r1, #120	; 0x78
 8012268:	4604      	mov	r4, r0
 801226a:	f009 f8a1 	bl	801b3b0 <_ZdlPvj>
 801226e:	4620      	mov	r0, r4
 8012270:	bd10      	pop	{r4, pc}

08012272 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012272:	b510      	push	{r4, lr}
 8012274:	2104      	movs	r1, #4
 8012276:	4604      	mov	r4, r0
 8012278:	f009 f89a 	bl	801b3b0 <_ZdlPvj>
 801227c:	4620      	mov	r0, r4
 801227e:	bd10      	pop	{r4, pc}

08012280 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012280:	b510      	push	{r4, lr}
 8012282:	2104      	movs	r1, #4
 8012284:	4604      	mov	r4, r0
 8012286:	f009 f893 	bl	801b3b0 <_ZdlPvj>
 801228a:	4620      	mov	r0, r4
 801228c:	bd10      	pop	{r4, pc}

0801228e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801228e:	b510      	push	{r4, lr}
 8012290:	2104      	movs	r1, #4
 8012292:	4604      	mov	r4, r0
 8012294:	f009 f88c 	bl	801b3b0 <_ZdlPvj>
 8012298:	4620      	mov	r0, r4
 801229a:	bd10      	pop	{r4, pc}

0801229c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801229c:	b510      	push	{r4, lr}
 801229e:	2104      	movs	r1, #4
 80122a0:	4604      	mov	r4, r0
 80122a2:	f009 f885 	bl	801b3b0 <_ZdlPvj>
 80122a6:	4620      	mov	r0, r4
 80122a8:	bd10      	pop	{r4, pc}

080122aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80122aa:	b510      	push	{r4, lr}
 80122ac:	2104      	movs	r1, #4
 80122ae:	4604      	mov	r4, r0
 80122b0:	f009 f87e 	bl	801b3b0 <_ZdlPvj>
 80122b4:	4620      	mov	r0, r4
 80122b6:	bd10      	pop	{r4, pc}

080122b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80122b8:	b510      	push	{r4, lr}
 80122ba:	2104      	movs	r1, #4
 80122bc:	4604      	mov	r4, r0
 80122be:	f009 f877 	bl	801b3b0 <_ZdlPvj>
 80122c2:	4620      	mov	r0, r4
 80122c4:	bd10      	pop	{r4, pc}

080122c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80122c6:	b510      	push	{r4, lr}
 80122c8:	2104      	movs	r1, #4
 80122ca:	4604      	mov	r4, r0
 80122cc:	f009 f870 	bl	801b3b0 <_ZdlPvj>
 80122d0:	4620      	mov	r0, r4
 80122d2:	bd10      	pop	{r4, pc}

080122d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80122d4:	b510      	push	{r4, lr}
 80122d6:	2104      	movs	r1, #4
 80122d8:	4604      	mov	r4, r0
 80122da:	f009 f869 	bl	801b3b0 <_ZdlPvj>
 80122de:	4620      	mov	r0, r4
 80122e0:	bd10      	pop	{r4, pc}

080122e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80122e2:	b510      	push	{r4, lr}
 80122e4:	2104      	movs	r1, #4
 80122e6:	4604      	mov	r4, r0
 80122e8:	f009 f862 	bl	801b3b0 <_ZdlPvj>
 80122ec:	4620      	mov	r0, r4
 80122ee:	bd10      	pop	{r4, pc}

080122f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80122f0:	b510      	push	{r4, lr}
 80122f2:	2104      	movs	r1, #4
 80122f4:	4604      	mov	r4, r0
 80122f6:	f009 f85b 	bl	801b3b0 <_ZdlPvj>
 80122fa:	4620      	mov	r0, r4
 80122fc:	bd10      	pop	{r4, pc}

080122fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80122fe:	b510      	push	{r4, lr}
 8012300:	2104      	movs	r1, #4
 8012302:	4604      	mov	r4, r0
 8012304:	f009 f854 	bl	801b3b0 <_ZdlPvj>
 8012308:	4620      	mov	r0, r4
 801230a:	bd10      	pop	{r4, pc}

0801230c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801230c:	b510      	push	{r4, lr}
 801230e:	2104      	movs	r1, #4
 8012310:	4604      	mov	r4, r0
 8012312:	f009 f84d 	bl	801b3b0 <_ZdlPvj>
 8012316:	4620      	mov	r0, r4
 8012318:	bd10      	pop	{r4, pc}

0801231a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801231a:	b510      	push	{r4, lr}
 801231c:	2104      	movs	r1, #4
 801231e:	4604      	mov	r4, r0
 8012320:	f009 f846 	bl	801b3b0 <_ZdlPvj>
 8012324:	4620      	mov	r0, r4
 8012326:	bd10      	pop	{r4, pc}

08012328 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012328:	b510      	push	{r4, lr}
 801232a:	2104      	movs	r1, #4
 801232c:	4604      	mov	r4, r0
 801232e:	f009 f83f 	bl	801b3b0 <_ZdlPvj>
 8012332:	4620      	mov	r0, r4
 8012334:	bd10      	pop	{r4, pc}

08012336 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012336:	b510      	push	{r4, lr}
 8012338:	2104      	movs	r1, #4
 801233a:	4604      	mov	r4, r0
 801233c:	f009 f838 	bl	801b3b0 <_ZdlPvj>
 8012340:	4620      	mov	r0, r4
 8012342:	bd10      	pop	{r4, pc}

08012344 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012344:	b510      	push	{r4, lr}
 8012346:	2104      	movs	r1, #4
 8012348:	4604      	mov	r4, r0
 801234a:	f009 f831 	bl	801b3b0 <_ZdlPvj>
 801234e:	4620      	mov	r0, r4
 8012350:	bd10      	pop	{r4, pc}

08012352 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012352:	b510      	push	{r4, lr}
 8012354:	2104      	movs	r1, #4
 8012356:	4604      	mov	r4, r0
 8012358:	f009 f82a 	bl	801b3b0 <_ZdlPvj>
 801235c:	4620      	mov	r0, r4
 801235e:	bd10      	pop	{r4, pc}

08012360 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012360:	b510      	push	{r4, lr}
 8012362:	2104      	movs	r1, #4
 8012364:	4604      	mov	r4, r0
 8012366:	f009 f823 	bl	801b3b0 <_ZdlPvj>
 801236a:	4620      	mov	r0, r4
 801236c:	bd10      	pop	{r4, pc}

0801236e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801236e:	b510      	push	{r4, lr}
 8012370:	2104      	movs	r1, #4
 8012372:	4604      	mov	r4, r0
 8012374:	f009 f81c 	bl	801b3b0 <_ZdlPvj>
 8012378:	4620      	mov	r0, r4
 801237a:	bd10      	pop	{r4, pc}

0801237c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801237c:	b510      	push	{r4, lr}
 801237e:	2104      	movs	r1, #4
 8012380:	4604      	mov	r4, r0
 8012382:	f009 f815 	bl	801b3b0 <_ZdlPvj>
 8012386:	4620      	mov	r0, r4
 8012388:	bd10      	pop	{r4, pc}

0801238a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801238a:	b510      	push	{r4, lr}
 801238c:	2104      	movs	r1, #4
 801238e:	4604      	mov	r4, r0
 8012390:	f009 f80e 	bl	801b3b0 <_ZdlPvj>
 8012394:	4620      	mov	r0, r4
 8012396:	bd10      	pop	{r4, pc}

08012398 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012398:	b510      	push	{r4, lr}
 801239a:	2104      	movs	r1, #4
 801239c:	4604      	mov	r4, r0
 801239e:	f009 f807 	bl	801b3b0 <_ZdlPvj>
 80123a2:	4620      	mov	r0, r4
 80123a4:	bd10      	pop	{r4, pc}

080123a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80123a6:	b510      	push	{r4, lr}
 80123a8:	2104      	movs	r1, #4
 80123aa:	4604      	mov	r4, r0
 80123ac:	f009 f800 	bl	801b3b0 <_ZdlPvj>
 80123b0:	4620      	mov	r0, r4
 80123b2:	bd10      	pop	{r4, pc}

080123b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80123b4:	b510      	push	{r4, lr}
 80123b6:	2104      	movs	r1, #4
 80123b8:	4604      	mov	r4, r0
 80123ba:	f008 fff9 	bl	801b3b0 <_ZdlPvj>
 80123be:	4620      	mov	r0, r4
 80123c0:	bd10      	pop	{r4, pc}

080123c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80123c2:	b510      	push	{r4, lr}
 80123c4:	2104      	movs	r1, #4
 80123c6:	4604      	mov	r4, r0
 80123c8:	f008 fff2 	bl	801b3b0 <_ZdlPvj>
 80123cc:	4620      	mov	r0, r4
 80123ce:	bd10      	pop	{r4, pc}

080123d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80123d0:	b510      	push	{r4, lr}
 80123d2:	2104      	movs	r1, #4
 80123d4:	4604      	mov	r4, r0
 80123d6:	f008 ffeb 	bl	801b3b0 <_ZdlPvj>
 80123da:	4620      	mov	r0, r4
 80123dc:	bd10      	pop	{r4, pc}

080123de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80123de:	b510      	push	{r4, lr}
 80123e0:	2104      	movs	r1, #4
 80123e2:	4604      	mov	r4, r0
 80123e4:	f008 ffe4 	bl	801b3b0 <_ZdlPvj>
 80123e8:	4620      	mov	r0, r4
 80123ea:	bd10      	pop	{r4, pc}

080123ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80123ec:	b510      	push	{r4, lr}
 80123ee:	2104      	movs	r1, #4
 80123f0:	4604      	mov	r4, r0
 80123f2:	f008 ffdd 	bl	801b3b0 <_ZdlPvj>
 80123f6:	4620      	mov	r0, r4
 80123f8:	bd10      	pop	{r4, pc}
	...

080123fc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80123fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012400:	460d      	mov	r5, r1
 8012402:	b087      	sub	sp, #28
 8012404:	4614      	mov	r4, r2
 8012406:	4698      	mov	r8, r3
 8012408:	b333      	cbz	r3, 8012458 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801240a:	4608      	mov	r0, r1
 801240c:	f7f7 fa01 	bl	8009812 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012410:	bb10      	cbnz	r0, 8012458 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8012412:	6828      	ldr	r0, [r5, #0]
 8012414:	6869      	ldr	r1, [r5, #4]
 8012416:	4e73      	ldr	r6, [pc, #460]	; (80125e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1e8>)
 8012418:	ab04      	add	r3, sp, #16
 801241a:	c303      	stmia	r3!, {r0, r1}
 801241c:	a804      	add	r0, sp, #16
 801241e:	f7fa facb 	bl	800c9b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012422:	6830      	ldr	r0, [r6, #0]
 8012424:	6803      	ldr	r3, [r0, #0]
 8012426:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012428:	4798      	blx	r3
 801242a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801242e:	d016      	beq.n	801245e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8012430:	f010 0f08 	tst.w	r0, #8
 8012434:	d016      	beq.n	8012464 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x68>
 8012436:	6830      	ldr	r0, [r6, #0]
 8012438:	f8bd 5016 	ldrh.w	r5, [sp, #22]
 801243c:	6801      	ldr	r1, [r0, #0]
 801243e:	9501      	str	r5, [sp, #4]
 8012440:	f8bd 5014 	ldrh.w	r5, [sp, #20]
 8012444:	f8cd 8008 	str.w	r8, [sp, #8]
 8012448:	9500      	str	r5, [sp, #0]
 801244a:	6c8d      	ldr	r5, [r1, #72]	; 0x48
 801244c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012450:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012454:	4621      	mov	r1, r4
 8012456:	47a8      	blx	r5
 8012458:	b007      	add	sp, #28
 801245a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801245e:	f010 0f02 	tst.w	r0, #2
 8012462:	e7e7      	b.n	8012434 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x38>
 8012464:	6830      	ldr	r0, [r6, #0]
 8012466:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801246a:	6803      	ldr	r3, [r0, #0]
 801246c:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8012470:	6a1b      	ldr	r3, [r3, #32]
 8012472:	4798      	blx	r3
 8012474:	495c      	ldr	r1, [pc, #368]	; (80125e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ec>)
 8012476:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 801247a:	880b      	ldrh	r3, [r1, #0]
 801247c:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8012480:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8012484:	fb03 c202 	mla	r2, r3, r2, ip
 8012488:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801248c:	468e      	mov	lr, r1
 801248e:	fb07 f203 	mul.w	r2, r7, r3
 8012492:	d053      	beq.n	801253c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x140>
 8012494:	fa1f f388 	uxth.w	r3, r8
 8012498:	f1c8 07ff 	rsb	r7, r8, #255	; 0xff
 801249c:	ea4f 09d4 	mov.w	r9, r4, lsr #3
 80124a0:	ea4f 2814 	mov.w	r8, r4, lsr #8
 80124a4:	00e4      	lsls	r4, r4, #3
 80124a6:	b2e4      	uxtb	r4, r4
 80124a8:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 80124ac:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80124b0:	fb08 f803 	mul.w	r8, r8, r3
 80124b4:	fb09 f903 	mul.w	r9, r9, r3
 80124b8:	eb00 0142 	add.w	r1, r0, r2, lsl #1
 80124bc:	4363      	muls	r3, r4
 80124be:	006d      	lsls	r5, r5, #1
 80124c0:	b2bc      	uxth	r4, r7
 80124c2:	4288      	cmp	r0, r1
 80124c4:	f080 8088 	bcs.w	80125d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 80124c8:	eb00 0a05 	add.w	sl, r0, r5
 80124cc:	4550      	cmp	r0, sl
 80124ce:	d22f      	bcs.n	8012530 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x134>
 80124d0:	8802      	ldrh	r2, [r0, #0]
 80124d2:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80124d6:	10d7      	asrs	r7, r2, #3
 80124d8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80124dc:	00d2      	lsls	r2, r2, #3
 80124de:	fb1c fc04 	smulbb	ip, ip, r4
 80124e2:	b2d2      	uxtb	r2, r2
 80124e4:	44c4      	add	ip, r8
 80124e6:	fb12 f204 	smulbb	r2, r2, r4
 80124ea:	fa1f fc8c 	uxth.w	ip, ip
 80124ee:	441a      	add	r2, r3
 80124f0:	b292      	uxth	r2, r2
 80124f2:	f10c 0b01 	add.w	fp, ip, #1
 80124f6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80124fa:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80124fe:	fb17 f704 	smulbb	r7, r7, r4
 8012502:	f102 0b01 	add.w	fp, r2, #1
 8012506:	444f      	add	r7, r9
 8012508:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801250c:	b2bf      	uxth	r7, r7
 801250e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012512:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012516:	ea4c 0202 	orr.w	r2, ip, r2
 801251a:	f107 0c01 	add.w	ip, r7, #1
 801251e:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8012522:	097f      	lsrs	r7, r7, #5
 8012524:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8012528:	433a      	orrs	r2, r7
 801252a:	f820 2b02 	strh.w	r2, [r0], #2
 801252e:	e7cd      	b.n	80124cc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd0>
 8012530:	f8be 2000 	ldrh.w	r2, [lr]
 8012534:	ebc5 0242 	rsb	r2, r5, r2, lsl #1
 8012538:	4410      	add	r0, r2
 801253a:	e7c2      	b.n	80124c2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xc6>
 801253c:	07db      	lsls	r3, r3, #31
 801253e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8012542:	d50e      	bpl.n	8012562 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x166>
 8012544:	006d      	lsls	r5, r5, #1
 8012546:	4290      	cmp	r0, r2
 8012548:	d246      	bcs.n	80125d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 801254a:	1943      	adds	r3, r0, r5
 801254c:	4298      	cmp	r0, r3
 801254e:	d202      	bcs.n	8012556 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x15a>
 8012550:	f820 4b02 	strh.w	r4, [r0], #2
 8012554:	e7fa      	b.n	801254c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x150>
 8012556:	f8be 3000 	ldrh.w	r3, [lr]
 801255a:	ebc5 0343 	rsb	r3, r5, r3, lsl #1
 801255e:	4418      	add	r0, r3
 8012560:	e7f1      	b.n	8012546 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x14a>
 8012562:	0787      	lsls	r7, r0, #30
 8012564:	462b      	mov	r3, r5
 8012566:	d00a      	beq.n	801257e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x182>
 8012568:	4603      	mov	r3, r0
 801256a:	4293      	cmp	r3, r2
 801256c:	d205      	bcs.n	801257a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x17e>
 801256e:	801c      	strh	r4, [r3, #0]
 8012570:	f8be 1000 	ldrh.w	r1, [lr]
 8012574:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012578:	e7f7      	b.n	801256a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x16e>
 801257a:	3002      	adds	r0, #2
 801257c:	1e6b      	subs	r3, r5, #1
 801257e:	07dd      	lsls	r5, r3, #31
 8012580:	d50d      	bpl.n	801259e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a2>
 8012582:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8012586:	3901      	subs	r1, #1
 8012588:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801258c:	4291      	cmp	r1, r2
 801258e:	d205      	bcs.n	801259c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a0>
 8012590:	800c      	strh	r4, [r1, #0]
 8012592:	f8be 5000 	ldrh.w	r5, [lr]
 8012596:	eb01 0145 	add.w	r1, r1, r5, lsl #1
 801259a:	e7f7      	b.n	801258c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x190>
 801259c:	3b01      	subs	r3, #1
 801259e:	b1db      	cbz	r3, 80125d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 80125a0:	b2a1      	uxth	r1, r4
 80125a2:	105b      	asrs	r3, r3, #1
 80125a4:	ea41 4404 	orr.w	r4, r1, r4, lsl #16
 80125a8:	009b      	lsls	r3, r3, #2
 80125aa:	4290      	cmp	r0, r2
 80125ac:	d214      	bcs.n	80125d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 80125ae:	0781      	lsls	r1, r0, #30
 80125b0:	d006      	beq.n	80125c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c4>
 80125b2:	4b0e      	ldr	r3, [pc, #56]	; (80125ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f0>)
 80125b4:	4a0e      	ldr	r2, [pc, #56]	; (80125f0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f4>)
 80125b6:	480f      	ldr	r0, [pc, #60]	; (80125f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f8>)
 80125b8:	f44f 7162 	mov.w	r1, #904	; 0x388
 80125bc:	f008 ff26 	bl	801b40c <__assert_func>
 80125c0:	18c5      	adds	r5, r0, r3
 80125c2:	4601      	mov	r1, r0
 80125c4:	42a9      	cmp	r1, r5
 80125c6:	d202      	bcs.n	80125ce <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1d2>
 80125c8:	f841 4b04 	str.w	r4, [r1], #4
 80125cc:	e7fa      	b.n	80125c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c8>
 80125ce:	f8be 1000 	ldrh.w	r1, [lr]
 80125d2:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80125d6:	e7e8      	b.n	80125aa <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ae>
 80125d8:	6830      	ldr	r0, [r6, #0]
 80125da:	6803      	ldr	r3, [r0, #0]
 80125dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80125de:	4798      	blx	r3
 80125e0:	e73a      	b.n	8012458 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80125e2:	bf00      	nop
 80125e4:	2000a42c 	.word	0x2000a42c
 80125e8:	2000a426 	.word	0x2000a426
 80125ec:	0801f34d 	.word	0x0801f34d
 80125f0:	0801fb00 	.word	0x0801fb00
 80125f4:	0801f37c 	.word	0x0801f37c

080125f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80125f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80125fc:	4f97      	ldr	r7, [pc, #604]	; (801285c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 80125fe:	4616      	mov	r6, r2
 8012600:	683a      	ldr	r2, [r7, #0]
 8012602:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8012606:	2a02      	cmp	r2, #2
 8012608:	b08f      	sub	sp, #60	; 0x3c
 801260a:	4604      	mov	r4, r0
 801260c:	4689      	mov	r9, r1
 801260e:	d106      	bne.n	801261e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8012610:	4b93      	ldr	r3, [pc, #588]	; (8012860 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 8012612:	4a94      	ldr	r2, [pc, #592]	; (8012864 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8012614:	f44f 7132 	mov.w	r1, #712	; 0x2c8
 8012618:	4893      	ldr	r0, [pc, #588]	; (8012868 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 801261a:	f008 fef7 	bl	801b40c <__assert_func>
 801261e:	ad0e      	add	r5, sp, #56	; 0x38
 8012620:	f825 3d24 	strh.w	r3, [r5, #-36]!
 8012624:	4628      	mov	r0, r5
 8012626:	f7fd fa45 	bl	800fab4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801262a:	6823      	ldr	r3, [r4, #0]
 801262c:	4680      	mov	r8, r0
 801262e:	6a1b      	ldr	r3, [r3, #32]
 8012630:	4620      	mov	r0, r4
 8012632:	4798      	blx	r3
 8012634:	4580      	cmp	r8, r0
 8012636:	d004      	beq.n	8012642 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8012638:	4b8c      	ldr	r3, [pc, #560]	; (801286c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 801263a:	4a8a      	ldr	r2, [pc, #552]	; (8012864 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801263c:	f240 21ca 	movw	r1, #714	; 0x2ca
 8012640:	e7ea      	b.n	8012618 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012642:	4628      	mov	r0, r5
 8012644:	f7fd f9ac 	bl	800f9a0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8012648:	4680      	mov	r8, r0
 801264a:	b920      	cbnz	r0, 8012656 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 801264c:	4b88      	ldr	r3, [pc, #544]	; (8012870 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 801264e:	4a85      	ldr	r2, [pc, #532]	; (8012864 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8012650:	f44f 7133 	mov.w	r1, #716	; 0x2cc
 8012654:	e7e0      	b.n	8012618 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012656:	6830      	ldr	r0, [r6, #0]
 8012658:	6871      	ldr	r1, [r6, #4]
 801265a:	f9b6 a000 	ldrsh.w	sl, [r6]
 801265e:	ab06      	add	r3, sp, #24
 8012660:	c303      	stmia	r3!, {r0, r1}
 8012662:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8012666:	f8d9 0000 	ldr.w	r0, [r9]
 801266a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801266e:	ab08      	add	r3, sp, #32
 8012670:	c303      	stmia	r3!, {r0, r1}
 8012672:	4628      	mov	r0, r5
 8012674:	f7fd f88c 	bl	800f790 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012678:	4606      	mov	r6, r0
 801267a:	4628      	mov	r0, r5
 801267c:	f7fd f8c2 	bl	800f804 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012680:	f10d 0b20 	add.w	fp, sp, #32
 8012684:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8012688:	a806      	add	r0, sp, #24
 801268a:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 801268e:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8012692:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8012696:	f7fa f98f 	bl	800c9b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801269a:	4658      	mov	r0, fp
 801269c:	f7fa f98c 	bl	800c9b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80126a0:	a80a      	add	r0, sp, #40	; 0x28
 80126a2:	f7fa f989 	bl	800c9b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80126a6:	4d73      	ldr	r5, [pc, #460]	; (8012874 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 80126a8:	4b73      	ldr	r3, [pc, #460]	; (8012878 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 80126aa:	f9b5 2000 	ldrsh.w	r2, [r5]
 80126ae:	f9b3 3000 	ldrsh.w	r3, [r3]
 80126b2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80126b6:	2100      	movs	r1, #0
 80126b8:	910c      	str	r1, [sp, #48]	; 0x30
 80126ba:	4658      	mov	r0, fp
 80126bc:	a90c      	add	r1, sp, #48	; 0x30
 80126be:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80126c2:	f7f7 f863 	bl	800978c <_ZN8touchgfx4RectaNERKS0_>
 80126c6:	4658      	mov	r0, fp
 80126c8:	f7f7 f8a3 	bl	8009812 <_ZNK8touchgfx4Rect7isEmptyEv>
 80126cc:	2800      	cmp	r0, #0
 80126ce:	f040 8099 	bne.w	8012804 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80126d2:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 80126d6:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 80126da:	4288      	cmp	r0, r1
 80126dc:	db37      	blt.n	801274e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80126de:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 80126e2:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80126e6:	429a      	cmp	r2, r3
 80126e8:	db31      	blt.n	801274e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80126ea:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 80126ee:	4430      	add	r0, r6
 80126f0:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80126f4:	4431      	add	r1, r6
 80126f6:	b200      	sxth	r0, r0
 80126f8:	b209      	sxth	r1, r1
 80126fa:	4288      	cmp	r0, r1
 80126fc:	dc27      	bgt.n	801274e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80126fe:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8012702:	440a      	add	r2, r1
 8012704:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8012708:	440b      	add	r3, r1
 801270a:	b212      	sxth	r2, r2
 801270c:	b21b      	sxth	r3, r3
 801270e:	429a      	cmp	r2, r3
 8012710:	dc1d      	bgt.n	801274e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8012712:	6823      	ldr	r3, [r4, #0]
 8012714:	4620      	mov	r0, r4
 8012716:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012718:	4798      	blx	r3
 801271a:	4682      	mov	sl, r0
 801271c:	6838      	ldr	r0, [r7, #0]
 801271e:	6803      	ldr	r3, [r0, #0]
 8012720:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012722:	4798      	blx	r3
 8012724:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8012728:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801272c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8012730:	1a5b      	subs	r3, r3, r1
 8012732:	b29b      	uxth	r3, r3
 8012734:	b21c      	sxth	r4, r3
 8012736:	2c00      	cmp	r4, #0
 8012738:	dc0e      	bgt.n	8012758 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 801273a:	bf1f      	itttt	ne
 801273c:	f8ad 1020 	strhne.w	r1, [sp, #32]
 8012740:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 8012744:	185b      	addne	r3, r3, r1
 8012746:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 801274a:	4644      	mov	r4, r8
 801274c:	e009      	b.n	8012762 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 801274e:	4b4b      	ldr	r3, [pc, #300]	; (801287c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8012750:	4a44      	ldr	r2, [pc, #272]	; (8012864 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8012752:	f240 21da 	movw	r1, #730	; 0x2da
 8012756:	e75f      	b.n	8012618 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012758:	1ad3      	subs	r3, r2, r3
 801275a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801275e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8012762:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 8012766:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801276a:	1b9b      	subs	r3, r3, r6
 801276c:	b29b      	uxth	r3, r3
 801276e:	b219      	sxth	r1, r3
 8012770:	2900      	cmp	r1, #0
 8012772:	dd4b      	ble.n	801280c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 8012774:	4351      	muls	r1, r2
 8012776:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801277a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801277e:	1acb      	subs	r3, r1, r3
 8012780:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012784:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8012788:	2e00      	cmp	r6, #0
 801278a:	dd3b      	ble.n	8012804 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801278c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8012790:	2b00      	cmp	r3, #0
 8012792:	dd37      	ble.n	8012804 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012794:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8012798:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801279c:	fb0a f90c 	mul.w	r9, sl, ip
 80127a0:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 80127a4:	4481      	add	r9, r0
 80127a6:	8828      	ldrh	r0, [r5, #0]
 80127a8:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 80127ac:	42ae      	cmp	r6, r5
 80127ae:	bfa8      	it	ge
 80127b0:	462e      	movge	r6, r5
 80127b2:	1a41      	subs	r1, r0, r1
 80127b4:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80127b8:	428e      	cmp	r6, r1
 80127ba:	bfa8      	it	ge
 80127bc:	460e      	movge	r6, r1
 80127be:	429d      	cmp	r5, r3
 80127c0:	bfa8      	it	ge
 80127c2:	461d      	movge	r5, r3
 80127c4:	4b2c      	ldr	r3, [pc, #176]	; (8012878 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 80127c6:	881b      	ldrh	r3, [r3, #0]
 80127c8:	eba3 030c 	sub.w	r3, r3, ip
 80127cc:	429d      	cmp	r5, r3
 80127ce:	bfa8      	it	ge
 80127d0:	461d      	movge	r5, r3
 80127d2:	42b0      	cmp	r0, r6
 80127d4:	d12c      	bne.n	8012830 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 80127d6:	4290      	cmp	r0, r2
 80127d8:	d12a      	bne.n	8012830 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 80127da:	6838      	ldr	r0, [r7, #0]
 80127dc:	9203      	str	r2, [sp, #12]
 80127de:	6803      	ldr	r3, [r0, #0]
 80127e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80127e2:	4798      	blx	r3
 80127e4:	07c3      	lsls	r3, r0, #31
 80127e6:	d51a      	bpl.n	801281e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 80127e8:	9a03      	ldr	r2, [sp, #12]
 80127ea:	6838      	ldr	r0, [r7, #0]
 80127ec:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 80127f0:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80127f4:	6803      	ldr	r3, [r0, #0]
 80127f6:	9200      	str	r2, [sp, #0]
 80127f8:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 80127fa:	e89b 0006 	ldmia.w	fp, {r1, r2}
 80127fe:	4623      	mov	r3, r4
 8012800:	47a8      	blx	r5
 8012802:	4680      	mov	r8, r0
 8012804:	4640      	mov	r0, r8
 8012806:	b00f      	add	sp, #60	; 0x3c
 8012808:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801280c:	bf1f      	itttt	ne
 801280e:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 8012812:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 8012816:	185b      	addne	r3, r3, r1
 8012818:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 801281c:	e7b2      	b.n	8012784 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 801281e:	6838      	ldr	r0, [r7, #0]
 8012820:	6803      	ldr	r3, [r0, #0]
 8012822:	464a      	mov	r2, r9
 8012824:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8012826:	4621      	mov	r1, r4
 8012828:	fb05 f30a 	mul.w	r3, r5, sl
 801282c:	47b0      	blx	r6
 801282e:	e7e9      	b.n	8012804 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012830:	4355      	muls	r5, r2
 8012832:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 8012836:	9303      	str	r3, [sp, #12]
 8012838:	0076      	lsls	r6, r6, #1
 801283a:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 801283e:	9b03      	ldr	r3, [sp, #12]
 8012840:	429c      	cmp	r4, r3
 8012842:	d2df      	bcs.n	8012804 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012844:	6838      	ldr	r0, [r7, #0]
 8012846:	6803      	ldr	r3, [r0, #0]
 8012848:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801284a:	464a      	mov	r2, r9
 801284c:	461d      	mov	r5, r3
 801284e:	4621      	mov	r1, r4
 8012850:	4633      	mov	r3, r6
 8012852:	47a8      	blx	r5
 8012854:	44d1      	add	r9, sl
 8012856:	445c      	add	r4, fp
 8012858:	e7f1      	b.n	801283e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 801285a:	bf00      	nop
 801285c:	2000a42c 	.word	0x2000a42c
 8012860:	0801f173 	.word	0x0801f173
 8012864:	0801f9e3 	.word	0x0801f9e3
 8012868:	0801f37c 	.word	0x0801f37c
 801286c:	0801f225 	.word	0x0801f225
 8012870:	0801f27a 	.word	0x0801f27a
 8012874:	2000a426 	.word	0x2000a426
 8012878:	2000a428 	.word	0x2000a428
 801287c:	0801f2b8 	.word	0x0801f2b8

08012880 <_ZN8touchgfx8LCD16bppC1Ev>:
 8012880:	2200      	movs	r2, #0
 8012882:	4910      	ldr	r1, [pc, #64]	; (80128c4 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8012884:	6042      	str	r2, [r0, #4]
 8012886:	6001      	str	r1, [r0, #0]
 8012888:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801288c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8012890:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8012894:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8012898:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801289c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80128a0:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80128a4:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80128a8:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80128ac:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80128b0:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80128b4:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80128b8:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80128bc:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80128c0:	4770      	bx	lr
 80128c2:	bf00      	nop
 80128c4:	0801f65c 	.word	0x0801f65c

080128c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80128c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128cc:	460d      	mov	r5, r1
 80128ce:	b08b      	sub	sp, #44	; 0x2c
 80128d0:	4604      	mov	r4, r0
 80128d2:	6808      	ldr	r0, [r1, #0]
 80128d4:	6849      	ldr	r1, [r1, #4]
 80128d6:	4699      	mov	r9, r3
 80128d8:	ab06      	add	r3, sp, #24
 80128da:	c303      	stmia	r3!, {r0, r1}
 80128dc:	6810      	ldr	r0, [r2, #0]
 80128de:	6851      	ldr	r1, [r2, #4]
 80128e0:	ab08      	add	r3, sp, #32
 80128e2:	c303      	stmia	r3!, {r0, r1}
 80128e4:	a806      	add	r0, sp, #24
 80128e6:	f7fa f867 	bl	800c9b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80128ea:	4629      	mov	r1, r5
 80128ec:	a808      	add	r0, sp, #32
 80128ee:	f7fa f84b 	bl	800c988 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80128f2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80128f6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80128fa:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80128fe:	4d5f      	ldr	r5, [pc, #380]	; (8012a7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
 8012900:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8012904:	6828      	ldr	r0, [r5, #0]
 8012906:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 801290a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801290e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8012912:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8012916:	440a      	add	r2, r1
 8012918:	f8ad 2020 	strh.w	r2, [sp, #32]
 801291c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8012920:	4413      	add	r3, r2
 8012922:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012926:	6803      	ldr	r3, [r0, #0]
 8012928:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801292a:	4798      	blx	r3
 801292c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012930:	d118      	bne.n	8012964 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 8012932:	f010 0f20 	tst.w	r0, #32
 8012936:	6828      	ldr	r0, [r5, #0]
 8012938:	d017      	beq.n	801296a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 801293a:	f8bd 501c 	ldrh.w	r5, [sp, #28]
 801293e:	6801      	ldr	r1, [r0, #0]
 8012940:	9502      	str	r5, [sp, #8]
 8012942:	b2b6      	uxth	r6, r6
 8012944:	fa1f f588 	uxth.w	r5, r8
 8012948:	f8cd 900c 	str.w	r9, [sp, #12]
 801294c:	9601      	str	r6, [sp, #4]
 801294e:	9500      	str	r5, [sp, #0]
 8012950:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8012952:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012956:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801295a:	4621      	mov	r1, r4
 801295c:	47a8      	blx	r5
 801295e:	b00b      	add	sp, #44	; 0x2c
 8012960:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012964:	f010 0f40 	tst.w	r0, #64	; 0x40
 8012968:	e7e5      	b.n	8012936 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801296a:	6803      	ldr	r3, [r0, #0]
 801296c:	6a1b      	ldr	r3, [r3, #32]
 801296e:	4798      	blx	r3
 8012970:	4a43      	ldr	r2, [pc, #268]	; (8012a80 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8012972:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012976:	f8b2 e000 	ldrh.w	lr, [r2]
 801297a:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801297e:	fb0e 1303 	mla	r3, lr, r3, r1
 8012982:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012986:	fb0e fe06 	mul.w	lr, lr, r6
 801298a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801298e:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 8012992:	9305      	str	r3, [sp, #20]
 8012994:	4692      	mov	sl, r2
 8012996:	4570      	cmp	r0, lr
 8012998:	d26a      	bcs.n	8012a70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1a8>
 801299a:	9b05      	ldr	r3, [sp, #20]
 801299c:	4621      	mov	r1, r4
 801299e:	eb00 0b03 	add.w	fp, r0, r3
 80129a2:	4558      	cmp	r0, fp
 80129a4:	d257      	bcs.n	8012a56 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x18e>
 80129a6:	f851 4b04 	ldr.w	r4, [r1], #4
 80129aa:	0e22      	lsrs	r2, r4, #24
 80129ac:	d012      	beq.n	80129d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
 80129ae:	2aff      	cmp	r2, #255	; 0xff
 80129b0:	ea4f 2714 	mov.w	r7, r4, lsr #8
 80129b4:	d110      	bne.n	80129d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 80129b6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80129ba:	d10d      	bne.n	80129d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 80129bc:	0963      	lsrs	r3, r4, #5
 80129be:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80129c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80129c6:	f027 0707 	bic.w	r7, r7, #7
 80129ca:	431f      	orrs	r7, r3
 80129cc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80129d0:	433c      	orrs	r4, r7
 80129d2:	8004      	strh	r4, [r0, #0]
 80129d4:	3002      	adds	r0, #2
 80129d6:	e7e4      	b.n	80129a2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xda>
 80129d8:	fb09 f302 	mul.w	r3, r9, r2
 80129dc:	1c5a      	adds	r2, r3, #1
 80129de:	f8b0 c000 	ldrh.w	ip, [r0]
 80129e2:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80129e6:	1212      	asrs	r2, r2, #8
 80129e8:	b293      	uxth	r3, r2
 80129ea:	ea4f 262c 	mov.w	r6, ip, asr #8
 80129ee:	f3c4 4507 	ubfx	r5, r4, #16, #8
 80129f2:	43d2      	mvns	r2, r2
 80129f4:	b2d2      	uxtb	r2, r2
 80129f6:	fb15 f503 	smulbb	r5, r5, r3
 80129fa:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80129fe:	fb06 5602 	mla	r6, r6, r2, r5
 8012a02:	b2ff      	uxtb	r7, r7
 8012a04:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8012a08:	b2e4      	uxtb	r4, r4
 8012a0a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012a0e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012a12:	fb17 f703 	smulbb	r7, r7, r3
 8012a16:	fa5f fc8c 	uxtb.w	ip, ip
 8012a1a:	fb14 f403 	smulbb	r4, r4, r3
 8012a1e:	fb05 7702 	mla	r7, r5, r2, r7
 8012a22:	fb0c 4202 	mla	r2, ip, r2, r4
 8012a26:	b2b6      	uxth	r6, r6
 8012a28:	b2bf      	uxth	r7, r7
 8012a2a:	b292      	uxth	r2, r2
 8012a2c:	1c73      	adds	r3, r6, #1
 8012a2e:	f102 0c01 	add.w	ip, r2, #1
 8012a32:	1c7d      	adds	r5, r7, #1
 8012a34:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8012a38:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8012a3c:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8012a40:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8012a44:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012a48:	097f      	lsrs	r7, r7, #5
 8012a4a:	4316      	orrs	r6, r2
 8012a4c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8012a50:	433e      	orrs	r6, r7
 8012a52:	8006      	strh	r6, [r0, #0]
 8012a54:	e7be      	b.n	80129d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
 8012a56:	f8ba 3000 	ldrh.w	r3, [sl]
 8012a5a:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 8012a5e:	eba3 0308 	sub.w	r3, r3, r8
 8012a62:	eba4 0408 	sub.w	r4, r4, r8
 8012a66:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012a6a:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8012a6e:	e792      	b.n	8012996 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8012a70:	4b02      	ldr	r3, [pc, #8]	; (8012a7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
 8012a72:	6818      	ldr	r0, [r3, #0]
 8012a74:	6803      	ldr	r3, [r0, #0]
 8012a76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012a78:	4798      	blx	r3
 8012a7a:	e770      	b.n	801295e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 8012a7c:	2000a42c 	.word	0x2000a42c
 8012a80:	2000a426 	.word	0x2000a426

08012a84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8012a84:	b570      	push	{r4, r5, r6, lr}
 8012a86:	9d04      	ldr	r5, [sp, #16]
 8012a88:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8012a8c:	460c      	mov	r4, r1
 8012a8e:	4619      	mov	r1, r3
 8012a90:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012a94:	2a0d      	cmp	r2, #13
 8012a96:	d820      	bhi.n	8012ada <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8012a98:	e8df f002 	tbb	[pc, r2]
 8012a9c:	18121807 	.word	0x18121807
 8012aa0:	18181818 	.word	0x18181818
 8012aa4:	18181818 	.word	0x18181818
 8012aa8:	1818      	.short	0x1818
 8012aaa:	6802      	ldr	r2, [r0, #0]
 8012aac:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8012ab0:	68d6      	ldr	r6, [r2, #12]
 8012ab2:	462b      	mov	r3, r5
 8012ab4:	460a      	mov	r2, r1
 8012ab6:	46b4      	mov	ip, r6
 8012ab8:	4621      	mov	r1, r4
 8012aba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012abe:	4760      	bx	ip
 8012ac0:	462a      	mov	r2, r5
 8012ac2:	4620      	mov	r0, r4
 8012ac4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012ac8:	f7ff befe 	b.w	80128c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012acc:	4b03      	ldr	r3, [pc, #12]	; (8012adc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 8012ace:	4a04      	ldr	r2, [pc, #16]	; (8012ae0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8012ad0:	4804      	ldr	r0, [pc, #16]	; (8012ae4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8012ad2:	f240 21c1 	movw	r1, #705	; 0x2c1
 8012ad6:	f008 fc99 	bl	801b40c <__assert_func>
 8012ada:	bd70      	pop	{r4, r5, r6, pc}
 8012adc:	0801f318 	.word	0x0801f318
 8012ae0:	0801fa69 	.word	0x0801fa69
 8012ae4:	0801f37c 	.word	0x0801f37c

08012ae8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8012ae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012aec:	b093      	sub	sp, #76	; 0x4c
 8012aee:	880f      	ldrh	r7, [r1, #0]
 8012af0:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8012af4:	4604      	mov	r4, r0
 8012af6:	4688      	mov	r8, r1
 8012af8:	4616      	mov	r6, r2
 8012afa:	b12f      	cbz	r7, 8012b08 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 8012afc:	4b6f      	ldr	r3, [pc, #444]	; (8012cbc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 8012afe:	4a70      	ldr	r2, [pc, #448]	; (8012cc0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8012b00:	4870      	ldr	r0, [pc, #448]	; (8012cc4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8012b02:	21e2      	movs	r1, #226	; 0xe2
 8012b04:	f008 fc82 	bl	801b40c <__assert_func>
 8012b08:	6810      	ldr	r0, [r2, #0]
 8012b0a:	6851      	ldr	r1, [r2, #4]
 8012b0c:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8012ccc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>
 8012b10:	ad0e      	add	r5, sp, #56	; 0x38
 8012b12:	c503      	stmia	r5!, {r0, r1}
 8012b14:	6818      	ldr	r0, [r3, #0]
 8012b16:	6859      	ldr	r1, [r3, #4]
 8012b18:	ad10      	add	r5, sp, #64	; 0x40
 8012b1a:	c503      	stmia	r5!, {r0, r1}
 8012b1c:	a80e      	add	r0, sp, #56	; 0x38
 8012b1e:	f7f9 ff4b 	bl	800c9b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012b22:	4631      	mov	r1, r6
 8012b24:	a810      	add	r0, sp, #64	; 0x40
 8012b26:	f7f9 ff2f 	bl	800c988 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012b2a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012b2e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012b32:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8012b36:	f8db 0000 	ldr.w	r0, [fp]
 8012b3a:	f9bd 9044 	ldrsh.w	r9, [sp, #68]	; 0x44
 8012b3e:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8012b42:	4e61      	ldr	r6, [pc, #388]	; (8012cc8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8012b44:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012b48:	440c      	add	r4, r1
 8012b4a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8012b4e:	440a      	add	r2, r1
 8012b50:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012b54:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012b58:	4413      	add	r3, r2
 8012b5a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8012b5e:	6803      	ldr	r3, [r0, #0]
 8012b60:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012b64:	4798      	blx	r3
 8012b66:	2801      	cmp	r0, #1
 8012b68:	d11d      	bne.n	8012ba6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbe>
 8012b6a:	220b      	movs	r2, #11
 8012b6c:	9708      	str	r7, [sp, #32]
 8012b6e:	9207      	str	r2, [sp, #28]
 8012b70:	8832      	ldrh	r2, [r6, #0]
 8012b72:	f8cd a010 	str.w	sl, [sp, #16]
 8012b76:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8012b7a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8012b7e:	9203      	str	r2, [sp, #12]
 8012b80:	fa1f f289 	uxth.w	r2, r9
 8012b84:	9201      	str	r2, [sp, #4]
 8012b86:	b2ad      	uxth	r5, r5
 8012b88:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8012b8c:	9200      	str	r2, [sp, #0]
 8012b8e:	9502      	str	r5, [sp, #8]
 8012b90:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012b94:	f8db 0000 	ldr.w	r0, [fp]
 8012b98:	4642      	mov	r2, r8
 8012b9a:	4621      	mov	r1, r4
 8012b9c:	f7f7 fa4a 	bl	800a034 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8012ba0:	b013      	add	sp, #76	; 0x4c
 8012ba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012ba6:	f8db 0000 	ldr.w	r0, [fp]
 8012baa:	6803      	ldr	r3, [r0, #0]
 8012bac:	6a1b      	ldr	r3, [r3, #32]
 8012bae:	4798      	blx	r3
 8012bb0:	8832      	ldrh	r2, [r6, #0]
 8012bb2:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012bb6:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8012bba:	960d      	str	r6, [sp, #52]	; 0x34
 8012bbc:	fb02 1303 	mla	r3, r2, r3, r1
 8012bc0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012bc4:	4355      	muls	r5, r2
 8012bc6:	eb00 0345 	add.w	r3, r0, r5, lsl #1
 8012bca:	930c      	str	r3, [sp, #48]	; 0x30
 8012bcc:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8012bd0:	930b      	str	r3, [sp, #44]	; 0x2c
 8012bd2:	f04f 0e04 	mov.w	lr, #4
 8012bd6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012bd8:	4298      	cmp	r0, r3
 8012bda:	d269      	bcs.n	8012cb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>
 8012bdc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012bde:	4621      	mov	r1, r4
 8012be0:	eb00 0b03 	add.w	fp, r0, r3
 8012be4:	4558      	cmp	r0, fp
 8012be6:	460b      	mov	r3, r1
 8012be8:	d256      	bcs.n	8012c98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b0>
 8012bea:	781b      	ldrb	r3, [r3, #0]
 8012bec:	fb1e e303 	smlabb	r3, lr, r3, lr
 8012bf0:	3101      	adds	r1, #1
 8012bf2:	f858 2003 	ldr.w	r2, [r8, r3]
 8012bf6:	0e14      	lsrs	r4, r2, #24
 8012bf8:	d012      	beq.n	8012c20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
 8012bfa:	2cff      	cmp	r4, #255	; 0xff
 8012bfc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8012c00:	d110      	bne.n	8012c24 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8012c02:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8012c06:	d10d      	bne.n	8012c24 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8012c08:	0953      	lsrs	r3, r2, #5
 8012c0a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8012c0e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012c12:	f026 0607 	bic.w	r6, r6, #7
 8012c16:	431e      	orrs	r6, r3
 8012c18:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8012c1c:	4332      	orrs	r2, r6
 8012c1e:	8002      	strh	r2, [r0, #0]
 8012c20:	3002      	adds	r0, #2
 8012c22:	e7df      	b.n	8012be4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xfc>
 8012c24:	fb0a f404 	mul.w	r4, sl, r4
 8012c28:	1c63      	adds	r3, r4, #1
 8012c2a:	8807      	ldrh	r7, [r0, #0]
 8012c2c:	eb03 2324 	add.w	r3, r3, r4, asr #8
 8012c30:	121b      	asrs	r3, r3, #8
 8012c32:	fa1f fc83 	uxth.w	ip, r3
 8012c36:	123d      	asrs	r5, r7, #8
 8012c38:	f3c2 4407 	ubfx	r4, r2, #16, #8
 8012c3c:	43db      	mvns	r3, r3
 8012c3e:	b2db      	uxtb	r3, r3
 8012c40:	fb14 f40c 	smulbb	r4, r4, ip
 8012c44:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8012c48:	fb05 4503 	mla	r5, r5, r3, r4
 8012c4c:	b2d2      	uxtb	r2, r2
 8012c4e:	10fc      	asrs	r4, r7, #3
 8012c50:	00ff      	lsls	r7, r7, #3
 8012c52:	b2ff      	uxtb	r7, r7
 8012c54:	fb12 f20c 	smulbb	r2, r2, ip
 8012c58:	fb07 2203 	mla	r2, r7, r3, r2
 8012c5c:	b2f6      	uxtb	r6, r6
 8012c5e:	b2ad      	uxth	r5, r5
 8012c60:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8012c64:	b292      	uxth	r2, r2
 8012c66:	fb16 f60c 	smulbb	r6, r6, ip
 8012c6a:	fb04 6603 	mla	r6, r4, r3, r6
 8012c6e:	1c6b      	adds	r3, r5, #1
 8012c70:	1c54      	adds	r4, r2, #1
 8012c72:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8012c76:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8012c7a:	b2b6      	uxth	r6, r6
 8012c7c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8012c80:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8012c84:	4325      	orrs	r5, r4
 8012c86:	1c74      	adds	r4, r6, #1
 8012c88:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8012c8c:	0976      	lsrs	r6, r6, #5
 8012c8e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012c92:	4335      	orrs	r5, r6
 8012c94:	8005      	strh	r5, [r0, #0]
 8012c96:	e7c3      	b.n	8012c20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
 8012c98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012c9a:	f9bd 403c 	ldrsh.w	r4, [sp, #60]	; 0x3c
 8012c9e:	881b      	ldrh	r3, [r3, #0]
 8012ca0:	eba4 0409 	sub.w	r4, r4, r9
 8012ca4:	eba3 0309 	sub.w	r3, r3, r9
 8012ca8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012cac:	440c      	add	r4, r1
 8012cae:	e792      	b.n	8012bd6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8012cb0:	4b06      	ldr	r3, [pc, #24]	; (8012ccc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8012cb2:	6818      	ldr	r0, [r3, #0]
 8012cb4:	6803      	ldr	r3, [r0, #0]
 8012cb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012cb8:	4798      	blx	r3
 8012cba:	e771      	b.n	8012ba0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb8>
 8012cbc:	0801f123 	.word	0x0801f123
 8012cc0:	0801f83a 	.word	0x0801f83a
 8012cc4:	0801f37c 	.word	0x0801f37c
 8012cc8:	2000a426 	.word	0x2000a426
 8012ccc:	2000a42c 	.word	0x2000a42c

08012cd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8012cd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012cd4:	4614      	mov	r4, r2
 8012cd6:	880a      	ldrh	r2, [r1, #0]
 8012cd8:	b091      	sub	sp, #68	; 0x44
 8012cda:	2a02      	cmp	r2, #2
 8012cdc:	4607      	mov	r7, r0
 8012cde:	4689      	mov	r9, r1
 8012ce0:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 8012ce4:	d006      	beq.n	8012cf4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8012ce6:	4b77      	ldr	r3, [pc, #476]	; (8012ec4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f4>)
 8012ce8:	4a77      	ldr	r2, [pc, #476]	; (8012ec8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f8>)
 8012cea:	4878      	ldr	r0, [pc, #480]	; (8012ecc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1fc>)
 8012cec:	f240 113b 	movw	r1, #315	; 0x13b
 8012cf0:	f008 fb8c 	bl	801b40c <__assert_func>
 8012cf4:	2e00      	cmp	r6, #0
 8012cf6:	d04b      	beq.n	8012d90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8012cf8:	6820      	ldr	r0, [r4, #0]
 8012cfa:	6861      	ldr	r1, [r4, #4]
 8012cfc:	f8df a1d4 	ldr.w	sl, [pc, #468]	; 8012ed4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>
 8012d00:	ad0c      	add	r5, sp, #48	; 0x30
 8012d02:	c503      	stmia	r5!, {r0, r1}
 8012d04:	6818      	ldr	r0, [r3, #0]
 8012d06:	6859      	ldr	r1, [r3, #4]
 8012d08:	ad0e      	add	r5, sp, #56	; 0x38
 8012d0a:	c503      	stmia	r5!, {r0, r1}
 8012d0c:	a80c      	add	r0, sp, #48	; 0x30
 8012d0e:	f7f9 fe53 	bl	800c9b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012d12:	4621      	mov	r1, r4
 8012d14:	a80e      	add	r0, sp, #56	; 0x38
 8012d16:	f7f9 fe37 	bl	800c988 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012d1a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8012d1e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8012d22:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8012d26:	f8da 0000 	ldr.w	r0, [sl]
 8012d2a:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8012d2e:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 8012d32:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012d36:	187c      	adds	r4, r7, r1
 8012d38:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8012d3c:	4f64      	ldr	r7, [pc, #400]	; (8012ed0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 8012d3e:	440a      	add	r2, r1
 8012d40:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8012d44:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8012d48:	4413      	add	r3, r2
 8012d4a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8012d4e:	6803      	ldr	r3, [r0, #0]
 8012d50:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012d54:	4798      	blx	r3
 8012d56:	2801      	cmp	r0, #1
 8012d58:	d11d      	bne.n	8012d96 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 8012d5a:	2200      	movs	r2, #0
 8012d5c:	210b      	movs	r1, #11
 8012d5e:	e9cd 1207 	strd	r1, r2, [sp, #28]
 8012d62:	8839      	ldrh	r1, [r7, #0]
 8012d64:	9604      	str	r6, [sp, #16]
 8012d66:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8012d6a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8012d6e:	9203      	str	r2, [sp, #12]
 8012d70:	fa1f f288 	uxth.w	r2, r8
 8012d74:	9201      	str	r2, [sp, #4]
 8012d76:	b2ad      	uxth	r5, r5
 8012d78:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012d7c:	9200      	str	r2, [sp, #0]
 8012d7e:	9502      	str	r5, [sp, #8]
 8012d80:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012d84:	f8da 0000 	ldr.w	r0, [sl]
 8012d88:	464a      	mov	r2, r9
 8012d8a:	4621      	mov	r1, r4
 8012d8c:	f7f7 f952 	bl	800a034 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8012d90:	b011      	add	sp, #68	; 0x44
 8012d92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d96:	f8da 0000 	ldr.w	r0, [sl]
 8012d9a:	6803      	ldr	r3, [r0, #0]
 8012d9c:	6a1b      	ldr	r3, [r3, #32]
 8012d9e:	4798      	blx	r3
 8012da0:	8839      	ldrh	r1, [r7, #0]
 8012da2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8012da6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8012daa:	2eff      	cmp	r6, #255	; 0xff
 8012dac:	fb01 2303 	mla	r3, r1, r3, r2
 8012db0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012db4:	f109 0204 	add.w	r2, r9, #4
 8012db8:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 8012dbc:	fb05 f501 	mul.w	r5, r5, r1
 8012dc0:	d05f      	beq.n	8012e82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b2>
 8012dc2:	f1c6 09ff 	rsb	r9, r6, #255	; 0xff
 8012dc6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012dca:	b2b6      	uxth	r6, r6
 8012dcc:	fa1f f989 	uxth.w	r9, r9
 8012dd0:	970b      	str	r7, [sp, #44]	; 0x2c
 8012dd2:	42a8      	cmp	r0, r5
 8012dd4:	d26f      	bcs.n	8012eb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
 8012dd6:	eb00 010b 	add.w	r1, r0, fp
 8012dda:	4288      	cmp	r0, r1
 8012ddc:	4623      	mov	r3, r4
 8012dde:	d244      	bcs.n	8012e6a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19a>
 8012de0:	781b      	ldrb	r3, [r3, #0]
 8012de2:	8807      	ldrh	r7, [r0, #0]
 8012de4:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8012de8:	ea4f 2c27 	mov.w	ip, r7, asr #8
 8012dec:	ea4f 2e23 	mov.w	lr, r3, asr #8
 8012df0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012df4:	fb1c fc09 	smulbb	ip, ip, r9
 8012df8:	ea4f 0ae7 	mov.w	sl, r7, asr #3
 8012dfc:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8012e00:	00ff      	lsls	r7, r7, #3
 8012e02:	fb0e ce06 	mla	lr, lr, r6, ip
 8012e06:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012e0a:	ea4f 0ce3 	mov.w	ip, r3, asr #3
 8012e0e:	b2ff      	uxtb	r7, r7
 8012e10:	00db      	lsls	r3, r3, #3
 8012e12:	fa1f fe8e 	uxth.w	lr, lr
 8012e16:	fb1a fa09 	smulbb	sl, sl, r9
 8012e1a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8012e1e:	b2db      	uxtb	r3, r3
 8012e20:	fb17 f709 	smulbb	r7, r7, r9
 8012e24:	fb0c ac06 	mla	ip, ip, r6, sl
 8012e28:	fb03 7306 	mla	r3, r3, r6, r7
 8012e2c:	f10e 0a01 	add.w	sl, lr, #1
 8012e30:	b29b      	uxth	r3, r3
 8012e32:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 8012e36:	f40e 4a78 	and.w	sl, lr, #63488	; 0xf800
 8012e3a:	f103 0e01 	add.w	lr, r3, #1
 8012e3e:	eb0e 2313 	add.w	r3, lr, r3, lsr #8
 8012e42:	fa1f fc8c 	uxth.w	ip, ip
 8012e46:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8012e4a:	ea4a 0e03 	orr.w	lr, sl, r3
 8012e4e:	f10c 0a01 	add.w	sl, ip, #1
 8012e52:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 8012e56:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8012e5a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8012e5e:	ea4e 0e0c 	orr.w	lr, lr, ip
 8012e62:	3401      	adds	r4, #1
 8012e64:	f820 eb02 	strh.w	lr, [r0], #2
 8012e68:	e7b7      	b.n	8012dda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x10a>
 8012e6a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012e6c:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
 8012e70:	881b      	ldrh	r3, [r3, #0]
 8012e72:	eba1 0108 	sub.w	r1, r1, r8
 8012e76:	eba3 0308 	sub.w	r3, r3, r8
 8012e7a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012e7e:	440c      	add	r4, r1
 8012e80:	e7a7      	b.n	8012dd2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x102>
 8012e82:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012e86:	42a8      	cmp	r0, r5
 8012e88:	d215      	bcs.n	8012eb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
 8012e8a:	eb00 010b 	add.w	r1, r0, fp
 8012e8e:	4288      	cmp	r0, r1
 8012e90:	d206      	bcs.n	8012ea0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1d0>
 8012e92:	f814 3b01 	ldrb.w	r3, [r4], #1
 8012e96:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8012e9a:	f820 3b02 	strh.w	r3, [r0], #2
 8012e9e:	e7f6      	b.n	8012e8e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1be>
 8012ea0:	883b      	ldrh	r3, [r7, #0]
 8012ea2:	eba3 0308 	sub.w	r3, r3, r8
 8012ea6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012eaa:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8012eae:	eba3 0308 	sub.w	r3, r3, r8
 8012eb2:	441c      	add	r4, r3
 8012eb4:	e7e7      	b.n	8012e86 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b6>
 8012eb6:	4b07      	ldr	r3, [pc, #28]	; (8012ed4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8012eb8:	6818      	ldr	r0, [r3, #0]
 8012eba:	6803      	ldr	r3, [r0, #0]
 8012ebc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012ebe:	4798      	blx	r3
 8012ec0:	e766      	b.n	8012d90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8012ec2:	bf00      	nop
 8012ec4:	0801efe1 	.word	0x0801efe1
 8012ec8:	0801f6a4 	.word	0x0801f6a4
 8012ecc:	0801f37c 	.word	0x0801f37c
 8012ed0:	2000a426 	.word	0x2000a426
 8012ed4:	2000a42c 	.word	0x2000a42c

08012ed8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8012ed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012edc:	4614      	mov	r4, r2
 8012ede:	880a      	ldrh	r2, [r1, #0]
 8012ee0:	b091      	sub	sp, #68	; 0x44
 8012ee2:	2a01      	cmp	r2, #1
 8012ee4:	4606      	mov	r6, r0
 8012ee6:	4688      	mov	r8, r1
 8012ee8:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 8012eec:	d006      	beq.n	8012efc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 8012eee:	4b7c      	ldr	r3, [pc, #496]	; (80130e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x208>)
 8012ef0:	4a7c      	ldr	r2, [pc, #496]	; (80130e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20c>)
 8012ef2:	487d      	ldr	r0, [pc, #500]	; (80130e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x210>)
 8012ef4:	f240 1197 	movw	r1, #407	; 0x197
 8012ef8:	f008 fa88 	bl	801b40c <__assert_func>
 8012efc:	2f00      	cmp	r7, #0
 8012efe:	d04b      	beq.n	8012f98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8012f00:	6820      	ldr	r0, [r4, #0]
 8012f02:	6861      	ldr	r1, [r4, #4]
 8012f04:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 80130f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8012f08:	ad0c      	add	r5, sp, #48	; 0x30
 8012f0a:	c503      	stmia	r5!, {r0, r1}
 8012f0c:	6818      	ldr	r0, [r3, #0]
 8012f0e:	6859      	ldr	r1, [r3, #4]
 8012f10:	ad0e      	add	r5, sp, #56	; 0x38
 8012f12:	c503      	stmia	r5!, {r0, r1}
 8012f14:	a80c      	add	r0, sp, #48	; 0x30
 8012f16:	f7f9 fd4f 	bl	800c9b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012f1a:	4621      	mov	r1, r4
 8012f1c:	a80e      	add	r0, sp, #56	; 0x38
 8012f1e:	f7f9 fd33 	bl	800c988 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012f22:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8012f26:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8012f2a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8012f2e:	f8da 0000 	ldr.w	r0, [sl]
 8012f32:	f9bd 503c 	ldrsh.w	r5, [sp, #60]	; 0x3c
 8012f36:	f9bd 903e 	ldrsh.w	r9, [sp, #62]	; 0x3e
 8012f3a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012f3e:	1874      	adds	r4, r6, r1
 8012f40:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8012f44:	4e69      	ldr	r6, [pc, #420]	; (80130ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x214>)
 8012f46:	440a      	add	r2, r1
 8012f48:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8012f4c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8012f50:	4413      	add	r3, r2
 8012f52:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8012f56:	6803      	ldr	r3, [r0, #0]
 8012f58:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012f5c:	4798      	blx	r3
 8012f5e:	2801      	cmp	r0, #1
 8012f60:	d11d      	bne.n	8012f9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 8012f62:	220b      	movs	r2, #11
 8012f64:	2100      	movs	r1, #0
 8012f66:	e9cd 2107 	strd	r2, r1, [sp, #28]
 8012f6a:	8832      	ldrh	r2, [r6, #0]
 8012f6c:	9704      	str	r7, [sp, #16]
 8012f6e:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8012f72:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8012f76:	9203      	str	r2, [sp, #12]
 8012f78:	fa1f f289 	uxth.w	r2, r9
 8012f7c:	9202      	str	r2, [sp, #8]
 8012f7e:	b2ad      	uxth	r5, r5
 8012f80:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012f84:	9200      	str	r2, [sp, #0]
 8012f86:	9501      	str	r5, [sp, #4]
 8012f88:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012f8c:	f8da 0000 	ldr.w	r0, [sl]
 8012f90:	4642      	mov	r2, r8
 8012f92:	4621      	mov	r1, r4
 8012f94:	f7f7 f84e 	bl	800a034 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8012f98:	b011      	add	sp, #68	; 0x44
 8012f9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012f9e:	f8da 0000 	ldr.w	r0, [sl]
 8012fa2:	6803      	ldr	r3, [r0, #0]
 8012fa4:	6a1b      	ldr	r3, [r3, #32]
 8012fa6:	4798      	blx	r3
 8012fa8:	8832      	ldrh	r2, [r6, #0]
 8012faa:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8012fae:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8012fb2:	2fff      	cmp	r7, #255	; 0xff
 8012fb4:	fb02 1303 	mla	r3, r2, r3, r1
 8012fb8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012fbc:	ea4f 0e45 	mov.w	lr, r5, lsl #1
 8012fc0:	fb09 f902 	mul.w	r9, r9, r2
 8012fc4:	d056      	beq.n	8013074 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 8012fc6:	ea6f 0c07 	mvn.w	ip, r7
 8012fca:	eb00 0949 	add.w	r9, r0, r9, lsl #1
 8012fce:	b2bb      	uxth	r3, r7
 8012fd0:	fa5f fc8c 	uxtb.w	ip, ip
 8012fd4:	960b      	str	r6, [sp, #44]	; 0x2c
 8012fd6:	4548      	cmp	r0, r9
 8012fd8:	d27b      	bcs.n	80130d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
 8012fda:	eb00 0a0e 	add.w	sl, r0, lr
 8012fde:	4550      	cmp	r0, sl
 8012fe0:	4622      	mov	r2, r4
 8012fe2:	d23d      	bcs.n	8013060 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x188>
 8012fe4:	7811      	ldrb	r1, [r2, #0]
 8012fe6:	2604      	movs	r6, #4
 8012fe8:	2203      	movs	r2, #3
 8012fea:	fb12 6101 	smlabb	r1, r2, r1, r6
 8012fee:	eb08 0b01 	add.w	fp, r8, r1
 8012ff2:	8802      	ldrh	r2, [r0, #0]
 8012ff4:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8012ff8:	f89b b001 	ldrb.w	fp, [fp, #1]
 8012ffc:	f818 1001 	ldrb.w	r1, [r8, r1]
 8013000:	1217      	asrs	r7, r2, #8
 8013002:	fb16 f603 	smulbb	r6, r6, r3
 8013006:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801300a:	fb07 670c 	mla	r7, r7, ip, r6
 801300e:	10d6      	asrs	r6, r2, #3
 8013010:	00d2      	lsls	r2, r2, #3
 8013012:	b2d2      	uxtb	r2, r2
 8013014:	fb1b fb03 	smulbb	fp, fp, r3
 8013018:	fb12 f20c 	smulbb	r2, r2, ip
 801301c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013020:	b2bf      	uxth	r7, r7
 8013022:	fb06 b60c 	mla	r6, r6, ip, fp
 8013026:	fb01 2103 	mla	r1, r1, r3, r2
 801302a:	b2b6      	uxth	r6, r6
 801302c:	b289      	uxth	r1, r1
 801302e:	1c7a      	adds	r2, r7, #1
 8013030:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013034:	f106 0b01 	add.w	fp, r6, #1
 8013038:	1c4a      	adds	r2, r1, #1
 801303a:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801303e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8013042:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013046:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801304a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801304e:	4317      	orrs	r7, r2
 8013050:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013054:	ea47 070b 	orr.w	r7, r7, fp
 8013058:	3401      	adds	r4, #1
 801305a:	f820 7b02 	strh.w	r7, [r0], #2
 801305e:	e7be      	b.n	8012fde <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x106>
 8013060:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013062:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
 8013066:	8812      	ldrh	r2, [r2, #0]
 8013068:	1b49      	subs	r1, r1, r5
 801306a:	1b52      	subs	r2, r2, r5
 801306c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013070:	440c      	add	r4, r1
 8013072:	e7b0      	b.n	8012fd6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xfe>
 8013074:	491e      	ldr	r1, [pc, #120]	; (80130f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8013076:	eb00 0949 	add.w	r9, r0, r9, lsl #1
 801307a:	2203      	movs	r2, #3
 801307c:	2704      	movs	r7, #4
 801307e:	4548      	cmp	r0, r9
 8013080:	d227      	bcs.n	80130d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
 8013082:	eb00 0c0e 	add.w	ip, r0, lr
 8013086:	4560      	cmp	r0, ip
 8013088:	4623      	mov	r3, r4
 801308a:	d219      	bcs.n	80130c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1e8>
 801308c:	f893 a000 	ldrb.w	sl, [r3]
 8013090:	fb12 7a0a 	smlabb	sl, r2, sl, r7
 8013094:	eb08 0b0a 	add.w	fp, r8, sl
 8013098:	f818 a00a 	ldrb.w	sl, [r8, sl]
 801309c:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80130a0:	f89b b001 	ldrb.w	fp, [fp, #1]
 80130a4:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80130a8:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80130ac:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80130b0:	ea43 030b 	orr.w	r3, r3, fp
 80130b4:	ea43 03da 	orr.w	r3, r3, sl, lsr #3
 80130b8:	3401      	adds	r4, #1
 80130ba:	f820 3b02 	strh.w	r3, [r0], #2
 80130be:	e7e2      	b.n	8013086 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1ae>
 80130c0:	8833      	ldrh	r3, [r6, #0]
 80130c2:	1b5b      	subs	r3, r3, r5
 80130c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80130c8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80130cc:	1b5b      	subs	r3, r3, r5
 80130ce:	441c      	add	r4, r3
 80130d0:	e7d5      	b.n	801307e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1a6>
 80130d2:	4b08      	ldr	r3, [pc, #32]	; (80130f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80130d4:	6818      	ldr	r0, [r3, #0]
 80130d6:	6803      	ldr	r3, [r0, #0]
 80130d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80130da:	4798      	blx	r3
 80130dc:	e75c      	b.n	8012f98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80130de:	bf00      	nop
 80130e0:	0801f02f 	.word	0x0801f02f
 80130e4:	0801f72d 	.word	0x0801f72d
 80130e8:	0801f37c 	.word	0x0801f37c
 80130ec:	2000a426 	.word	0x2000a426
 80130f0:	fffff800 	.word	0xfffff800
 80130f4:	2000a42c 	.word	0x2000a42c

080130f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80130f8:	b430      	push	{r4, r5}
 80130fa:	780d      	ldrb	r5, [r1, #0]
 80130fc:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8013100:	2d01      	cmp	r5, #1
 8013102:	d00a      	beq.n	801311a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8013104:	d305      	bcc.n	8013112 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8013106:	2d02      	cmp	r5, #2
 8013108:	d10b      	bne.n	8013122 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801310a:	9402      	str	r4, [sp, #8]
 801310c:	bc30      	pop	{r4, r5}
 801310e:	f7ff bddf 	b.w	8012cd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8013112:	9402      	str	r4, [sp, #8]
 8013114:	bc30      	pop	{r4, r5}
 8013116:	f7ff bce7 	b.w	8012ae8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801311a:	9402      	str	r4, [sp, #8]
 801311c:	bc30      	pop	{r4, r5}
 801311e:	f7ff bedb 	b.w	8012ed8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8013122:	bc30      	pop	{r4, r5}
 8013124:	4770      	bx	lr
	...

08013128 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8013128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801312c:	4604      	mov	r4, r0
 801312e:	b087      	sub	sp, #28
 8013130:	6810      	ldr	r0, [r2, #0]
 8013132:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8013136:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8013370 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801313a:	460e      	mov	r6, r1
 801313c:	6851      	ldr	r1, [r2, #4]
 801313e:	ad02      	add	r5, sp, #8
 8013140:	c503      	stmia	r5!, {r0, r1}
 8013142:	6818      	ldr	r0, [r3, #0]
 8013144:	6859      	ldr	r1, [r3, #4]
 8013146:	ad04      	add	r5, sp, #16
 8013148:	4617      	mov	r7, r2
 801314a:	c503      	stmia	r5!, {r0, r1}
 801314c:	a802      	add	r0, sp, #8
 801314e:	f7f9 fc33 	bl	800c9b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013152:	4639      	mov	r1, r7
 8013154:	a804      	add	r0, sp, #16
 8013156:	f7f9 fc17 	bl	800c988 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801315a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801315e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013162:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8013166:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801316a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801316e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013172:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8013176:	440e      	add	r6, r1
 8013178:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801317c:	440a      	add	r2, r1
 801317e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013182:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8013186:	4413      	add	r3, r2
 8013188:	f8ad 3012 	strh.w	r3, [sp, #18]
 801318c:	4b77      	ldr	r3, [pc, #476]	; (801336c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801318e:	6818      	ldr	r0, [r3, #0]
 8013190:	6803      	ldr	r3, [r0, #0]
 8013192:	6a1b      	ldr	r3, [r3, #32]
 8013194:	4798      	blx	r3
 8013196:	f8b9 b000 	ldrh.w	fp, [r9]
 801319a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801319e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80131a2:	fb0b 2303 	mla	r3, fp, r3, r2
 80131a6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80131aa:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80131ae:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80131b2:	fb05 f50b 	mul.w	r5, r5, fp
 80131b6:	9300      	str	r3, [sp, #0]
 80131b8:	d068      	beq.n	801328c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x164>
 80131ba:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80131be:	4558      	cmp	r0, fp
 80131c0:	f080 80cc 	bcs.w	801335c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80131c4:	9b00      	ldr	r3, [sp, #0]
 80131c6:	18c3      	adds	r3, r0, r3
 80131c8:	9301      	str	r3, [sp, #4]
 80131ca:	4631      	mov	r1, r6
 80131cc:	9b01      	ldr	r3, [sp, #4]
 80131ce:	4298      	cmp	r0, r3
 80131d0:	d24e      	bcs.n	8013270 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x148>
 80131d2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80131d6:	2a00      	cmp	r2, #0
 80131d8:	d047      	beq.n	801326a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
 80131da:	fb0a f202 	mul.w	r2, sl, r2
 80131de:	1c53      	adds	r3, r2, #1
 80131e0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80131e4:	121b      	asrs	r3, r3, #8
 80131e6:	d040      	beq.n	801326a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
 80131e8:	8802      	ldrh	r2, [r0, #0]
 80131ea:	f8b4 c000 	ldrh.w	ip, [r4]
 80131ee:	b29e      	uxth	r6, r3
 80131f0:	1215      	asrs	r5, r2, #8
 80131f2:	43db      	mvns	r3, r3
 80131f4:	b2db      	uxtb	r3, r3
 80131f6:	ea4f 272c 	mov.w	r7, ip, asr #8
 80131fa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80131fe:	fb15 f503 	smulbb	r5, r5, r3
 8013202:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8013206:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801320a:	00d2      	lsls	r2, r2, #3
 801320c:	fb07 5706 	mla	r7, r7, r6, r5
 8013210:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8013214:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8013218:	b2d2      	uxtb	r2, r2
 801321a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801321e:	fb1e fe03 	smulbb	lr, lr, r3
 8013222:	fb12 f203 	smulbb	r2, r2, r3
 8013226:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801322a:	fa5f fc8c 	uxtb.w	ip, ip
 801322e:	fb05 e506 	mla	r5, r5, r6, lr
 8013232:	fb0c 2c06 	mla	ip, ip, r6, r2
 8013236:	b2bf      	uxth	r7, r7
 8013238:	b2ad      	uxth	r5, r5
 801323a:	fa1f fc8c 	uxth.w	ip, ip
 801323e:	1c7b      	adds	r3, r7, #1
 8013240:	f10c 0601 	add.w	r6, ip, #1
 8013244:	f105 0e01 	add.w	lr, r5, #1
 8013248:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801324c:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8013250:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8013254:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013258:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801325c:	096d      	lsrs	r5, r5, #5
 801325e:	ea47 070c 	orr.w	r7, r7, ip
 8013262:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013266:	432f      	orrs	r7, r5
 8013268:	8007      	strh	r7, [r0, #0]
 801326a:	3002      	adds	r0, #2
 801326c:	3402      	adds	r4, #2
 801326e:	e7ad      	b.n	80131cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8013270:	f8b9 3000 	ldrh.w	r3, [r9]
 8013274:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013278:	eba3 0308 	sub.w	r3, r3, r8
 801327c:	eba6 0608 	sub.w	r6, r6, r8
 8013280:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8013284:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013288:	440e      	add	r6, r1
 801328a:	e798      	b.n	80131be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801328c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013290:	42a8      	cmp	r0, r5
 8013292:	d263      	bcs.n	801335c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8013294:	9b00      	ldr	r3, [sp, #0]
 8013296:	4631      	mov	r1, r6
 8013298:	eb00 0b03 	add.w	fp, r0, r3
 801329c:	4558      	cmp	r0, fp
 801329e:	d24f      	bcs.n	8013340 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80132a0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80132a4:	b12b      	cbz	r3, 80132b2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
 80132a6:	2bff      	cmp	r3, #255	; 0xff
 80132a8:	f8b4 e000 	ldrh.w	lr, [r4]
 80132ac:	d104      	bne.n	80132b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x190>
 80132ae:	f8a0 e000 	strh.w	lr, [r0]
 80132b2:	3002      	adds	r0, #2
 80132b4:	3402      	adds	r4, #2
 80132b6:	e7f1      	b.n	801329c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x174>
 80132b8:	8802      	ldrh	r2, [r0, #0]
 80132ba:	b29f      	uxth	r7, r3
 80132bc:	1216      	asrs	r6, r2, #8
 80132be:	43db      	mvns	r3, r3
 80132c0:	b2db      	uxtb	r3, r3
 80132c2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80132c6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80132ca:	fb16 f603 	smulbb	r6, r6, r3
 80132ce:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80132d2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80132d6:	00d2      	lsls	r2, r2, #3
 80132d8:	fb0c 6c07 	mla	ip, ip, r7, r6
 80132dc:	b2d2      	uxtb	r2, r2
 80132de:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80132e2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80132e6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80132ea:	fb1a fa03 	smulbb	sl, sl, r3
 80132ee:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80132f2:	fb12 f303 	smulbb	r3, r2, r3
 80132f6:	fa5f fe8e 	uxtb.w	lr, lr
 80132fa:	fb06 a607 	mla	r6, r6, r7, sl
 80132fe:	fb0e 3e07 	mla	lr, lr, r7, r3
 8013302:	fa1f fc8c 	uxth.w	ip, ip
 8013306:	b2b6      	uxth	r6, r6
 8013308:	fa1f fe8e 	uxth.w	lr, lr
 801330c:	f10c 0201 	add.w	r2, ip, #1
 8013310:	f10e 0301 	add.w	r3, lr, #1
 8013314:	f106 0a01 	add.w	sl, r6, #1
 8013318:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801331c:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 8013320:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8013324:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013328:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801332c:	0976      	lsrs	r6, r6, #5
 801332e:	ea4c 0c0e 	orr.w	ip, ip, lr
 8013332:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013336:	ea4c 0c06 	orr.w	ip, ip, r6
 801333a:	f8a0 c000 	strh.w	ip, [r0]
 801333e:	e7b8      	b.n	80132b2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
 8013340:	f8b9 3000 	ldrh.w	r3, [r9]
 8013344:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013348:	eba3 0308 	sub.w	r3, r3, r8
 801334c:	eba6 0608 	sub.w	r6, r6, r8
 8013350:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8013354:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013358:	440e      	add	r6, r1
 801335a:	e799      	b.n	8013290 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x168>
 801335c:	4b03      	ldr	r3, [pc, #12]	; (801336c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801335e:	6818      	ldr	r0, [r3, #0]
 8013360:	6803      	ldr	r3, [r0, #0]
 8013362:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013364:	4798      	blx	r3
 8013366:	b007      	add	sp, #28
 8013368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801336c:	2000a42c 	.word	0x2000a42c
 8013370:	2000a426 	.word	0x2000a426

08013374 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8013374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013378:	b089      	sub	sp, #36	; 0x24
 801337a:	4682      	mov	sl, r0
 801337c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8013380:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013382:	460d      	mov	r5, r1
 8013384:	4691      	mov	r9, r2
 8013386:	4698      	mov	r8, r3
 8013388:	b3ae      	cbz	r6, 80133f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801338a:	4608      	mov	r0, r1
 801338c:	f7fc fa00 	bl	800f790 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013390:	4607      	mov	r7, r0
 8013392:	4628      	mov	r0, r5
 8013394:	f7fc fa36 	bl	800f804 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013398:	f8ad 000e 	strh.w	r0, [sp, #14]
 801339c:	4628      	mov	r0, r5
 801339e:	f8ad 9008 	strh.w	r9, [sp, #8]
 80133a2:	f8ad 800a 	strh.w	r8, [sp, #10]
 80133a6:	f8ad 700c 	strh.w	r7, [sp, #12]
 80133aa:	f7fc fb83 	bl	800fab4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80133ae:	b178      	cbz	r0, 80133d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80133b0:	4628      	mov	r0, r5
 80133b2:	f7fc fb7f 	bl	800fab4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80133b6:	2802      	cmp	r0, #2
 80133b8:	d00a      	beq.n	80133d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80133ba:	4628      	mov	r0, r5
 80133bc:	f7fc fb7a 	bl	800fab4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80133c0:	280b      	cmp	r0, #11
 80133c2:	d005      	beq.n	80133d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80133c4:	4b69      	ldr	r3, [pc, #420]	; (801356c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 80133c6:	4a6a      	ldr	r2, [pc, #424]	; (8013570 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 80133c8:	486a      	ldr	r0, [pc, #424]	; (8013574 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 80133ca:	214b      	movs	r1, #75	; 0x4b
 80133cc:	f008 f81e 	bl	801b40c <__assert_func>
 80133d0:	4628      	mov	r0, r5
 80133d2:	f7fc fae5 	bl	800f9a0 <_ZNK8touchgfx6Bitmap7getDataEv>
 80133d6:	4607      	mov	r7, r0
 80133d8:	4628      	mov	r0, r5
 80133da:	f7fc fb13 	bl	800fa04 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80133de:	4681      	mov	r9, r0
 80133e0:	4628      	mov	r0, r5
 80133e2:	f7fc fb67 	bl	800fab4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80133e6:	2802      	cmp	r0, #2
 80133e8:	d108      	bne.n	80133fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80133ea:	4633      	mov	r3, r6
 80133ec:	4622      	mov	r2, r4
 80133ee:	a902      	add	r1, sp, #8
 80133f0:	4638      	mov	r0, r7
 80133f2:	f7ff fa69 	bl	80128c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80133f6:	b009      	add	sp, #36	; 0x24
 80133f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80133fc:	4628      	mov	r0, r5
 80133fe:	f7fc fb59 	bl	800fab4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013402:	280b      	cmp	r0, #11
 8013404:	d107      	bne.n	8013416 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 8013406:	9600      	str	r6, [sp, #0]
 8013408:	4623      	mov	r3, r4
 801340a:	aa02      	add	r2, sp, #8
 801340c:	4649      	mov	r1, r9
 801340e:	4638      	mov	r0, r7
 8013410:	f7ff fe72 	bl	80130f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8013414:	e7ef      	b.n	80133f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8013416:	4628      	mov	r0, r5
 8013418:	f7fc fa88 	bl	800f92c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801341c:	b950      	cbnz	r0, 8013434 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801341e:	e9cd 6000 	strd	r6, r0, [sp]
 8013422:	f8da 3000 	ldr.w	r3, [sl]
 8013426:	aa02      	add	r2, sp, #8
 8013428:	68dd      	ldr	r5, [r3, #12]
 801342a:	4639      	mov	r1, r7
 801342c:	4623      	mov	r3, r4
 801342e:	4650      	mov	r0, sl
 8013430:	47a8      	blx	r5
 8013432:	e7e0      	b.n	80133f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8013434:	f10d 0818 	add.w	r8, sp, #24
 8013438:	4629      	mov	r1, r5
 801343a:	4640      	mov	r0, r8
 801343c:	f7fc fa1c 	bl	800f878 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013440:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013444:	ad04      	add	r5, sp, #16
 8013446:	e885 0003 	stmia.w	r5, {r0, r1}
 801344a:	4628      	mov	r0, r5
 801344c:	4621      	mov	r1, r4
 801344e:	f7f6 f99d 	bl	800978c <_ZN8touchgfx4RectaNERKS0_>
 8013452:	4628      	mov	r0, r5
 8013454:	f7f6 f9dd 	bl	8009812 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013458:	b138      	cbz	r0, 801346a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 801345a:	9600      	str	r6, [sp, #0]
 801345c:	4623      	mov	r3, r4
 801345e:	aa02      	add	r2, sp, #8
 8013460:	4649      	mov	r1, r9
 8013462:	4638      	mov	r0, r7
 8013464:	f7ff fe60 	bl	8013128 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013468:	e7c5      	b.n	80133f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801346a:	e9cd 6000 	strd	r6, r0, [sp]
 801346e:	f8da 3000 	ldr.w	r3, [sl]
 8013472:	aa02      	add	r2, sp, #8
 8013474:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8013478:	4639      	mov	r1, r7
 801347a:	462b      	mov	r3, r5
 801347c:	4650      	mov	r0, sl
 801347e:	47d8      	blx	fp
 8013480:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013484:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013488:	4293      	cmp	r3, r2
 801348a:	dd13      	ble.n	80134b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 801348c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013490:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013494:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013498:	1a9b      	subs	r3, r3, r2
 801349a:	f8ad 201a 	strh.w	r2, [sp, #26]
 801349e:	f8ad 101c 	strh.w	r1, [sp, #28]
 80134a2:	f8ad 301e 	strh.w	r3, [sp, #30]
 80134a6:	9600      	str	r6, [sp, #0]
 80134a8:	4643      	mov	r3, r8
 80134aa:	aa02      	add	r2, sp, #8
 80134ac:	4649      	mov	r1, r9
 80134ae:	4638      	mov	r0, r7
 80134b0:	f7ff fe3a 	bl	8013128 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80134b4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80134b8:	f9b4 2000 	ldrsh.w	r2, [r4]
 80134bc:	4293      	cmp	r3, r2
 80134be:	dd13      	ble.n	80134e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 80134c0:	1a9b      	subs	r3, r3, r2
 80134c2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80134c6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80134ca:	f8ad 2018 	strh.w	r2, [sp, #24]
 80134ce:	f8ad 001a 	strh.w	r0, [sp, #26]
 80134d2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80134d6:	f8ad 101e 	strh.w	r1, [sp, #30]
 80134da:	9600      	str	r6, [sp, #0]
 80134dc:	4643      	mov	r3, r8
 80134de:	aa02      	add	r2, sp, #8
 80134e0:	4649      	mov	r1, r9
 80134e2:	4638      	mov	r0, r7
 80134e4:	f7ff fe20 	bl	8013128 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80134e8:	88a2      	ldrh	r2, [r4, #4]
 80134ea:	8823      	ldrh	r3, [r4, #0]
 80134ec:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80134f0:	4413      	add	r3, r2
 80134f2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80134f6:	440a      	add	r2, r1
 80134f8:	b29b      	uxth	r3, r3
 80134fa:	b292      	uxth	r2, r2
 80134fc:	b211      	sxth	r1, r2
 80134fe:	b218      	sxth	r0, r3
 8013500:	4288      	cmp	r0, r1
 8013502:	dd13      	ble.n	801352c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 8013504:	1a9b      	subs	r3, r3, r2
 8013506:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801350a:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 801350e:	f8ad 1018 	strh.w	r1, [sp, #24]
 8013512:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013516:	f8ad 001e 	strh.w	r0, [sp, #30]
 801351a:	9600      	str	r6, [sp, #0]
 801351c:	4643      	mov	r3, r8
 801351e:	aa02      	add	r2, sp, #8
 8013520:	4649      	mov	r1, r9
 8013522:	4638      	mov	r0, r7
 8013524:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013528:	f7ff fdfe 	bl	8013128 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801352c:	88e2      	ldrh	r2, [r4, #6]
 801352e:	8863      	ldrh	r3, [r4, #2]
 8013530:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8013534:	4413      	add	r3, r2
 8013536:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801353a:	440a      	add	r2, r1
 801353c:	b29b      	uxth	r3, r3
 801353e:	b292      	uxth	r2, r2
 8013540:	b211      	sxth	r1, r2
 8013542:	b218      	sxth	r0, r3
 8013544:	4288      	cmp	r0, r1
 8013546:	f77f af56 	ble.w	80133f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801354a:	f9b4 5000 	ldrsh.w	r5, [r4]
 801354e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013552:	f8ad 5018 	strh.w	r5, [sp, #24]
 8013556:	1a9b      	subs	r3, r3, r2
 8013558:	f8ad 301e 	strh.w	r3, [sp, #30]
 801355c:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013560:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013564:	9600      	str	r6, [sp, #0]
 8013566:	4643      	mov	r3, r8
 8013568:	e779      	b.n	801345e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 801356a:	bf00      	nop
 801356c:	0801f07d 	.word	0x0801f07d
 8013570:	0801f7b6 	.word	0x0801f7b6
 8013574:	0801f37c 	.word	0x0801f37c

08013578 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8013578:	b508      	push	{r3, lr}
 801357a:	b180      	cbz	r0, 801359e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 801357c:	2902      	cmp	r1, #2
 801357e:	d014      	beq.n	80135aa <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8013580:	2903      	cmp	r1, #3
 8013582:	d01d      	beq.n	80135c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8013584:	2901      	cmp	r1, #1
 8013586:	d101      	bne.n	801358c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013588:	2001      	movs	r0, #1
 801358a:	bd08      	pop	{r3, pc}
 801358c:	4b0e      	ldr	r3, [pc, #56]	; (80135c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801358e:	8818      	ldrh	r0, [r3, #0]
 8013590:	b990      	cbnz	r0, 80135b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8013592:	4b0e      	ldr	r3, [pc, #56]	; (80135cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8013594:	4a0e      	ldr	r2, [pc, #56]	; (80135d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8013596:	480f      	ldr	r0, [pc, #60]	; (80135d4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8013598:	2154      	movs	r1, #84	; 0x54
 801359a:	f007 ff37 	bl	801b40c <__assert_func>
 801359e:	2902      	cmp	r1, #2
 80135a0:	d00e      	beq.n	80135c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 80135a2:	2903      	cmp	r1, #3
 80135a4:	d0f2      	beq.n	801358c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 80135a6:	2901      	cmp	r1, #1
 80135a8:	d1ee      	bne.n	8013588 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 80135aa:	4b07      	ldr	r3, [pc, #28]	; (80135c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80135ac:	8818      	ldrh	r0, [r3, #0]
 80135ae:	2800      	cmp	r0, #0
 80135b0:	d0ef      	beq.n	8013592 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 80135b2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80135b6:	e7e8      	b.n	801358a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80135b8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80135bc:	4240      	negs	r0, r0
 80135be:	e7e4      	b.n	801358a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80135c0:	f04f 30ff 	mov.w	r0, #4294967295
 80135c4:	e7e1      	b.n	801358a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80135c6:	bf00      	nop
 80135c8:	2000a426 	.word	0x2000a426
 80135cc:	0801f3ae 	.word	0x0801f3ae
 80135d0:	0801f933 	.word	0x0801f933
 80135d4:	0801f3f0 	.word	0x0801f3f0

080135d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80135d8:	b508      	push	{r3, lr}
 80135da:	b180      	cbz	r0, 80135fe <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 80135dc:	2902      	cmp	r1, #2
 80135de:	d014      	beq.n	801360a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 80135e0:	2903      	cmp	r1, #3
 80135e2:	d018      	beq.n	8013616 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 80135e4:	2901      	cmp	r1, #1
 80135e6:	d001      	beq.n	80135ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 80135e8:	2001      	movs	r0, #1
 80135ea:	e013      	b.n	8013614 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80135ec:	4b0e      	ldr	r3, [pc, #56]	; (8013628 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80135ee:	8818      	ldrh	r0, [r3, #0]
 80135f0:	b970      	cbnz	r0, 8013610 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 80135f2:	4b0e      	ldr	r3, [pc, #56]	; (801362c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 80135f4:	4a0e      	ldr	r2, [pc, #56]	; (8013630 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 80135f6:	480f      	ldr	r0, [pc, #60]	; (8013634 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 80135f8:	2154      	movs	r1, #84	; 0x54
 80135fa:	f007 ff07 	bl	801b40c <__assert_func>
 80135fe:	2902      	cmp	r1, #2
 8013600:	d009      	beq.n	8013616 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013602:	2903      	cmp	r1, #3
 8013604:	d0f0      	beq.n	80135e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8013606:	2901      	cmp	r1, #1
 8013608:	d1f0      	bne.n	80135ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801360a:	f04f 30ff 	mov.w	r0, #4294967295
 801360e:	e001      	b.n	8013614 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013610:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013614:	bd08      	pop	{r3, pc}
 8013616:	4b04      	ldr	r3, [pc, #16]	; (8013628 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013618:	8818      	ldrh	r0, [r3, #0]
 801361a:	2800      	cmp	r0, #0
 801361c:	d0e9      	beq.n	80135f2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 801361e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013622:	4240      	negs	r0, r0
 8013624:	e7f6      	b.n	8013614 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013626:	bf00      	nop
 8013628:	2000a426 	.word	0x2000a426
 801362c:	0801f3ae 	.word	0x0801f3ae
 8013630:	0801f933 	.word	0x0801f933
 8013634:	0801f3f0 	.word	0x0801f3f0

08013638 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8013638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801363c:	b099      	sub	sp, #100	; 0x64
 801363e:	910b      	str	r1, [sp, #44]	; 0x2c
 8013640:	a914      	add	r1, sp, #80	; 0x50
 8013642:	e881 000c 	stmia.w	r1, {r2, r3}
 8013646:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801364a:	9308      	str	r3, [sp, #32]
 801364c:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
 8013650:	f89d 10a4 	ldrb.w	r1, [sp, #164]	; 0xa4
 8013654:	f893 b00d 	ldrb.w	fp, [r3, #13]
 8013658:	910c      	str	r1, [sp, #48]	; 0x30
 801365a:	f89d 10b0 	ldrb.w	r1, [sp, #176]	; 0xb0
 801365e:	910d      	str	r1, [sp, #52]	; 0x34
 8013660:	7998      	ldrb	r0, [r3, #6]
 8013662:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 8013666:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 801366a:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 801366e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8013672:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8013676:	ea4f 114b 	mov.w	r1, fp, lsl #5
 801367a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801367e:	4301      	orrs	r1, r0
 8013680:	9109      	str	r1, [sp, #36]	; 0x24
 8013682:	f000 81e2 	beq.w	8013a4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8013686:	ea4f 1b0b 	mov.w	fp, fp, lsl #4
 801368a:	79d9      	ldrb	r1, [r3, #7]
 801368c:	f40b 7b80 	and.w	fp, fp, #256	; 0x100
 8013690:	ea51 0b0b 	orrs.w	fp, r1, fp
 8013694:	f000 81d9 	beq.w	8013a4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8013698:	f993 3009 	ldrsb.w	r3, [r3, #9]
 801369c:	b29b      	uxth	r3, r3
 801369e:	2e00      	cmp	r6, #0
 80136a0:	f000 80fc 	beq.w	801389c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x264>
 80136a4:	1af6      	subs	r6, r6, r3
 80136a6:	b2b6      	uxth	r6, r6
 80136a8:	0433      	lsls	r3, r6, #16
 80136aa:	d502      	bpl.n	80136b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80136ac:	1bad      	subs	r5, r5, r6
 80136ae:	b22d      	sxth	r5, r5
 80136b0:	2600      	movs	r6, #0
 80136b2:	f9b2 1000 	ldrsh.w	r1, [r2]
 80136b6:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 80136ba:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 80136be:	428d      	cmp	r5, r1
 80136c0:	b28b      	uxth	r3, r1
 80136c2:	bfbf      	itttt	lt
 80136c4:	18f6      	addlt	r6, r6, r3
 80136c6:	1b75      	sublt	r5, r6, r5
 80136c8:	b2ae      	uxthlt	r6, r5
 80136ca:	460d      	movlt	r5, r1
 80136cc:	8891      	ldrh	r1, [r2, #4]
 80136ce:	440b      	add	r3, r1
 80136d0:	b21b      	sxth	r3, r3
 80136d2:	9311      	str	r3, [sp, #68]	; 0x44
 80136d4:	8853      	ldrh	r3, [r2, #2]
 80136d6:	88d2      	ldrh	r2, [r2, #6]
 80136d8:	4413      	add	r3, r2
 80136da:	b21b      	sxth	r3, r3
 80136dc:	9310      	str	r3, [sp, #64]	; 0x40
 80136de:	4bb2      	ldr	r3, [pc, #712]	; (80139a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x370>)
 80136e0:	9a08      	ldr	r2, [sp, #32]
 80136e2:	f893 9000 	ldrb.w	r9, [r3]
 80136e6:	f109 3cff 	add.w	ip, r9, #4294967295
 80136ea:	f1dc 0300 	rsbs	r3, ip, #0
 80136ee:	eb43 030c 	adc.w	r3, r3, ip
 80136f2:	930f      	str	r3, [sp, #60]	; 0x3c
 80136f4:	4629      	mov	r1, r5
 80136f6:	4653      	mov	r3, sl
 80136f8:	a814      	add	r0, sp, #80	; 0x50
 80136fa:	f7f8 ff99 	bl	800c630 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80136fe:	4629      	mov	r1, r5
 8013700:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8013704:	4653      	mov	r3, sl
 8013706:	9a08      	ldr	r2, [sp, #32]
 8013708:	a814      	add	r0, sp, #80	; 0x50
 801370a:	f7f8 ffa9 	bl	800c660 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801370e:	a918      	add	r1, sp, #96	; 0x60
 8013710:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8013714:	a817      	add	r0, sp, #92	; 0x5c
 8013716:	f7f9 f905 	bl	800c924 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801371a:	f1ba 0f00 	cmp.w	sl, #0
 801371e:	f040 80c0 	bne.w	80138a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 8013722:	f1b9 0f01 	cmp.w	r9, #1
 8013726:	f040 80c4 	bne.w	80138b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x27a>
 801372a:	2301      	movs	r3, #1
 801372c:	fa03 f308 	lsl.w	r3, r3, r8
 8013730:	3b01      	subs	r3, #1
 8013732:	b2db      	uxtb	r3, r3
 8013734:	f1b8 0f01 	cmp.w	r8, #1
 8013738:	930a      	str	r3, [sp, #40]	; 0x28
 801373a:	f000 80e5 	beq.w	8013908 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 801373e:	f1b8 0f02 	cmp.w	r8, #2
 8013742:	f000 80e4 	beq.w	801390e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d6>
 8013746:	f1b8 0f04 	cmp.w	r8, #4
 801374a:	bf15      	itete	ne
 801374c:	46c1      	movne	r9, r8
 801374e:	f04f 0904 	moveq.w	r9, #4
 8013752:	2301      	movne	r3, #1
 8013754:	2311      	moveq	r3, #17
 8013756:	9307      	str	r3, [sp, #28]
 8013758:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801375a:	b153      	cbz	r3, 8013772 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13a>
 801375c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801375e:	2408      	movs	r4, #8
 8013760:	fb94 f3f9 	sdiv	r3, r4, r9
 8013764:	1e5c      	subs	r4, r3, #1
 8013766:	4414      	add	r4, r2
 8013768:	fb94 f4f3 	sdiv	r4, r4, r3
 801376c:	fb14 f403 	smulbb	r4, r4, r3
 8013770:	b2a4      	uxth	r4, r4
 8013772:	b906      	cbnz	r6, 8013776 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8013774:	b16f      	cbz	r7, 8013792 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15a>
 8013776:	fb07 6304 	mla	r3, r7, r4, r6
 801377a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801377c:	fb08 f303 	mul.w	r3, r8, r3
 8013780:	4639      	mov	r1, r7
 8013782:	f003 0707 	and.w	r7, r3, #7
 8013786:	eb02 03d3 	add.w	r3, r2, r3, lsr #3
 801378a:	9328      	str	r3, [sp, #160]	; 0xa0
 801378c:	ebab 0301 	sub.w	r3, fp, r1
 8013790:	930e      	str	r3, [sp, #56]	; 0x38
 8013792:	4651      	mov	r1, sl
 8013794:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013796:	f7ff feef 	bl	8013578 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801379a:	4651      	mov	r1, sl
 801379c:	4683      	mov	fp, r0
 801379e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80137a0:	f7ff ff1a 	bl	80135d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80137a4:	9a08      	ldr	r2, [sp, #32]
 80137a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80137a8:	1a9b      	subs	r3, r3, r2
 80137aa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80137ac:	429a      	cmp	r2, r3
 80137ae:	bfa8      	it	ge
 80137b0:	461a      	movge	r2, r3
 80137b2:	2a00      	cmp	r2, #0
 80137b4:	4682      	mov	sl, r0
 80137b6:	9208      	str	r2, [sp, #32]
 80137b8:	f340 8147 	ble.w	8013a4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 80137bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80137be:	1bad      	subs	r5, r5, r6
 80137c0:	1b5d      	subs	r5, r3, r5
 80137c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80137c4:	429d      	cmp	r5, r3
 80137c6:	bfd4      	ite	le
 80137c8:	ebc6 0605 	rsble	r6, r6, r5
 80137cc:	ebc6 0603 	rsbgt	r6, r6, r3
 80137d0:	2e00      	cmp	r6, #0
 80137d2:	f340 813a 	ble.w	8013a4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 80137d6:	1ba4      	subs	r4, r4, r6
 80137d8:	fb09 f304 	mul.w	r3, r9, r4
 80137dc:	930e      	str	r3, [sp, #56]	; 0x38
 80137de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80137e0:	2b00      	cmp	r3, #0
 80137e2:	f040 809d 	bne.w	8013920 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 80137e6:	4b71      	ldr	r3, [pc, #452]	; (80139ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>)
 80137e8:	6818      	ldr	r0, [r3, #0]
 80137ea:	6803      	ldr	r3, [r0, #0]
 80137ec:	6a1b      	ldr	r3, [r3, #32]
 80137ee:	4798      	blx	r3
 80137f0:	496f      	ldr	r1, [pc, #444]	; (80139b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
 80137f2:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 80137f6:	880c      	ldrh	r4, [r1, #0]
 80137f8:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	; 0x5c
 80137fc:	fb04 1303 	mla	r3, r4, r3, r1
 8013800:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013804:	9309      	str	r3, [sp, #36]	; 0x24
 8013806:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013808:	7819      	ldrb	r1, [r3, #0]
 801380a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801380c:	0a1b      	lsrs	r3, r3, #8
 801380e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8013812:	930f      	str	r3, [sp, #60]	; 0x3c
 8013814:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013816:	08db      	lsrs	r3, r3, #3
 8013818:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801381c:	9310      	str	r3, [sp, #64]	; 0x40
 801381e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013820:	00db      	lsls	r3, r3, #3
 8013822:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8013826:	9311      	str	r3, [sp, #68]	; 0x44
 8013828:	ea4f 034b 	mov.w	r3, fp, lsl #1
 801382c:	fb0b ab16 	mls	fp, fp, r6, sl
 8013830:	fb03 fa06 	mul.w	sl, r3, r6
 8013834:	930c      	str	r3, [sp, #48]	; 0x30
 8013836:	eb0a 034b 	add.w	r3, sl, fp, lsl #1
 801383a:	9312      	str	r3, [sp, #72]	; 0x48
 801383c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801383e:	4139      	asrs	r1, r7
 8013840:	b29b      	uxth	r3, r3
 8013842:	b2c9      	uxtb	r1, r1
 8013844:	9313      	str	r3, [sp, #76]	; 0x4c
 8013846:	9b08      	ldr	r3, [sp, #32]
 8013848:	3b01      	subs	r3, #1
 801384a:	9308      	str	r3, [sp, #32]
 801384c:	3301      	adds	r3, #1
 801384e:	f000 80c3 	beq.w	80139d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8013852:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8013856:	46b2      	mov	sl, r6
 8013858:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801385c:	f0c0 80aa 	bcc.w	80139b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8013860:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013862:	400b      	ands	r3, r1
 8013864:	d00a      	beq.n	801387c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x244>
 8013866:	9807      	ldr	r0, [sp, #28]
 8013868:	fb13 f300 	smulbb	r3, r3, r0
 801386c:	2bfe      	cmp	r3, #254	; 0xfe
 801386e:	dd59      	ble.n	8013924 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 8013870:	980d      	ldr	r0, [sp, #52]	; 0x34
 8013872:	28ff      	cmp	r0, #255	; 0xff
 8013874:	d156      	bne.n	8013924 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 8013876:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8013878:	f8ae 4000 	strh.w	r4, [lr]
 801387c:	4447      	add	r7, r8
 801387e:	b2bf      	uxth	r7, r7
 8013880:	2f07      	cmp	r7, #7
 8013882:	bf81      	itttt	hi
 8013884:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8013886:	7859      	ldrbhi	r1, [r3, #1]
 8013888:	3301      	addhi	r3, #1
 801388a:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801388c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801388e:	bf9a      	itte	ls
 8013890:	fa41 f109 	asrls.w	r1, r1, r9
 8013894:	b2c9      	uxtbls	r1, r1
 8013896:	2700      	movhi	r7, #0
 8013898:	449e      	add	lr, r3
 801389a:	e7dd      	b.n	8013858 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x220>
 801389c:	441d      	add	r5, r3
 801389e:	b22d      	sxth	r5, r5
 80138a0:	e707      	b.n	80136b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80138a2:	f1ba 0f01 	cmp.w	sl, #1
 80138a6:	f47f af40 	bne.w	801372a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 80138aa:	f1b9 0f01 	cmp.w	r9, #1
 80138ae:	f47f af3c 	bne.w	801372a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 80138b2:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80139ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 80138b6:	f8d9 0000 	ldr.w	r0, [r9]
 80138ba:	6803      	ldr	r3, [r0, #0]
 80138bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80138be:	4798      	blx	r3
 80138c0:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 80138c4:	464a      	mov	r2, r9
 80138c6:	d006      	beq.n	80138d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29e>
 80138c8:	f1b8 0f04 	cmp.w	r8, #4
 80138cc:	d11a      	bne.n	8013904 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
 80138ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80138d0:	3300      	adds	r3, #0
 80138d2:	bf18      	it	ne
 80138d4:	2301      	movne	r3, #1
 80138d6:	05c0      	lsls	r0, r0, #23
 80138d8:	f140 8087 	bpl.w	80139ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b2>
 80138dc:	f1b8 0f08 	cmp.w	r8, #8
 80138e0:	f040 8083 	bne.w	80139ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b2>
 80138e4:	2b00      	cmp	r3, #0
 80138e6:	bf14      	ite	ne
 80138e8:	2180      	movne	r1, #128	; 0x80
 80138ea:	f44f 7180 	moveq.w	r1, #256	; 0x100
 80138ee:	2e00      	cmp	r6, #0
 80138f0:	f040 80ae 	bne.w	8013a50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x418>
 80138f4:	2f00      	cmp	r7, #0
 80138f6:	f000 8082 	beq.w	80139fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 80138fa:	23ff      	movs	r3, #255	; 0xff
 80138fc:	930a      	str	r3, [sp, #40]	; 0x28
 80138fe:	46c1      	mov	r9, r8
 8013900:	2301      	movs	r3, #1
 8013902:	e728      	b.n	8013756 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 8013904:	2300      	movs	r3, #0
 8013906:	e7e6      	b.n	80138d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29e>
 8013908:	46c1      	mov	r9, r8
 801390a:	23ff      	movs	r3, #255	; 0xff
 801390c:	e723      	b.n	8013756 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 801390e:	46c1      	mov	r9, r8
 8013910:	2355      	movs	r3, #85	; 0x55
 8013912:	e720      	b.n	8013756 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 8013914:	23ff      	movs	r3, #255	; 0xff
 8013916:	930a      	str	r3, [sp, #40]	; 0x28
 8013918:	2301      	movs	r3, #1
 801391a:	46c1      	mov	r9, r8
 801391c:	9307      	str	r3, [sp, #28]
 801391e:	e71d      	b.n	801375c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x124>
 8013920:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013922:	e765      	b.n	80137f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1b8>
 8013924:	980d      	ldr	r0, [sp, #52]	; 0x34
 8013926:	f8be 5000 	ldrh.w	r5, [lr]
 801392a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801392c:	fb10 f303 	smulbb	r3, r0, r3
 8013930:	b29b      	uxth	r3, r3
 8013932:	1c58      	adds	r0, r3, #1
 8013934:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8013938:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801393c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801393e:	fa1f fc83 	uxth.w	ip, r3
 8013942:	122c      	asrs	r4, r5, #8
 8013944:	43db      	mvns	r3, r3
 8013946:	b2db      	uxtb	r3, r3
 8013948:	fb1c fb02 	smulbb	fp, ip, r2
 801394c:	fb10 f00c 	smulbb	r0, r0, ip
 8013950:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8013954:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013956:	fb04 0403 	mla	r4, r4, r3, r0
 801395a:	10e8      	asrs	r0, r5, #3
 801395c:	00ed      	lsls	r5, r5, #3
 801395e:	b2ed      	uxtb	r5, r5
 8013960:	fb1c fc02 	smulbb	ip, ip, r2
 8013964:	fb05 cc03 	mla	ip, r5, r3, ip
 8013968:	b2a4      	uxth	r4, r4
 801396a:	fa1f fc8c 	uxth.w	ip, ip
 801396e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8013972:	fb00 b003 	mla	r0, r0, r3, fp
 8013976:	1c63      	adds	r3, r4, #1
 8013978:	f10c 0b01 	add.w	fp, ip, #1
 801397c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8013980:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8013984:	b280      	uxth	r0, r0
 8013986:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801398a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801398e:	ea44 040b 	orr.w	r4, r4, fp
 8013992:	f100 0b01 	add.w	fp, r0, #1
 8013996:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801399a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801399e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80139a2:	ea44 040b 	orr.w	r4, r4, fp
 80139a6:	e767      	b.n	8013878 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x240>
 80139a8:	2000a424 	.word	0x2000a424
 80139ac:	2000a42c 	.word	0x2000a42c
 80139b0:	2000a426 	.word	0x2000a426
 80139b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80139b6:	b153      	cbz	r3, 80139ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80139b8:	441f      	add	r7, r3
 80139ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80139bc:	b2bf      	uxth	r7, r7
 80139be:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 80139c2:	f007 0707 	and.w	r7, r7, #7
 80139c6:	7819      	ldrb	r1, [r3, #0]
 80139c8:	9328      	str	r3, [sp, #160]	; 0xa0
 80139ca:	4139      	asrs	r1, r7
 80139cc:	b2c9      	uxtb	r1, r1
 80139ce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80139d0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80139d2:	441a      	add	r2, r3
 80139d4:	9209      	str	r2, [sp, #36]	; 0x24
 80139d6:	e736      	b.n	8013846 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x20e>
 80139d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80139da:	2b00      	cmp	r3, #0
 80139dc:	d135      	bne.n	8013a4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 80139de:	4b21      	ldr	r3, [pc, #132]	; (8013a64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x42c>)
 80139e0:	6818      	ldr	r0, [r3, #0]
 80139e2:	6803      	ldr	r3, [r0, #0]
 80139e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80139e6:	4798      	blx	r3
 80139e8:	e02f      	b.n	8013a4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 80139ea:	2b00      	cmp	r3, #0
 80139ec:	f43f ae9d 	beq.w	801372a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 80139f0:	2e00      	cmp	r6, #0
 80139f2:	f47f ae9a 	bne.w	801372a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 80139f6:	2f00      	cmp	r7, #0
 80139f8:	f47f ae97 	bne.w	801372a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 80139fc:	2180      	movs	r1, #128	; 0x80
 80139fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013a00:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013a02:	18eb      	adds	r3, r5, r3
 8013a04:	4283      	cmp	r3, r0
 8013a06:	f73f ae90 	bgt.w	801372a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8013a0a:	9b08      	ldr	r3, [sp, #32]
 8013a0c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8013a0e:	445b      	add	r3, fp
 8013a10:	4283      	cmp	r3, r0
 8013a12:	f73f ae8a 	bgt.w	801372a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8013a16:	6810      	ldr	r0, [r2, #0]
 8013a18:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8013a1c:	6805      	ldr	r5, [r0, #0]
 8013a1e:	9105      	str	r1, [sp, #20]
 8013a20:	f1b8 0f08 	cmp.w	r8, #8
 8013a24:	bf18      	it	ne
 8013a26:	3401      	addne	r4, #1
 8013a28:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013a2a:	9104      	str	r1, [sp, #16]
 8013a2c:	bf18      	it	ne
 8013a2e:	f024 0401 	bicne.w	r4, r4, #1
 8013a32:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8013a34:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8013a38:	bf18      	it	ne
 8013a3a:	b2a4      	uxthne	r4, r4
 8013a3c:	e9cd 4102 	strd	r4, r1, [sp, #8]
 8013a40:	e9cd 4b00 	strd	r4, fp, [sp]
 8013a44:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8013a46:	6c2c      	ldr	r4, [r5, #64]	; 0x40
 8013a48:	47a0      	blx	r4
 8013a4a:	b019      	add	sp, #100	; 0x64
 8013a4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a50:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013a52:	2b00      	cmp	r3, #0
 8013a54:	f47f af5e 	bne.w	8013914 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8013a58:	23ff      	movs	r3, #255	; 0xff
 8013a5a:	930a      	str	r3, [sp, #40]	; 0x28
 8013a5c:	2301      	movs	r3, #1
 8013a5e:	46c1      	mov	r9, r8
 8013a60:	9307      	str	r3, [sp, #28]
 8013a62:	e688      	b.n	8013776 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8013a64:	2000a42c 	.word	0x2000a42c

08013a68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8013a68:	b538      	push	{r3, r4, r5, lr}
 8013a6a:	4c15      	ldr	r4, [pc, #84]	; (8013ac0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8013a6c:	7823      	ldrb	r3, [r4, #0]
 8013a6e:	f3bf 8f5b 	dmb	ish
 8013a72:	07da      	lsls	r2, r3, #31
 8013a74:	4605      	mov	r5, r0
 8013a76:	d40b      	bmi.n	8013a90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8013a78:	4620      	mov	r0, r4
 8013a7a:	f007 fc9b 	bl	801b3b4 <__cxa_guard_acquire>
 8013a7e:	b138      	cbz	r0, 8013a90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8013a80:	4620      	mov	r0, r4
 8013a82:	f007 fca3 	bl	801b3cc <__cxa_guard_release>
 8013a86:	4a0f      	ldr	r2, [pc, #60]	; (8013ac4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8013a88:	490f      	ldr	r1, [pc, #60]	; (8013ac8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8013a8a:	4810      	ldr	r0, [pc, #64]	; (8013acc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8013a8c:	f007 fc8b 	bl	801b3a6 <__aeabi_atexit>
 8013a90:	4c0f      	ldr	r4, [pc, #60]	; (8013ad0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8013a92:	7823      	ldrb	r3, [r4, #0]
 8013a94:	f3bf 8f5b 	dmb	ish
 8013a98:	07db      	lsls	r3, r3, #31
 8013a9a:	d40b      	bmi.n	8013ab4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8013a9c:	4620      	mov	r0, r4
 8013a9e:	f007 fc89 	bl	801b3b4 <__cxa_guard_acquire>
 8013aa2:	b138      	cbz	r0, 8013ab4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8013aa4:	4620      	mov	r0, r4
 8013aa6:	f007 fc91 	bl	801b3cc <__cxa_guard_release>
 8013aaa:	4a06      	ldr	r2, [pc, #24]	; (8013ac4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8013aac:	4909      	ldr	r1, [pc, #36]	; (8013ad4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8013aae:	480a      	ldr	r0, [pc, #40]	; (8013ad8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013ab0:	f007 fc79 	bl	801b3a6 <__aeabi_atexit>
 8013ab4:	4b05      	ldr	r3, [pc, #20]	; (8013acc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8013ab6:	612b      	str	r3, [r5, #16]
 8013ab8:	4b07      	ldr	r3, [pc, #28]	; (8013ad8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013aba:	616b      	str	r3, [r5, #20]
 8013abc:	bd38      	pop	{r3, r4, r5, pc}
 8013abe:	bf00      	nop
 8013ac0:	2000a4f8 	.word	0x2000a4f8
 8013ac4:	20000000 	.word	0x20000000
 8013ac8:	0801205d 	.word	0x0801205d
 8013acc:	200000a4 	.word	0x200000a4
 8013ad0:	2000a4fc 	.word	0x2000a4fc
 8013ad4:	0801205b 	.word	0x0801205b
 8013ad8:	200000a8 	.word	0x200000a8

08013adc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8013adc:	b538      	push	{r3, r4, r5, lr}
 8013ade:	4c15      	ldr	r4, [pc, #84]	; (8013b34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8013ae0:	7823      	ldrb	r3, [r4, #0]
 8013ae2:	f3bf 8f5b 	dmb	ish
 8013ae6:	07da      	lsls	r2, r3, #31
 8013ae8:	4605      	mov	r5, r0
 8013aea:	d40b      	bmi.n	8013b04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8013aec:	4620      	mov	r0, r4
 8013aee:	f007 fc61 	bl	801b3b4 <__cxa_guard_acquire>
 8013af2:	b138      	cbz	r0, 8013b04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8013af4:	4620      	mov	r0, r4
 8013af6:	f007 fc69 	bl	801b3cc <__cxa_guard_release>
 8013afa:	4a0f      	ldr	r2, [pc, #60]	; (8013b38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013afc:	490f      	ldr	r1, [pc, #60]	; (8013b3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8013afe:	4810      	ldr	r0, [pc, #64]	; (8013b40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013b00:	f007 fc51 	bl	801b3a6 <__aeabi_atexit>
 8013b04:	4c0f      	ldr	r4, [pc, #60]	; (8013b44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8013b06:	7823      	ldrb	r3, [r4, #0]
 8013b08:	f3bf 8f5b 	dmb	ish
 8013b0c:	07db      	lsls	r3, r3, #31
 8013b0e:	d40b      	bmi.n	8013b28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013b10:	4620      	mov	r0, r4
 8013b12:	f007 fc4f 	bl	801b3b4 <__cxa_guard_acquire>
 8013b16:	b138      	cbz	r0, 8013b28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013b18:	4620      	mov	r0, r4
 8013b1a:	f007 fc57 	bl	801b3cc <__cxa_guard_release>
 8013b1e:	4a06      	ldr	r2, [pc, #24]	; (8013b38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013b20:	4909      	ldr	r1, [pc, #36]	; (8013b48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8013b22:	480a      	ldr	r0, [pc, #40]	; (8013b4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8013b24:	f007 fc3f 	bl	801b3a6 <__aeabi_atexit>
 8013b28:	4b05      	ldr	r3, [pc, #20]	; (8013b40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013b2a:	60ab      	str	r3, [r5, #8]
 8013b2c:	4b07      	ldr	r3, [pc, #28]	; (8013b4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8013b2e:	60eb      	str	r3, [r5, #12]
 8013b30:	bd38      	pop	{r3, r4, r5, pc}
 8013b32:	bf00      	nop
 8013b34:	2000a4d0 	.word	0x2000a4d0
 8013b38:	20000000 	.word	0x20000000
 8013b3c:	08012061 	.word	0x08012061
 8013b40:	2000007c 	.word	0x2000007c
 8013b44:	2000a4d4 	.word	0x2000a4d4
 8013b48:	0801205f 	.word	0x0801205f
 8013b4c:	20000080 	.word	0x20000080

08013b50 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8013b50:	b510      	push	{r4, lr}
 8013b52:	4604      	mov	r4, r0
 8013b54:	f7ff ff88 	bl	8013a68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8013b58:	4620      	mov	r0, r4
 8013b5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013b5e:	f7ff bfbd 	b.w	8013adc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08013b64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8013b64:	b538      	push	{r3, r4, r5, lr}
 8013b66:	4c15      	ldr	r4, [pc, #84]	; (8013bbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8013b68:	7823      	ldrb	r3, [r4, #0]
 8013b6a:	f3bf 8f5b 	dmb	ish
 8013b6e:	07da      	lsls	r2, r3, #31
 8013b70:	4605      	mov	r5, r0
 8013b72:	d40b      	bmi.n	8013b8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8013b74:	4620      	mov	r0, r4
 8013b76:	f007 fc1d 	bl	801b3b4 <__cxa_guard_acquire>
 8013b7a:	b138      	cbz	r0, 8013b8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8013b7c:	4620      	mov	r0, r4
 8013b7e:	f007 fc25 	bl	801b3cc <__cxa_guard_release>
 8013b82:	4a0f      	ldr	r2, [pc, #60]	; (8013bc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013b84:	490f      	ldr	r1, [pc, #60]	; (8013bc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8013b86:	4810      	ldr	r0, [pc, #64]	; (8013bc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013b88:	f007 fc0d 	bl	801b3a6 <__aeabi_atexit>
 8013b8c:	4c0f      	ldr	r4, [pc, #60]	; (8013bcc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8013b8e:	7823      	ldrb	r3, [r4, #0]
 8013b90:	f3bf 8f5b 	dmb	ish
 8013b94:	07db      	lsls	r3, r3, #31
 8013b96:	d40b      	bmi.n	8013bb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013b98:	4620      	mov	r0, r4
 8013b9a:	f007 fc0b 	bl	801b3b4 <__cxa_guard_acquire>
 8013b9e:	b138      	cbz	r0, 8013bb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013ba0:	4620      	mov	r0, r4
 8013ba2:	f007 fc13 	bl	801b3cc <__cxa_guard_release>
 8013ba6:	4a06      	ldr	r2, [pc, #24]	; (8013bc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013ba8:	4909      	ldr	r1, [pc, #36]	; (8013bd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8013baa:	480a      	ldr	r0, [pc, #40]	; (8013bd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8013bac:	f007 fbfb 	bl	801b3a6 <__aeabi_atexit>
 8013bb0:	4b05      	ldr	r3, [pc, #20]	; (8013bc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013bb2:	622b      	str	r3, [r5, #32]
 8013bb4:	4b07      	ldr	r3, [pc, #28]	; (8013bd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8013bb6:	626b      	str	r3, [r5, #36]	; 0x24
 8013bb8:	bd38      	pop	{r3, r4, r5, pc}
 8013bba:	bf00      	nop
 8013bbc:	2000a500 	.word	0x2000a500
 8013bc0:	20000000 	.word	0x20000000
 8013bc4:	08012055 	.word	0x08012055
 8013bc8:	200000ac 	.word	0x200000ac
 8013bcc:	2000a504 	.word	0x2000a504
 8013bd0:	08012053 	.word	0x08012053
 8013bd4:	200000b0 	.word	0x200000b0

08013bd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8013bd8:	b538      	push	{r3, r4, r5, lr}
 8013bda:	4c15      	ldr	r4, [pc, #84]	; (8013c30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8013bdc:	7823      	ldrb	r3, [r4, #0]
 8013bde:	f3bf 8f5b 	dmb	ish
 8013be2:	07da      	lsls	r2, r3, #31
 8013be4:	4605      	mov	r5, r0
 8013be6:	d40b      	bmi.n	8013c00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013be8:	4620      	mov	r0, r4
 8013bea:	f007 fbe3 	bl	801b3b4 <__cxa_guard_acquire>
 8013bee:	b138      	cbz	r0, 8013c00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013bf0:	4620      	mov	r0, r4
 8013bf2:	f007 fbeb 	bl	801b3cc <__cxa_guard_release>
 8013bf6:	4a0f      	ldr	r2, [pc, #60]	; (8013c34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013bf8:	490f      	ldr	r1, [pc, #60]	; (8013c38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8013bfa:	4810      	ldr	r0, [pc, #64]	; (8013c3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8013bfc:	f007 fbd3 	bl	801b3a6 <__aeabi_atexit>
 8013c00:	4c0f      	ldr	r4, [pc, #60]	; (8013c40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8013c02:	7823      	ldrb	r3, [r4, #0]
 8013c04:	f3bf 8f5b 	dmb	ish
 8013c08:	07db      	lsls	r3, r3, #31
 8013c0a:	d40b      	bmi.n	8013c24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013c0c:	4620      	mov	r0, r4
 8013c0e:	f007 fbd1 	bl	801b3b4 <__cxa_guard_acquire>
 8013c12:	b138      	cbz	r0, 8013c24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013c14:	4620      	mov	r0, r4
 8013c16:	f007 fbd9 	bl	801b3cc <__cxa_guard_release>
 8013c1a:	4a06      	ldr	r2, [pc, #24]	; (8013c34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013c1c:	4909      	ldr	r1, [pc, #36]	; (8013c44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8013c1e:	480a      	ldr	r0, [pc, #40]	; (8013c48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013c20:	f007 fbc1 	bl	801b3a6 <__aeabi_atexit>
 8013c24:	4b05      	ldr	r3, [pc, #20]	; (8013c3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8013c26:	61ab      	str	r3, [r5, #24]
 8013c28:	4b07      	ldr	r3, [pc, #28]	; (8013c48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013c2a:	61eb      	str	r3, [r5, #28]
 8013c2c:	bd38      	pop	{r3, r4, r5, pc}
 8013c2e:	bf00      	nop
 8013c30:	2000a4d8 	.word	0x2000a4d8
 8013c34:	20000000 	.word	0x20000000
 8013c38:	08012059 	.word	0x08012059
 8013c3c:	20000084 	.word	0x20000084
 8013c40:	2000a4dc 	.word	0x2000a4dc
 8013c44:	08012057 	.word	0x08012057
 8013c48:	20000088 	.word	0x20000088

08013c4c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8013c4c:	b510      	push	{r4, lr}
 8013c4e:	4604      	mov	r4, r0
 8013c50:	f7ff ff88 	bl	8013b64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8013c54:	4620      	mov	r0, r4
 8013c56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013c5a:	f7ff bfbd 	b.w	8013bd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08013c60 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8013c60:	b538      	push	{r3, r4, r5, lr}
 8013c62:	4c15      	ldr	r4, [pc, #84]	; (8013cb8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8013c64:	7823      	ldrb	r3, [r4, #0]
 8013c66:	f3bf 8f5b 	dmb	ish
 8013c6a:	07da      	lsls	r2, r3, #31
 8013c6c:	4605      	mov	r5, r0
 8013c6e:	d40b      	bmi.n	8013c88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013c70:	4620      	mov	r0, r4
 8013c72:	f007 fb9f 	bl	801b3b4 <__cxa_guard_acquire>
 8013c76:	b138      	cbz	r0, 8013c88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013c78:	4620      	mov	r0, r4
 8013c7a:	f007 fba7 	bl	801b3cc <__cxa_guard_release>
 8013c7e:	4a0f      	ldr	r2, [pc, #60]	; (8013cbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013c80:	490f      	ldr	r1, [pc, #60]	; (8013cc0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8013c82:	4810      	ldr	r0, [pc, #64]	; (8013cc4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013c84:	f007 fb8f 	bl	801b3a6 <__aeabi_atexit>
 8013c88:	4c0f      	ldr	r4, [pc, #60]	; (8013cc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8013c8a:	7823      	ldrb	r3, [r4, #0]
 8013c8c:	f3bf 8f5b 	dmb	ish
 8013c90:	07db      	lsls	r3, r3, #31
 8013c92:	d40b      	bmi.n	8013cac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8013c94:	4620      	mov	r0, r4
 8013c96:	f007 fb8d 	bl	801b3b4 <__cxa_guard_acquire>
 8013c9a:	b138      	cbz	r0, 8013cac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8013c9c:	4620      	mov	r0, r4
 8013c9e:	f007 fb95 	bl	801b3cc <__cxa_guard_release>
 8013ca2:	4a06      	ldr	r2, [pc, #24]	; (8013cbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013ca4:	4909      	ldr	r1, [pc, #36]	; (8013ccc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8013ca6:	480a      	ldr	r0, [pc, #40]	; (8013cd0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013ca8:	f007 fb7d 	bl	801b3a6 <__aeabi_atexit>
 8013cac:	4b05      	ldr	r3, [pc, #20]	; (8013cc4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013cae:	632b      	str	r3, [r5, #48]	; 0x30
 8013cb0:	4b07      	ldr	r3, [pc, #28]	; (8013cd0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013cb2:	636b      	str	r3, [r5, #52]	; 0x34
 8013cb4:	bd38      	pop	{r3, r4, r5, pc}
 8013cb6:	bf00      	nop
 8013cb8:	2000a510 	.word	0x2000a510
 8013cbc:	20000000 	.word	0x20000000
 8013cc0:	0801204d 	.word	0x0801204d
 8013cc4:	200000bc 	.word	0x200000bc
 8013cc8:	2000a514 	.word	0x2000a514
 8013ccc:	0801204b 	.word	0x0801204b
 8013cd0:	200000c0 	.word	0x200000c0

08013cd4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8013cd4:	b538      	push	{r3, r4, r5, lr}
 8013cd6:	4c15      	ldr	r4, [pc, #84]	; (8013d2c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8013cd8:	7823      	ldrb	r3, [r4, #0]
 8013cda:	f3bf 8f5b 	dmb	ish
 8013cde:	07da      	lsls	r2, r3, #31
 8013ce0:	4605      	mov	r5, r0
 8013ce2:	d40b      	bmi.n	8013cfc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8013ce4:	4620      	mov	r0, r4
 8013ce6:	f007 fb65 	bl	801b3b4 <__cxa_guard_acquire>
 8013cea:	b138      	cbz	r0, 8013cfc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8013cec:	4620      	mov	r0, r4
 8013cee:	f007 fb6d 	bl	801b3cc <__cxa_guard_release>
 8013cf2:	4a0f      	ldr	r2, [pc, #60]	; (8013d30 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013cf4:	490f      	ldr	r1, [pc, #60]	; (8013d34 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8013cf6:	4810      	ldr	r0, [pc, #64]	; (8013d38 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013cf8:	f007 fb55 	bl	801b3a6 <__aeabi_atexit>
 8013cfc:	4c0f      	ldr	r4, [pc, #60]	; (8013d3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8013cfe:	7823      	ldrb	r3, [r4, #0]
 8013d00:	f3bf 8f5b 	dmb	ish
 8013d04:	07db      	lsls	r3, r3, #31
 8013d06:	d40b      	bmi.n	8013d20 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013d08:	4620      	mov	r0, r4
 8013d0a:	f007 fb53 	bl	801b3b4 <__cxa_guard_acquire>
 8013d0e:	b138      	cbz	r0, 8013d20 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013d10:	4620      	mov	r0, r4
 8013d12:	f007 fb5b 	bl	801b3cc <__cxa_guard_release>
 8013d16:	4a06      	ldr	r2, [pc, #24]	; (8013d30 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013d18:	4909      	ldr	r1, [pc, #36]	; (8013d40 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8013d1a:	480a      	ldr	r0, [pc, #40]	; (8013d44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8013d1c:	f007 fb43 	bl	801b3a6 <__aeabi_atexit>
 8013d20:	4b05      	ldr	r3, [pc, #20]	; (8013d38 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013d22:	62ab      	str	r3, [r5, #40]	; 0x28
 8013d24:	4b07      	ldr	r3, [pc, #28]	; (8013d44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8013d26:	62eb      	str	r3, [r5, #44]	; 0x2c
 8013d28:	bd38      	pop	{r3, r4, r5, pc}
 8013d2a:	bf00      	nop
 8013d2c:	2000a4e0 	.word	0x2000a4e0
 8013d30:	20000000 	.word	0x20000000
 8013d34:	08012051 	.word	0x08012051
 8013d38:	2000008c 	.word	0x2000008c
 8013d3c:	2000a4e4 	.word	0x2000a4e4
 8013d40:	0801204f 	.word	0x0801204f
 8013d44:	20000090 	.word	0x20000090

08013d48 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8013d48:	b510      	push	{r4, lr}
 8013d4a:	4604      	mov	r4, r0
 8013d4c:	f7ff ff88 	bl	8013c60 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8013d50:	4620      	mov	r0, r4
 8013d52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013d56:	f7ff bfbd 	b.w	8013cd4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08013d5c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8013d5c:	b538      	push	{r3, r4, r5, lr}
 8013d5e:	4c15      	ldr	r4, [pc, #84]	; (8013db4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8013d60:	7823      	ldrb	r3, [r4, #0]
 8013d62:	f3bf 8f5b 	dmb	ish
 8013d66:	07da      	lsls	r2, r3, #31
 8013d68:	4605      	mov	r5, r0
 8013d6a:	d40b      	bmi.n	8013d84 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8013d6c:	4620      	mov	r0, r4
 8013d6e:	f007 fb21 	bl	801b3b4 <__cxa_guard_acquire>
 8013d72:	b138      	cbz	r0, 8013d84 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8013d74:	4620      	mov	r0, r4
 8013d76:	f007 fb29 	bl	801b3cc <__cxa_guard_release>
 8013d7a:	4a0f      	ldr	r2, [pc, #60]	; (8013db8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013d7c:	490f      	ldr	r1, [pc, #60]	; (8013dbc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8013d7e:	4810      	ldr	r0, [pc, #64]	; (8013dc0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013d80:	f007 fb11 	bl	801b3a6 <__aeabi_atexit>
 8013d84:	4c0f      	ldr	r4, [pc, #60]	; (8013dc4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8013d86:	7823      	ldrb	r3, [r4, #0]
 8013d88:	f3bf 8f5b 	dmb	ish
 8013d8c:	07db      	lsls	r3, r3, #31
 8013d8e:	d40b      	bmi.n	8013da8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013d90:	4620      	mov	r0, r4
 8013d92:	f007 fb0f 	bl	801b3b4 <__cxa_guard_acquire>
 8013d96:	b138      	cbz	r0, 8013da8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013d98:	4620      	mov	r0, r4
 8013d9a:	f007 fb17 	bl	801b3cc <__cxa_guard_release>
 8013d9e:	4a06      	ldr	r2, [pc, #24]	; (8013db8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013da0:	4909      	ldr	r1, [pc, #36]	; (8013dc8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8013da2:	480a      	ldr	r0, [pc, #40]	; (8013dcc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013da4:	f007 faff 	bl	801b3a6 <__aeabi_atexit>
 8013da8:	4b05      	ldr	r3, [pc, #20]	; (8013dc0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013daa:	652b      	str	r3, [r5, #80]	; 0x50
 8013dac:	4b07      	ldr	r3, [pc, #28]	; (8013dcc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013dae:	656b      	str	r3, [r5, #84]	; 0x54
 8013db0:	bd38      	pop	{r3, r4, r5, pc}
 8013db2:	bf00      	nop
 8013db4:	2000a518 	.word	0x2000a518
 8013db8:	20000000 	.word	0x20000000
 8013dbc:	0801203d 	.word	0x0801203d
 8013dc0:	200000c4 	.word	0x200000c4
 8013dc4:	2000a51c 	.word	0x2000a51c
 8013dc8:	0801203b 	.word	0x0801203b
 8013dcc:	200000c8 	.word	0x200000c8

08013dd0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8013dd0:	b538      	push	{r3, r4, r5, lr}
 8013dd2:	4c15      	ldr	r4, [pc, #84]	; (8013e28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8013dd4:	7823      	ldrb	r3, [r4, #0]
 8013dd6:	f3bf 8f5b 	dmb	ish
 8013dda:	07da      	lsls	r2, r3, #31
 8013ddc:	4605      	mov	r5, r0
 8013dde:	d40b      	bmi.n	8013df8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013de0:	4620      	mov	r0, r4
 8013de2:	f007 fae7 	bl	801b3b4 <__cxa_guard_acquire>
 8013de6:	b138      	cbz	r0, 8013df8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013de8:	4620      	mov	r0, r4
 8013dea:	f007 faef 	bl	801b3cc <__cxa_guard_release>
 8013dee:	4a0f      	ldr	r2, [pc, #60]	; (8013e2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013df0:	490f      	ldr	r1, [pc, #60]	; (8013e30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8013df2:	4810      	ldr	r0, [pc, #64]	; (8013e34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8013df4:	f007 fad7 	bl	801b3a6 <__aeabi_atexit>
 8013df8:	4c0f      	ldr	r4, [pc, #60]	; (8013e38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8013dfa:	7823      	ldrb	r3, [r4, #0]
 8013dfc:	f3bf 8f5b 	dmb	ish
 8013e00:	07db      	lsls	r3, r3, #31
 8013e02:	d40b      	bmi.n	8013e1c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8013e04:	4620      	mov	r0, r4
 8013e06:	f007 fad5 	bl	801b3b4 <__cxa_guard_acquire>
 8013e0a:	b138      	cbz	r0, 8013e1c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8013e0c:	4620      	mov	r0, r4
 8013e0e:	f007 fadd 	bl	801b3cc <__cxa_guard_release>
 8013e12:	4a06      	ldr	r2, [pc, #24]	; (8013e2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013e14:	4909      	ldr	r1, [pc, #36]	; (8013e3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8013e16:	480a      	ldr	r0, [pc, #40]	; (8013e40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013e18:	f007 fac5 	bl	801b3a6 <__aeabi_atexit>
 8013e1c:	4b05      	ldr	r3, [pc, #20]	; (8013e34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8013e1e:	64ab      	str	r3, [r5, #72]	; 0x48
 8013e20:	4b07      	ldr	r3, [pc, #28]	; (8013e40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013e22:	64eb      	str	r3, [r5, #76]	; 0x4c
 8013e24:	bd38      	pop	{r3, r4, r5, pc}
 8013e26:	bf00      	nop
 8013e28:	2000a520 	.word	0x2000a520
 8013e2c:	20000000 	.word	0x20000000
 8013e30:	08012041 	.word	0x08012041
 8013e34:	200000cc 	.word	0x200000cc
 8013e38:	2000a524 	.word	0x2000a524
 8013e3c:	0801203f 	.word	0x0801203f
 8013e40:	200000d0 	.word	0x200000d0

08013e44 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8013e44:	b538      	push	{r3, r4, r5, lr}
 8013e46:	4c15      	ldr	r4, [pc, #84]	; (8013e9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8013e48:	7823      	ldrb	r3, [r4, #0]
 8013e4a:	f3bf 8f5b 	dmb	ish
 8013e4e:	07da      	lsls	r2, r3, #31
 8013e50:	4605      	mov	r5, r0
 8013e52:	d40b      	bmi.n	8013e6c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8013e54:	4620      	mov	r0, r4
 8013e56:	f007 faad 	bl	801b3b4 <__cxa_guard_acquire>
 8013e5a:	b138      	cbz	r0, 8013e6c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8013e5c:	4620      	mov	r0, r4
 8013e5e:	f007 fab5 	bl	801b3cc <__cxa_guard_release>
 8013e62:	4a0f      	ldr	r2, [pc, #60]	; (8013ea0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8013e64:	490f      	ldr	r1, [pc, #60]	; (8013ea4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8013e66:	4810      	ldr	r0, [pc, #64]	; (8013ea8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8013e68:	f007 fa9d 	bl	801b3a6 <__aeabi_atexit>
 8013e6c:	4c0f      	ldr	r4, [pc, #60]	; (8013eac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8013e6e:	7823      	ldrb	r3, [r4, #0]
 8013e70:	f3bf 8f5b 	dmb	ish
 8013e74:	07db      	lsls	r3, r3, #31
 8013e76:	d40b      	bmi.n	8013e90 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8013e78:	4620      	mov	r0, r4
 8013e7a:	f007 fa9b 	bl	801b3b4 <__cxa_guard_acquire>
 8013e7e:	b138      	cbz	r0, 8013e90 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8013e80:	4620      	mov	r0, r4
 8013e82:	f007 faa3 	bl	801b3cc <__cxa_guard_release>
 8013e86:	4a06      	ldr	r2, [pc, #24]	; (8013ea0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8013e88:	4909      	ldr	r1, [pc, #36]	; (8013eb0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8013e8a:	480a      	ldr	r0, [pc, #40]	; (8013eb4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8013e8c:	f007 fa8b 	bl	801b3a6 <__aeabi_atexit>
 8013e90:	4b05      	ldr	r3, [pc, #20]	; (8013ea8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8013e92:	642b      	str	r3, [r5, #64]	; 0x40
 8013e94:	4b07      	ldr	r3, [pc, #28]	; (8013eb4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8013e96:	646b      	str	r3, [r5, #68]	; 0x44
 8013e98:	bd38      	pop	{r3, r4, r5, pc}
 8013e9a:	bf00      	nop
 8013e9c:	2000a4e8 	.word	0x2000a4e8
 8013ea0:	20000000 	.word	0x20000000
 8013ea4:	08012045 	.word	0x08012045
 8013ea8:	20000094 	.word	0x20000094
 8013eac:	2000a4ec 	.word	0x2000a4ec
 8013eb0:	08012043 	.word	0x08012043
 8013eb4:	20000098 	.word	0x20000098

08013eb8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8013eb8:	b538      	push	{r3, r4, r5, lr}
 8013eba:	4c15      	ldr	r4, [pc, #84]	; (8013f10 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8013ebc:	7823      	ldrb	r3, [r4, #0]
 8013ebe:	f3bf 8f5b 	dmb	ish
 8013ec2:	07da      	lsls	r2, r3, #31
 8013ec4:	4605      	mov	r5, r0
 8013ec6:	d40b      	bmi.n	8013ee0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013ec8:	4620      	mov	r0, r4
 8013eca:	f007 fa73 	bl	801b3b4 <__cxa_guard_acquire>
 8013ece:	b138      	cbz	r0, 8013ee0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013ed0:	4620      	mov	r0, r4
 8013ed2:	f007 fa7b 	bl	801b3cc <__cxa_guard_release>
 8013ed6:	4a0f      	ldr	r2, [pc, #60]	; (8013f14 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8013ed8:	490f      	ldr	r1, [pc, #60]	; (8013f18 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8013eda:	4810      	ldr	r0, [pc, #64]	; (8013f1c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8013edc:	f007 fa63 	bl	801b3a6 <__aeabi_atexit>
 8013ee0:	4c0f      	ldr	r4, [pc, #60]	; (8013f20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8013ee2:	7823      	ldrb	r3, [r4, #0]
 8013ee4:	f3bf 8f5b 	dmb	ish
 8013ee8:	07db      	lsls	r3, r3, #31
 8013eea:	d40b      	bmi.n	8013f04 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8013eec:	4620      	mov	r0, r4
 8013eee:	f007 fa61 	bl	801b3b4 <__cxa_guard_acquire>
 8013ef2:	b138      	cbz	r0, 8013f04 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8013ef4:	4620      	mov	r0, r4
 8013ef6:	f007 fa69 	bl	801b3cc <__cxa_guard_release>
 8013efa:	4a06      	ldr	r2, [pc, #24]	; (8013f14 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8013efc:	4909      	ldr	r1, [pc, #36]	; (8013f24 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8013efe:	480a      	ldr	r0, [pc, #40]	; (8013f28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8013f00:	f007 fa51 	bl	801b3a6 <__aeabi_atexit>
 8013f04:	4b05      	ldr	r3, [pc, #20]	; (8013f1c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8013f06:	63ab      	str	r3, [r5, #56]	; 0x38
 8013f08:	4b07      	ldr	r3, [pc, #28]	; (8013f28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8013f0a:	63eb      	str	r3, [r5, #60]	; 0x3c
 8013f0c:	bd38      	pop	{r3, r4, r5, pc}
 8013f0e:	bf00      	nop
 8013f10:	2000a508 	.word	0x2000a508
 8013f14:	20000000 	.word	0x20000000
 8013f18:	08012049 	.word	0x08012049
 8013f1c:	200000b4 	.word	0x200000b4
 8013f20:	2000a50c 	.word	0x2000a50c
 8013f24:	08012047 	.word	0x08012047
 8013f28:	200000b8 	.word	0x200000b8

08013f2c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8013f2c:	b510      	push	{r4, lr}
 8013f2e:	4604      	mov	r4, r0
 8013f30:	f7ff ff14 	bl	8013d5c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8013f34:	4620      	mov	r0, r4
 8013f36:	f7ff ff85 	bl	8013e44 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8013f3a:	4620      	mov	r0, r4
 8013f3c:	f7ff ff48 	bl	8013dd0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8013f40:	4620      	mov	r0, r4
 8013f42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013f46:	f7ff bfb7 	b.w	8013eb8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08013f4c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8013f4c:	b538      	push	{r3, r4, r5, lr}
 8013f4e:	4c15      	ldr	r4, [pc, #84]	; (8013fa4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8013f50:	7823      	ldrb	r3, [r4, #0]
 8013f52:	f3bf 8f5b 	dmb	ish
 8013f56:	07da      	lsls	r2, r3, #31
 8013f58:	4605      	mov	r5, r0
 8013f5a:	d40b      	bmi.n	8013f74 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8013f5c:	4620      	mov	r0, r4
 8013f5e:	f007 fa29 	bl	801b3b4 <__cxa_guard_acquire>
 8013f62:	b138      	cbz	r0, 8013f74 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8013f64:	4620      	mov	r0, r4
 8013f66:	f007 fa31 	bl	801b3cc <__cxa_guard_release>
 8013f6a:	4a0f      	ldr	r2, [pc, #60]	; (8013fa8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8013f6c:	490f      	ldr	r1, [pc, #60]	; (8013fac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8013f6e:	4810      	ldr	r0, [pc, #64]	; (8013fb0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8013f70:	f007 fa19 	bl	801b3a6 <__aeabi_atexit>
 8013f74:	4c0f      	ldr	r4, [pc, #60]	; (8013fb4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8013f76:	7823      	ldrb	r3, [r4, #0]
 8013f78:	f3bf 8f5b 	dmb	ish
 8013f7c:	07db      	lsls	r3, r3, #31
 8013f7e:	d40b      	bmi.n	8013f98 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8013f80:	4620      	mov	r0, r4
 8013f82:	f007 fa17 	bl	801b3b4 <__cxa_guard_acquire>
 8013f86:	b138      	cbz	r0, 8013f98 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8013f88:	4620      	mov	r0, r4
 8013f8a:	f007 fa1f 	bl	801b3cc <__cxa_guard_release>
 8013f8e:	4a06      	ldr	r2, [pc, #24]	; (8013fa8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8013f90:	4909      	ldr	r1, [pc, #36]	; (8013fb8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8013f92:	480a      	ldr	r0, [pc, #40]	; (8013fbc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8013f94:	f007 fa07 	bl	801b3a6 <__aeabi_atexit>
 8013f98:	4b05      	ldr	r3, [pc, #20]	; (8013fb0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8013f9a:	662b      	str	r3, [r5, #96]	; 0x60
 8013f9c:	4b07      	ldr	r3, [pc, #28]	; (8013fbc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8013f9e:	666b      	str	r3, [r5, #100]	; 0x64
 8013fa0:	bd38      	pop	{r3, r4, r5, pc}
 8013fa2:	bf00      	nop
 8013fa4:	2000a4f0 	.word	0x2000a4f0
 8013fa8:	20000000 	.word	0x20000000
 8013fac:	08012035 	.word	0x08012035
 8013fb0:	2000009c 	.word	0x2000009c
 8013fb4:	2000a4f4 	.word	0x2000a4f4
 8013fb8:	08012033 	.word	0x08012033
 8013fbc:	200000a0 	.word	0x200000a0

08013fc0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8013fc0:	b538      	push	{r3, r4, r5, lr}
 8013fc2:	4c15      	ldr	r4, [pc, #84]	; (8014018 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8013fc4:	7823      	ldrb	r3, [r4, #0]
 8013fc6:	f3bf 8f5b 	dmb	ish
 8013fca:	07da      	lsls	r2, r3, #31
 8013fcc:	4605      	mov	r5, r0
 8013fce:	d40b      	bmi.n	8013fe8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8013fd0:	4620      	mov	r0, r4
 8013fd2:	f007 f9ef 	bl	801b3b4 <__cxa_guard_acquire>
 8013fd6:	b138      	cbz	r0, 8013fe8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8013fd8:	4620      	mov	r0, r4
 8013fda:	f007 f9f7 	bl	801b3cc <__cxa_guard_release>
 8013fde:	4a0f      	ldr	r2, [pc, #60]	; (801401c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8013fe0:	490f      	ldr	r1, [pc, #60]	; (8014020 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8013fe2:	4810      	ldr	r0, [pc, #64]	; (8014024 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8013fe4:	f007 f9df 	bl	801b3a6 <__aeabi_atexit>
 8013fe8:	4c0f      	ldr	r4, [pc, #60]	; (8014028 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8013fea:	7823      	ldrb	r3, [r4, #0]
 8013fec:	f3bf 8f5b 	dmb	ish
 8013ff0:	07db      	lsls	r3, r3, #31
 8013ff2:	d40b      	bmi.n	801400c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8013ff4:	4620      	mov	r0, r4
 8013ff6:	f007 f9dd 	bl	801b3b4 <__cxa_guard_acquire>
 8013ffa:	b138      	cbz	r0, 801400c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8013ffc:	4620      	mov	r0, r4
 8013ffe:	f007 f9e5 	bl	801b3cc <__cxa_guard_release>
 8014002:	4a06      	ldr	r2, [pc, #24]	; (801401c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8014004:	4909      	ldr	r1, [pc, #36]	; (801402c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8014006:	480a      	ldr	r0, [pc, #40]	; (8014030 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8014008:	f007 f9cd 	bl	801b3a6 <__aeabi_atexit>
 801400c:	4b05      	ldr	r3, [pc, #20]	; (8014024 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801400e:	65ab      	str	r3, [r5, #88]	; 0x58
 8014010:	4b07      	ldr	r3, [pc, #28]	; (8014030 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8014012:	65eb      	str	r3, [r5, #92]	; 0x5c
 8014014:	bd38      	pop	{r3, r4, r5, pc}
 8014016:	bf00      	nop
 8014018:	2000a4c8 	.word	0x2000a4c8
 801401c:	20000000 	.word	0x20000000
 8014020:	08012039 	.word	0x08012039
 8014024:	20000074 	.word	0x20000074
 8014028:	2000a4cc 	.word	0x2000a4cc
 801402c:	08012037 	.word	0x08012037
 8014030:	20000078 	.word	0x20000078

08014034 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8014034:	b510      	push	{r4, lr}
 8014036:	4604      	mov	r4, r0
 8014038:	f7ff ff88 	bl	8013f4c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801403c:	4620      	mov	r0, r4
 801403e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014042:	f7ff bfbd 	b.w	8013fc0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08014048 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8014048:	b538      	push	{r3, r4, r5, lr}
 801404a:	4c15      	ldr	r4, [pc, #84]	; (80140a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801404c:	7823      	ldrb	r3, [r4, #0]
 801404e:	f3bf 8f5b 	dmb	ish
 8014052:	07da      	lsls	r2, r3, #31
 8014054:	4605      	mov	r5, r0
 8014056:	d40b      	bmi.n	8014070 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014058:	4620      	mov	r0, r4
 801405a:	f007 f9ab 	bl	801b3b4 <__cxa_guard_acquire>
 801405e:	b138      	cbz	r0, 8014070 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014060:	4620      	mov	r0, r4
 8014062:	f007 f9b3 	bl	801b3cc <__cxa_guard_release>
 8014066:	4a0f      	ldr	r2, [pc, #60]	; (80140a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014068:	490f      	ldr	r1, [pc, #60]	; (80140a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801406a:	4810      	ldr	r0, [pc, #64]	; (80140ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801406c:	f007 f99b 	bl	801b3a6 <__aeabi_atexit>
 8014070:	4c0f      	ldr	r4, [pc, #60]	; (80140b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8014072:	7823      	ldrb	r3, [r4, #0]
 8014074:	f3bf 8f5b 	dmb	ish
 8014078:	07db      	lsls	r3, r3, #31
 801407a:	d40b      	bmi.n	8014094 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801407c:	4620      	mov	r0, r4
 801407e:	f007 f999 	bl	801b3b4 <__cxa_guard_acquire>
 8014082:	b138      	cbz	r0, 8014094 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8014084:	4620      	mov	r0, r4
 8014086:	f007 f9a1 	bl	801b3cc <__cxa_guard_release>
 801408a:	4a06      	ldr	r2, [pc, #24]	; (80140a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801408c:	4909      	ldr	r1, [pc, #36]	; (80140b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801408e:	480a      	ldr	r0, [pc, #40]	; (80140b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8014090:	f007 f989 	bl	801b3a6 <__aeabi_atexit>
 8014094:	4b05      	ldr	r3, [pc, #20]	; (80140ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8014096:	672b      	str	r3, [r5, #112]	; 0x70
 8014098:	4b07      	ldr	r3, [pc, #28]	; (80140b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801409a:	676b      	str	r3, [r5, #116]	; 0x74
 801409c:	bd38      	pop	{r3, r4, r5, pc}
 801409e:	bf00      	nop
 80140a0:	2000a4c0 	.word	0x2000a4c0
 80140a4:	20000000 	.word	0x20000000
 80140a8:	0801202d 	.word	0x0801202d
 80140ac:	2000006c 	.word	0x2000006c
 80140b0:	2000a4c4 	.word	0x2000a4c4
 80140b4:	0801202b 	.word	0x0801202b
 80140b8:	20000070 	.word	0x20000070

080140bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80140bc:	b538      	push	{r3, r4, r5, lr}
 80140be:	4c15      	ldr	r4, [pc, #84]	; (8014114 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80140c0:	7823      	ldrb	r3, [r4, #0]
 80140c2:	f3bf 8f5b 	dmb	ish
 80140c6:	07da      	lsls	r2, r3, #31
 80140c8:	4605      	mov	r5, r0
 80140ca:	d40b      	bmi.n	80140e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80140cc:	4620      	mov	r0, r4
 80140ce:	f007 f971 	bl	801b3b4 <__cxa_guard_acquire>
 80140d2:	b138      	cbz	r0, 80140e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80140d4:	4620      	mov	r0, r4
 80140d6:	f007 f979 	bl	801b3cc <__cxa_guard_release>
 80140da:	4a0f      	ldr	r2, [pc, #60]	; (8014118 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80140dc:	490f      	ldr	r1, [pc, #60]	; (801411c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80140de:	4810      	ldr	r0, [pc, #64]	; (8014120 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80140e0:	f007 f961 	bl	801b3a6 <__aeabi_atexit>
 80140e4:	4c0f      	ldr	r4, [pc, #60]	; (8014124 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80140e6:	7823      	ldrb	r3, [r4, #0]
 80140e8:	f3bf 8f5b 	dmb	ish
 80140ec:	07db      	lsls	r3, r3, #31
 80140ee:	d40b      	bmi.n	8014108 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80140f0:	4620      	mov	r0, r4
 80140f2:	f007 f95f 	bl	801b3b4 <__cxa_guard_acquire>
 80140f6:	b138      	cbz	r0, 8014108 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80140f8:	4620      	mov	r0, r4
 80140fa:	f007 f967 	bl	801b3cc <__cxa_guard_release>
 80140fe:	4a06      	ldr	r2, [pc, #24]	; (8014118 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8014100:	4909      	ldr	r1, [pc, #36]	; (8014128 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8014102:	480a      	ldr	r0, [pc, #40]	; (801412c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8014104:	f007 f94f 	bl	801b3a6 <__aeabi_atexit>
 8014108:	4b05      	ldr	r3, [pc, #20]	; (8014120 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801410a:	66ab      	str	r3, [r5, #104]	; 0x68
 801410c:	4b07      	ldr	r3, [pc, #28]	; (801412c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801410e:	66eb      	str	r3, [r5, #108]	; 0x6c
 8014110:	bd38      	pop	{r3, r4, r5, pc}
 8014112:	bf00      	nop
 8014114:	2000a4b8 	.word	0x2000a4b8
 8014118:	20000000 	.word	0x20000000
 801411c:	08012031 	.word	0x08012031
 8014120:	20000064 	.word	0x20000064
 8014124:	2000a4bc 	.word	0x2000a4bc
 8014128:	0801202f 	.word	0x0801202f
 801412c:	20000068 	.word	0x20000068

08014130 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8014130:	b510      	push	{r4, lr}
 8014132:	4604      	mov	r4, r0
 8014134:	f7ff ff88 	bl	8014048 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8014138:	4620      	mov	r0, r4
 801413a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801413e:	f7ff bfbd 	b.w	80140bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08014142 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8014142:	b510      	push	{r4, lr}
 8014144:	4604      	mov	r4, r0
 8014146:	f7ff fff3 	bl	8014130 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801414a:	4620      	mov	r0, r4
 801414c:	f7ff ff72 	bl	8014034 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8014150:	4620      	mov	r0, r4
 8014152:	f7ff fdf9 	bl	8013d48 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8014156:	4620      	mov	r0, r4
 8014158:	f7ff fcfa 	bl	8013b50 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801415c:	4620      	mov	r0, r4
 801415e:	f7ff fd75 	bl	8013c4c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8014162:	4620      	mov	r0, r4
 8014164:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014168:	f7ff bee0 	b.w	8013f2c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801416c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801416c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014170:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8014174:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8014178:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801417c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8014180:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8014184:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8014188:	8808      	ldrh	r0, [r1, #0]
 801418a:	fb0e 4708 	mla	r7, lr, r8, r4
 801418e:	f1be 0f00 	cmp.w	lr, #0
 8014192:	eb02 0a07 	add.w	sl, r2, r7
 8014196:	db37      	blt.n	8014208 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8014198:	45f3      	cmp	fp, lr
 801419a:	dd35      	ble.n	8014208 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 801419c:	2c00      	cmp	r4, #0
 801419e:	db31      	blt.n	8014204 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80141a0:	45a0      	cmp	r8, r4
 80141a2:	dd2f      	ble.n	8014204 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80141a4:	5dd2      	ldrb	r2, [r2, r7]
 80141a6:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 80141aa:	1c62      	adds	r2, r4, #1
 80141ac:	d42f      	bmi.n	801420e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80141ae:	4590      	cmp	r8, r2
 80141b0:	dd2d      	ble.n	801420e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80141b2:	b366      	cbz	r6, 801420e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80141b4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80141b8:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80141bc:	f11e 0e01 	adds.w	lr, lr, #1
 80141c0:	d429      	bmi.n	8014216 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80141c2:	45f3      	cmp	fp, lr
 80141c4:	dd27      	ble.n	8014216 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80141c6:	f1bc 0f00 	cmp.w	ip, #0
 80141ca:	f000 80a0 	beq.w	801430e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 80141ce:	2c00      	cmp	r4, #0
 80141d0:	db1f      	blt.n	8014212 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80141d2:	45a0      	cmp	r8, r4
 80141d4:	dd1d      	ble.n	8014212 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80141d6:	f81a 2008 	ldrb.w	r2, [sl, r8]
 80141da:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 80141de:	3401      	adds	r4, #1
 80141e0:	d41c      	bmi.n	801421c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80141e2:	45a0      	cmp	r8, r4
 80141e4:	dd1a      	ble.n	801421c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80141e6:	b1de      	cbz	r6, 8014220 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 80141e8:	44d0      	add	r8, sl
 80141ea:	f898 2001 	ldrb.w	r2, [r8, #1]
 80141ee:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80141f2:	2e0f      	cmp	r6, #15
 80141f4:	d915      	bls.n	8014222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 80141f6:	4b49      	ldr	r3, [pc, #292]	; (801431c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 80141f8:	4a49      	ldr	r2, [pc, #292]	; (8014320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 80141fa:	484a      	ldr	r0, [pc, #296]	; (8014324 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 80141fc:	f240 11ef 	movw	r1, #495	; 0x1ef
 8014200:	f007 f904 	bl	801b40c <__assert_func>
 8014204:	4681      	mov	r9, r0
 8014206:	e7d0      	b.n	80141aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8014208:	4607      	mov	r7, r0
 801420a:	4681      	mov	r9, r0
 801420c:	e7d6      	b.n	80141bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801420e:	4607      	mov	r7, r0
 8014210:	e7d4      	b.n	80141bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8014212:	4686      	mov	lr, r0
 8014214:	e7e3      	b.n	80141de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8014216:	4603      	mov	r3, r0
 8014218:	4686      	mov	lr, r0
 801421a:	e7ea      	b.n	80141f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801421c:	4603      	mov	r3, r0
 801421e:	e7e8      	b.n	80141f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8014220:	4603      	mov	r3, r0
 8014222:	f1bc 0f0f 	cmp.w	ip, #15
 8014226:	d8e6      	bhi.n	80141f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014228:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801422c:	fb16 f80c 	smulbb	r8, r6, ip
 8014230:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014234:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8014238:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801423c:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8014240:	ea44 0909 	orr.w	r9, r4, r9
 8014244:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8014248:	f1cc 0410 	rsb	r4, ip, #16
 801424c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014250:	1ba4      	subs	r4, r4, r6
 8014252:	041a      	lsls	r2, r3, #16
 8014254:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8014258:	ea4a 0707 	orr.w	r7, sl, r7
 801425c:	4377      	muls	r7, r6
 801425e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8014262:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8014266:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801426a:	fb04 7409 	mla	r4, r4, r9, r7
 801426e:	4313      	orrs	r3, r2
 8014270:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8014274:	fb08 4303 	mla	r3, r8, r3, r4
 8014278:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801427c:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8014280:	4322      	orrs	r2, r4
 8014282:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8014286:	fb0c 3202 	mla	r2, ip, r2, r3
 801428a:	0d53      	lsrs	r3, r2, #21
 801428c:	0952      	lsrs	r2, r2, #5
 801428e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014292:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014296:	431a      	orrs	r2, r3
 8014298:	b293      	uxth	r3, r2
 801429a:	b2af      	uxth	r7, r5
 801429c:	1202      	asrs	r2, r0, #8
 801429e:	43ed      	mvns	r5, r5
 80142a0:	b2ed      	uxtb	r5, r5
 80142a2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80142a6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80142aa:	fb12 f205 	smulbb	r2, r2, r5
 80142ae:	10c6      	asrs	r6, r0, #3
 80142b0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80142b4:	fb0c 2c07 	mla	ip, ip, r7, r2
 80142b8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80142bc:	10da      	asrs	r2, r3, #3
 80142be:	fb16 f605 	smulbb	r6, r6, r5
 80142c2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80142c6:	fb02 6207 	mla	r2, r2, r7, r6
 80142ca:	b296      	uxth	r6, r2
 80142cc:	00c2      	lsls	r2, r0, #3
 80142ce:	00dc      	lsls	r4, r3, #3
 80142d0:	b2d2      	uxtb	r2, r2
 80142d2:	b2e4      	uxtb	r4, r4
 80142d4:	fb12 f205 	smulbb	r2, r2, r5
 80142d8:	fb04 2207 	mla	r2, r4, r7, r2
 80142dc:	fa1f fc8c 	uxth.w	ip, ip
 80142e0:	b292      	uxth	r2, r2
 80142e2:	f10c 0301 	add.w	r3, ip, #1
 80142e6:	1c50      	adds	r0, r2, #1
 80142e8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80142ec:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80142f0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80142f4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80142f8:	4313      	orrs	r3, r2
 80142fa:	1c72      	adds	r2, r6, #1
 80142fc:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8014300:	0952      	lsrs	r2, r2, #5
 8014302:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014306:	4313      	orrs	r3, r2
 8014308:	800b      	strh	r3, [r1, #0]
 801430a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801430e:	2e0f      	cmp	r6, #15
 8014310:	f63f af71 	bhi.w	80141f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014314:	4603      	mov	r3, r0
 8014316:	4686      	mov	lr, r0
 8014318:	e786      	b.n	8014228 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 801431a:	bf00      	nop
 801431c:	0801f307 	.word	0x0801f307
 8014320:	0801f96e 	.word	0x0801f96e
 8014324:	0801f3f0 	.word	0x0801f3f0

08014328 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801432c:	ed2d 8b08 	vpush	{d8-d11}
 8014330:	b099      	sub	sp, #100	; 0x64
 8014332:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8014336:	9215      	str	r2, [sp, #84]	; 0x54
 8014338:	9309      	str	r3, [sp, #36]	; 0x24
 801433a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801433c:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8014340:	930d      	str	r3, [sp, #52]	; 0x34
 8014342:	910c      	str	r1, [sp, #48]	; 0x30
 8014344:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8014348:	9016      	str	r0, [sp, #88]	; 0x58
 801434a:	6850      	ldr	r0, [r2, #4]
 801434c:	6812      	ldr	r2, [r2, #0]
 801434e:	fb00 1303 	mla	r3, r0, r3, r1
 8014352:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8014356:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014358:	681b      	ldr	r3, [r3, #0]
 801435a:	930b      	str	r3, [sp, #44]	; 0x2c
 801435c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801435e:	685e      	ldr	r6, [r3, #4]
 8014360:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014362:	43db      	mvns	r3, r3
 8014364:	b2db      	uxtb	r3, r3
 8014366:	eeb0 aa40 	vmov.f32	s20, s0
 801436a:	eef0 9a60 	vmov.f32	s19, s1
 801436e:	eeb0 9a41 	vmov.f32	s18, s2
 8014372:	eeb0 8a62 	vmov.f32	s16, s5
 8014376:	eef0 8a43 	vmov.f32	s17, s6
 801437a:	eef0 ba44 	vmov.f32	s23, s8
 801437e:	eeb0 ba64 	vmov.f32	s22, s9
 8014382:	eef0 aa45 	vmov.f32	s21, s10
 8014386:	3604      	adds	r6, #4
 8014388:	930a      	str	r3, [sp, #40]	; 0x28
 801438a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801438c:	2b00      	cmp	r3, #0
 801438e:	dc03      	bgt.n	8014398 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014390:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014392:	2b00      	cmp	r3, #0
 8014394:	f340 8226 	ble.w	80147e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8014398:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801439a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801439e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80143a2:	1e48      	subs	r0, r1, #1
 80143a4:	1e57      	subs	r7, r2, #1
 80143a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80143a8:	2b00      	cmp	r3, #0
 80143aa:	f340 80e4 	ble.w	8014576 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80143ae:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80143b2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80143b6:	d406      	bmi.n	80143c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80143b8:	4584      	cmp	ip, r0
 80143ba:	da04      	bge.n	80143c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80143bc:	2b00      	cmp	r3, #0
 80143be:	db02      	blt.n	80143c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80143c0:	42bb      	cmp	r3, r7
 80143c2:	f2c0 80d9 	blt.w	8014578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80143c6:	f11c 0c01 	adds.w	ip, ip, #1
 80143ca:	f100 80ca 	bmi.w	8014562 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80143ce:	4561      	cmp	r1, ip
 80143d0:	f2c0 80c7 	blt.w	8014562 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80143d4:	3301      	adds	r3, #1
 80143d6:	f100 80c4 	bmi.w	8014562 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80143da:	429a      	cmp	r2, r3
 80143dc:	f2c0 80c1 	blt.w	8014562 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80143e0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80143e4:	4647      	mov	r7, r8
 80143e6:	f1bb 0f00 	cmp.w	fp, #0
 80143ea:	f340 80e4 	ble.w	80145b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 80143ee:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80143f0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80143f2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80143f6:	689b      	ldr	r3, [r3, #8]
 80143f8:	ea5f 422a 	movs.w	r2, sl, asr #16
 80143fc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8014400:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8014404:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8014408:	f100 8122 	bmi.w	8014650 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 801440c:	f103 39ff 	add.w	r9, r3, #4294967295
 8014410:	454a      	cmp	r2, r9
 8014412:	f280 811d 	bge.w	8014650 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8014416:	f1bc 0f00 	cmp.w	ip, #0
 801441a:	f2c0 8119 	blt.w	8014650 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 801441e:	f10e 39ff 	add.w	r9, lr, #4294967295
 8014422:	45cc      	cmp	ip, r9
 8014424:	f280 8114 	bge.w	8014650 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8014428:	b21b      	sxth	r3, r3
 801442a:	fb0c 2203 	mla	r2, ip, r3, r2
 801442e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014430:	eb04 0902 	add.w	r9, r4, r2
 8014434:	5ca2      	ldrb	r2, [r4, r2]
 8014436:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801443a:	2800      	cmp	r0, #0
 801443c:	f000 80ff 	beq.w	801463e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 8014440:	f899 2001 	ldrb.w	r2, [r9, #1]
 8014444:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8014448:	9211      	str	r2, [sp, #68]	; 0x44
 801444a:	b151      	cbz	r1, 8014462 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801444c:	eb09 0203 	add.w	r2, r9, r3
 8014450:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014454:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014458:	930f      	str	r3, [sp, #60]	; 0x3c
 801445a:	7853      	ldrb	r3, [r2, #1]
 801445c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014460:	9312      	str	r3, [sp, #72]	; 0x48
 8014462:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014464:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014466:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801446a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801446e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014472:	ea4c 0c03 	orr.w	ip, ip, r3
 8014476:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014478:	041b      	lsls	r3, r3, #16
 801447a:	fb10 f201 	smulbb	r2, r0, r1
 801447e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8014482:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014486:	10d2      	asrs	r2, r2, #3
 8014488:	4323      	orrs	r3, r4
 801448a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801448e:	4353      	muls	r3, r2
 8014490:	fb09 330c 	mla	r3, r9, ip, r3
 8014494:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014498:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801449c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80144a0:	ea4c 0e0e 	orr.w	lr, ip, lr
 80144a4:	f1c1 0c10 	rsb	ip, r1, #16
 80144a8:	ebac 0c00 	sub.w	ip, ip, r0
 80144ac:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80144b0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80144b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80144b6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80144b8:	0418      	lsls	r0, r3, #16
 80144ba:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80144be:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80144c2:	4318      	orrs	r0, r3
 80144c4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80144c8:	fb02 c200 	mla	r2, r2, r0, ip
 80144cc:	0d53      	lsrs	r3, r2, #21
 80144ce:	0952      	lsrs	r2, r2, #5
 80144d0:	f8b7 c000 	ldrh.w	ip, [r7]
 80144d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80144d8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80144dc:	431a      	orrs	r2, r3
 80144de:	b292      	uxth	r2, r2
 80144e0:	ea4f 212c 	mov.w	r1, ip, asr #8
 80144e4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80144e8:	1210      	asrs	r0, r2, #8
 80144ea:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80144ee:	fb11 f104 	smulbb	r1, r1, r4
 80144f2:	ea4f 0eec 	mov.w	lr, ip, asr #3
 80144f6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80144fa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80144fe:	fb00 1003 	mla	r0, r0, r3, r1
 8014502:	fa5f fc8c 	uxtb.w	ip, ip
 8014506:	10d1      	asrs	r1, r2, #3
 8014508:	00d2      	lsls	r2, r2, #3
 801450a:	fb1c fc04 	smulbb	ip, ip, r4
 801450e:	b2d2      	uxtb	r2, r2
 8014510:	fb02 c203 	mla	r2, r2, r3, ip
 8014514:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8014518:	b280      	uxth	r0, r0
 801451a:	b292      	uxth	r2, r2
 801451c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014520:	fb1e fe04 	smulbb	lr, lr, r4
 8014524:	fb01 e103 	mla	r1, r1, r3, lr
 8014528:	f102 0c01 	add.w	ip, r2, #1
 801452c:	1c43      	adds	r3, r0, #1
 801452e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8014532:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8014536:	b289      	uxth	r1, r1
 8014538:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801453c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8014540:	4313      	orrs	r3, r2
 8014542:	1c4a      	adds	r2, r1, #1
 8014544:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8014548:	0949      	lsrs	r1, r1, #5
 801454a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801454e:	430b      	orrs	r3, r1
 8014550:	803b      	strh	r3, [r7, #0]
 8014552:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014554:	449a      	add	sl, r3
 8014556:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014558:	3702      	adds	r7, #2
 801455a:	441d      	add	r5, r3
 801455c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014560:	e741      	b.n	80143e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8014562:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014564:	449a      	add	sl, r3
 8014566:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014568:	441d      	add	r5, r3
 801456a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801456c:	3b01      	subs	r3, #1
 801456e:	9309      	str	r3, [sp, #36]	; 0x24
 8014570:	f108 0802 	add.w	r8, r8, #2
 8014574:	e717      	b.n	80143a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014576:	d023      	beq.n	80145c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8014578:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801457a:	982d      	ldr	r0, [sp, #180]	; 0xb4
 801457c:	3b01      	subs	r3, #1
 801457e:	fb00 a003 	mla	r0, r0, r3, sl
 8014582:	1400      	asrs	r0, r0, #16
 8014584:	f53f af2c 	bmi.w	80143e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014588:	3901      	subs	r1, #1
 801458a:	4288      	cmp	r0, r1
 801458c:	f6bf af28 	bge.w	80143e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014590:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8014592:	fb01 5303 	mla	r3, r1, r3, r5
 8014596:	141b      	asrs	r3, r3, #16
 8014598:	f53f af22 	bmi.w	80143e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801459c:	3a01      	subs	r2, #1
 801459e:	4293      	cmp	r3, r2
 80145a0:	f6bf af1e 	bge.w	80143e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80145a4:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80145a8:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80145ac:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80145b0:	f1be 0f00 	cmp.w	lr, #0
 80145b4:	dc6c      	bgt.n	8014690 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80145b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80145b8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80145bc:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80145c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80145c2:	2b00      	cmp	r3, #0
 80145c4:	f340 810e 	ble.w	80147e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 80145c8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80145cc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80145d0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80145d4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80145d6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80145da:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80145de:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80145e2:	eef0 6a48 	vmov.f32	s13, s16
 80145e6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80145ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80145ee:	ee37 8a48 	vsub.f32	s16, s14, s16
 80145f2:	ee16 aa90 	vmov	sl, s13
 80145f6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80145fa:	eef0 6a68 	vmov.f32	s13, s17
 80145fe:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014602:	ee18 2a10 	vmov	r2, s16
 8014606:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801460a:	fb92 f3f3 	sdiv	r3, r2, r3
 801460e:	ee18 2a90 	vmov	r2, s17
 8014612:	932d      	str	r3, [sp, #180]	; 0xb4
 8014614:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014616:	fb92 f3f3 	sdiv	r3, r2, r3
 801461a:	932e      	str	r3, [sp, #184]	; 0xb8
 801461c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801461e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8014620:	3b01      	subs	r3, #1
 8014622:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014626:	930c      	str	r3, [sp, #48]	; 0x30
 8014628:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801462a:	bf08      	it	eq
 801462c:	4613      	moveq	r3, r2
 801462e:	ee16 5a90 	vmov	r5, s13
 8014632:	9309      	str	r3, [sp, #36]	; 0x24
 8014634:	eef0 8a67 	vmov.f32	s17, s15
 8014638:	eeb0 8a47 	vmov.f32	s16, s14
 801463c:	e6a5      	b.n	801438a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801463e:	2900      	cmp	r1, #0
 8014640:	f43f af0f 	beq.w	8014462 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014644:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014648:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801464c:	930f      	str	r3, [sp, #60]	; 0x3c
 801464e:	e708      	b.n	8014462 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014650:	f112 0901 	adds.w	r9, r2, #1
 8014654:	f53f af7d 	bmi.w	8014552 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8014658:	454b      	cmp	r3, r9
 801465a:	f6ff af7a 	blt.w	8014552 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801465e:	f11c 0901 	adds.w	r9, ip, #1
 8014662:	f53f af76 	bmi.w	8014552 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8014666:	45ce      	cmp	lr, r9
 8014668:	f6ff af73 	blt.w	8014552 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801466c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801466e:	9202      	str	r2, [sp, #8]
 8014670:	b21b      	sxth	r3, r3
 8014672:	fa0f f28e 	sxth.w	r2, lr
 8014676:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801467a:	e9cd c003 	strd	ip, r0, [sp, #12]
 801467e:	9201      	str	r2, [sp, #4]
 8014680:	9300      	str	r3, [sp, #0]
 8014682:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014684:	9816      	ldr	r0, [sp, #88]	; 0x58
 8014686:	4633      	mov	r3, r6
 8014688:	4639      	mov	r1, r7
 801468a:	f7ff fd6f 	bl	801416c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801468e:	e760      	b.n	8014552 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8014690:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014692:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014694:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8014698:	ea4f 422a 	mov.w	r2, sl, asr #16
 801469c:	1429      	asrs	r1, r5, #16
 801469e:	fb03 2101 	mla	r1, r3, r1, r2
 80146a2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80146a4:	440a      	add	r2, r1
 80146a6:	5c61      	ldrb	r1, [r4, r1]
 80146a8:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80146ac:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80146b0:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80146b4:	f1bc 0f00 	cmp.w	ip, #0
 80146b8:	f000 808c 	beq.w	80147d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80146bc:	7857      	ldrb	r7, [r2, #1]
 80146be:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80146c2:	9413      	str	r4, [sp, #76]	; 0x4c
 80146c4:	b140      	cbz	r0, 80146d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 80146c6:	18d7      	adds	r7, r2, r3
 80146c8:	5cd3      	ldrb	r3, [r2, r3]
 80146ca:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80146ce:	9310      	str	r3, [sp, #64]	; 0x40
 80146d0:	787b      	ldrb	r3, [r7, #1]
 80146d2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80146d6:	9314      	str	r3, [sp, #80]	; 0x50
 80146d8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80146da:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80146dc:	fb1c f200 	smulbb	r2, ip, r0
 80146e0:	041f      	lsls	r7, r3, #16
 80146e2:	10d2      	asrs	r2, r2, #3
 80146e4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80146e8:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80146ec:	431f      	orrs	r7, r3
 80146ee:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80146f2:	9317      	str	r3, [sp, #92]	; 0x5c
 80146f4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80146f6:	041b      	lsls	r3, r3, #16
 80146f8:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80146fc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014700:	ea43 030b 	orr.w	r3, r3, fp
 8014704:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8014706:	4353      	muls	r3, r2
 8014708:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801470c:	fb04 3707 	mla	r7, r4, r7, r3
 8014710:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014714:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014718:	ea43 0b01 	orr.w	fp, r3, r1
 801471c:	f1c0 0110 	rsb	r1, r0, #16
 8014720:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014722:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014724:	eba1 0c0c 	sub.w	ip, r1, ip
 8014728:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801472c:	fb0c 770b 	mla	r7, ip, fp, r7
 8014730:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014734:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8014738:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801473c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014740:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014744:	fb02 770c 	mla	r7, r2, ip, r7
 8014748:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801474a:	0d79      	lsrs	r1, r7, #21
 801474c:	097f      	lsrs	r7, r7, #5
 801474e:	8812      	ldrh	r2, [r2, #0]
 8014750:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014754:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014758:	430f      	orrs	r7, r1
 801475a:	b2bb      	uxth	r3, r7
 801475c:	1211      	asrs	r1, r2, #8
 801475e:	1218      	asrs	r0, r3, #8
 8014760:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014764:	fb11 f104 	smulbb	r1, r1, r4
 8014768:	10d7      	asrs	r7, r2, #3
 801476a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801476e:	00d2      	lsls	r2, r2, #3
 8014770:	fb00 1009 	mla	r0, r0, r9, r1
 8014774:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014778:	10d9      	asrs	r1, r3, #3
 801477a:	b2d2      	uxtb	r2, r2
 801477c:	00db      	lsls	r3, r3, #3
 801477e:	fb17 f704 	smulbb	r7, r7, r4
 8014782:	fb12 f204 	smulbb	r2, r2, r4
 8014786:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801478a:	b2db      	uxtb	r3, r3
 801478c:	b280      	uxth	r0, r0
 801478e:	fb01 7109 	mla	r1, r1, r9, r7
 8014792:	fb03 2309 	mla	r3, r3, r9, r2
 8014796:	b29b      	uxth	r3, r3
 8014798:	b289      	uxth	r1, r1
 801479a:	1c42      	adds	r2, r0, #1
 801479c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80147a0:	1c4f      	adds	r7, r1, #1
 80147a2:	1c5a      	adds	r2, r3, #1
 80147a4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80147a8:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80147ac:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80147b0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80147b4:	0949      	lsrs	r1, r1, #5
 80147b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80147b8:	4310      	orrs	r0, r2
 80147ba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80147be:	4308      	orrs	r0, r1
 80147c0:	f823 0b02 	strh.w	r0, [r3], #2
 80147c4:	930e      	str	r3, [sp, #56]	; 0x38
 80147c6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80147c8:	449a      	add	sl, r3
 80147ca:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80147cc:	f10e 3eff 	add.w	lr, lr, #4294967295
 80147d0:	441d      	add	r5, r3
 80147d2:	e6ed      	b.n	80145b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80147d4:	2800      	cmp	r0, #0
 80147d6:	f43f af7f 	beq.w	80146d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 80147da:	5cd3      	ldrb	r3, [r2, r3]
 80147dc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80147e0:	9310      	str	r3, [sp, #64]	; 0x40
 80147e2:	e779      	b.n	80146d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 80147e4:	b019      	add	sp, #100	; 0x64
 80147e6:	ecbd 8b08 	vpop	{d8-d11}
 80147ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080147f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80147f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80147f4:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 80147f8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80147fc:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8014800:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8014804:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8014808:	8808      	ldrh	r0, [r1, #0]
 801480a:	fb06 570e 	mla	r7, r6, lr, r5
 801480e:	2e00      	cmp	r6, #0
 8014810:	eb02 0807 	add.w	r8, r2, r7
 8014814:	db38      	blt.n	8014888 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8014816:	45b1      	cmp	r9, r6
 8014818:	dd36      	ble.n	8014888 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801481a:	2d00      	cmp	r5, #0
 801481c:	db32      	blt.n	8014884 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801481e:	45ae      	cmp	lr, r5
 8014820:	dd30      	ble.n	8014884 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8014822:	5dd2      	ldrb	r2, [r2, r7]
 8014824:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8014828:	1c6a      	adds	r2, r5, #1
 801482a:	d430      	bmi.n	801488e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801482c:	4596      	cmp	lr, r2
 801482e:	dd2e      	ble.n	801488e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014830:	b36c      	cbz	r4, 801488e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014832:	f898 2001 	ldrb.w	r2, [r8, #1]
 8014836:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801483a:	3601      	adds	r6, #1
 801483c:	d42b      	bmi.n	8014896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801483e:	45b1      	cmp	r9, r6
 8014840:	dd29      	ble.n	8014896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014842:	f1bc 0f00 	cmp.w	ip, #0
 8014846:	d028      	beq.n	801489a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8014848:	2d00      	cmp	r5, #0
 801484a:	db22      	blt.n	8014892 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 801484c:	45ae      	cmp	lr, r5
 801484e:	dd20      	ble.n	8014892 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014850:	f818 600e 	ldrb.w	r6, [r8, lr]
 8014854:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8014858:	3501      	adds	r5, #1
 801485a:	d407      	bmi.n	801486c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801485c:	45ae      	cmp	lr, r5
 801485e:	dd05      	ble.n	801486c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014860:	b134      	cbz	r4, 8014870 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8014862:	44c6      	add	lr, r8
 8014864:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8014868:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801486c:	2c0f      	cmp	r4, #15
 801486e:	d802      	bhi.n	8014876 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014870:	f1bc 0f0f 	cmp.w	ip, #15
 8014874:	d914      	bls.n	80148a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8014876:	4b26      	ldr	r3, [pc, #152]	; (8014910 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8014878:	4a26      	ldr	r2, [pc, #152]	; (8014914 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 801487a:	4827      	ldr	r0, [pc, #156]	; (8014918 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 801487c:	f240 11ef 	movw	r1, #495	; 0x1ef
 8014880:	f006 fdc4 	bl	801b40c <__assert_func>
 8014884:	4607      	mov	r7, r0
 8014886:	e7cf      	b.n	8014828 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8014888:	4602      	mov	r2, r0
 801488a:	4607      	mov	r7, r0
 801488c:	e7d5      	b.n	801483a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801488e:	4602      	mov	r2, r0
 8014890:	e7d3      	b.n	801483a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014892:	4606      	mov	r6, r0
 8014894:	e7e0      	b.n	8014858 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8014896:	4606      	mov	r6, r0
 8014898:	e7e8      	b.n	801486c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801489a:	2c0f      	cmp	r4, #15
 801489c:	d8eb      	bhi.n	8014876 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801489e:	4606      	mov	r6, r0
 80148a0:	043d      	lsls	r5, r7, #16
 80148a2:	fb14 f30c 	smulbb	r3, r4, ip
 80148a6:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 80148aa:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 80148ae:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80148b2:	10db      	asrs	r3, r3, #3
 80148b4:	432f      	orrs	r7, r5
 80148b6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80148ba:	f1cc 0510 	rsb	r5, ip, #16
 80148be:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80148c2:	1b2d      	subs	r5, r5, r4
 80148c4:	ea4e 0202 	orr.w	r2, lr, r2
 80148c8:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 80148cc:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80148d0:	4354      	muls	r4, r2
 80148d2:	fb05 4507 	mla	r5, r5, r7, r4
 80148d6:	0404      	lsls	r4, r0, #16
 80148d8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80148dc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80148e0:	4320      	orrs	r0, r4
 80148e2:	fb03 5400 	mla	r4, r3, r0, r5
 80148e6:	0430      	lsls	r0, r6, #16
 80148e8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80148ec:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80148f0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80148f4:	4330      	orrs	r0, r6
 80148f6:	fb03 4000 	mla	r0, r3, r0, r4
 80148fa:	0d43      	lsrs	r3, r0, #21
 80148fc:	0940      	lsrs	r0, r0, #5
 80148fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014902:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014906:	4318      	orrs	r0, r3
 8014908:	8008      	strh	r0, [r1, #0]
 801490a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801490e:	bf00      	nop
 8014910:	0801f307 	.word	0x0801f307
 8014914:	0801f96e 	.word	0x0801f96e
 8014918:	0801f3f0 	.word	0x0801f3f0

0801491c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801491c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014920:	ed2d 8b0a 	vpush	{d8-d12}
 8014924:	b093      	sub	sp, #76	; 0x4c
 8014926:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801492a:	920f      	str	r2, [sp, #60]	; 0x3c
 801492c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801492e:	9108      	str	r1, [sp, #32]
 8014930:	9306      	str	r3, [sp, #24]
 8014932:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8014936:	9010      	str	r0, [sp, #64]	; 0x40
 8014938:	6850      	ldr	r0, [r2, #4]
 801493a:	6812      	ldr	r2, [r2, #0]
 801493c:	fb00 1303 	mla	r3, r0, r3, r1
 8014940:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8014944:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014946:	681b      	ldr	r3, [r3, #0]
 8014948:	9307      	str	r3, [sp, #28]
 801494a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801494c:	685f      	ldr	r7, [r3, #4]
 801494e:	eeb0 aa40 	vmov.f32	s20, s0
 8014952:	eef0 9a60 	vmov.f32	s19, s1
 8014956:	eeb0 9a41 	vmov.f32	s18, s2
 801495a:	eeb0 8a62 	vmov.f32	s16, s5
 801495e:	eef0 8a43 	vmov.f32	s17, s6
 8014962:	eeb0 ca44 	vmov.f32	s24, s8
 8014966:	eef0 ba64 	vmov.f32	s23, s9
 801496a:	eeb0 ba45 	vmov.f32	s22, s10
 801496e:	3704      	adds	r7, #4
 8014970:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8014974:	9b08      	ldr	r3, [sp, #32]
 8014976:	2b00      	cmp	r3, #0
 8014978:	dc03      	bgt.n	8014982 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801497a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801497c:	2b00      	cmp	r3, #0
 801497e:	f340 81b2 	ble.w	8014ce6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8014982:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014984:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014988:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801498c:	1e48      	subs	r0, r1, #1
 801498e:	f102 3cff 	add.w	ip, r2, #4294967295
 8014992:	9b06      	ldr	r3, [sp, #24]
 8014994:	2b00      	cmp	r3, #0
 8014996:	f340 80a9 	ble.w	8014aec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 801499a:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801499e:	ea4f 4326 	mov.w	r3, r6, asr #16
 80149a2:	d406      	bmi.n	80149b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80149a4:	4586      	cmp	lr, r0
 80149a6:	da04      	bge.n	80149b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80149a8:	2b00      	cmp	r3, #0
 80149aa:	db02      	blt.n	80149b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80149ac:	4563      	cmp	r3, ip
 80149ae:	f2c0 809e 	blt.w	8014aee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80149b2:	f11e 0e01 	adds.w	lr, lr, #1
 80149b6:	f100 808f 	bmi.w	8014ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80149ba:	4571      	cmp	r1, lr
 80149bc:	f2c0 808c 	blt.w	8014ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80149c0:	3301      	adds	r3, #1
 80149c2:	f100 8089 	bmi.w	8014ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80149c6:	429a      	cmp	r2, r3
 80149c8:	f2c0 8086 	blt.w	8014ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80149cc:	f8dd b018 	ldr.w	fp, [sp, #24]
 80149d0:	46c8      	mov	r8, r9
 80149d2:	f1bb 0f00 	cmp.w	fp, #0
 80149d6:	f340 80a6 	ble.w	8014b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 80149da:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80149dc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80149de:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80149e2:	689b      	ldr	r3, [r3, #8]
 80149e4:	1422      	asrs	r2, r4, #16
 80149e6:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80149ea:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80149ee:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80149f2:	f100 80e3 	bmi.w	8014bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80149f6:	f103 3aff 	add.w	sl, r3, #4294967295
 80149fa:	4552      	cmp	r2, sl
 80149fc:	f280 80de 	bge.w	8014bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014a00:	f1bc 0f00 	cmp.w	ip, #0
 8014a04:	f2c0 80da 	blt.w	8014bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014a08:	f10e 3aff 	add.w	sl, lr, #4294967295
 8014a0c:	45d4      	cmp	ip, sl
 8014a0e:	f280 80d5 	bge.w	8014bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014a12:	b21b      	sxth	r3, r3
 8014a14:	fb0c 2203 	mla	r2, ip, r3, r2
 8014a18:	9d07      	ldr	r5, [sp, #28]
 8014a1a:	eb05 0a02 	add.w	sl, r5, r2
 8014a1e:	5caa      	ldrb	r2, [r5, r2]
 8014a20:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8014a24:	2800      	cmp	r0, #0
 8014a26:	f000 80c0 	beq.w	8014baa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8014a2a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8014a2e:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8014a32:	920b      	str	r2, [sp, #44]	; 0x2c
 8014a34:	b151      	cbz	r1, 8014a4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8014a36:	eb0a 0203 	add.w	r2, sl, r3
 8014a3a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8014a3e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014a42:	9309      	str	r3, [sp, #36]	; 0x24
 8014a44:	7853      	ldrb	r3, [r2, #1]
 8014a46:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014a4a:	930c      	str	r3, [sp, #48]	; 0x30
 8014a4c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014a4e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8014a50:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014a54:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014a58:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014a5c:	ea4c 0c03 	orr.w	ip, ip, r3
 8014a60:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014a62:	041b      	lsls	r3, r3, #16
 8014a64:	fb10 f201 	smulbb	r2, r0, r1
 8014a68:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014a6c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8014a70:	10d2      	asrs	r2, r2, #3
 8014a72:	432b      	orrs	r3, r5
 8014a74:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8014a78:	4353      	muls	r3, r2
 8014a7a:	fb0a 330c 	mla	r3, sl, ip, r3
 8014a7e:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014a82:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014a86:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014a8a:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014a8e:	f1c1 0c10 	rsb	ip, r1, #16
 8014a92:	ebac 0c00 	sub.w	ip, ip, r0
 8014a96:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014a9a:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014a9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014aa0:	0418      	lsls	r0, r3, #16
 8014aa2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014aa6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014aaa:	4318      	orrs	r0, r3
 8014aac:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014ab0:	fb02 c200 	mla	r2, r2, r0, ip
 8014ab4:	0d53      	lsrs	r3, r2, #21
 8014ab6:	0952      	lsrs	r2, r2, #5
 8014ab8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014abc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014ac0:	431a      	orrs	r2, r3
 8014ac2:	f8a8 2000 	strh.w	r2, [r8]
 8014ac6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014ac8:	441c      	add	r4, r3
 8014aca:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014acc:	f108 0802 	add.w	r8, r8, #2
 8014ad0:	441e      	add	r6, r3
 8014ad2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014ad6:	e77c      	b.n	80149d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8014ad8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014ada:	441c      	add	r4, r3
 8014adc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014ade:	441e      	add	r6, r3
 8014ae0:	9b06      	ldr	r3, [sp, #24]
 8014ae2:	3b01      	subs	r3, #1
 8014ae4:	9306      	str	r3, [sp, #24]
 8014ae6:	f109 0902 	add.w	r9, r9, #2
 8014aea:	e752      	b.n	8014992 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014aec:	d020      	beq.n	8014b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014aee:	9b06      	ldr	r3, [sp, #24]
 8014af0:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8014af2:	3b01      	subs	r3, #1
 8014af4:	fb00 4003 	mla	r0, r0, r3, r4
 8014af8:	1400      	asrs	r0, r0, #16
 8014afa:	f53f af67 	bmi.w	80149cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014afe:	3901      	subs	r1, #1
 8014b00:	4288      	cmp	r0, r1
 8014b02:	f6bf af63 	bge.w	80149cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014b06:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014b08:	fb01 6303 	mla	r3, r1, r3, r6
 8014b0c:	141b      	asrs	r3, r3, #16
 8014b0e:	f53f af5d 	bmi.w	80149cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014b12:	3a01      	subs	r2, #1
 8014b14:	4293      	cmp	r3, r2
 8014b16:	f6bf af59 	bge.w	80149cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014b1a:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8014b1e:	46ca      	mov	sl, r9
 8014b20:	f1b8 0f00 	cmp.w	r8, #0
 8014b24:	dc67      	bgt.n	8014bf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8014b26:	9b06      	ldr	r3, [sp, #24]
 8014b28:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8014b2c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8014b30:	9b08      	ldr	r3, [sp, #32]
 8014b32:	2b00      	cmp	r3, #0
 8014b34:	f340 80d7 	ble.w	8014ce6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8014b38:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8014b3c:	ee79 9aab 	vadd.f32	s19, s19, s23
 8014b40:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8014b44:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014b46:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8014b4a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014b4e:	eef0 6a48 	vmov.f32	s13, s16
 8014b52:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014b56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b5a:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014b5e:	ee16 4a90 	vmov	r4, s13
 8014b62:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014b66:	eef0 6a68 	vmov.f32	s13, s17
 8014b6a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014b6e:	ee18 2a10 	vmov	r2, s16
 8014b72:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014b76:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b7a:	ee18 2a90 	vmov	r2, s17
 8014b7e:	9329      	str	r3, [sp, #164]	; 0xa4
 8014b80:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014b82:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b86:	932a      	str	r3, [sp, #168]	; 0xa8
 8014b88:	9b08      	ldr	r3, [sp, #32]
 8014b8a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014b8c:	3b01      	subs	r3, #1
 8014b8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b92:	9308      	str	r3, [sp, #32]
 8014b94:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014b96:	bf08      	it	eq
 8014b98:	4613      	moveq	r3, r2
 8014b9a:	ee16 6a90 	vmov	r6, s13
 8014b9e:	9306      	str	r3, [sp, #24]
 8014ba0:	eef0 8a67 	vmov.f32	s17, s15
 8014ba4:	eeb0 8a47 	vmov.f32	s16, s14
 8014ba8:	e6e4      	b.n	8014974 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8014baa:	2900      	cmp	r1, #0
 8014bac:	f43f af4e 	beq.w	8014a4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8014bb0:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8014bb4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014bb8:	9309      	str	r3, [sp, #36]	; 0x24
 8014bba:	e747      	b.n	8014a4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8014bbc:	f112 0a01 	adds.w	sl, r2, #1
 8014bc0:	d481      	bmi.n	8014ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014bc2:	4553      	cmp	r3, sl
 8014bc4:	f6ff af7f 	blt.w	8014ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014bc8:	f11c 0a01 	adds.w	sl, ip, #1
 8014bcc:	f53f af7b 	bmi.w	8014ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014bd0:	45d6      	cmp	lr, sl
 8014bd2:	f6ff af78 	blt.w	8014ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014bd6:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8014bda:	b21b      	sxth	r3, r3
 8014bdc:	fa0f f28e 	sxth.w	r2, lr
 8014be0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8014be4:	9201      	str	r2, [sp, #4]
 8014be6:	9300      	str	r3, [sp, #0]
 8014be8:	9a07      	ldr	r2, [sp, #28]
 8014bea:	9810      	ldr	r0, [sp, #64]	; 0x40
 8014bec:	463b      	mov	r3, r7
 8014bee:	4641      	mov	r1, r8
 8014bf0:	f7ff fdfe 	bl	80147f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8014bf4:	e767      	b.n	8014ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014bf6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014bf8:	9d07      	ldr	r5, [sp, #28]
 8014bfa:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8014bfe:	1422      	asrs	r2, r4, #16
 8014c00:	1431      	asrs	r1, r6, #16
 8014c02:	fb03 2101 	mla	r1, r3, r1, r2
 8014c06:	9a07      	ldr	r2, [sp, #28]
 8014c08:	440a      	add	r2, r1
 8014c0a:	5c69      	ldrb	r1, [r5, r1]
 8014c0c:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8014c10:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8014c14:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8014c18:	f1be 0f00 	cmp.w	lr, #0
 8014c1c:	d05c      	beq.n	8014cd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8014c1e:	f892 c001 	ldrb.w	ip, [r2, #1]
 8014c22:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8014c26:	950d      	str	r5, [sp, #52]	; 0x34
 8014c28:	b150      	cbz	r0, 8014c40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8014c2a:	eb02 0c03 	add.w	ip, r2, r3
 8014c2e:	5cd3      	ldrb	r3, [r2, r3]
 8014c30:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014c34:	930a      	str	r3, [sp, #40]	; 0x28
 8014c36:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8014c3a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014c3e:	930e      	str	r3, [sp, #56]	; 0x38
 8014c40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014c42:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014c44:	fb1e f200 	smulbb	r2, lr, r0
 8014c48:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014c4c:	10d2      	asrs	r2, r2, #3
 8014c4e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014c52:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014c56:	ea4c 0c03 	orr.w	ip, ip, r3
 8014c5a:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8014c5e:	9311      	str	r3, [sp, #68]	; 0x44
 8014c60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014c62:	041b      	lsls	r3, r3, #16
 8014c64:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8014c68:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014c6c:	ea43 030b 	orr.w	r3, r3, fp
 8014c70:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014c72:	4353      	muls	r3, r2
 8014c74:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014c78:	fb05 3c0c 	mla	ip, r5, ip, r3
 8014c7c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014c80:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014c84:	ea43 0b01 	orr.w	fp, r3, r1
 8014c88:	f1c0 0110 	rsb	r1, r0, #16
 8014c8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014c8e:	eba1 0e0e 	sub.w	lr, r1, lr
 8014c92:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8014c96:	fb0e cc0b 	mla	ip, lr, fp, ip
 8014c9a:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8014c9e:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8014ca2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8014ca6:	ea4b 0e0e 	orr.w	lr, fp, lr
 8014caa:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014cae:	fb02 cc0e 	mla	ip, r2, lr, ip
 8014cb2:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8014cb6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8014cba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014cbe:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8014cc2:	ea43 0c0c 	orr.w	ip, r3, ip
 8014cc6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014cc8:	f82a cb02 	strh.w	ip, [sl], #2
 8014ccc:	441c      	add	r4, r3
 8014cce:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014cd0:	f108 38ff 	add.w	r8, r8, #4294967295
 8014cd4:	441e      	add	r6, r3
 8014cd6:	e723      	b.n	8014b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8014cd8:	2800      	cmp	r0, #0
 8014cda:	d0b1      	beq.n	8014c40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8014cdc:	5cd3      	ldrb	r3, [r2, r3]
 8014cde:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014ce2:	930a      	str	r3, [sp, #40]	; 0x28
 8014ce4:	e7ac      	b.n	8014c40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8014ce6:	b013      	add	sp, #76	; 0x4c
 8014ce8:	ecbd 8b0a 	vpop	{d8-d12}
 8014cec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8014cf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014cf4:	468b      	mov	fp, r1
 8014cf6:	8809      	ldrh	r1, [r1, #0]
 8014cf8:	b089      	sub	sp, #36	; 0x24
 8014cfa:	10cd      	asrs	r5, r1, #3
 8014cfc:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8014d00:	ea4f 2921 	mov.w	r9, r1, asr #8
 8014d04:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014d08:	00c9      	lsls	r1, r1, #3
 8014d0a:	9500      	str	r5, [sp, #0]
 8014d0c:	b2c9      	uxtb	r1, r1
 8014d0e:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8014d12:	9101      	str	r1, [sp, #4]
 8014d14:	9900      	ldr	r1, [sp, #0]
 8014d16:	9202      	str	r2, [sp, #8]
 8014d18:	fb04 650e 	mla	r5, r4, lr, r6
 8014d1c:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8014d20:	eb02 0805 	add.w	r8, r2, r5
 8014d24:	0209      	lsls	r1, r1, #8
 8014d26:	9a01      	ldr	r2, [sp, #4]
 8014d28:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8014d2c:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8014d30:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8014d34:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8014d38:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8014d3c:	4311      	orrs	r1, r2
 8014d3e:	2c00      	cmp	r4, #0
 8014d40:	9107      	str	r1, [sp, #28]
 8014d42:	db43      	blt.n	8014dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8014d44:	45a2      	cmp	sl, r4
 8014d46:	dd41      	ble.n	8014dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8014d48:	2e00      	cmp	r6, #0
 8014d4a:	db3d      	blt.n	8014dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8014d4c:	45b6      	cmp	lr, r6
 8014d4e:	dd3b      	ble.n	8014dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8014d50:	9a02      	ldr	r2, [sp, #8]
 8014d52:	5d55      	ldrb	r5, [r2, r5]
 8014d54:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014d58:	441d      	add	r5, r3
 8014d5a:	1c72      	adds	r2, r6, #1
 8014d5c:	d439      	bmi.n	8014dd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014d5e:	4596      	cmp	lr, r2
 8014d60:	dd37      	ble.n	8014dd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014d62:	2f00      	cmp	r7, #0
 8014d64:	d035      	beq.n	8014dd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014d66:	f898 1001 	ldrb.w	r1, [r8, #1]
 8014d6a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8014d6e:	4419      	add	r1, r3
 8014d70:	3401      	adds	r4, #1
 8014d72:	d432      	bmi.n	8014dda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014d74:	45a2      	cmp	sl, r4
 8014d76:	dd30      	ble.n	8014dda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014d78:	b378      	cbz	r0, 8014dda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014d7a:	2e00      	cmp	r6, #0
 8014d7c:	db2b      	blt.n	8014dd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8014d7e:	45b6      	cmp	lr, r6
 8014d80:	dd29      	ble.n	8014dd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8014d82:	f818 400e 	ldrb.w	r4, [r8, lr]
 8014d86:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8014d8a:	441c      	add	r4, r3
 8014d8c:	3601      	adds	r6, #1
 8014d8e:	d427      	bmi.n	8014de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014d90:	45b6      	cmp	lr, r6
 8014d92:	dd25      	ble.n	8014de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014d94:	b327      	cbz	r7, 8014de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014d96:	44c6      	add	lr, r8
 8014d98:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8014d9c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014da0:	4413      	add	r3, r2
 8014da2:	782a      	ldrb	r2, [r5, #0]
 8014da4:	9202      	str	r2, [sp, #8]
 8014da6:	780a      	ldrb	r2, [r1, #0]
 8014da8:	9203      	str	r2, [sp, #12]
 8014daa:	7822      	ldrb	r2, [r4, #0]
 8014dac:	9204      	str	r2, [sp, #16]
 8014dae:	2f0f      	cmp	r7, #15
 8014db0:	781a      	ldrb	r2, [r3, #0]
 8014db2:	9205      	str	r2, [sp, #20]
 8014db4:	d801      	bhi.n	8014dba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8014db6:	280f      	cmp	r0, #15
 8014db8:	d914      	bls.n	8014de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8014dba:	4b3f      	ldr	r3, [pc, #252]	; (8014eb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8014dbc:	4a3f      	ldr	r2, [pc, #252]	; (8014ebc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8014dbe:	4840      	ldr	r0, [pc, #256]	; (8014ec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8014dc0:	f240 210d 	movw	r1, #525	; 0x20d
 8014dc4:	f006 fb22 	bl	801b40c <__assert_func>
 8014dc8:	ad07      	add	r5, sp, #28
 8014dca:	e7c6      	b.n	8014d5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8014dcc:	a907      	add	r1, sp, #28
 8014dce:	460d      	mov	r5, r1
 8014dd0:	e7ce      	b.n	8014d70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8014dd2:	a907      	add	r1, sp, #28
 8014dd4:	e7cc      	b.n	8014d70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8014dd6:	ac07      	add	r4, sp, #28
 8014dd8:	e7d8      	b.n	8014d8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8014dda:	ab07      	add	r3, sp, #28
 8014ddc:	461c      	mov	r4, r3
 8014dde:	e7e0      	b.n	8014da2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014de0:	ab07      	add	r3, sp, #28
 8014de2:	e7de      	b.n	8014da2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014de4:	b2ba      	uxth	r2, r7
 8014de6:	b280      	uxth	r0, r0
 8014de8:	fb02 fa00 	mul.w	sl, r2, r0
 8014dec:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8014df0:	0112      	lsls	r2, r2, #4
 8014df2:	b280      	uxth	r0, r0
 8014df4:	f891 8002 	ldrb.w	r8, [r1, #2]
 8014df8:	7849      	ldrb	r1, [r1, #1]
 8014dfa:	78ae      	ldrb	r6, [r5, #2]
 8014dfc:	786d      	ldrb	r5, [r5, #1]
 8014dfe:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8014e02:	eba2 020a 	sub.w	r2, r2, sl
 8014e06:	b292      	uxth	r2, r2
 8014e08:	ebae 0e00 	sub.w	lr, lr, r0
 8014e0c:	fa1f fe8e 	uxth.w	lr, lr
 8014e10:	4351      	muls	r1, r2
 8014e12:	fb02 f808 	mul.w	r8, r2, r8
 8014e16:	fb0e 8806 	mla	r8, lr, r6, r8
 8014e1a:	fb0e 1505 	mla	r5, lr, r5, r1
 8014e1e:	78a6      	ldrb	r6, [r4, #2]
 8014e20:	7861      	ldrb	r1, [r4, #1]
 8014e22:	fa1f f78c 	uxth.w	r7, ip
 8014e26:	fb00 8806 	mla	r8, r0, r6, r8
 8014e2a:	fb00 5501 	mla	r5, r0, r1, r5
 8014e2e:	789e      	ldrb	r6, [r3, #2]
 8014e30:	7859      	ldrb	r1, [r3, #1]
 8014e32:	9b00      	ldr	r3, [sp, #0]
 8014e34:	ea6f 0c0c 	mvn.w	ip, ip
 8014e38:	fa5f fc8c 	uxtb.w	ip, ip
 8014e3c:	fb0a 5101 	mla	r1, sl, r1, r5
 8014e40:	fb13 f50c 	smulbb	r5, r3, ip
 8014e44:	9b03      	ldr	r3, [sp, #12]
 8014e46:	435a      	muls	r2, r3
 8014e48:	9b02      	ldr	r3, [sp, #8]
 8014e4a:	fb0e 2203 	mla	r2, lr, r3, r2
 8014e4e:	9b04      	ldr	r3, [sp, #16]
 8014e50:	fb00 2003 	mla	r0, r0, r3, r2
 8014e54:	9b05      	ldr	r3, [sp, #20]
 8014e56:	fb0a 8606 	mla	r6, sl, r6, r8
 8014e5a:	fb0a 0a03 	mla	sl, sl, r3, r0
 8014e5e:	9b01      	ldr	r3, [sp, #4]
 8014e60:	fb19 f90c 	smulbb	r9, r9, ip
 8014e64:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8014e68:	fb13 fc0c 	smulbb	ip, r3, ip
 8014e6c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8014e70:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8014e74:	fb06 9607 	mla	r6, r6, r7, r9
 8014e78:	fb01 5107 	mla	r1, r1, r7, r5
 8014e7c:	fb0a c707 	mla	r7, sl, r7, ip
 8014e80:	b2b6      	uxth	r6, r6
 8014e82:	b289      	uxth	r1, r1
 8014e84:	b2bf      	uxth	r7, r7
 8014e86:	f106 0901 	add.w	r9, r6, #1
 8014e8a:	f107 0c01 	add.w	ip, r7, #1
 8014e8e:	1c4d      	adds	r5, r1, #1
 8014e90:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8014e94:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8014e98:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8014e9c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014ea0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8014ea4:	0949      	lsrs	r1, r1, #5
 8014ea6:	433e      	orrs	r6, r7
 8014ea8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014eac:	430e      	orrs	r6, r1
 8014eae:	f8ab 6000 	strh.w	r6, [fp]
 8014eb2:	b009      	add	sp, #36	; 0x24
 8014eb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014eb8:	0801f307 	.word	0x0801f307
 8014ebc:	0801f8c5 	.word	0x0801f8c5
 8014ec0:	0801f3f0 	.word	0x0801f3f0

08014ec4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014ec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ec8:	ed2d 8b08 	vpush	{d8-d11}
 8014ecc:	b095      	sub	sp, #84	; 0x54
 8014ece:	eeb0 aa40 	vmov.f32	s20, s0
 8014ed2:	9212      	str	r2, [sp, #72]	; 0x48
 8014ed4:	9309      	str	r3, [sp, #36]	; 0x24
 8014ed6:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014ed8:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8014edc:	930f      	str	r3, [sp, #60]	; 0x3c
 8014ede:	910e      	str	r1, [sp, #56]	; 0x38
 8014ee0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8014ee4:	9013      	str	r0, [sp, #76]	; 0x4c
 8014ee6:	6850      	ldr	r0, [r2, #4]
 8014ee8:	6812      	ldr	r2, [r2, #0]
 8014eea:	fb00 1303 	mla	r3, r0, r3, r1
 8014eee:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014ef2:	930a      	str	r3, [sp, #40]	; 0x28
 8014ef4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014ef6:	681b      	ldr	r3, [r3, #0]
 8014ef8:	930d      	str	r3, [sp, #52]	; 0x34
 8014efa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014efc:	685c      	ldr	r4, [r3, #4]
 8014efe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014f00:	43db      	mvns	r3, r3
 8014f02:	b2db      	uxtb	r3, r3
 8014f04:	eef0 9a60 	vmov.f32	s19, s1
 8014f08:	eeb0 9a41 	vmov.f32	s18, s2
 8014f0c:	eeb0 8a62 	vmov.f32	s16, s5
 8014f10:	eef0 8a43 	vmov.f32	s17, s6
 8014f14:	eef0 ba44 	vmov.f32	s23, s8
 8014f18:	eeb0 ba64 	vmov.f32	s22, s9
 8014f1c:	eef0 aa45 	vmov.f32	s21, s10
 8014f20:	3404      	adds	r4, #4
 8014f22:	930b      	str	r3, [sp, #44]	; 0x2c
 8014f24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f26:	2b00      	cmp	r3, #0
 8014f28:	dc03      	bgt.n	8014f32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014f2a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014f2c:	2b00      	cmp	r3, #0
 8014f2e:	f340 8258 	ble.w	80153e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 8014f32:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014f34:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014f38:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014f3c:	1e48      	subs	r0, r1, #1
 8014f3e:	1e55      	subs	r5, r2, #1
 8014f40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014f42:	2b00      	cmp	r3, #0
 8014f44:	f340 80fc 	ble.w	8015140 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8014f48:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8014f4a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014f4c:	1436      	asrs	r6, r6, #16
 8014f4e:	ea4f 4323 	mov.w	r3, r3, asr #16
 8014f52:	d406      	bmi.n	8014f62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014f54:	4286      	cmp	r6, r0
 8014f56:	da04      	bge.n	8014f62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014f58:	2b00      	cmp	r3, #0
 8014f5a:	db02      	blt.n	8014f62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014f5c:	42ab      	cmp	r3, r5
 8014f5e:	f2c0 80f0 	blt.w	8015142 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8014f62:	3601      	adds	r6, #1
 8014f64:	f100 80dd 	bmi.w	8015122 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8014f68:	42b1      	cmp	r1, r6
 8014f6a:	f2c0 80da 	blt.w	8015122 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8014f6e:	3301      	adds	r3, #1
 8014f70:	f100 80d7 	bmi.w	8015122 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8014f74:	429a      	cmp	r2, r3
 8014f76:	f2c0 80d4 	blt.w	8015122 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8014f7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014f7c:	9311      	str	r3, [sp, #68]	; 0x44
 8014f7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014f80:	930c      	str	r3, [sp, #48]	; 0x30
 8014f82:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014f84:	2b00      	cmp	r3, #0
 8014f86:	f340 80fd 	ble.w	8015184 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8014f8a:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8014f8c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014f8e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8014f90:	68c6      	ldr	r6, [r0, #12]
 8014f92:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8014f94:	141d      	asrs	r5, r3, #16
 8014f96:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8014f9a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8014f9c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8014f9e:	1400      	asrs	r0, r0, #16
 8014fa0:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014fa4:	6892      	ldr	r2, [r2, #8]
 8014fa6:	f100 8141 	bmi.w	801522c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8014faa:	1e57      	subs	r7, r2, #1
 8014fac:	42b8      	cmp	r0, r7
 8014fae:	f280 813d 	bge.w	801522c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8014fb2:	2d00      	cmp	r5, #0
 8014fb4:	f2c0 813a 	blt.w	801522c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8014fb8:	1e77      	subs	r7, r6, #1
 8014fba:	42bd      	cmp	r5, r7
 8014fbc:	f280 8136 	bge.w	801522c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8014fc0:	b212      	sxth	r2, r2
 8014fc2:	fb05 0002 	mla	r0, r5, r2, r0
 8014fc6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8014fc8:	f815 a000 	ldrb.w	sl, [r5, r0]
 8014fcc:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8014fd0:	182e      	adds	r6, r5, r0
 8014fd2:	eb04 050a 	add.w	r5, r4, sl
 8014fd6:	2b00      	cmp	r3, #0
 8014fd8:	f000 811a 	beq.w	8015210 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34c>
 8014fdc:	f896 c001 	ldrb.w	ip, [r6, #1]
 8014fe0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8014fe4:	44a4      	add	ip, r4
 8014fe6:	2900      	cmp	r1, #0
 8014fe8:	f000 811a 	beq.w	8015220 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8014fec:	18b0      	adds	r0, r6, r2
 8014fee:	5cb2      	ldrb	r2, [r6, r2]
 8014ff0:	7840      	ldrb	r0, [r0, #1]
 8014ff2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014ff6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014ffa:	4422      	add	r2, r4
 8014ffc:	4420      	add	r0, r4
 8014ffe:	b29b      	uxth	r3, r3
 8015000:	b289      	uxth	r1, r1
 8015002:	fb03 f901 	mul.w	r9, r3, r1
 8015006:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801500a:	011b      	lsls	r3, r3, #4
 801500c:	b289      	uxth	r1, r1
 801500e:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8015012:	f895 b002 	ldrb.w	fp, [r5, #2]
 8015016:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8015018:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801501c:	f8b6 e000 	ldrh.w	lr, [r6]
 8015020:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8015024:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8015028:	eba3 0309 	sub.w	r3, r3, r9
 801502c:	b29b      	uxth	r3, r3
 801502e:	eba8 0801 	sub.w	r8, r8, r1
 8015032:	fa1f f888 	uxth.w	r8, r8
 8015036:	435f      	muls	r7, r3
 8015038:	fb08 770b 	mla	r7, r8, fp, r7
 801503c:	f892 b002 	ldrb.w	fp, [r2, #2]
 8015040:	9310      	str	r3, [sp, #64]	; 0x40
 8015042:	fb01 770b 	mla	r7, r1, fp, r7
 8015046:	f890 b002 	ldrb.w	fp, [r0, #2]
 801504a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801504c:	fb09 770b 	mla	r7, r9, fp, r7
 8015050:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8015054:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015058:	fb1b fb03 	smulbb	fp, fp, r3
 801505c:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015060:	fb07 b706 	mla	r7, r7, r6, fp
 8015064:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015066:	f895 b001 	ldrb.w	fp, [r5, #1]
 801506a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801506e:	f89c c000 	ldrb.w	ip, [ip]
 8015072:	435d      	muls	r5, r3
 8015074:	fb08 550b 	mla	r5, r8, fp, r5
 8015078:	f892 b001 	ldrb.w	fp, [r2, #1]
 801507c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801507e:	fb01 550b 	mla	r5, r1, fp, r5
 8015082:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015086:	fb09 550b 	mla	r5, r9, fp, r5
 801508a:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801508e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015092:	fb1b fb03 	smulbb	fp, fp, r3
 8015096:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015098:	fb03 f30c 	mul.w	r3, r3, ip
 801509c:	f892 c000 	ldrb.w	ip, [r2]
 80150a0:	fb08 330a 	mla	r3, r8, sl, r3
 80150a4:	fb01 330c 	mla	r3, r1, ip, r3
 80150a8:	f890 c000 	ldrb.w	ip, [r0]
 80150ac:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80150b0:	fb09 3c0c 	mla	ip, r9, ip, r3
 80150b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80150b6:	fa5f fe8e 	uxtb.w	lr, lr
 80150ba:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80150be:	fb1e fe03 	smulbb	lr, lr, r3
 80150c2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80150c6:	fb05 b506 	mla	r5, r5, r6, fp
 80150ca:	fb0c ee06 	mla	lr, ip, r6, lr
 80150ce:	b2bf      	uxth	r7, r7
 80150d0:	b2ad      	uxth	r5, r5
 80150d2:	fa1f fe8e 	uxth.w	lr, lr
 80150d6:	1c7a      	adds	r2, r7, #1
 80150d8:	f10e 0c01 	add.w	ip, lr, #1
 80150dc:	f105 0b01 	add.w	fp, r5, #1
 80150e0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80150e4:	eb0c 2e1e 	add.w	lr, ip, lr, lsr #8
 80150e8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80150ec:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80150f0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80150f4:	096d      	lsrs	r5, r5, #5
 80150f6:	ea47 070e 	orr.w	r7, r7, lr
 80150fa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80150fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015100:	433d      	orrs	r5, r7
 8015102:	801d      	strh	r5, [r3, #0]
 8015104:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015106:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015108:	3302      	adds	r3, #2
 801510a:	930c      	str	r3, [sp, #48]	; 0x30
 801510c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801510e:	4413      	add	r3, r2
 8015110:	9327      	str	r3, [sp, #156]	; 0x9c
 8015112:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015114:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015116:	4413      	add	r3, r2
 8015118:	9328      	str	r3, [sp, #160]	; 0xa0
 801511a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801511c:	3b01      	subs	r3, #1
 801511e:	9311      	str	r3, [sp, #68]	; 0x44
 8015120:	e72f      	b.n	8014f82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8015122:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015124:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8015126:	4433      	add	r3, r6
 8015128:	9327      	str	r3, [sp, #156]	; 0x9c
 801512a:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 801512c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801512e:	4433      	add	r3, r6
 8015130:	9328      	str	r3, [sp, #160]	; 0xa0
 8015132:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015134:	3b01      	subs	r3, #1
 8015136:	9309      	str	r3, [sp, #36]	; 0x24
 8015138:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801513a:	3302      	adds	r3, #2
 801513c:	930a      	str	r3, [sp, #40]	; 0x28
 801513e:	e6ff      	b.n	8014f40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015140:	d027      	beq.n	8015192 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ce>
 8015142:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015144:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8015146:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8015148:	3b01      	subs	r3, #1
 801514a:	fb00 5003 	mla	r0, r0, r3, r5
 801514e:	1400      	asrs	r0, r0, #16
 8015150:	f53f af13 	bmi.w	8014f7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015154:	3901      	subs	r1, #1
 8015156:	4288      	cmp	r0, r1
 8015158:	f6bf af0f 	bge.w	8014f7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801515c:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801515e:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015160:	fb01 0303 	mla	r3, r1, r3, r0
 8015164:	141b      	asrs	r3, r3, #16
 8015166:	f53f af08 	bmi.w	8014f7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801516a:	3a01      	subs	r2, #1
 801516c:	4293      	cmp	r3, r2
 801516e:	f6bf af04 	bge.w	8014f7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015172:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015174:	9311      	str	r3, [sp, #68]	; 0x44
 8015176:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801517a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801517c:	930c      	str	r3, [sp, #48]	; 0x30
 801517e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015180:	2b00      	cmp	r3, #0
 8015182:	dc70      	bgt.n	8015266 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a2>
 8015184:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015186:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015188:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801518c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015190:	930a      	str	r3, [sp, #40]	; 0x28
 8015192:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015194:	2b00      	cmp	r3, #0
 8015196:	f340 8124 	ble.w	80153e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 801519a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801519e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80151a2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80151a6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80151a8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80151ac:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80151b0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80151b4:	eef0 6a48 	vmov.f32	s13, s16
 80151b8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80151bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80151c0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80151c4:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80151c8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80151cc:	eef0 6a68 	vmov.f32	s13, s17
 80151d0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80151d4:	ee18 2a10 	vmov	r2, s16
 80151d8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80151dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80151e0:	ee18 2a90 	vmov	r2, s17
 80151e4:	9329      	str	r3, [sp, #164]	; 0xa4
 80151e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80151e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80151ec:	932a      	str	r3, [sp, #168]	; 0xa8
 80151ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80151f0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80151f2:	3b01      	subs	r3, #1
 80151f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80151f8:	930e      	str	r3, [sp, #56]	; 0x38
 80151fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80151fc:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8015200:	bf08      	it	eq
 8015202:	4613      	moveq	r3, r2
 8015204:	9309      	str	r3, [sp, #36]	; 0x24
 8015206:	eef0 8a67 	vmov.f32	s17, s15
 801520a:	eeb0 8a47 	vmov.f32	s16, s14
 801520e:	e689      	b.n	8014f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015210:	b149      	cbz	r1, 8015226 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8015212:	5cb2      	ldrb	r2, [r6, r2]
 8015214:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015218:	4422      	add	r2, r4
 801521a:	4628      	mov	r0, r5
 801521c:	46ac      	mov	ip, r5
 801521e:	e6ee      	b.n	8014ffe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015220:	4628      	mov	r0, r5
 8015222:	462a      	mov	r2, r5
 8015224:	e6eb      	b.n	8014ffe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015226:	4628      	mov	r0, r5
 8015228:	462a      	mov	r2, r5
 801522a:	e7f7      	b.n	801521c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801522c:	1c47      	adds	r7, r0, #1
 801522e:	f53f af69 	bmi.w	8015104 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8015232:	42ba      	cmp	r2, r7
 8015234:	f6ff af66 	blt.w	8015104 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8015238:	1c6f      	adds	r7, r5, #1
 801523a:	f53f af63 	bmi.w	8015104 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801523e:	42be      	cmp	r6, r7
 8015240:	f6ff af60 	blt.w	8015104 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8015244:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8015246:	9002      	str	r0, [sp, #8]
 8015248:	b236      	sxth	r6, r6
 801524a:	b212      	sxth	r2, r2
 801524c:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8015250:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8015254:	9200      	str	r2, [sp, #0]
 8015256:	9601      	str	r6, [sp, #4]
 8015258:	4623      	mov	r3, r4
 801525a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801525e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015260:	f7ff fd46 	bl	8014cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8015264:	e74e      	b.n	8015104 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8015266:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015268:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801526a:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 801526c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801526e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015272:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8015274:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8015278:	142d      	asrs	r5, r5, #16
 801527a:	1400      	asrs	r0, r0, #16
 801527c:	fb02 5000 	mla	r0, r2, r0, r5
 8015280:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015282:	f815 9000 	ldrb.w	r9, [r5, r0]
 8015286:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801528a:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801528e:	182e      	adds	r6, r5, r0
 8015290:	eb04 0509 	add.w	r5, r4, r9
 8015294:	2b00      	cmp	r3, #0
 8015296:	f000 8096 	beq.w	80153c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x502>
 801529a:	7877      	ldrb	r7, [r6, #1]
 801529c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80152a0:	4427      	add	r7, r4
 80152a2:	2900      	cmp	r1, #0
 80152a4:	f000 8097 	beq.w	80153d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 80152a8:	18b0      	adds	r0, r6, r2
 80152aa:	5cb2      	ldrb	r2, [r6, r2]
 80152ac:	7840      	ldrb	r0, [r0, #1]
 80152ae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80152b2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80152b6:	4422      	add	r2, r4
 80152b8:	4420      	add	r0, r4
 80152ba:	b29b      	uxth	r3, r3
 80152bc:	b289      	uxth	r1, r1
 80152be:	fb03 f801 	mul.w	r8, r3, r1
 80152c2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80152c4:	f895 b002 	ldrb.w	fp, [r5, #2]
 80152c8:	f8b6 c000 	ldrh.w	ip, [r6]
 80152cc:	78be      	ldrb	r6, [r7, #2]
 80152ce:	f814 9009 	ldrb.w	r9, [r4, r9]
 80152d2:	011b      	lsls	r3, r3, #4
 80152d4:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80152d8:	b289      	uxth	r1, r1
 80152da:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80152de:	eba3 0308 	sub.w	r3, r3, r8
 80152e2:	b29b      	uxth	r3, r3
 80152e4:	ebae 0e01 	sub.w	lr, lr, r1
 80152e8:	fa1f fe8e 	uxth.w	lr, lr
 80152ec:	435e      	muls	r6, r3
 80152ee:	fb0e 660b 	mla	r6, lr, fp, r6
 80152f2:	f892 b002 	ldrb.w	fp, [r2, #2]
 80152f6:	9310      	str	r3, [sp, #64]	; 0x40
 80152f8:	fb01 660b 	mla	r6, r1, fp, r6
 80152fc:	f890 b002 	ldrb.w	fp, [r0, #2]
 8015300:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015302:	fb08 660b 	mla	r6, r8, fp, r6
 8015306:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801530a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801530e:	fb1b fb03 	smulbb	fp, fp, r3
 8015312:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015316:	fb06 b60a 	mla	r6, r6, sl, fp
 801531a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801531c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8015320:	787d      	ldrb	r5, [r7, #1]
 8015322:	783f      	ldrb	r7, [r7, #0]
 8015324:	435d      	muls	r5, r3
 8015326:	fb0e 550b 	mla	r5, lr, fp, r5
 801532a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801532e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015330:	fb01 550b 	mla	r5, r1, fp, r5
 8015334:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015338:	fb08 550b 	mla	r5, r8, fp, r5
 801533c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015340:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015344:	fb1b fb03 	smulbb	fp, fp, r3
 8015348:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801534a:	437b      	muls	r3, r7
 801534c:	7817      	ldrb	r7, [r2, #0]
 801534e:	fb0e 3309 	mla	r3, lr, r9, r3
 8015352:	fb01 3307 	mla	r3, r1, r7, r3
 8015356:	7807      	ldrb	r7, [r0, #0]
 8015358:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801535c:	fb08 3707 	mla	r7, r8, r7, r3
 8015360:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015362:	fa5f fc8c 	uxtb.w	ip, ip
 8015366:	fb1c fc03 	smulbb	ip, ip, r3
 801536a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801536e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015372:	fb05 b50a 	mla	r5, r5, sl, fp
 8015376:	fb07 c70a 	mla	r7, r7, sl, ip
 801537a:	b2b6      	uxth	r6, r6
 801537c:	b2ad      	uxth	r5, r5
 801537e:	b2bf      	uxth	r7, r7
 8015380:	1c73      	adds	r3, r6, #1
 8015382:	1c7a      	adds	r2, r7, #1
 8015384:	f105 0b01 	add.w	fp, r5, #1
 8015388:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801538c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8015390:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8015394:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015398:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801539c:	096d      	lsrs	r5, r5, #5
 801539e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80153a0:	4316      	orrs	r6, r2
 80153a2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80153a6:	432e      	orrs	r6, r5
 80153a8:	f823 6b02 	strh.w	r6, [r3], #2
 80153ac:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80153ae:	930c      	str	r3, [sp, #48]	; 0x30
 80153b0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80153b2:	4413      	add	r3, r2
 80153b4:	9327      	str	r3, [sp, #156]	; 0x9c
 80153b6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80153b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80153ba:	4413      	add	r3, r2
 80153bc:	9328      	str	r3, [sp, #160]	; 0xa0
 80153be:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80153c0:	3b01      	subs	r3, #1
 80153c2:	9311      	str	r3, [sp, #68]	; 0x44
 80153c4:	e6db      	b.n	801517e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80153c6:	b149      	cbz	r1, 80153dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80153c8:	5cb2      	ldrb	r2, [r6, r2]
 80153ca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80153ce:	4422      	add	r2, r4
 80153d0:	4628      	mov	r0, r5
 80153d2:	462f      	mov	r7, r5
 80153d4:	e771      	b.n	80152ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 80153d6:	4628      	mov	r0, r5
 80153d8:	462a      	mov	r2, r5
 80153da:	e76e      	b.n	80152ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 80153dc:	4628      	mov	r0, r5
 80153de:	462a      	mov	r2, r5
 80153e0:	e7f7      	b.n	80153d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50e>
 80153e2:	b015      	add	sp, #84	; 0x54
 80153e4:	ecbd 8b08 	vpop	{d8-d11}
 80153e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080153ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80153ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153f0:	880e      	ldrh	r6, [r1, #0]
 80153f2:	b085      	sub	sp, #20
 80153f4:	0230      	lsls	r0, r6, #8
 80153f6:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 80153fa:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 80153fe:	0170      	lsls	r0, r6, #5
 8015400:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015404:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8015408:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 801540c:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8015410:	00f6      	lsls	r6, r6, #3
 8015412:	ea4b 0000 	orr.w	r0, fp, r0
 8015416:	b2f6      	uxtb	r6, r6
 8015418:	4691      	mov	r9, r2
 801541a:	fb05 7a0c 	mla	sl, r5, ip, r7
 801541e:	4306      	orrs	r6, r0
 8015420:	2d00      	cmp	r5, #0
 8015422:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8015426:	9603      	str	r6, [sp, #12]
 8015428:	eb09 0e0a 	add.w	lr, r9, sl
 801542c:	db42      	blt.n	80154b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 801542e:	45a8      	cmp	r8, r5
 8015430:	dd40      	ble.n	80154b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8015432:	2f00      	cmp	r7, #0
 8015434:	db3c      	blt.n	80154b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8015436:	45bc      	cmp	ip, r7
 8015438:	dd3a      	ble.n	80154b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 801543a:	f819 600a 	ldrb.w	r6, [r9, sl]
 801543e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015442:	441e      	add	r6, r3
 8015444:	1c78      	adds	r0, r7, #1
 8015446:	d438      	bmi.n	80154ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8015448:	4584      	cmp	ip, r0
 801544a:	dd36      	ble.n	80154ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 801544c:	b3aa      	cbz	r2, 80154ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 801544e:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8015452:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015456:	4418      	add	r0, r3
 8015458:	3501      	adds	r5, #1
 801545a:	d432      	bmi.n	80154c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 801545c:	45a8      	cmp	r8, r5
 801545e:	dd30      	ble.n	80154c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8015460:	b37c      	cbz	r4, 80154c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8015462:	2f00      	cmp	r7, #0
 8015464:	db2b      	blt.n	80154be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8015466:	45bc      	cmp	ip, r7
 8015468:	dd29      	ble.n	80154be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 801546a:	f81e 500c 	ldrb.w	r5, [lr, ip]
 801546e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015472:	441d      	add	r5, r3
 8015474:	3701      	adds	r7, #1
 8015476:	d427      	bmi.n	80154c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8015478:	45bc      	cmp	ip, r7
 801547a:	dd25      	ble.n	80154c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 801547c:	b322      	cbz	r2, 80154c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 801547e:	44f4      	add	ip, lr
 8015480:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8015484:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015488:	443b      	add	r3, r7
 801548a:	781f      	ldrb	r7, [r3, #0]
 801548c:	f896 a000 	ldrb.w	sl, [r6]
 8015490:	f890 b000 	ldrb.w	fp, [r0]
 8015494:	f895 9000 	ldrb.w	r9, [r5]
 8015498:	9700      	str	r7, [sp, #0]
 801549a:	2a0f      	cmp	r2, #15
 801549c:	d801      	bhi.n	80154a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 801549e:	2c0f      	cmp	r4, #15
 80154a0:	d914      	bls.n	80154cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 80154a2:	4b2c      	ldr	r3, [pc, #176]	; (8015554 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 80154a4:	4a2c      	ldr	r2, [pc, #176]	; (8015558 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 80154a6:	482d      	ldr	r0, [pc, #180]	; (801555c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 80154a8:	f240 210d 	movw	r1, #525	; 0x20d
 80154ac:	f005 ffae 	bl	801b40c <__assert_func>
 80154b0:	ae03      	add	r6, sp, #12
 80154b2:	e7c7      	b.n	8015444 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 80154b4:	a803      	add	r0, sp, #12
 80154b6:	4606      	mov	r6, r0
 80154b8:	e7ce      	b.n	8015458 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 80154ba:	a803      	add	r0, sp, #12
 80154bc:	e7cc      	b.n	8015458 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 80154be:	ad03      	add	r5, sp, #12
 80154c0:	e7d8      	b.n	8015474 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 80154c2:	ab03      	add	r3, sp, #12
 80154c4:	461d      	mov	r5, r3
 80154c6:	e7e0      	b.n	801548a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 80154c8:	ab03      	add	r3, sp, #12
 80154ca:	e7de      	b.n	801548a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 80154cc:	b292      	uxth	r2, r2
 80154ce:	b2a4      	uxth	r4, r4
 80154d0:	fb02 f804 	mul.w	r8, r2, r4
 80154d4:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 80154d8:	0112      	lsls	r2, r2, #4
 80154da:	b2a4      	uxth	r4, r4
 80154dc:	f890 e002 	ldrb.w	lr, [r0, #2]
 80154e0:	78b7      	ldrb	r7, [r6, #2]
 80154e2:	7840      	ldrb	r0, [r0, #1]
 80154e4:	7876      	ldrb	r6, [r6, #1]
 80154e6:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 80154ea:	eba2 0208 	sub.w	r2, r2, r8
 80154ee:	b292      	uxth	r2, r2
 80154f0:	ebac 0c04 	sub.w	ip, ip, r4
 80154f4:	fa1f fc8c 	uxth.w	ip, ip
 80154f8:	fb02 fe0e 	mul.w	lr, r2, lr
 80154fc:	fb0c ee07 	mla	lr, ip, r7, lr
 8015500:	78af      	ldrb	r7, [r5, #2]
 8015502:	fb04 ee07 	mla	lr, r4, r7, lr
 8015506:	789f      	ldrb	r7, [r3, #2]
 8015508:	785b      	ldrb	r3, [r3, #1]
 801550a:	fb08 e707 	mla	r7, r8, r7, lr
 801550e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015512:	fb02 fe0b 	mul.w	lr, r2, fp
 8015516:	4342      	muls	r2, r0
 8015518:	7868      	ldrb	r0, [r5, #1]
 801551a:	9701      	str	r7, [sp, #4]
 801551c:	fb0c ee0a 	mla	lr, ip, sl, lr
 8015520:	9f00      	ldr	r7, [sp, #0]
 8015522:	fb0c 2206 	mla	r2, ip, r6, r2
 8015526:	fb04 ee09 	mla	lr, r4, r9, lr
 801552a:	fb04 2400 	mla	r4, r4, r0, r2
 801552e:	fb08 ee07 	mla	lr, r8, r7, lr
 8015532:	9f01      	ldr	r7, [sp, #4]
 8015534:	fb08 4803 	mla	r8, r8, r3, r4
 8015538:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801553c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015540:	ea47 070e 	orr.w	r7, r7, lr
 8015544:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015548:	ea47 0708 	orr.w	r7, r7, r8
 801554c:	800f      	strh	r7, [r1, #0]
 801554e:	b005      	add	sp, #20
 8015550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015554:	0801f307 	.word	0x0801f307
 8015558:	0801f8c5 	.word	0x0801f8c5
 801555c:	0801f3f0 	.word	0x0801f3f0

08015560 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015564:	ed2d 8b08 	vpush	{d8-d11}
 8015568:	b08f      	sub	sp, #60	; 0x3c
 801556a:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 801556e:	920c      	str	r2, [sp, #48]	; 0x30
 8015570:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8015572:	910a      	str	r1, [sp, #40]	; 0x28
 8015574:	9306      	str	r3, [sp, #24]
 8015576:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801557a:	900d      	str	r0, [sp, #52]	; 0x34
 801557c:	6850      	ldr	r0, [r2, #4]
 801557e:	6812      	ldr	r2, [r2, #0]
 8015580:	fb00 1303 	mla	r3, r0, r3, r1
 8015584:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015588:	9307      	str	r3, [sp, #28]
 801558a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801558c:	681b      	ldr	r3, [r3, #0]
 801558e:	9308      	str	r3, [sp, #32]
 8015590:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015592:	685c      	ldr	r4, [r3, #4]
 8015594:	eeb0 aa40 	vmov.f32	s20, s0
 8015598:	eef0 9a60 	vmov.f32	s19, s1
 801559c:	eeb0 9a41 	vmov.f32	s18, s2
 80155a0:	eeb0 8a62 	vmov.f32	s16, s5
 80155a4:	eef0 8a43 	vmov.f32	s17, s6
 80155a8:	eef0 ba44 	vmov.f32	s23, s8
 80155ac:	eeb0 ba64 	vmov.f32	s22, s9
 80155b0:	eef0 aa45 	vmov.f32	s21, s10
 80155b4:	3404      	adds	r4, #4
 80155b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80155b8:	2b00      	cmp	r3, #0
 80155ba:	dc03      	bgt.n	80155c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80155bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80155be:	2b00      	cmp	r3, #0
 80155c0:	f340 81d6 	ble.w	8015970 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 80155c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80155c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80155ca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80155ce:	1e48      	subs	r0, r1, #1
 80155d0:	1e56      	subs	r6, r2, #1
 80155d2:	9b06      	ldr	r3, [sp, #24]
 80155d4:	2b00      	cmp	r3, #0
 80155d6:	f340 80b7 	ble.w	8015748 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80155da:	ea5f 472b 	movs.w	r7, fp, asr #16
 80155de:	ea4f 4325 	mov.w	r3, r5, asr #16
 80155e2:	d406      	bmi.n	80155f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80155e4:	4287      	cmp	r7, r0
 80155e6:	da04      	bge.n	80155f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80155e8:	2b00      	cmp	r3, #0
 80155ea:	db02      	blt.n	80155f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80155ec:	42b3      	cmp	r3, r6
 80155ee:	f2c0 80ac 	blt.w	801574a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80155f2:	3701      	adds	r7, #1
 80155f4:	f100 809d 	bmi.w	8015732 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80155f8:	42b9      	cmp	r1, r7
 80155fa:	f2c0 809a 	blt.w	8015732 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80155fe:	3301      	adds	r3, #1
 8015600:	f100 8097 	bmi.w	8015732 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015604:	429a      	cmp	r2, r3
 8015606:	f2c0 8094 	blt.w	8015732 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801560a:	9b06      	ldr	r3, [sp, #24]
 801560c:	930b      	str	r3, [sp, #44]	; 0x2c
 801560e:	9b07      	ldr	r3, [sp, #28]
 8015610:	9309      	str	r3, [sp, #36]	; 0x24
 8015612:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015614:	2b00      	cmp	r3, #0
 8015616:	f340 80b5 	ble.w	8015784 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801561a:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801561c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801561e:	68c7      	ldr	r7, [r0, #12]
 8015620:	6892      	ldr	r2, [r2, #8]
 8015622:	ea5f 402b 	movs.w	r0, fp, asr #16
 8015626:	ea4f 4625 	mov.w	r6, r5, asr #16
 801562a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801562e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015632:	f100 80fb 	bmi.w	801582c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015636:	f102 3cff 	add.w	ip, r2, #4294967295
 801563a:	4560      	cmp	r0, ip
 801563c:	f280 80f6 	bge.w	801582c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015640:	2e00      	cmp	r6, #0
 8015642:	f2c0 80f3 	blt.w	801582c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015646:	f107 3cff 	add.w	ip, r7, #4294967295
 801564a:	4566      	cmp	r6, ip
 801564c:	f280 80ee 	bge.w	801582c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015650:	b212      	sxth	r2, r2
 8015652:	fb06 0002 	mla	r0, r6, r2, r0
 8015656:	9e08      	ldr	r6, [sp, #32]
 8015658:	1837      	adds	r7, r6, r0
 801565a:	5c30      	ldrb	r0, [r6, r0]
 801565c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8015660:	eb04 0c08 	add.w	ip, r4, r8
 8015664:	2b00      	cmp	r3, #0
 8015666:	f000 80d3 	beq.w	8015810 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801566a:	787e      	ldrb	r6, [r7, #1]
 801566c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015670:	4426      	add	r6, r4
 8015672:	2900      	cmp	r1, #0
 8015674:	f000 80d4 	beq.w	8015820 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8015678:	18b8      	adds	r0, r7, r2
 801567a:	5cba      	ldrb	r2, [r7, r2]
 801567c:	7840      	ldrb	r0, [r0, #1]
 801567e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015682:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015686:	4422      	add	r2, r4
 8015688:	4420      	add	r0, r4
 801568a:	b29b      	uxth	r3, r3
 801568c:	b289      	uxth	r1, r1
 801568e:	fb03 f901 	mul.w	r9, r3, r1
 8015692:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015696:	011b      	lsls	r3, r3, #4
 8015698:	b289      	uxth	r1, r1
 801569a:	78b7      	ldrb	r7, [r6, #2]
 801569c:	f89c a002 	ldrb.w	sl, [ip, #2]
 80156a0:	f89c c001 	ldrb.w	ip, [ip, #1]
 80156a4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80156a8:	eba3 0309 	sub.w	r3, r3, r9
 80156ac:	b29b      	uxth	r3, r3
 80156ae:	ebae 0e01 	sub.w	lr, lr, r1
 80156b2:	fa1f fe8e 	uxth.w	lr, lr
 80156b6:	435f      	muls	r7, r3
 80156b8:	fb0e 770a 	mla	r7, lr, sl, r7
 80156bc:	f892 a002 	ldrb.w	sl, [r2, #2]
 80156c0:	fb01 770a 	mla	r7, r1, sl, r7
 80156c4:	f890 a002 	ldrb.w	sl, [r0, #2]
 80156c8:	fb09 7a0a 	mla	sl, r9, sl, r7
 80156cc:	f814 7008 	ldrb.w	r7, [r4, r8]
 80156d0:	f896 8000 	ldrb.w	r8, [r6]
 80156d4:	7876      	ldrb	r6, [r6, #1]
 80156d6:	fb03 f808 	mul.w	r8, r3, r8
 80156da:	fb0e 8807 	mla	r8, lr, r7, r8
 80156de:	7817      	ldrb	r7, [r2, #0]
 80156e0:	fb01 8807 	mla	r8, r1, r7, r8
 80156e4:	7807      	ldrb	r7, [r0, #0]
 80156e6:	fb09 8707 	mla	r7, r9, r7, r8
 80156ea:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80156ee:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80156f2:	ea4a 0707 	orr.w	r7, sl, r7
 80156f6:	4373      	muls	r3, r6
 80156f8:	f892 a001 	ldrb.w	sl, [r2, #1]
 80156fc:	fb0e 330c 	mla	r3, lr, ip, r3
 8015700:	fb01 310a 	mla	r1, r1, sl, r3
 8015704:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015708:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801570a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801570e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015712:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015716:	ea47 070a 	orr.w	r7, r7, sl
 801571a:	801f      	strh	r7, [r3, #0]
 801571c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801571e:	3302      	adds	r3, #2
 8015720:	9309      	str	r3, [sp, #36]	; 0x24
 8015722:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015724:	449b      	add	fp, r3
 8015726:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015728:	441d      	add	r5, r3
 801572a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801572c:	3b01      	subs	r3, #1
 801572e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015730:	e76f      	b.n	8015612 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015732:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015734:	449b      	add	fp, r3
 8015736:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015738:	441d      	add	r5, r3
 801573a:	9b06      	ldr	r3, [sp, #24]
 801573c:	3b01      	subs	r3, #1
 801573e:	9306      	str	r3, [sp, #24]
 8015740:	9b07      	ldr	r3, [sp, #28]
 8015742:	3302      	adds	r3, #2
 8015744:	9307      	str	r3, [sp, #28]
 8015746:	e744      	b.n	80155d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015748:	d023      	beq.n	8015792 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801574a:	9b06      	ldr	r3, [sp, #24]
 801574c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801574e:	3b01      	subs	r3, #1
 8015750:	fb00 b003 	mla	r0, r0, r3, fp
 8015754:	1400      	asrs	r0, r0, #16
 8015756:	f53f af58 	bmi.w	801560a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801575a:	3901      	subs	r1, #1
 801575c:	4288      	cmp	r0, r1
 801575e:	f6bf af54 	bge.w	801560a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015762:	9924      	ldr	r1, [sp, #144]	; 0x90
 8015764:	fb01 5303 	mla	r3, r1, r3, r5
 8015768:	141b      	asrs	r3, r3, #16
 801576a:	f53f af4e 	bmi.w	801560a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801576e:	3a01      	subs	r2, #1
 8015770:	4293      	cmp	r3, r2
 8015772:	f6bf af4a 	bge.w	801560a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015776:	9b06      	ldr	r3, [sp, #24]
 8015778:	9309      	str	r3, [sp, #36]	; 0x24
 801577a:	9b07      	ldr	r3, [sp, #28]
 801577c:	930b      	str	r3, [sp, #44]	; 0x2c
 801577e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015780:	2b00      	cmp	r3, #0
 8015782:	dc70      	bgt.n	8015866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8015784:	9b06      	ldr	r3, [sp, #24]
 8015786:	9a07      	ldr	r2, [sp, #28]
 8015788:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801578c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015790:	9307      	str	r3, [sp, #28]
 8015792:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015794:	2b00      	cmp	r3, #0
 8015796:	f340 80eb 	ble.w	8015970 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 801579a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801579e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80157a2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80157a6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80157a8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80157ac:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80157b0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80157b4:	eef0 6a48 	vmov.f32	s13, s16
 80157b8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80157bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80157c0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80157c4:	ee16 ba90 	vmov	fp, s13
 80157c8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80157cc:	eef0 6a68 	vmov.f32	s13, s17
 80157d0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80157d4:	ee18 2a10 	vmov	r2, s16
 80157d8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80157dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80157e0:	ee18 2a90 	vmov	r2, s17
 80157e4:	9323      	str	r3, [sp, #140]	; 0x8c
 80157e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80157e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80157ec:	9324      	str	r3, [sp, #144]	; 0x90
 80157ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80157f0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80157f2:	3b01      	subs	r3, #1
 80157f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80157f8:	930a      	str	r3, [sp, #40]	; 0x28
 80157fa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80157fc:	bf08      	it	eq
 80157fe:	4613      	moveq	r3, r2
 8015800:	ee16 5a90 	vmov	r5, s13
 8015804:	9306      	str	r3, [sp, #24]
 8015806:	eef0 8a67 	vmov.f32	s17, s15
 801580a:	eeb0 8a47 	vmov.f32	s16, s14
 801580e:	e6d2      	b.n	80155b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8015810:	b149      	cbz	r1, 8015826 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8015812:	5cba      	ldrb	r2, [r7, r2]
 8015814:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015818:	4422      	add	r2, r4
 801581a:	4660      	mov	r0, ip
 801581c:	4666      	mov	r6, ip
 801581e:	e734      	b.n	801568a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8015820:	4660      	mov	r0, ip
 8015822:	4662      	mov	r2, ip
 8015824:	e731      	b.n	801568a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8015826:	4660      	mov	r0, ip
 8015828:	4662      	mov	r2, ip
 801582a:	e7f7      	b.n	801581c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 801582c:	f110 0c01 	adds.w	ip, r0, #1
 8015830:	f53f af74 	bmi.w	801571c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015834:	4562      	cmp	r2, ip
 8015836:	f6ff af71 	blt.w	801571c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801583a:	f116 0c01 	adds.w	ip, r6, #1
 801583e:	f53f af6d 	bmi.w	801571c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015842:	4567      	cmp	r7, ip
 8015844:	f6ff af6a 	blt.w	801571c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015848:	b23f      	sxth	r7, r7
 801584a:	b212      	sxth	r2, r2
 801584c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8015850:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8015854:	9200      	str	r2, [sp, #0]
 8015856:	9701      	str	r7, [sp, #4]
 8015858:	4623      	mov	r3, r4
 801585a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801585e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8015860:	f7ff fdc4 	bl	80153ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8015864:	e75a      	b.n	801571c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015866:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015868:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801586c:	ea4f 462b 	mov.w	r6, fp, asr #16
 8015870:	1428      	asrs	r0, r5, #16
 8015872:	fb02 6000 	mla	r0, r2, r0, r6
 8015876:	9e08      	ldr	r6, [sp, #32]
 8015878:	f816 8000 	ldrb.w	r8, [r6, r0]
 801587c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8015880:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015884:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015888:	1837      	adds	r7, r6, r0
 801588a:	eb04 0c08 	add.w	ip, r4, r8
 801588e:	2b00      	cmp	r3, #0
 8015890:	d060      	beq.n	8015954 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8015892:	787e      	ldrb	r6, [r7, #1]
 8015894:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015898:	4426      	add	r6, r4
 801589a:	2900      	cmp	r1, #0
 801589c:	d062      	beq.n	8015964 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 801589e:	18b8      	adds	r0, r7, r2
 80158a0:	5cba      	ldrb	r2, [r7, r2]
 80158a2:	7840      	ldrb	r0, [r0, #1]
 80158a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80158a8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80158ac:	4422      	add	r2, r4
 80158ae:	4420      	add	r0, r4
 80158b0:	b29b      	uxth	r3, r3
 80158b2:	b289      	uxth	r1, r1
 80158b4:	fb03 f901 	mul.w	r9, r3, r1
 80158b8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80158bc:	011b      	lsls	r3, r3, #4
 80158be:	b289      	uxth	r1, r1
 80158c0:	78b7      	ldrb	r7, [r6, #2]
 80158c2:	f89c a002 	ldrb.w	sl, [ip, #2]
 80158c6:	f89c c001 	ldrb.w	ip, [ip, #1]
 80158ca:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80158ce:	eba3 0309 	sub.w	r3, r3, r9
 80158d2:	b29b      	uxth	r3, r3
 80158d4:	ebae 0e01 	sub.w	lr, lr, r1
 80158d8:	fa1f fe8e 	uxth.w	lr, lr
 80158dc:	435f      	muls	r7, r3
 80158de:	fb0e 770a 	mla	r7, lr, sl, r7
 80158e2:	f892 a002 	ldrb.w	sl, [r2, #2]
 80158e6:	fb01 770a 	mla	r7, r1, sl, r7
 80158ea:	f890 a002 	ldrb.w	sl, [r0, #2]
 80158ee:	fb09 7a0a 	mla	sl, r9, sl, r7
 80158f2:	f814 7008 	ldrb.w	r7, [r4, r8]
 80158f6:	f896 8000 	ldrb.w	r8, [r6]
 80158fa:	7876      	ldrb	r6, [r6, #1]
 80158fc:	fb03 f808 	mul.w	r8, r3, r8
 8015900:	fb0e 8807 	mla	r8, lr, r7, r8
 8015904:	7817      	ldrb	r7, [r2, #0]
 8015906:	fb01 8807 	mla	r8, r1, r7, r8
 801590a:	7807      	ldrb	r7, [r0, #0]
 801590c:	fb09 8707 	mla	r7, r9, r7, r8
 8015910:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015914:	4373      	muls	r3, r6
 8015916:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801591a:	7856      	ldrb	r6, [r2, #1]
 801591c:	ea4a 0707 	orr.w	r7, sl, r7
 8015920:	fb0e 330c 	mla	r3, lr, ip, r3
 8015924:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015928:	fb01 3306 	mla	r3, r1, r6, r3
 801592c:	fb09 3a0a 	mla	sl, r9, sl, r3
 8015930:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015934:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015936:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801593a:	ea47 070a 	orr.w	r7, r7, sl
 801593e:	f823 7b02 	strh.w	r7, [r3], #2
 8015942:	930b      	str	r3, [sp, #44]	; 0x2c
 8015944:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015946:	449b      	add	fp, r3
 8015948:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801594a:	441d      	add	r5, r3
 801594c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801594e:	3b01      	subs	r3, #1
 8015950:	9309      	str	r3, [sp, #36]	; 0x24
 8015952:	e714      	b.n	801577e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8015954:	b149      	cbz	r1, 801596a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8015956:	5cba      	ldrb	r2, [r7, r2]
 8015958:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801595c:	4422      	add	r2, r4
 801595e:	4660      	mov	r0, ip
 8015960:	4666      	mov	r6, ip
 8015962:	e7a5      	b.n	80158b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8015964:	4660      	mov	r0, ip
 8015966:	4662      	mov	r2, ip
 8015968:	e7a2      	b.n	80158b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801596a:	4660      	mov	r0, ip
 801596c:	4662      	mov	r2, ip
 801596e:	e7f7      	b.n	8015960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8015970:	b00f      	add	sp, #60	; 0x3c
 8015972:	ecbd 8b08 	vpop	{d8-d11}
 8015976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801597c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801597c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015980:	880e      	ldrh	r6, [r1, #0]
 8015982:	b085      	sub	sp, #20
 8015984:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8015988:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 801598c:	4691      	mov	r9, r2
 801598e:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015992:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8015996:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801599a:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 801599e:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 80159a2:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 80159a6:	9200      	str	r2, [sp, #0]
 80159a8:	00f6      	lsls	r6, r6, #3
 80159aa:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 80159ae:	9201      	str	r2, [sp, #4]
 80159b0:	2c00      	cmp	r4, #0
 80159b2:	b2f2      	uxtb	r2, r6
 80159b4:	fb04 560c 	mla	r6, r4, ip, r5
 80159b8:	9202      	str	r2, [sp, #8]
 80159ba:	eb09 0e06 	add.w	lr, r9, r6
 80159be:	db3e      	blt.n	8015a3e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 80159c0:	45a0      	cmp	r8, r4
 80159c2:	dd3c      	ble.n	8015a3e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 80159c4:	2d00      	cmp	r5, #0
 80159c6:	db38      	blt.n	8015a3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 80159c8:	45ac      	cmp	ip, r5
 80159ca:	dd36      	ble.n	8015a3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 80159cc:	f819 2006 	ldrb.w	r2, [r9, r6]
 80159d0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80159d4:	1c6e      	adds	r6, r5, #1
 80159d6:	d435      	bmi.n	8015a44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 80159d8:	45b4      	cmp	ip, r6
 80159da:	dd33      	ble.n	8015a44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 80159dc:	b3a0      	cbz	r0, 8015a48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 80159de:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80159e2:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 80159e6:	3401      	adds	r4, #1
 80159e8:	d432      	bmi.n	8015a50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 80159ea:	45a0      	cmp	r8, r4
 80159ec:	dd30      	ble.n	8015a50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 80159ee:	b397      	cbz	r7, 8015a56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 80159f0:	2d00      	cmp	r5, #0
 80159f2:	db2b      	blt.n	8015a4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 80159f4:	45ac      	cmp	ip, r5
 80159f6:	dd29      	ble.n	8015a4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 80159f8:	f81e 400c 	ldrb.w	r4, [lr, ip]
 80159fc:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8015a00:	3501      	adds	r5, #1
 8015a02:	d42b      	bmi.n	8015a5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8015a04:	45ac      	cmp	ip, r5
 8015a06:	dd29      	ble.n	8015a5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8015a08:	b350      	cbz	r0, 8015a60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe4>
 8015a0a:	44f4      	add	ip, lr
 8015a0c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8015a10:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8015a14:	280f      	cmp	r0, #15
 8015a16:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8015a1a:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015a1e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8015a22:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8015a26:	d801      	bhi.n	8015a2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb0>
 8015a28:	2f0f      	cmp	r7, #15
 8015a2a:	d91b      	bls.n	8015a64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe8>
 8015a2c:	4b84      	ldr	r3, [pc, #528]	; (8015c40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8015a2e:	4a85      	ldr	r2, [pc, #532]	; (8015c44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8015a30:	4885      	ldr	r0, [pc, #532]	; (8015c48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8015a32:	f240 210d 	movw	r1, #525	; 0x20d
 8015a36:	f005 fce9 	bl	801b40c <__assert_func>
 8015a3a:	2200      	movs	r2, #0
 8015a3c:	e7ca      	b.n	80159d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x58>
 8015a3e:	2600      	movs	r6, #0
 8015a40:	4632      	mov	r2, r6
 8015a42:	e7d0      	b.n	80159e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8015a44:	2600      	movs	r6, #0
 8015a46:	e7ce      	b.n	80159e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8015a48:	4606      	mov	r6, r0
 8015a4a:	e7cc      	b.n	80159e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8015a4c:	2400      	movs	r4, #0
 8015a4e:	e7d7      	b.n	8015a00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x84>
 8015a50:	2300      	movs	r3, #0
 8015a52:	461c      	mov	r4, r3
 8015a54:	e7de      	b.n	8015a14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8015a56:	463b      	mov	r3, r7
 8015a58:	463c      	mov	r4, r7
 8015a5a:	e7db      	b.n	8015a14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8015a5c:	2300      	movs	r3, #0
 8015a5e:	e7d9      	b.n	8015a14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8015a60:	4603      	mov	r3, r0
 8015a62:	e7d7      	b.n	8015a14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8015a64:	b280      	uxth	r0, r0
 8015a66:	b2bf      	uxth	r7, r7
 8015a68:	fb00 fe07 	mul.w	lr, r0, r7
 8015a6c:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8015a70:	0100      	lsls	r0, r0, #4
 8015a72:	eba0 0c0e 	sub.w	ip, r0, lr
 8015a76:	b2bf      	uxth	r7, r7
 8015a78:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8015a7c:	fa1f fc8c 	uxth.w	ip, ip
 8015a80:	1bed      	subs	r5, r5, r7
 8015a82:	b2ad      	uxth	r5, r5
 8015a84:	fb0c f00a 	mul.w	r0, ip, sl
 8015a88:	fb05 000b 	mla	r0, r5, fp, r0
 8015a8c:	fb07 0009 	mla	r0, r7, r9, r0
 8015a90:	fb0e 0008 	mla	r0, lr, r8, r0
 8015a94:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8015a98:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015a9c:	9003      	str	r0, [sp, #12]
 8015a9e:	d018      	beq.n	8015ad2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x156>
 8015aa0:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8015aa4:	fb0b f000 	mul.w	r0, fp, r0
 8015aa8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015aac:	fb0b fb02 	mul.w	fp, fp, r2
 8015ab0:	0a02      	lsrs	r2, r0, #8
 8015ab2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015ab6:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8015aba:	4402      	add	r2, r0
 8015abc:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8015ac0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8015ac4:	0a12      	lsrs	r2, r2, #8
 8015ac6:	0a00      	lsrs	r0, r0, #8
 8015ac8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015acc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015ad0:	4302      	orrs	r2, r0
 8015ad2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015ad6:	d019      	beq.n	8015b0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x190>
 8015ad8:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015adc:	fb0a fb0b 	mul.w	fp, sl, fp
 8015ae0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015ae4:	fb0a fa06 	mul.w	sl, sl, r6
 8015ae8:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8015aec:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015af0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015af4:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8015af8:	445e      	add	r6, fp
 8015afa:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8015afe:	0a36      	lsrs	r6, r6, #8
 8015b00:	0a00      	lsrs	r0, r0, #8
 8015b02:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015b06:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015b0a:	4306      	orrs	r6, r0
 8015b0c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015b10:	d019      	beq.n	8015b46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1ca>
 8015b12:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8015b16:	fb09 fa0a 	mul.w	sl, r9, sl
 8015b1a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8015b1e:	fb09 f904 	mul.w	r9, r9, r4
 8015b22:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8015b26:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015b2a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015b2e:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8015b32:	4454      	add	r4, sl
 8015b34:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8015b38:	0a24      	lsrs	r4, r4, #8
 8015b3a:	0a00      	lsrs	r0, r0, #8
 8015b3c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015b40:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015b44:	4304      	orrs	r4, r0
 8015b46:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015b4a:	d019      	beq.n	8015b80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x204>
 8015b4c:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8015b50:	fb08 f909 	mul.w	r9, r8, r9
 8015b54:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015b58:	fb08 f803 	mul.w	r8, r8, r3
 8015b5c:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8015b60:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015b64:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8015b68:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8015b6c:	444b      	add	r3, r9
 8015b6e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8015b72:	0a1b      	lsrs	r3, r3, #8
 8015b74:	0a00      	lsrs	r0, r0, #8
 8015b76:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015b7a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015b7e:	4303      	orrs	r3, r0
 8015b80:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8015b84:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8015b88:	fb0c f808 	mul.w	r8, ip, r8
 8015b8c:	fb05 8800 	mla	r8, r5, r0, r8
 8015b90:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8015b94:	fb07 8800 	mla	r8, r7, r0, r8
 8015b98:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8015b9c:	fb0e 8000 	mla	r0, lr, r0, r8
 8015ba0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015ba4:	fb0c f606 	mul.w	r6, ip, r6
 8015ba8:	0a00      	lsrs	r0, r0, #8
 8015baa:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015bae:	fb05 6202 	mla	r2, r5, r2, r6
 8015bb2:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8015bb6:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8015bba:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8015bbe:	fb07 2700 	mla	r7, r7, r0, r2
 8015bc2:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8015bc6:	9b03      	ldr	r3, [sp, #12]
 8015bc8:	9c00      	ldr	r4, [sp, #0]
 8015bca:	b2ad      	uxth	r5, r5
 8015bcc:	436b      	muls	r3, r5
 8015bce:	fb0e 7000 	mla	r0, lr, r0, r7
 8015bd2:	1c5a      	adds	r2, r3, #1
 8015bd4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8015bd8:	0a00      	lsrs	r0, r0, #8
 8015bda:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015bde:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8015be2:	ea48 0000 	orr.w	r0, r8, r0
 8015be6:	b2d2      	uxtb	r2, r2
 8015be8:	fb14 f602 	smulbb	r6, r4, r2
 8015bec:	0c03      	lsrs	r3, r0, #16
 8015bee:	fb03 6305 	mla	r3, r3, r5, r6
 8015bf2:	b29e      	uxth	r6, r3
 8015bf4:	9b01      	ldr	r3, [sp, #4]
 8015bf6:	f3c0 2407 	ubfx	r4, r0, #8, #8
 8015bfa:	fb13 f302 	smulbb	r3, r3, r2
 8015bfe:	fb04 3405 	mla	r4, r4, r5, r3
 8015c02:	9b02      	ldr	r3, [sp, #8]
 8015c04:	b2c0      	uxtb	r0, r0
 8015c06:	fb13 f202 	smulbb	r2, r3, r2
 8015c0a:	fb00 2005 	mla	r0, r0, r5, r2
 8015c0e:	b280      	uxth	r0, r0
 8015c10:	b2a4      	uxth	r4, r4
 8015c12:	1c42      	adds	r2, r0, #1
 8015c14:	1c73      	adds	r3, r6, #1
 8015c16:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8015c1a:	1c62      	adds	r2, r4, #1
 8015c1c:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8015c20:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8015c24:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8015c28:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015c2c:	0952      	lsrs	r2, r2, #5
 8015c2e:	4303      	orrs	r3, r0
 8015c30:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015c34:	4313      	orrs	r3, r2
 8015c36:	800b      	strh	r3, [r1, #0]
 8015c38:	b005      	add	sp, #20
 8015c3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c3e:	bf00      	nop
 8015c40:	0801f307 	.word	0x0801f307
 8015c44:	0801f8c5 	.word	0x0801f8c5
 8015c48:	0801f3f0 	.word	0x0801f3f0

08015c4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015c4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c50:	ed2d 8b08 	vpush	{d8-d11}
 8015c54:	b09f      	sub	sp, #124	; 0x7c
 8015c56:	eeb0 aa40 	vmov.f32	s20, s0
 8015c5a:	921b      	str	r2, [sp, #108]	; 0x6c
 8015c5c:	9309      	str	r3, [sp, #36]	; 0x24
 8015c5e:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8015c60:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8015c64:	931c      	str	r3, [sp, #112]	; 0x70
 8015c66:	9119      	str	r1, [sp, #100]	; 0x64
 8015c68:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 8015c6c:	901d      	str	r0, [sp, #116]	; 0x74
 8015c6e:	6850      	ldr	r0, [r2, #4]
 8015c70:	6812      	ldr	r2, [r2, #0]
 8015c72:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8015c74:	fb00 1303 	mla	r3, r0, r3, r1
 8015c78:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015c7c:	930c      	str	r3, [sp, #48]	; 0x30
 8015c7e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015c80:	681b      	ldr	r3, [r3, #0]
 8015c82:	9312      	str	r3, [sp, #72]	; 0x48
 8015c84:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015c86:	685e      	ldr	r6, [r3, #4]
 8015c88:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8015c8c:	930d      	str	r3, [sp, #52]	; 0x34
 8015c8e:	eef0 9a60 	vmov.f32	s19, s1
 8015c92:	eeb0 9a41 	vmov.f32	s18, s2
 8015c96:	eeb0 8a62 	vmov.f32	s16, s5
 8015c9a:	eef0 8a43 	vmov.f32	s17, s6
 8015c9e:	eef0 ba44 	vmov.f32	s23, s8
 8015ca2:	eeb0 ba64 	vmov.f32	s22, s9
 8015ca6:	eef0 aa45 	vmov.f32	s21, s10
 8015caa:	3604      	adds	r6, #4
 8015cac:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015cae:	2b00      	cmp	r3, #0
 8015cb0:	dc03      	bgt.n	8015cba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015cb2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8015cb4:	2b00      	cmp	r3, #0
 8015cb6:	f340 838e 	ble.w	80163d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78a>
 8015cba:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015cbc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015cc0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015cc4:	1e48      	subs	r0, r1, #1
 8015cc6:	1e57      	subs	r7, r2, #1
 8015cc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015cca:	2b00      	cmp	r3, #0
 8015ccc:	f340 819b 	ble.w	8016006 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ba>
 8015cd0:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8015cd2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8015cd6:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015cda:	d406      	bmi.n	8015cea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015cdc:	4584      	cmp	ip, r0
 8015cde:	da04      	bge.n	8015cea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015ce0:	2b00      	cmp	r3, #0
 8015ce2:	db02      	blt.n	8015cea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015ce4:	42bb      	cmp	r3, r7
 8015ce6:	f2c0 818f 	blt.w	8016008 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8015cea:	f11c 0c01 	adds.w	ip, ip, #1
 8015cee:	f100 817d 	bmi.w	8015fec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 8015cf2:	4561      	cmp	r1, ip
 8015cf4:	f2c0 817a 	blt.w	8015fec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 8015cf8:	3301      	adds	r3, #1
 8015cfa:	f100 8177 	bmi.w	8015fec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 8015cfe:	429a      	cmp	r2, r3
 8015d00:	f2c0 8174 	blt.w	8015fec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 8015d04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015d06:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8015d08:	931a      	str	r3, [sp, #104]	; 0x68
 8015d0a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8015d0c:	2b00      	cmp	r3, #0
 8015d0e:	f340 8199 	ble.w	8016044 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8015d12:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8015d14:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015d18:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015d1a:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8015d1e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8015d20:	141b      	asrs	r3, r3, #16
 8015d22:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8015d26:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015d2a:	f100 81dc 	bmi.w	80160e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8015d2e:	f100 38ff 	add.w	r8, r0, #4294967295
 8015d32:	4543      	cmp	r3, r8
 8015d34:	f280 81d7 	bge.w	80160e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8015d38:	f1bc 0f00 	cmp.w	ip, #0
 8015d3c:	f2c0 81d3 	blt.w	80160e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8015d40:	f10e 38ff 	add.w	r8, lr, #4294967295
 8015d44:	45c4      	cmp	ip, r8
 8015d46:	f280 81ce 	bge.w	80160e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8015d4a:	b200      	sxth	r0, r0
 8015d4c:	fb0c 3300 	mla	r3, ip, r0, r3
 8015d50:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015d52:	eb04 0803 	add.w	r8, r4, r3
 8015d56:	5ce3      	ldrb	r3, [r4, r3]
 8015d58:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8015d5c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8015d60:	2a00      	cmp	r2, #0
 8015d62:	f000 81b5 	beq.w	80160d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8015d66:	f898 c001 	ldrb.w	ip, [r8, #1]
 8015d6a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8015d6e:	940e      	str	r4, [sp, #56]	; 0x38
 8015d70:	0e24      	lsrs	r4, r4, #24
 8015d72:	9415      	str	r4, [sp, #84]	; 0x54
 8015d74:	b179      	cbz	r1, 8015d96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8015d76:	eb08 0c00 	add.w	ip, r8, r0
 8015d7a:	f818 0000 	ldrb.w	r0, [r8, r0]
 8015d7e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8015d82:	900a      	str	r0, [sp, #40]	; 0x28
 8015d84:	0e00      	lsrs	r0, r0, #24
 8015d86:	9013      	str	r0, [sp, #76]	; 0x4c
 8015d88:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8015d8c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8015d90:	900f      	str	r0, [sp, #60]	; 0x3c
 8015d92:	0e00      	lsrs	r0, r0, #24
 8015d94:	9016      	str	r0, [sp, #88]	; 0x58
 8015d96:	b292      	uxth	r2, r2
 8015d98:	b289      	uxth	r1, r1
 8015d9a:	fb02 f901 	mul.w	r9, r2, r1
 8015d9e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015da2:	0112      	lsls	r2, r2, #4
 8015da4:	eba2 0809 	sub.w	r8, r2, r9
 8015da8:	b289      	uxth	r1, r1
 8015daa:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8015dae:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015db0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015db2:	fa1f f888 	uxth.w	r8, r8
 8015db6:	1a52      	subs	r2, r2, r1
 8015db8:	b292      	uxth	r2, r2
 8015dba:	fb08 f000 	mul.w	r0, r8, r0
 8015dbe:	fb02 000e 	mla	r0, r2, lr, r0
 8015dc2:	fb01 0004 	mla	r0, r1, r4, r0
 8015dc6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8015dc8:	fb09 0004 	mla	r0, r9, r4, r0
 8015dcc:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8015dd0:	2800      	cmp	r0, #0
 8015dd2:	f000 8100 	beq.w	8015fd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8015dd6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8015dda:	d01b      	beq.n	8015e14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015ddc:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8015de0:	fb0e fa0a 	mul.w	sl, lr, sl
 8015de4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015de8:	fb0e fe03 	mul.w	lr, lr, r3
 8015dec:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8015df0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015df4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015df8:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8015dfc:	4453      	add	r3, sl
 8015dfe:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8015e02:	0a1b      	lsrs	r3, r3, #8
 8015e04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015e08:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015e0c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8015e10:	ea43 030c 	orr.w	r3, r3, ip
 8015e14:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015e16:	2cff      	cmp	r4, #255	; 0xff
 8015e18:	d021      	beq.n	8015e5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8015e1a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015e1c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8015e20:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015e22:	fb04 fb0b 	mul.w	fp, r4, fp
 8015e26:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015e28:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015e2c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015e2e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8015e32:	fb04 fa0a 	mul.w	sl, r4, sl
 8015e36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015e3a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015e3e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8015e42:	44de      	add	lr, fp
 8015e44:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015e48:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015e4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015e50:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015e54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015e58:	ea4e 040a 	orr.w	r4, lr, sl
 8015e5c:	940e      	str	r4, [sp, #56]	; 0x38
 8015e5e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015e60:	2cff      	cmp	r4, #255	; 0xff
 8015e62:	d021      	beq.n	8015ea8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 8015e64:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015e66:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8015e6a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015e6c:	fb04 fb0b 	mul.w	fp, r4, fp
 8015e70:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015e72:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015e76:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015e78:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8015e7c:	fb04 fa0a 	mul.w	sl, r4, sl
 8015e80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015e84:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015e88:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8015e8c:	44de      	add	lr, fp
 8015e8e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015e92:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015e96:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015e9a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015e9e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015ea2:	ea4e 040a 	orr.w	r4, lr, sl
 8015ea6:	940a      	str	r4, [sp, #40]	; 0x28
 8015ea8:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8015eaa:	2cff      	cmp	r4, #255	; 0xff
 8015eac:	d021      	beq.n	8015ef2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8015eae:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8015eb0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8015eb4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8015eb6:	fb04 fb0b 	mul.w	fp, r4, fp
 8015eba:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8015ebc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015ec0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8015ec2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8015ec6:	fb04 fa0a 	mul.w	sl, r4, sl
 8015eca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015ece:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015ed2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8015ed6:	44de      	add	lr, fp
 8015ed8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015edc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015ee0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015ee4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015ee8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015eec:	ea4e 040a 	orr.w	r4, lr, sl
 8015ef0:	940f      	str	r4, [sp, #60]	; 0x3c
 8015ef2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015ef4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8015ef8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015efa:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8015efe:	fb08 fc0c 	mul.w	ip, r8, ip
 8015f02:	fb02 cc0e 	mla	ip, r2, lr, ip
 8015f06:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8015f0a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8015f0c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8015f10:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8015f14:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015f16:	fb09 cc0e 	mla	ip, r9, lr, ip
 8015f1a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8015f1e:	fb08 f80e 	mul.w	r8, r8, lr
 8015f22:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015f26:	fb02 8303 	mla	r3, r2, r3, r8
 8015f2a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015f2c:	f8b7 e000 	ldrh.w	lr, [r7]
 8015f30:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015f32:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8015f36:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015f38:	fb01 330a 	mla	r3, r1, sl, r3
 8015f3c:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8015f40:	fb09 3901 	mla	r9, r9, r1, r3
 8015f44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015f46:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8015f48:	4343      	muls	r3, r0
 8015f4a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015f4e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8015f52:	1c58      	adds	r0, r3, #1
 8015f54:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015f58:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8015f5c:	ea4c 0c09 	orr.w	ip, ip, r9
 8015f60:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8015f64:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8015f68:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8015f6c:	ea4f 232e 	mov.w	r3, lr, asr #8
 8015f70:	b2c0      	uxtb	r0, r0
 8015f72:	fb11 f102 	smulbb	r1, r1, r2
 8015f76:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8015f7a:	fb03 1300 	mla	r3, r3, r0, r1
 8015f7e:	b299      	uxth	r1, r3
 8015f80:	ea4f 02ee 	mov.w	r2, lr, asr #3
 8015f84:	f3cc 2307 	ubfx	r3, ip, #8, #8
 8015f88:	fb13 f304 	smulbb	r3, r3, r4
 8015f8c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015f90:	fb02 3200 	mla	r2, r2, r0, r3
 8015f94:	fa5f fc8c 	uxtb.w	ip, ip
 8015f98:	ea4f 03ce 	mov.w	r3, lr, lsl #3
 8015f9c:	b2db      	uxtb	r3, r3
 8015f9e:	fb1c fc04 	smulbb	ip, ip, r4
 8015fa2:	fb03 cc00 	mla	ip, r3, r0, ip
 8015fa6:	b292      	uxth	r2, r2
 8015fa8:	fa1f fc8c 	uxth.w	ip, ip
 8015fac:	1c4b      	adds	r3, r1, #1
 8015fae:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8015fb2:	f10c 0001 	add.w	r0, ip, #1
 8015fb6:	1c51      	adds	r1, r2, #1
 8015fb8:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8015fbc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015fc0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015fc4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015fc8:	0952      	lsrs	r2, r2, #5
 8015fca:	ea43 030c 	orr.w	r3, r3, ip
 8015fce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015fd2:	4313      	orrs	r3, r2
 8015fd4:	803b      	strh	r3, [r7, #0]
 8015fd6:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8015fd8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8015fda:	441a      	add	r2, r3
 8015fdc:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8015fde:	9231      	str	r2, [sp, #196]	; 0xc4
 8015fe0:	441d      	add	r5, r3
 8015fe2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8015fe4:	3b01      	subs	r3, #1
 8015fe6:	3702      	adds	r7, #2
 8015fe8:	931a      	str	r3, [sp, #104]	; 0x68
 8015fea:	e68e      	b.n	8015d0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8015fec:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8015fee:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8015ff0:	441c      	add	r4, r3
 8015ff2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8015ff4:	9431      	str	r4, [sp, #196]	; 0xc4
 8015ff6:	441d      	add	r5, r3
 8015ff8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015ffa:	3b01      	subs	r3, #1
 8015ffc:	9309      	str	r3, [sp, #36]	; 0x24
 8015ffe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016000:	3302      	adds	r3, #2
 8016002:	930c      	str	r3, [sp, #48]	; 0x30
 8016004:	e660      	b.n	8015cc8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016006:	d024      	beq.n	8016052 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8016008:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801600a:	9833      	ldr	r0, [sp, #204]	; 0xcc
 801600c:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801600e:	3b01      	subs	r3, #1
 8016010:	fb00 4003 	mla	r0, r0, r3, r4
 8016014:	1400      	asrs	r0, r0, #16
 8016016:	f53f ae75 	bmi.w	8015d04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801601a:	3901      	subs	r1, #1
 801601c:	4288      	cmp	r0, r1
 801601e:	f6bf ae71 	bge.w	8015d04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016022:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8016024:	fb01 5303 	mla	r3, r1, r3, r5
 8016028:	141b      	asrs	r3, r3, #16
 801602a:	f53f ae6b 	bmi.w	8015d04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801602e:	3a01      	subs	r2, #1
 8016030:	4293      	cmp	r3, r2
 8016032:	f6bf ae67 	bge.w	8015d04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016036:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801603a:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801603e:	f1bb 0f00 	cmp.w	fp, #0
 8016042:	dc70      	bgt.n	8016126 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4da>
 8016044:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016046:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801604a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801604c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016050:	930c      	str	r3, [sp, #48]	; 0x30
 8016052:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016054:	2b00      	cmp	r3, #0
 8016056:	f340 81be 	ble.w	80163d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78a>
 801605a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801605e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016062:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016066:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016068:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801606c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016070:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016074:	eef0 6a48 	vmov.f32	s13, s16
 8016078:	ee69 7a27 	vmul.f32	s15, s18, s15
 801607c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016080:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016084:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 8016088:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801608c:	eef0 6a68 	vmov.f32	s13, s17
 8016090:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016094:	ee18 2a10 	vmov	r2, s16
 8016098:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801609c:	fb92 f3f3 	sdiv	r3, r2, r3
 80160a0:	ee18 2a90 	vmov	r2, s17
 80160a4:	9333      	str	r3, [sp, #204]	; 0xcc
 80160a6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80160a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80160ac:	9334      	str	r3, [sp, #208]	; 0xd0
 80160ae:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80160b0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80160b2:	3b01      	subs	r3, #1
 80160b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80160b8:	9319      	str	r3, [sp, #100]	; 0x64
 80160ba:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80160bc:	bf08      	it	eq
 80160be:	4613      	moveq	r3, r2
 80160c0:	ee16 5a90 	vmov	r5, s13
 80160c4:	9309      	str	r3, [sp, #36]	; 0x24
 80160c6:	eef0 8a67 	vmov.f32	s17, s15
 80160ca:	eeb0 8a47 	vmov.f32	s16, s14
 80160ce:	e5ed      	b.n	8015cac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80160d0:	2900      	cmp	r1, #0
 80160d2:	f43f ae60 	beq.w	8015d96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80160d6:	f818 0000 	ldrb.w	r0, [r8, r0]
 80160da:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80160de:	900a      	str	r0, [sp, #40]	; 0x28
 80160e0:	0e00      	lsrs	r0, r0, #24
 80160e2:	9013      	str	r0, [sp, #76]	; 0x4c
 80160e4:	e657      	b.n	8015d96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80160e6:	f113 0801 	adds.w	r8, r3, #1
 80160ea:	f53f af74 	bmi.w	8015fd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80160ee:	4540      	cmp	r0, r8
 80160f0:	f6ff af71 	blt.w	8015fd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80160f4:	f11c 0801 	adds.w	r8, ip, #1
 80160f8:	f53f af6d 	bmi.w	8015fd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80160fc:	45c6      	cmp	lr, r8
 80160fe:	f6ff af6a 	blt.w	8015fd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8016102:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8016104:	9302      	str	r3, [sp, #8]
 8016106:	b200      	sxth	r0, r0
 8016108:	fa0f f38e 	sxth.w	r3, lr
 801610c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8016110:	e9cd c203 	strd	ip, r2, [sp, #12]
 8016114:	9301      	str	r3, [sp, #4]
 8016116:	9000      	str	r0, [sp, #0]
 8016118:	4633      	mov	r3, r6
 801611a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801611c:	981d      	ldr	r0, [sp, #116]	; 0x74
 801611e:	4639      	mov	r1, r7
 8016120:	f7ff fc2c 	bl	801597c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8016124:	e757      	b.n	8015fd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8016126:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8016128:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801612a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801612e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8016130:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016134:	1427      	asrs	r7, r4, #16
 8016136:	142b      	asrs	r3, r5, #16
 8016138:	fb01 7303 	mla	r3, r1, r3, r7
 801613c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801613e:	18e7      	adds	r7, r4, r3
 8016140:	5ce3      	ldrb	r3, [r4, r3]
 8016142:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016146:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801614a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801614e:	2a00      	cmp	r2, #0
 8016150:	f000 8137 	beq.w	80163c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x776>
 8016154:	f897 e001 	ldrb.w	lr, [r7, #1]
 8016158:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801615c:	9410      	str	r4, [sp, #64]	; 0x40
 801615e:	0e24      	lsrs	r4, r4, #24
 8016160:	9417      	str	r4, [sp, #92]	; 0x5c
 8016162:	b170      	cbz	r0, 8016182 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 8016164:	eb07 0e01 	add.w	lr, r7, r1
 8016168:	5c79      	ldrb	r1, [r7, r1]
 801616a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801616e:	910b      	str	r1, [sp, #44]	; 0x2c
 8016170:	0e09      	lsrs	r1, r1, #24
 8016172:	9114      	str	r1, [sp, #80]	; 0x50
 8016174:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8016178:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801617c:	9111      	str	r1, [sp, #68]	; 0x44
 801617e:	0e09      	lsrs	r1, r1, #24
 8016180:	9118      	str	r1, [sp, #96]	; 0x60
 8016182:	b292      	uxth	r2, r2
 8016184:	b280      	uxth	r0, r0
 8016186:	fb02 f800 	mul.w	r8, r2, r0
 801618a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801618e:	0112      	lsls	r2, r2, #4
 8016190:	eba2 0e08 	sub.w	lr, r2, r8
 8016194:	b280      	uxth	r0, r0
 8016196:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801619a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801619c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801619e:	fa1f fe8e 	uxth.w	lr, lr
 80161a2:	1a12      	subs	r2, r2, r0
 80161a4:	b292      	uxth	r2, r2
 80161a6:	fb0e f101 	mul.w	r1, lr, r1
 80161aa:	fb02 110c 	mla	r1, r2, ip, r1
 80161ae:	fb00 1104 	mla	r1, r0, r4, r1
 80161b2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80161b4:	fb08 1104 	mla	r1, r8, r4, r1
 80161b8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80161bc:	2900      	cmp	r1, #0
 80161be:	f000 80f5 	beq.w	80163ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 80161c2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80161c6:	d019      	beq.n	80161fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b0>
 80161c8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80161cc:	fb0c fa0a 	mul.w	sl, ip, sl
 80161d0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80161d4:	fb0c fc03 	mul.w	ip, ip, r3
 80161d8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80161dc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80161e0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80161e4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80161e8:	4453      	add	r3, sl
 80161ea:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80161ee:	0a1b      	lsrs	r3, r3, #8
 80161f0:	0a3f      	lsrs	r7, r7, #8
 80161f2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80161f6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80161fa:	433b      	orrs	r3, r7
 80161fc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80161fe:	2cff      	cmp	r4, #255	; 0xff
 8016200:	d020      	beq.n	8016244 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f8>
 8016202:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016204:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016208:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801620a:	4367      	muls	r7, r4
 801620c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801620e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016212:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016214:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016218:	fb04 fa0a 	mul.w	sl, r4, sl
 801621c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016220:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016224:	44bc      	add	ip, r7
 8016226:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801622a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801622e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016232:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016236:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801623a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801623e:	ea4c 040a 	orr.w	r4, ip, sl
 8016242:	9410      	str	r4, [sp, #64]	; 0x40
 8016244:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016246:	2cff      	cmp	r4, #255	; 0xff
 8016248:	d020      	beq.n	801628c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x640>
 801624a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801624c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016250:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016252:	4367      	muls	r7, r4
 8016254:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016256:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801625a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801625c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016260:	fb04 fa0a 	mul.w	sl, r4, sl
 8016264:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016268:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801626c:	44bc      	add	ip, r7
 801626e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016272:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016276:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801627a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801627e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016282:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016286:	ea4c 040a 	orr.w	r4, ip, sl
 801628a:	940b      	str	r4, [sp, #44]	; 0x2c
 801628c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801628e:	2cff      	cmp	r4, #255	; 0xff
 8016290:	d020      	beq.n	80162d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8016292:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016294:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016298:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801629a:	4367      	muls	r7, r4
 801629c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801629e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80162a2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80162a4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80162a8:	fb04 fa0a 	mul.w	sl, r4, sl
 80162ac:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80162b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80162b4:	44bc      	add	ip, r7
 80162b6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80162ba:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80162be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80162c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80162c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80162ca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80162ce:	ea4c 040a 	orr.w	r4, ip, sl
 80162d2:	9411      	str	r4, [sp, #68]	; 0x44
 80162d4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80162d6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80162da:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80162dc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80162e0:	fb0e f707 	mul.w	r7, lr, r7
 80162e4:	fb02 770c 	mla	r7, r2, ip, r7
 80162e8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80162ec:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80162ee:	fb00 770c 	mla	r7, r0, ip, r7
 80162f2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80162f6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80162f8:	fb08 770c 	mla	r7, r8, ip, r7
 80162fc:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8016300:	fb0e fe0c 	mul.w	lr, lr, ip
 8016304:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016308:	fb02 e303 	mla	r3, r2, r3, lr
 801630c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801630e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016310:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8016314:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016316:	fb00 330a 	mla	r3, r0, sl, r3
 801631a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801631e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8016322:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016324:	f8b9 0000 	ldrh.w	r0, [r9]
 8016328:	434b      	muls	r3, r1
 801632a:	0a3f      	lsrs	r7, r7, #8
 801632c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016330:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016334:	1c59      	adds	r1, r3, #1
 8016336:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801633a:	ea47 070c 	orr.w	r7, r7, ip
 801633e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8016342:	1202      	asrs	r2, r0, #8
 8016344:	0c3b      	lsrs	r3, r7, #16
 8016346:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801634a:	b2c9      	uxtb	r1, r1
 801634c:	fb13 f304 	smulbb	r3, r3, r4
 8016350:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016354:	fb02 3201 	mla	r2, r2, r1, r3
 8016358:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801635c:	10c3      	asrs	r3, r0, #3
 801635e:	b2ff      	uxtb	r7, r7
 8016360:	00c0      	lsls	r0, r0, #3
 8016362:	b292      	uxth	r2, r2
 8016364:	fb1c fc04 	smulbb	ip, ip, r4
 8016368:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801636c:	b2c0      	uxtb	r0, r0
 801636e:	fb17 f704 	smulbb	r7, r7, r4
 8016372:	fb03 c301 	mla	r3, r3, r1, ip
 8016376:	fb00 7001 	mla	r0, r0, r1, r7
 801637a:	f102 0c01 	add.w	ip, r2, #1
 801637e:	b280      	uxth	r0, r0
 8016380:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016384:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8016388:	1c42      	adds	r2, r0, #1
 801638a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801638e:	b29b      	uxth	r3, r3
 8016390:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8016394:	ea4c 0200 	orr.w	r2, ip, r0
 8016398:	f103 0c01 	add.w	ip, r3, #1
 801639c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80163a0:	095b      	lsrs	r3, r3, #5
 80163a2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80163a6:	431a      	orrs	r2, r3
 80163a8:	f8a9 2000 	strh.w	r2, [r9]
 80163ac:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80163ae:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80163b0:	441a      	add	r2, r3
 80163b2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80163b4:	9231      	str	r2, [sp, #196]	; 0xc4
 80163b6:	f109 0902 	add.w	r9, r9, #2
 80163ba:	441d      	add	r5, r3
 80163bc:	f10b 3bff 	add.w	fp, fp, #4294967295
 80163c0:	e63d      	b.n	801603e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80163c2:	2800      	cmp	r0, #0
 80163c4:	f43f aedd 	beq.w	8016182 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 80163c8:	5c79      	ldrb	r1, [r7, r1]
 80163ca:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80163ce:	910b      	str	r1, [sp, #44]	; 0x2c
 80163d0:	0e09      	lsrs	r1, r1, #24
 80163d2:	9114      	str	r1, [sp, #80]	; 0x50
 80163d4:	e6d5      	b.n	8016182 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 80163d6:	b01f      	add	sp, #124	; 0x7c
 80163d8:	ecbd 8b08 	vpop	{d8-d11}
 80163dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080163e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80163e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163e4:	880e      	ldrh	r6, [r1, #0]
 80163e6:	b085      	sub	sp, #20
 80163e8:	ea4f 2e26 	mov.w	lr, r6, asr #8
 80163ec:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 80163f0:	4691      	mov	r9, r2
 80163f2:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80163f6:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80163fa:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80163fe:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8016402:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8016406:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 801640a:	9200      	str	r2, [sp, #0]
 801640c:	00f6      	lsls	r6, r6, #3
 801640e:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 8016412:	9201      	str	r2, [sp, #4]
 8016414:	2c00      	cmp	r4, #0
 8016416:	b2f2      	uxtb	r2, r6
 8016418:	fb04 560c 	mla	r6, r4, ip, r5
 801641c:	9202      	str	r2, [sp, #8]
 801641e:	eb09 0e06 	add.w	lr, r9, r6
 8016422:	db3e      	blt.n	80164a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
 8016424:	45a0      	cmp	r8, r4
 8016426:	dd3c      	ble.n	80164a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
 8016428:	2d00      	cmp	r5, #0
 801642a:	db38      	blt.n	801649e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 801642c:	45ac      	cmp	ip, r5
 801642e:	dd36      	ble.n	801649e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8016430:	f819 2006 	ldrb.w	r2, [r9, r6]
 8016434:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8016438:	1c6e      	adds	r6, r5, #1
 801643a:	d435      	bmi.n	80164a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
 801643c:	45b4      	cmp	ip, r6
 801643e:	dd33      	ble.n	80164a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
 8016440:	b3a0      	cbz	r0, 80164ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8016442:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8016446:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 801644a:	3401      	adds	r4, #1
 801644c:	d432      	bmi.n	80164b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
 801644e:	45a0      	cmp	r8, r4
 8016450:	dd30      	ble.n	80164b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
 8016452:	b397      	cbz	r7, 80164ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8016454:	2d00      	cmp	r5, #0
 8016456:	db2b      	blt.n	80164b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8016458:	45ac      	cmp	ip, r5
 801645a:	dd29      	ble.n	80164b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 801645c:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8016460:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8016464:	3501      	adds	r5, #1
 8016466:	d42b      	bmi.n	80164c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
 8016468:	45ac      	cmp	ip, r5
 801646a:	dd29      	ble.n	80164c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
 801646c:	b350      	cbz	r0, 80164c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe4>
 801646e:	44f4      	add	ip, lr
 8016470:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8016474:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8016478:	280f      	cmp	r0, #15
 801647a:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801647e:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016482:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016486:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801648a:	d801      	bhi.n	8016490 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb0>
 801648c:	2f0f      	cmp	r7, #15
 801648e:	d91b      	bls.n	80164c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe8>
 8016490:	4b7d      	ldr	r3, [pc, #500]	; (8016688 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8016492:	4a7e      	ldr	r2, [pc, #504]	; (801668c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8016494:	487e      	ldr	r0, [pc, #504]	; (8016690 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8016496:	f240 210d 	movw	r1, #525	; 0x20d
 801649a:	f004 ffb7 	bl	801b40c <__assert_func>
 801649e:	2200      	movs	r2, #0
 80164a0:	e7ca      	b.n	8016438 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 80164a2:	2600      	movs	r6, #0
 80164a4:	4632      	mov	r2, r6
 80164a6:	e7d0      	b.n	801644a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 80164a8:	2600      	movs	r6, #0
 80164aa:	e7ce      	b.n	801644a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 80164ac:	4606      	mov	r6, r0
 80164ae:	e7cc      	b.n	801644a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 80164b0:	2400      	movs	r4, #0
 80164b2:	e7d7      	b.n	8016464 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x84>
 80164b4:	2300      	movs	r3, #0
 80164b6:	461c      	mov	r4, r3
 80164b8:	e7de      	b.n	8016478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 80164ba:	463b      	mov	r3, r7
 80164bc:	463c      	mov	r4, r7
 80164be:	e7db      	b.n	8016478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 80164c0:	2300      	movs	r3, #0
 80164c2:	e7d9      	b.n	8016478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 80164c4:	4603      	mov	r3, r0
 80164c6:	e7d7      	b.n	8016478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 80164c8:	b280      	uxth	r0, r0
 80164ca:	b2bf      	uxth	r7, r7
 80164cc:	fb00 fe07 	mul.w	lr, r0, r7
 80164d0:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80164d4:	0100      	lsls	r0, r0, #4
 80164d6:	eba0 0c0e 	sub.w	ip, r0, lr
 80164da:	b2bf      	uxth	r7, r7
 80164dc:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80164e0:	fa1f fc8c 	uxth.w	ip, ip
 80164e4:	1bed      	subs	r5, r5, r7
 80164e6:	b2ad      	uxth	r5, r5
 80164e8:	fb0c f00a 	mul.w	r0, ip, sl
 80164ec:	fb05 000b 	mla	r0, r5, fp, r0
 80164f0:	fb07 0009 	mla	r0, r7, r9, r0
 80164f4:	fb0e 0008 	mla	r0, lr, r8, r0
 80164f8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80164fc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016500:	9003      	str	r0, [sp, #12]
 8016502:	d018      	beq.n	8016536 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x156>
 8016504:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8016508:	fb0b f000 	mul.w	r0, fp, r0
 801650c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016510:	fb0b fb02 	mul.w	fp, fp, r2
 8016514:	0a02      	lsrs	r2, r0, #8
 8016516:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801651a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801651e:	4402      	add	r2, r0
 8016520:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8016524:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8016528:	0a12      	lsrs	r2, r2, #8
 801652a:	0a00      	lsrs	r0, r0, #8
 801652c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016530:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016534:	4302      	orrs	r2, r0
 8016536:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801653a:	d019      	beq.n	8016570 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x190>
 801653c:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8016540:	fb0a fb0b 	mul.w	fp, sl, fp
 8016544:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016548:	fb0a fa06 	mul.w	sl, sl, r6
 801654c:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8016550:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016554:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016558:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801655c:	445e      	add	r6, fp
 801655e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8016562:	0a36      	lsrs	r6, r6, #8
 8016564:	0a00      	lsrs	r0, r0, #8
 8016566:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801656a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801656e:	4306      	orrs	r6, r0
 8016570:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016574:	d019      	beq.n	80165aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1ca>
 8016576:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801657a:	fb09 fa0a 	mul.w	sl, r9, sl
 801657e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016582:	fb09 f904 	mul.w	r9, r9, r4
 8016586:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801658a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801658e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016592:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8016596:	4454      	add	r4, sl
 8016598:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801659c:	0a24      	lsrs	r4, r4, #8
 801659e:	0a00      	lsrs	r0, r0, #8
 80165a0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80165a4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80165a8:	4304      	orrs	r4, r0
 80165aa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80165ae:	d019      	beq.n	80165e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x204>
 80165b0:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80165b4:	fb08 f909 	mul.w	r9, r8, r9
 80165b8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80165bc:	fb08 f803 	mul.w	r8, r8, r3
 80165c0:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80165c4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80165c8:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80165cc:	f508 7080 	add.w	r0, r8, #256	; 0x100
 80165d0:	444b      	add	r3, r9
 80165d2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80165d6:	0a1b      	lsrs	r3, r3, #8
 80165d8:	0a00      	lsrs	r0, r0, #8
 80165da:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80165de:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80165e2:	4303      	orrs	r3, r0
 80165e4:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80165e8:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80165ec:	fb0c f808 	mul.w	r8, ip, r8
 80165f0:	fb05 8800 	mla	r8, r5, r0, r8
 80165f4:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 80165f8:	fb07 8800 	mla	r8, r7, r0, r8
 80165fc:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8016600:	fb0e 8000 	mla	r0, lr, r0, r8
 8016604:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016608:	0a00      	lsrs	r0, r0, #8
 801660a:	fb0c f606 	mul.w	r6, ip, r6
 801660e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016612:	fb05 6202 	mla	r2, r5, r2, r6
 8016616:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801661a:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801661e:	fb07 2700 	mla	r7, r7, r0, r2
 8016622:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8016626:	9b03      	ldr	r3, [sp, #12]
 8016628:	9c02      	ldr	r4, [sp, #8]
 801662a:	9d01      	ldr	r5, [sp, #4]
 801662c:	fb0e 7000 	mla	r0, lr, r0, r7
 8016630:	43da      	mvns	r2, r3
 8016632:	9b00      	ldr	r3, [sp, #0]
 8016634:	b2d2      	uxtb	r2, r2
 8016636:	0a00      	lsrs	r0, r0, #8
 8016638:	4353      	muls	r3, r2
 801663a:	4354      	muls	r4, r2
 801663c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016640:	ea48 0000 	orr.w	r0, r8, r0
 8016644:	4355      	muls	r5, r2
 8016646:	4622      	mov	r2, r4
 8016648:	1c5c      	adds	r4, r3, #1
 801664a:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 801664e:	0c03      	lsrs	r3, r0, #16
 8016650:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8016654:	4b0f      	ldr	r3, [pc, #60]	; (8016694 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b4>)
 8016656:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 801665a:	1c54      	adds	r4, r2, #1
 801665c:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8016660:	b2c2      	uxtb	r2, r0
 8016662:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8016666:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801666a:	1c6a      	adds	r2, r5, #1
 801666c:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8016670:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8016674:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8016678:	00c0      	lsls	r0, r0, #3
 801667a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801667e:	4318      	orrs	r0, r3
 8016680:	8008      	strh	r0, [r1, #0]
 8016682:	b005      	add	sp, #20
 8016684:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016688:	0801f307 	.word	0x0801f307
 801668c:	0801f8c5 	.word	0x0801f8c5
 8016690:	0801f3f0 	.word	0x0801f3f0
 8016694:	fffff800 	.word	0xfffff800

08016698 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801669c:	ed2d 8b08 	vpush	{d8-d11}
 80166a0:	b09b      	sub	sp, #108	; 0x6c
 80166a2:	eeb0 aa40 	vmov.f32	s20, s0
 80166a6:	9218      	str	r2, [sp, #96]	; 0x60
 80166a8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80166aa:	9116      	str	r1, [sp, #88]	; 0x58
 80166ac:	9307      	str	r3, [sp, #28]
 80166ae:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 80166b2:	9019      	str	r0, [sp, #100]	; 0x64
 80166b4:	6850      	ldr	r0, [r2, #4]
 80166b6:	6812      	ldr	r2, [r2, #0]
 80166b8:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 80166ba:	fb00 1303 	mla	r3, r0, r3, r1
 80166be:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80166c2:	930a      	str	r3, [sp, #40]	; 0x28
 80166c4:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80166c6:	681b      	ldr	r3, [r3, #0]
 80166c8:	930f      	str	r3, [sp, #60]	; 0x3c
 80166ca:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80166cc:	685e      	ldr	r6, [r3, #4]
 80166ce:	eef0 9a60 	vmov.f32	s19, s1
 80166d2:	eeb0 9a41 	vmov.f32	s18, s2
 80166d6:	eeb0 8a62 	vmov.f32	s16, s5
 80166da:	eef0 8a43 	vmov.f32	s17, s6
 80166de:	eef0 ba44 	vmov.f32	s23, s8
 80166e2:	eeb0 ba64 	vmov.f32	s22, s9
 80166e6:	eef0 aa45 	vmov.f32	s21, s10
 80166ea:	3604      	adds	r6, #4
 80166ec:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80166ee:	2b00      	cmp	r3, #0
 80166f0:	dc03      	bgt.n	80166fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80166f2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80166f4:	2b00      	cmp	r3, #0
 80166f6:	f340 8371 	ble.w	8016ddc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 80166fa:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80166fc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016700:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016704:	1e48      	subs	r0, r1, #1
 8016706:	1e57      	subs	r7, r2, #1
 8016708:	9b07      	ldr	r3, [sp, #28]
 801670a:	2b00      	cmp	r3, #0
 801670c:	f340 8189 	ble.w	8016a22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8016710:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016712:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8016716:	ea4f 4325 	mov.w	r3, r5, asr #16
 801671a:	d406      	bmi.n	801672a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801671c:	4584      	cmp	ip, r0
 801671e:	da04      	bge.n	801672a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016720:	2b00      	cmp	r3, #0
 8016722:	db02      	blt.n	801672a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016724:	42bb      	cmp	r3, r7
 8016726:	f2c0 817d 	blt.w	8016a24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801672a:	f11c 0c01 	adds.w	ip, ip, #1
 801672e:	f100 816b 	bmi.w	8016a08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8016732:	4561      	cmp	r1, ip
 8016734:	f2c0 8168 	blt.w	8016a08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8016738:	3301      	adds	r3, #1
 801673a:	f100 8165 	bmi.w	8016a08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801673e:	429a      	cmp	r2, r3
 8016740:	f2c0 8162 	blt.w	8016a08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8016744:	9b07      	ldr	r3, [sp, #28]
 8016746:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016748:	9317      	str	r3, [sp, #92]	; 0x5c
 801674a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801674c:	2b00      	cmp	r3, #0
 801674e:	f340 8187 	ble.w	8016a60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8016752:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016754:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016758:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801675a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801675e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016760:	141b      	asrs	r3, r3, #16
 8016762:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8016766:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801676a:	f100 81ca 	bmi.w	8016b02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801676e:	f101 38ff 	add.w	r8, r1, #4294967295
 8016772:	4543      	cmp	r3, r8
 8016774:	f280 81c5 	bge.w	8016b02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8016778:	f1bc 0f00 	cmp.w	ip, #0
 801677c:	f2c0 81c1 	blt.w	8016b02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8016780:	f10e 38ff 	add.w	r8, lr, #4294967295
 8016784:	45c4      	cmp	ip, r8
 8016786:	f280 81bc 	bge.w	8016b02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801678a:	b209      	sxth	r1, r1
 801678c:	fb0c 3301 	mla	r3, ip, r1, r3
 8016790:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016792:	eb04 0803 	add.w	r8, r4, r3
 8016796:	5ce3      	ldrb	r3, [r4, r3]
 8016798:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801679c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80167a0:	2a00      	cmp	r2, #0
 80167a2:	f000 81a3 	beq.w	8016aec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80167a6:	f898 c001 	ldrb.w	ip, [r8, #1]
 80167aa:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80167ae:	940b      	str	r4, [sp, #44]	; 0x2c
 80167b0:	0e24      	lsrs	r4, r4, #24
 80167b2:	9412      	str	r4, [sp, #72]	; 0x48
 80167b4:	b178      	cbz	r0, 80167d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80167b6:	eb08 0c01 	add.w	ip, r8, r1
 80167ba:	f818 1001 	ldrb.w	r1, [r8, r1]
 80167be:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80167c2:	9108      	str	r1, [sp, #32]
 80167c4:	0e09      	lsrs	r1, r1, #24
 80167c6:	9110      	str	r1, [sp, #64]	; 0x40
 80167c8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80167cc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80167d0:	910c      	str	r1, [sp, #48]	; 0x30
 80167d2:	0e09      	lsrs	r1, r1, #24
 80167d4:	9113      	str	r1, [sp, #76]	; 0x4c
 80167d6:	b292      	uxth	r2, r2
 80167d8:	b280      	uxth	r0, r0
 80167da:	fb02 f900 	mul.w	r9, r2, r0
 80167de:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80167e2:	0112      	lsls	r2, r2, #4
 80167e4:	eba2 0809 	sub.w	r8, r2, r9
 80167e8:	b280      	uxth	r0, r0
 80167ea:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80167ee:	9912      	ldr	r1, [sp, #72]	; 0x48
 80167f0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80167f2:	fa1f f888 	uxth.w	r8, r8
 80167f6:	1a12      	subs	r2, r2, r0
 80167f8:	b292      	uxth	r2, r2
 80167fa:	fb08 f101 	mul.w	r1, r8, r1
 80167fe:	fb02 110e 	mla	r1, r2, lr, r1
 8016802:	fb00 1104 	mla	r1, r0, r4, r1
 8016806:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016808:	fb09 1104 	mla	r1, r9, r4, r1
 801680c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016810:	2900      	cmp	r1, #0
 8016812:	f000 80ee 	beq.w	80169f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016816:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801681a:	d01b      	beq.n	8016854 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801681c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016820:	fb0e fa0a 	mul.w	sl, lr, sl
 8016824:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016828:	fb0e fe03 	mul.w	lr, lr, r3
 801682c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016830:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016834:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016838:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801683c:	4453      	add	r3, sl
 801683e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8016842:	0a1b      	lsrs	r3, r3, #8
 8016844:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016848:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801684c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016850:	ea43 030c 	orr.w	r3, r3, ip
 8016854:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016856:	2cff      	cmp	r4, #255	; 0xff
 8016858:	d021      	beq.n	801689e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801685a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801685c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016860:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016862:	fb04 fb0b 	mul.w	fp, r4, fp
 8016866:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016868:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801686c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801686e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016872:	fb04 fa0a 	mul.w	sl, r4, sl
 8016876:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801687a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801687e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016882:	44de      	add	lr, fp
 8016884:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016888:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801688c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016890:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016894:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016898:	ea4e 040a 	orr.w	r4, lr, sl
 801689c:	940b      	str	r4, [sp, #44]	; 0x2c
 801689e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80168a0:	2cff      	cmp	r4, #255	; 0xff
 80168a2:	d021      	beq.n	80168e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80168a4:	9c08      	ldr	r4, [sp, #32]
 80168a6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80168aa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80168ac:	fb04 fb0b 	mul.w	fp, r4, fp
 80168b0:	9c08      	ldr	r4, [sp, #32]
 80168b2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80168b6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80168b8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80168bc:	fb04 fa0a 	mul.w	sl, r4, sl
 80168c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80168c4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80168c8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80168cc:	44de      	add	lr, fp
 80168ce:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80168d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80168d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80168da:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80168de:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80168e2:	ea4e 040a 	orr.w	r4, lr, sl
 80168e6:	9408      	str	r4, [sp, #32]
 80168e8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80168ea:	2cff      	cmp	r4, #255	; 0xff
 80168ec:	d021      	beq.n	8016932 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80168ee:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80168f0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80168f4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80168f6:	fb04 fb0b 	mul.w	fp, r4, fp
 80168fa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80168fc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016900:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016902:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016906:	fb04 fa0a 	mul.w	sl, r4, sl
 801690a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801690e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016912:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016916:	44de      	add	lr, fp
 8016918:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801691c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016920:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016924:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016928:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801692c:	ea4e 040a 	orr.w	r4, lr, sl
 8016930:	940c      	str	r4, [sp, #48]	; 0x30
 8016932:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016934:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016938:	9c08      	ldr	r4, [sp, #32]
 801693a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801693e:	fb08 fc0c 	mul.w	ip, r8, ip
 8016942:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016946:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801694a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801694c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8016950:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016954:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016956:	fb09 cc0e 	mla	ip, r9, lr, ip
 801695a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801695e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016962:	fb08 f80e 	mul.w	r8, r8, lr
 8016966:	fb02 8303 	mla	r3, r2, r3, r8
 801696a:	9a08      	ldr	r2, [sp, #32]
 801696c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8016970:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016972:	fb00 330a 	mla	r3, r0, sl, r3
 8016976:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801697a:	fb09 3900 	mla	r9, r9, r0, r3
 801697e:	883b      	ldrh	r3, [r7, #0]
 8016980:	43c9      	mvns	r1, r1
 8016982:	1218      	asrs	r0, r3, #8
 8016984:	b2c9      	uxtb	r1, r1
 8016986:	10da      	asrs	r2, r3, #3
 8016988:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801698c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016990:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016994:	00db      	lsls	r3, r3, #3
 8016996:	4348      	muls	r0, r1
 8016998:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801699c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80169a0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80169a4:	b2db      	uxtb	r3, r3
 80169a6:	434b      	muls	r3, r1
 80169a8:	ea4c 0c09 	orr.w	ip, ip, r9
 80169ac:	434a      	muls	r2, r1
 80169ae:	1c41      	adds	r1, r0, #1
 80169b0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80169b4:	ea4f 401c 	mov.w	r0, ip, lsr #16
 80169b8:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 80169bc:	4960      	ldr	r1, [pc, #384]	; (8016b40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 80169be:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 80169c2:	1c59      	adds	r1, r3, #1
 80169c4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80169c8:	fa5f f38c 	uxtb.w	r3, ip
 80169cc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80169d0:	1c51      	adds	r1, r2, #1
 80169d2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80169d6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80169da:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 80169de:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80169e2:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 80169e6:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80169ea:	ea43 0c0c 	orr.w	ip, r3, ip
 80169ee:	f8a7 c000 	strh.w	ip, [r7]
 80169f2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80169f4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80169f6:	441a      	add	r2, r3
 80169f8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80169fa:	922d      	str	r2, [sp, #180]	; 0xb4
 80169fc:	441d      	add	r5, r3
 80169fe:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8016a00:	3b01      	subs	r3, #1
 8016a02:	3702      	adds	r7, #2
 8016a04:	9317      	str	r3, [sp, #92]	; 0x5c
 8016a06:	e6a0      	b.n	801674a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8016a08:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8016a0a:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016a0c:	441c      	add	r4, r3
 8016a0e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016a10:	942d      	str	r4, [sp, #180]	; 0xb4
 8016a12:	441d      	add	r5, r3
 8016a14:	9b07      	ldr	r3, [sp, #28]
 8016a16:	3b01      	subs	r3, #1
 8016a18:	9307      	str	r3, [sp, #28]
 8016a1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016a1c:	3302      	adds	r3, #2
 8016a1e:	930a      	str	r3, [sp, #40]	; 0x28
 8016a20:	e672      	b.n	8016708 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016a22:	d024      	beq.n	8016a6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8016a24:	9b07      	ldr	r3, [sp, #28]
 8016a26:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8016a28:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016a2a:	3b01      	subs	r3, #1
 8016a2c:	fb00 4003 	mla	r0, r0, r3, r4
 8016a30:	1400      	asrs	r0, r0, #16
 8016a32:	f53f ae87 	bmi.w	8016744 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016a36:	3901      	subs	r1, #1
 8016a38:	4288      	cmp	r0, r1
 8016a3a:	f6bf ae83 	bge.w	8016744 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016a3e:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8016a40:	fb01 5303 	mla	r3, r1, r3, r5
 8016a44:	141b      	asrs	r3, r3, #16
 8016a46:	f53f ae7d 	bmi.w	8016744 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016a4a:	3a01      	subs	r2, #1
 8016a4c:	4293      	cmp	r3, r2
 8016a4e:	f6bf ae79 	bge.w	8016744 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016a52:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8016a56:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8016a5a:	f1bb 0f00 	cmp.w	fp, #0
 8016a5e:	dc71      	bgt.n	8016b44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8016a60:	9b07      	ldr	r3, [sp, #28]
 8016a62:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016a66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016a68:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016a6c:	930a      	str	r3, [sp, #40]	; 0x28
 8016a6e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016a70:	2b00      	cmp	r3, #0
 8016a72:	f340 81b3 	ble.w	8016ddc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 8016a76:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016a7a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016a7e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016a82:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016a84:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016a88:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016a8c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016a90:	eef0 6a48 	vmov.f32	s13, s16
 8016a94:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016a98:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016a9c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016aa0:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8016aa4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016aa8:	eef0 6a68 	vmov.f32	s13, s17
 8016aac:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016ab0:	ee18 2a10 	vmov	r2, s16
 8016ab4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016ab8:	fb92 f3f3 	sdiv	r3, r2, r3
 8016abc:	ee18 2a90 	vmov	r2, s17
 8016ac0:	932f      	str	r3, [sp, #188]	; 0xbc
 8016ac2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016ac4:	fb92 f3f3 	sdiv	r3, r2, r3
 8016ac8:	9330      	str	r3, [sp, #192]	; 0xc0
 8016aca:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016acc:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8016ace:	3b01      	subs	r3, #1
 8016ad0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016ad4:	9316      	str	r3, [sp, #88]	; 0x58
 8016ad6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016ad8:	bf08      	it	eq
 8016ada:	4613      	moveq	r3, r2
 8016adc:	ee16 5a90 	vmov	r5, s13
 8016ae0:	9307      	str	r3, [sp, #28]
 8016ae2:	eef0 8a67 	vmov.f32	s17, s15
 8016ae6:	eeb0 8a47 	vmov.f32	s16, s14
 8016aea:	e5ff      	b.n	80166ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8016aec:	2800      	cmp	r0, #0
 8016aee:	f43f ae72 	beq.w	80167d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016af2:	f818 1001 	ldrb.w	r1, [r8, r1]
 8016af6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016afa:	9108      	str	r1, [sp, #32]
 8016afc:	0e09      	lsrs	r1, r1, #24
 8016afe:	9110      	str	r1, [sp, #64]	; 0x40
 8016b00:	e669      	b.n	80167d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016b02:	f113 0801 	adds.w	r8, r3, #1
 8016b06:	f53f af74 	bmi.w	80169f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016b0a:	4541      	cmp	r1, r8
 8016b0c:	f6ff af71 	blt.w	80169f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016b10:	f11c 0801 	adds.w	r8, ip, #1
 8016b14:	f53f af6d 	bmi.w	80169f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016b18:	45c6      	cmp	lr, r8
 8016b1a:	f6ff af6a 	blt.w	80169f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016b1e:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8016b22:	b209      	sxth	r1, r1
 8016b24:	fa0f f38e 	sxth.w	r3, lr
 8016b28:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8016b2c:	9301      	str	r3, [sp, #4]
 8016b2e:	9100      	str	r1, [sp, #0]
 8016b30:	4633      	mov	r3, r6
 8016b32:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016b34:	9819      	ldr	r0, [sp, #100]	; 0x64
 8016b36:	4639      	mov	r1, r7
 8016b38:	f7ff fc52 	bl	80163e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8016b3c:	e759      	b.n	80169f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016b3e:	bf00      	nop
 8016b40:	fffff800 	.word	0xfffff800
 8016b44:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016b46:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016b48:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016b4c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016b4e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016b52:	1427      	asrs	r7, r4, #16
 8016b54:	142b      	asrs	r3, r5, #16
 8016b56:	fb01 7303 	mla	r3, r1, r3, r7
 8016b5a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016b5c:	18e7      	adds	r7, r4, r3
 8016b5e:	5ce3      	ldrb	r3, [r4, r3]
 8016b60:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016b64:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016b68:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8016b6c:	2a00      	cmp	r2, #0
 8016b6e:	f000 812b 	beq.w	8016dc8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8016b72:	f897 e001 	ldrb.w	lr, [r7, #1]
 8016b76:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8016b7a:	940d      	str	r4, [sp, #52]	; 0x34
 8016b7c:	0e24      	lsrs	r4, r4, #24
 8016b7e:	9414      	str	r4, [sp, #80]	; 0x50
 8016b80:	b170      	cbz	r0, 8016ba0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8016b82:	eb07 0e01 	add.w	lr, r7, r1
 8016b86:	5c79      	ldrb	r1, [r7, r1]
 8016b88:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016b8c:	9109      	str	r1, [sp, #36]	; 0x24
 8016b8e:	0e09      	lsrs	r1, r1, #24
 8016b90:	9111      	str	r1, [sp, #68]	; 0x44
 8016b92:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8016b96:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016b9a:	910e      	str	r1, [sp, #56]	; 0x38
 8016b9c:	0e09      	lsrs	r1, r1, #24
 8016b9e:	9115      	str	r1, [sp, #84]	; 0x54
 8016ba0:	b292      	uxth	r2, r2
 8016ba2:	b280      	uxth	r0, r0
 8016ba4:	fb02 f800 	mul.w	r8, r2, r0
 8016ba8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8016bac:	0112      	lsls	r2, r2, #4
 8016bae:	eba2 0e08 	sub.w	lr, r2, r8
 8016bb2:	b280      	uxth	r0, r0
 8016bb4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8016bb8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016bba:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016bbc:	fa1f fe8e 	uxth.w	lr, lr
 8016bc0:	1a09      	subs	r1, r1, r0
 8016bc2:	b289      	uxth	r1, r1
 8016bc4:	fb0e f202 	mul.w	r2, lr, r2
 8016bc8:	fb01 220c 	mla	r2, r1, ip, r2
 8016bcc:	fb00 2204 	mla	r2, r0, r4, r2
 8016bd0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016bd2:	fb08 2204 	mla	r2, r8, r4, r2
 8016bd6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8016bda:	2a00      	cmp	r2, #0
 8016bdc:	f000 80e9 	beq.w	8016db2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71a>
 8016be0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016be4:	d019      	beq.n	8016c1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 8016be6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016bea:	fb0c fa0a 	mul.w	sl, ip, sl
 8016bee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016bf2:	fb0c fc03 	mul.w	ip, ip, r3
 8016bf6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016bfa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016bfe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016c02:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8016c06:	4453      	add	r3, sl
 8016c08:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8016c0c:	0a1b      	lsrs	r3, r3, #8
 8016c0e:	0a3f      	lsrs	r7, r7, #8
 8016c10:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016c14:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016c18:	433b      	orrs	r3, r7
 8016c1a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016c1c:	2cff      	cmp	r4, #255	; 0xff
 8016c1e:	d020      	beq.n	8016c62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 8016c20:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016c22:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016c26:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016c28:	4367      	muls	r7, r4
 8016c2a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016c2c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016c30:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016c32:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016c36:	fb04 fa0a 	mul.w	sl, r4, sl
 8016c3a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016c3e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016c42:	44bc      	add	ip, r7
 8016c44:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016c48:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016c4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016c50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016c54:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016c58:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016c5c:	ea4c 040a 	orr.w	r4, ip, sl
 8016c60:	940d      	str	r4, [sp, #52]	; 0x34
 8016c62:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016c64:	2cff      	cmp	r4, #255	; 0xff
 8016c66:	d020      	beq.n	8016caa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 8016c68:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8016c6a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016c6e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016c70:	4367      	muls	r7, r4
 8016c72:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8016c74:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016c78:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016c7a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016c7e:	fb04 fa0a 	mul.w	sl, r4, sl
 8016c82:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016c86:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016c8a:	44bc      	add	ip, r7
 8016c8c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016c90:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016c94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016c98:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016c9c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016ca0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016ca4:	ea4c 040a 	orr.w	r4, ip, sl
 8016ca8:	9409      	str	r4, [sp, #36]	; 0x24
 8016caa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016cac:	2cff      	cmp	r4, #255	; 0xff
 8016cae:	d020      	beq.n	8016cf2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 8016cb0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016cb2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016cb6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016cb8:	4367      	muls	r7, r4
 8016cba:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016cbc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016cc0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016cc2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016cc6:	fb04 fa0a 	mul.w	sl, r4, sl
 8016cca:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016cce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016cd2:	44bc      	add	ip, r7
 8016cd4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016cd8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016cdc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016ce0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016ce4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016ce8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016cec:	ea4c 040a 	orr.w	r4, ip, sl
 8016cf0:	940e      	str	r4, [sp, #56]	; 0x38
 8016cf2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016cf4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016cf8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8016cfa:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016cfe:	fb0e f707 	mul.w	r7, lr, r7
 8016d02:	fb01 770c 	mla	r7, r1, ip, r7
 8016d06:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016d0a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016d0c:	fb00 770c 	mla	r7, r0, ip, r7
 8016d10:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016d14:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016d16:	fb08 770c 	mla	r7, r8, ip, r7
 8016d1a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8016d1e:	fb0e fe0c 	mul.w	lr, lr, ip
 8016d22:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016d26:	fb01 e303 	mla	r3, r1, r3, lr
 8016d2a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8016d2c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8016d30:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016d32:	fb00 330a 	mla	r3, r0, sl, r3
 8016d36:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8016d3a:	fb08 3c0c 	mla	ip, r8, ip, r3
 8016d3e:	f8b9 3000 	ldrh.w	r3, [r9]
 8016d42:	43d2      	mvns	r2, r2
 8016d44:	1218      	asrs	r0, r3, #8
 8016d46:	b2d2      	uxtb	r2, r2
 8016d48:	0a3f      	lsrs	r7, r7, #8
 8016d4a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016d4e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016d52:	4350      	muls	r0, r2
 8016d54:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016d58:	10d9      	asrs	r1, r3, #3
 8016d5a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016d5e:	00db      	lsls	r3, r3, #3
 8016d60:	ea47 070c 	orr.w	r7, r7, ip
 8016d64:	b2db      	uxtb	r3, r3
 8016d66:	f100 0c01 	add.w	ip, r0, #1
 8016d6a:	4353      	muls	r3, r2
 8016d6c:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 8016d70:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016d74:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8016d78:	4351      	muls	r1, r2
 8016d7a:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 8016d7e:	4a1a      	ldr	r2, [pc, #104]	; (8016de8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 8016d80:	f103 0c01 	add.w	ip, r3, #1
 8016d84:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8016d88:	fa5f fc87 	uxtb.w	ip, r7
 8016d8c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8016d90:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8016d94:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8016d98:	1c4b      	adds	r3, r1, #1
 8016d9a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8016d9e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8016da2:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8016da6:	00ff      	lsls	r7, r7, #3
 8016da8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016dac:	4338      	orrs	r0, r7
 8016dae:	f8a9 0000 	strh.w	r0, [r9]
 8016db2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8016db4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016db6:	441a      	add	r2, r3
 8016db8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016dba:	922d      	str	r2, [sp, #180]	; 0xb4
 8016dbc:	f109 0902 	add.w	r9, r9, #2
 8016dc0:	441d      	add	r5, r3
 8016dc2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016dc6:	e648      	b.n	8016a5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8016dc8:	2800      	cmp	r0, #0
 8016dca:	f43f aee9 	beq.w	8016ba0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8016dce:	5c79      	ldrb	r1, [r7, r1]
 8016dd0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016dd4:	9109      	str	r1, [sp, #36]	; 0x24
 8016dd6:	0e09      	lsrs	r1, r1, #24
 8016dd8:	9111      	str	r1, [sp, #68]	; 0x44
 8016dda:	e6e1      	b.n	8016ba0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8016ddc:	b01b      	add	sp, #108	; 0x6c
 8016dde:	ecbd 8b08 	vpop	{d8-d11}
 8016de2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016de6:	bf00      	nop
 8016de8:	fffff800 	.word	0xfffff800

08016dec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8016dec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016df0:	b085      	sub	sp, #20
 8016df2:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8016df6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8016dfa:	9103      	str	r1, [sp, #12]
 8016dfc:	fb05 7106 	mla	r1, r5, r6, r7
 8016e00:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 8016e04:	2d00      	cmp	r5, #0
 8016e06:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8016e0a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8016e0e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8016e12:	9401      	str	r4, [sp, #4]
 8016e14:	eb03 0901 	add.w	r9, r3, r1
 8016e18:	f2c0 80c0 	blt.w	8016f9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8016e1c:	45a8      	cmp	r8, r5
 8016e1e:	f340 80bd 	ble.w	8016f9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8016e22:	2f00      	cmp	r7, #0
 8016e24:	f2c0 80b6 	blt.w	8016f94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8016e28:	42be      	cmp	r6, r7
 8016e2a:	f340 80b3 	ble.w	8016f94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8016e2e:	f813 c001 	ldrb.w	ip, [r3, r1]
 8016e32:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8016e36:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016e3a:	d019      	beq.n	8016e70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 8016e3c:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8016e40:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8016e44:	435a      	muls	r2, r3
 8016e46:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8016e4a:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8016e4e:	fb0c f403 	mul.w	r4, ip, r3
 8016e52:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8016e56:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016e5a:	441a      	add	r2, r3
 8016e5c:	f104 0320 	add.w	r3, r4, #32
 8016e60:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8016e64:	0a1b      	lsrs	r3, r3, #8
 8016e66:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8016e6a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016e6e:	4319      	orrs	r1, r3
 8016e70:	b289      	uxth	r1, r1
 8016e72:	1c7b      	adds	r3, r7, #1
 8016e74:	f100 8097 	bmi.w	8016fa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8016e78:	429e      	cmp	r6, r3
 8016e7a:	f340 8094 	ble.w	8016fa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8016e7e:	2800      	cmp	r0, #0
 8016e80:	f000 8094 	beq.w	8016fac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 8016e84:	f899 4001 	ldrb.w	r4, [r9, #1]
 8016e88:	9b01      	ldr	r3, [sp, #4]
 8016e8a:	2cff      	cmp	r4, #255	; 0xff
 8016e8c:	885b      	ldrh	r3, [r3, #2]
 8016e8e:	d01b      	beq.n	8016ec8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 8016e90:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8016e94:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016e98:	fb0a f202 	mul.w	r2, sl, r2
 8016e9c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016ea0:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8016ea4:	fb04 fa03 	mul.w	sl, r4, r3
 8016ea8:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8016eac:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016eb0:	441a      	add	r2, r3
 8016eb2:	f10a 0320 	add.w	r3, sl, #32
 8016eb6:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8016eba:	0a1b      	lsrs	r3, r3, #8
 8016ebc:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8016ec0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016ec4:	ea4b 0303 	orr.w	r3, fp, r3
 8016ec8:	b29b      	uxth	r3, r3
 8016eca:	3501      	adds	r5, #1
 8016ecc:	d474      	bmi.n	8016fb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8016ece:	45a8      	cmp	r8, r5
 8016ed0:	dd72      	ble.n	8016fb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8016ed2:	f1be 0f00 	cmp.w	lr, #0
 8016ed6:	f000 8120 	beq.w	801711a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 8016eda:	2f00      	cmp	r7, #0
 8016edc:	db69      	blt.n	8016fb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8016ede:	42be      	cmp	r6, r7
 8016ee0:	dd67      	ble.n	8016fb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8016ee2:	f819 5006 	ldrb.w	r5, [r9, r6]
 8016ee6:	9a01      	ldr	r2, [sp, #4]
 8016ee8:	2dff      	cmp	r5, #255	; 0xff
 8016eea:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8016eee:	d01c      	beq.n	8016f2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 8016ef0:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8016ef4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8016ef8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016efc:	fb05 fa0b 	mul.w	sl, r5, fp
 8016f00:	fb08 f802 	mul.w	r8, r8, r2
 8016f04:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8016f08:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8016f0c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016f10:	4490      	add	r8, r2
 8016f12:	f10a 0220 	add.w	r2, sl, #32
 8016f16:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8016f1a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016f1e:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8016f22:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016f26:	ea4b 0b0a 	orr.w	fp, fp, sl
 8016f2a:	fa1f fb8b 	uxth.w	fp, fp
 8016f2e:	3701      	adds	r7, #1
 8016f30:	d447      	bmi.n	8016fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8016f32:	42be      	cmp	r6, r7
 8016f34:	dd45      	ble.n	8016fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8016f36:	2800      	cmp	r0, #0
 8016f38:	d046      	beq.n	8016fc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 8016f3a:	3601      	adds	r6, #1
 8016f3c:	9a01      	ldr	r2, [sp, #4]
 8016f3e:	f819 7006 	ldrb.w	r7, [r9, r6]
 8016f42:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8016f46:	2fff      	cmp	r7, #255	; 0xff
 8016f48:	d01a      	beq.n	8016f80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 8016f4a:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8016f4e:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8016f52:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016f56:	fb07 f902 	mul.w	r9, r7, r2
 8016f5a:	fb08 f806 	mul.w	r8, r8, r6
 8016f5e:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8016f62:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8016f66:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016f6a:	44b0      	add	r8, r6
 8016f6c:	f109 0620 	add.w	r6, r9, #32
 8016f70:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8016f74:	0a36      	lsrs	r6, r6, #8
 8016f76:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8016f7a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016f7e:	4332      	orrs	r2, r6
 8016f80:	b292      	uxth	r2, r2
 8016f82:	280f      	cmp	r0, #15
 8016f84:	d922      	bls.n	8016fcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8016f86:	4b69      	ldr	r3, [pc, #420]	; (801712c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 8016f88:	4a69      	ldr	r2, [pc, #420]	; (8017130 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 8016f8a:	486a      	ldr	r0, [pc, #424]	; (8017134 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 8016f8c:	f240 210d 	movw	r1, #525	; 0x20d
 8016f90:	f004 fa3c 	bl	801b40c <__assert_func>
 8016f94:	f04f 0c00 	mov.w	ip, #0
 8016f98:	4661      	mov	r1, ip
 8016f9a:	e76a      	b.n	8016e72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 8016f9c:	2400      	movs	r4, #0
 8016f9e:	46a4      	mov	ip, r4
 8016fa0:	4623      	mov	r3, r4
 8016fa2:	4621      	mov	r1, r4
 8016fa4:	e791      	b.n	8016eca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8016fa6:	2400      	movs	r4, #0
 8016fa8:	4623      	mov	r3, r4
 8016faa:	e78e      	b.n	8016eca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8016fac:	4604      	mov	r4, r0
 8016fae:	4603      	mov	r3, r0
 8016fb0:	e78b      	b.n	8016eca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8016fb2:	2500      	movs	r5, #0
 8016fb4:	46ab      	mov	fp, r5
 8016fb6:	e7ba      	b.n	8016f2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 8016fb8:	2700      	movs	r7, #0
 8016fba:	463d      	mov	r5, r7
 8016fbc:	463a      	mov	r2, r7
 8016fbe:	46bb      	mov	fp, r7
 8016fc0:	e7df      	b.n	8016f82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8016fc2:	2700      	movs	r7, #0
 8016fc4:	463a      	mov	r2, r7
 8016fc6:	e7dc      	b.n	8016f82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8016fc8:	4607      	mov	r7, r0
 8016fca:	4602      	mov	r2, r0
 8016fcc:	f1be 0f0f 	cmp.w	lr, #15
 8016fd0:	d8d9      	bhi.n	8016f86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8016fd2:	b286      	uxth	r6, r0
 8016fd4:	fa1f f98e 	uxth.w	r9, lr
 8016fd8:	fb06 f809 	mul.w	r8, r6, r9
 8016fdc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8016fe0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8016fe4:	0136      	lsls	r6, r6, #4
 8016fe6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016fea:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016fee:	9601      	str	r6, [sp, #4]
 8016ff0:	ea4a 0101 	orr.w	r1, sl, r1
 8016ff4:	fa1f f689 	uxth.w	r6, r9
 8016ff8:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8016ffc:	fb10 f90e 	smulbb	r9, r0, lr
 8017000:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8017004:	9602      	str	r6, [sp, #8]
 8017006:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801700a:	460e      	mov	r6, r1
 801700c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017010:	f1ce 0110 	rsb	r1, lr, #16
 8017014:	1a09      	subs	r1, r1, r0
 8017016:	ea4a 0303 	orr.w	r3, sl, r3
 801701a:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801701e:	4343      	muls	r3, r0
 8017020:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8017024:	9801      	ldr	r0, [sp, #4]
 8017026:	fb01 3106 	mla	r1, r1, r6, r3
 801702a:	9e02      	ldr	r6, [sp, #8]
 801702c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8017030:	1b80      	subs	r0, r0, r6
 8017032:	9e01      	ldr	r6, [sp, #4]
 8017034:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017038:	eba6 0608 	sub.w	r6, r6, r8
 801703c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017040:	b2b6      	uxth	r6, r6
 8017042:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017046:	ea4a 0202 	orr.w	r2, sl, r2
 801704a:	b280      	uxth	r0, r0
 801704c:	4374      	muls	r4, r6
 801704e:	fb09 1302 	mla	r3, r9, r2, r1
 8017052:	fb0c 4400 	mla	r4, ip, r0, r4
 8017056:	9a03      	ldr	r2, [sp, #12]
 8017058:	9802      	ldr	r0, [sp, #8]
 801705a:	8811      	ldrh	r1, [r2, #0]
 801705c:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8017060:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8017064:	fb00 4505 	mla	r5, r0, r5, r4
 8017068:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801706c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8017070:	fb08 5707 	mla	r7, r8, r7, r5
 8017074:	ea4a 0b0b 	orr.w	fp, sl, fp
 8017078:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801707c:	b292      	uxth	r2, r2
 801707e:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8017082:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8017086:	4357      	muls	r7, r2
 8017088:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801708c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017090:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017094:	f107 0801 	add.w	r8, r7, #1
 8017098:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801709c:	ea43 0e0e 	orr.w	lr, r3, lr
 80170a0:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 80170a4:	fa1f f38e 	uxth.w	r3, lr
 80170a8:	1208      	asrs	r0, r1, #8
 80170aa:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80170ae:	b2ff      	uxtb	r7, r7
 80170b0:	121c      	asrs	r4, r3, #8
 80170b2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80170b6:	fb10 f007 	smulbb	r0, r0, r7
 80170ba:	10cd      	asrs	r5, r1, #3
 80170bc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80170c0:	00c9      	lsls	r1, r1, #3
 80170c2:	fb04 0402 	mla	r4, r4, r2, r0
 80170c6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80170ca:	10d8      	asrs	r0, r3, #3
 80170cc:	b2c9      	uxtb	r1, r1
 80170ce:	00db      	lsls	r3, r3, #3
 80170d0:	fb11 f107 	smulbb	r1, r1, r7
 80170d4:	fb15 f507 	smulbb	r5, r5, r7
 80170d8:	b2db      	uxtb	r3, r3
 80170da:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80170de:	fb00 5002 	mla	r0, r0, r2, r5
 80170e2:	fb03 1202 	mla	r2, r3, r2, r1
 80170e6:	b2a4      	uxth	r4, r4
 80170e8:	b292      	uxth	r2, r2
 80170ea:	1c63      	adds	r3, r4, #1
 80170ec:	1c51      	adds	r1, r2, #1
 80170ee:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80170f2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80170f6:	b280      	uxth	r0, r0
 80170f8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80170fc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017100:	4313      	orrs	r3, r2
 8017102:	1c42      	adds	r2, r0, #1
 8017104:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017108:	0940      	lsrs	r0, r0, #5
 801710a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801710e:	9a03      	ldr	r2, [sp, #12]
 8017110:	4303      	orrs	r3, r0
 8017112:	8013      	strh	r3, [r2, #0]
 8017114:	b005      	add	sp, #20
 8017116:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801711a:	280f      	cmp	r0, #15
 801711c:	f63f af33 	bhi.w	8016f86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8017120:	4677      	mov	r7, lr
 8017122:	4675      	mov	r5, lr
 8017124:	4672      	mov	r2, lr
 8017126:	46f3      	mov	fp, lr
 8017128:	e753      	b.n	8016fd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 801712a:	bf00      	nop
 801712c:	0801f307 	.word	0x0801f307
 8017130:	0801f8c5 	.word	0x0801f8c5
 8017134:	0801f3f0 	.word	0x0801f3f0

08017138 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017138:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801713c:	ed2d 8b08 	vpush	{d8-d11}
 8017140:	b097      	sub	sp, #92	; 0x5c
 8017142:	eeb0 aa40 	vmov.f32	s20, s0
 8017146:	9214      	str	r2, [sp, #80]	; 0x50
 8017148:	9308      	str	r3, [sp, #32]
 801714a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801714c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8017150:	9312      	str	r3, [sp, #72]	; 0x48
 8017152:	9111      	str	r1, [sp, #68]	; 0x44
 8017154:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8017158:	9015      	str	r0, [sp, #84]	; 0x54
 801715a:	6850      	ldr	r0, [r2, #4]
 801715c:	6812      	ldr	r2, [r2, #0]
 801715e:	fb00 1303 	mla	r3, r0, r3, r1
 8017162:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017166:	9309      	str	r3, [sp, #36]	; 0x24
 8017168:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801716a:	681b      	ldr	r3, [r3, #0]
 801716c:	930b      	str	r3, [sp, #44]	; 0x2c
 801716e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017170:	685b      	ldr	r3, [r3, #4]
 8017172:	930c      	str	r3, [sp, #48]	; 0x30
 8017174:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8017178:	930a      	str	r3, [sp, #40]	; 0x28
 801717a:	eef0 9a60 	vmov.f32	s19, s1
 801717e:	eeb0 9a41 	vmov.f32	s18, s2
 8017182:	eeb0 8a62 	vmov.f32	s16, s5
 8017186:	eef0 8a43 	vmov.f32	s17, s6
 801718a:	eef0 ba44 	vmov.f32	s23, s8
 801718e:	eeb0 ba64 	vmov.f32	s22, s9
 8017192:	eef0 aa45 	vmov.f32	s21, s10
 8017196:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017198:	2b00      	cmp	r3, #0
 801719a:	dc03      	bgt.n	80171a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801719c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801719e:	2b00      	cmp	r3, #0
 80171a0:	f340 83cb 	ble.w	801793a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 80171a4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80171a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80171aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80171ae:	1e48      	subs	r0, r1, #1
 80171b0:	1e55      	subs	r5, r2, #1
 80171b2:	9b08      	ldr	r3, [sp, #32]
 80171b4:	2b00      	cmp	r3, #0
 80171b6:	f340 81a3 	ble.w	8017500 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80171ba:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 80171bc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80171be:	1436      	asrs	r6, r6, #16
 80171c0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80171c4:	d406      	bmi.n	80171d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80171c6:	4286      	cmp	r6, r0
 80171c8:	da04      	bge.n	80171d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80171ca:	2b00      	cmp	r3, #0
 80171cc:	db02      	blt.n	80171d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80171ce:	42ab      	cmp	r3, r5
 80171d0:	f2c0 8197 	blt.w	8017502 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80171d4:	3601      	adds	r6, #1
 80171d6:	f100 8184 	bmi.w	80174e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80171da:	42b1      	cmp	r1, r6
 80171dc:	f2c0 8181 	blt.w	80174e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80171e0:	3301      	adds	r3, #1
 80171e2:	f100 817e 	bmi.w	80174e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80171e6:	429a      	cmp	r2, r3
 80171e8:	f2c0 817b 	blt.w	80174e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80171ec:	9b08      	ldr	r3, [sp, #32]
 80171ee:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80171f0:	9313      	str	r3, [sp, #76]	; 0x4c
 80171f2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80171f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80171f8:	2b00      	cmp	r3, #0
 80171fa:	f340 81a4 	ble.w	8017546 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80171fe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017200:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8017202:	1418      	asrs	r0, r3, #16
 8017204:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017206:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801720a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801720c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017210:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017212:	142d      	asrs	r5, r5, #16
 8017214:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8017218:	f100 81f8 	bmi.w	801760c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801721c:	f102 3eff 	add.w	lr, r2, #4294967295
 8017220:	4575      	cmp	r5, lr
 8017222:	f280 81f3 	bge.w	801760c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017226:	2800      	cmp	r0, #0
 8017228:	f2c0 81f0 	blt.w	801760c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801722c:	f103 3eff 	add.w	lr, r3, #4294967295
 8017230:	4570      	cmp	r0, lr
 8017232:	f280 81eb 	bge.w	801760c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017236:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017238:	b212      	sxth	r2, r2
 801723a:	fb00 5002 	mla	r0, r0, r2, r5
 801723e:	fa1f fe81 	uxth.w	lr, r1
 8017242:	eb03 0a00 	add.w	sl, r3, r0
 8017246:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801724a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801724e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017252:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8017256:	b29b      	uxth	r3, r3
 8017258:	f1bc 0f00 	cmp.w	ip, #0
 801725c:	f000 81b9 	beq.w	80175d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8017260:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017264:	940d      	str	r4, [sp, #52]	; 0x34
 8017266:	eb0a 0b02 	add.w	fp, sl, r2
 801726a:	fa1f fa8c 	uxth.w	sl, ip
 801726e:	fb0a fe0e 	mul.w	lr, sl, lr
 8017272:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017276:	fa1f fa8a 	uxth.w	sl, sl
 801727a:	eba5 050e 	sub.w	r5, r5, lr
 801727e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017282:	940e      	str	r4, [sp, #56]	; 0x38
 8017284:	eba3 030a 	sub.w	r3, r3, sl
 8017288:	b2ad      	uxth	r5, r5
 801728a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801728c:	b29b      	uxth	r3, r3
 801728e:	fb08 f505 	mul.w	r5, r8, r5
 8017292:	fb09 5303 	mla	r3, r9, r3, r5
 8017296:	fb0a 3304 	mla	r3, sl, r4, r3
 801729a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801729c:	fb0e 3304 	mla	r3, lr, r4, r3
 80172a0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80172a4:	2b00      	cmp	r3, #0
 80172a6:	f000 810f 	beq.w	80174c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80172aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80172ac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80172b0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80172b4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80172b8:	f000 8190 	beq.w	80175dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 80172bc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80172c0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80172c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80172c8:	fb09 f000 	mul.w	r0, r9, r0
 80172cc:	fb0a fe0e 	mul.w	lr, sl, lr
 80172d0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80172d4:	f100 0b20 	add.w	fp, r0, #32
 80172d8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80172dc:	44ce      	add	lr, r9
 80172de:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80172e2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80172e6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80172ea:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80172ee:	ea4e 0909 	orr.w	r9, lr, r9
 80172f2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80172f6:	8868      	ldrh	r0, [r5, #2]
 80172f8:	d019      	beq.n	801732e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80172fa:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80172fe:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017302:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017306:	fb08 f800 	mul.w	r8, r8, r0
 801730a:	fb0a fe0e 	mul.w	lr, sl, lr
 801730e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8017312:	f108 0b20 	add.w	fp, r8, #32
 8017316:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801731a:	4486      	add	lr, r0
 801731c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8017320:	0a00      	lsrs	r0, r0, #8
 8017322:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017326:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801732a:	ea4e 0000 	orr.w	r0, lr, r0
 801732e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8017332:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8017336:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801733a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801733e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017342:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017346:	ea4e 0909 	orr.w	r9, lr, r9
 801734a:	ea4a 0000 	orr.w	r0, sl, r0
 801734e:	f1bc 0f00 	cmp.w	ip, #0
 8017352:	f000 8145 	beq.w	80175e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8017356:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801735a:	3a01      	subs	r2, #1
 801735c:	0052      	lsls	r2, r2, #1
 801735e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017360:	3202      	adds	r2, #2
 8017362:	2cff      	cmp	r4, #255	; 0xff
 8017364:	eb05 0e02 	add.w	lr, r5, r2
 8017368:	5aaa      	ldrh	r2, [r5, r2]
 801736a:	d018      	beq.n	801739e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801736c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8017370:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017374:	fb04 fa02 	mul.w	sl, r4, r2
 8017378:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801737c:	fb08 f805 	mul.w	r8, r8, r5
 8017380:	f10a 0520 	add.w	r5, sl, #32
 8017384:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8017388:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801738c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017390:	4442      	add	r2, r8
 8017392:	0a2d      	lsrs	r5, r5, #8
 8017394:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8017398:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801739c:	432a      	orrs	r2, r5
 801739e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80173a0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80173a4:	2cff      	cmp	r4, #255	; 0xff
 80173a6:	d01a      	beq.n	80173de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80173a8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80173ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80173b0:	fb04 fa05 	mul.w	sl, r4, r5
 80173b4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80173b8:	fb08 f80e 	mul.w	r8, r8, lr
 80173bc:	f10a 0e20 	add.w	lr, sl, #32
 80173c0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80173c4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80173c8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80173cc:	4445      	add	r5, r8
 80173ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80173d2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80173d6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80173da:	ea45 050e 	orr.w	r5, r5, lr
 80173de:	fb1c fe01 	smulbb	lr, ip, r1
 80173e2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80173e6:	f1cc 0810 	rsb	r8, ip, #16
 80173ea:	eba8 0801 	sub.w	r8, r8, r1
 80173ee:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80173f2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80173f6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80173fa:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80173fe:	4341      	muls	r1, r0
 8017400:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017404:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017408:	ea4a 0202 	orr.w	r2, sl, r2
 801740c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8017410:	fb09 1108 	mla	r1, r9, r8, r1
 8017414:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017418:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801741c:	fb0c 1102 	mla	r1, ip, r2, r1
 8017420:	ea4b 0505 	orr.w	r5, fp, r5
 8017424:	fb0e 1e05 	mla	lr, lr, r5, r1
 8017428:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801742c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017430:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017434:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017438:	ea42 0e0e 	orr.w	lr, r2, lr
 801743c:	fa1f f28e 	uxth.w	r2, lr
 8017440:	2bff      	cmp	r3, #255	; 0xff
 8017442:	d103      	bne.n	801744c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8017444:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017446:	29ff      	cmp	r1, #255	; 0xff
 8017448:	f000 80de 	beq.w	8017608 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 801744c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801744e:	8838      	ldrh	r0, [r7, #0]
 8017450:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017452:	434b      	muls	r3, r1
 8017454:	f103 0c01 	add.w	ip, r3, #1
 8017458:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801745c:	ea6f 2c23 	mvn.w	ip, r3, asr #8
 8017460:	1205      	asrs	r5, r0, #8
 8017462:	fa5f fc8c 	uxtb.w	ip, ip
 8017466:	1213      	asrs	r3, r2, #8
 8017468:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801746c:	fb15 f50c 	smulbb	r5, r5, ip
 8017470:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017474:	fb03 5301 	mla	r3, r3, r1, r5
 8017478:	b29d      	uxth	r5, r3
 801747a:	10c3      	asrs	r3, r0, #3
 801747c:	00c0      	lsls	r0, r0, #3
 801747e:	10d1      	asrs	r1, r2, #3
 8017480:	b2c0      	uxtb	r0, r0
 8017482:	00d2      	lsls	r2, r2, #3
 8017484:	fb10 f00c 	smulbb	r0, r0, ip
 8017488:	b2d2      	uxtb	r2, r2
 801748a:	fb02 0204 	mla	r2, r2, r4, r0
 801748e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017492:	fb13 f30c 	smulbb	r3, r3, ip
 8017496:	b292      	uxth	r2, r2
 8017498:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801749c:	fb01 3104 	mla	r1, r1, r4, r3
 80174a0:	1c50      	adds	r0, r2, #1
 80174a2:	1c6b      	adds	r3, r5, #1
 80174a4:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 80174a8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80174ac:	b289      	uxth	r1, r1
 80174ae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80174b2:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80174b6:	4313      	orrs	r3, r2
 80174b8:	1c4a      	adds	r2, r1, #1
 80174ba:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80174be:	0949      	lsrs	r1, r1, #5
 80174c0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80174c4:	430b      	orrs	r3, r1
 80174c6:	803b      	strh	r3, [r7, #0]
 80174c8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80174ca:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80174cc:	4413      	add	r3, r2
 80174ce:	9329      	str	r3, [sp, #164]	; 0xa4
 80174d0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80174d2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80174d4:	441a      	add	r2, r3
 80174d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80174d8:	922a      	str	r2, [sp, #168]	; 0xa8
 80174da:	3b01      	subs	r3, #1
 80174dc:	3702      	adds	r7, #2
 80174de:	9313      	str	r3, [sp, #76]	; 0x4c
 80174e0:	e689      	b.n	80171f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80174e2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80174e4:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 80174e6:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 80174e8:	4433      	add	r3, r6
 80174ea:	9329      	str	r3, [sp, #164]	; 0xa4
 80174ec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80174ee:	441c      	add	r4, r3
 80174f0:	9b08      	ldr	r3, [sp, #32]
 80174f2:	942a      	str	r4, [sp, #168]	; 0xa8
 80174f4:	3b01      	subs	r3, #1
 80174f6:	9308      	str	r3, [sp, #32]
 80174f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80174fa:	3302      	adds	r3, #2
 80174fc:	9309      	str	r3, [sp, #36]	; 0x24
 80174fe:	e658      	b.n	80171b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017500:	d028      	beq.n	8017554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8017502:	9b08      	ldr	r3, [sp, #32]
 8017504:	982b      	ldr	r0, [sp, #172]	; 0xac
 8017506:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8017508:	3b01      	subs	r3, #1
 801750a:	fb00 5003 	mla	r0, r0, r3, r5
 801750e:	1400      	asrs	r0, r0, #16
 8017510:	f53f ae6c 	bmi.w	80171ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017514:	3901      	subs	r1, #1
 8017516:	4288      	cmp	r0, r1
 8017518:	f6bf ae68 	bge.w	80171ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801751c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801751e:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8017520:	fb01 0303 	mla	r3, r1, r3, r0
 8017524:	141b      	asrs	r3, r3, #16
 8017526:	f53f ae61 	bmi.w	80171ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801752a:	3a01      	subs	r2, #1
 801752c:	4293      	cmp	r3, r2
 801752e:	f6bf ae5d 	bge.w	80171ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017532:	9b08      	ldr	r3, [sp, #32]
 8017534:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8017538:	9313      	str	r3, [sp, #76]	; 0x4c
 801753a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801753e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017540:	2b00      	cmp	r3, #0
 8017542:	f300 8082 	bgt.w	801764a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8017546:	9b08      	ldr	r3, [sp, #32]
 8017548:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801754c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801754e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017552:	9309      	str	r3, [sp, #36]	; 0x24
 8017554:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017556:	2b00      	cmp	r3, #0
 8017558:	f340 81ef 	ble.w	801793a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 801755c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017560:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017564:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017568:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801756a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801756e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017572:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017576:	eef0 6a48 	vmov.f32	s13, s16
 801757a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801757e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017582:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017586:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801758a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801758e:	eef0 6a68 	vmov.f32	s13, s17
 8017592:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017596:	ee18 2a10 	vmov	r2, s16
 801759a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801759e:	fb92 f3f3 	sdiv	r3, r2, r3
 80175a2:	ee18 2a90 	vmov	r2, s17
 80175a6:	932b      	str	r3, [sp, #172]	; 0xac
 80175a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80175aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80175ae:	932c      	str	r3, [sp, #176]	; 0xb0
 80175b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80175b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80175b4:	3b01      	subs	r3, #1
 80175b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80175ba:	9311      	str	r3, [sp, #68]	; 0x44
 80175bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80175be:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 80175c2:	bf08      	it	eq
 80175c4:	4613      	moveq	r3, r2
 80175c6:	9308      	str	r3, [sp, #32]
 80175c8:	eef0 8a67 	vmov.f32	s17, s15
 80175cc:	eeb0 8a47 	vmov.f32	s16, s14
 80175d0:	e5e1      	b.n	8017196 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80175d2:	fb08 f505 	mul.w	r5, r8, r5
 80175d6:	fb09 5303 	mla	r3, r9, r3, r5
 80175da:	e661      	b.n	80172a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 80175dc:	4681      	mov	r9, r0
 80175de:	e688      	b.n	80172f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80175e0:	f1c1 0210 	rsb	r2, r1, #16
 80175e4:	4341      	muls	r1, r0
 80175e6:	fb09 1902 	mla	r9, r9, r2, r1
 80175ea:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80175ee:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80175f2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80175f6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80175fa:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80175fe:	ea42 0909 	orr.w	r9, r2, r9
 8017602:	fa1f f289 	uxth.w	r2, r9
 8017606:	e71b      	b.n	8017440 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8017608:	803a      	strh	r2, [r7, #0]
 801760a:	e75d      	b.n	80174c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801760c:	f115 0e01 	adds.w	lr, r5, #1
 8017610:	f53f af5a 	bmi.w	80174c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017614:	4572      	cmp	r2, lr
 8017616:	f6ff af57 	blt.w	80174c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801761a:	f110 0e01 	adds.w	lr, r0, #1
 801761e:	f53f af53 	bmi.w	80174c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017622:	4573      	cmp	r3, lr
 8017624:	f6ff af50 	blt.w	80174c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017628:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801762a:	9502      	str	r5, [sp, #8]
 801762c:	b21b      	sxth	r3, r3
 801762e:	b212      	sxth	r2, r2
 8017630:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8017634:	9301      	str	r3, [sp, #4]
 8017636:	9200      	str	r2, [sp, #0]
 8017638:	e9cd c405 	strd	ip, r4, [sp, #20]
 801763c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8017640:	4639      	mov	r1, r7
 8017642:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017644:	f7ff fbd2 	bl	8016dec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8017648:	e73e      	b.n	80174c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801764a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801764c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017650:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017652:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8017656:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017658:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801765c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801765e:	141f      	asrs	r7, r3, #16
 8017660:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017662:	141b      	asrs	r3, r3, #16
 8017664:	fb01 3707 	mla	r7, r1, r7, r3
 8017668:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801766a:	fa1f fc82 	uxth.w	ip, r2
 801766e:	eb03 0a07 	add.w	sl, r3, r7
 8017672:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8017676:	f813 9007 	ldrb.w	r9, [r3, r7]
 801767a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801767e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8017682:	b29b      	uxth	r3, r3
 8017684:	2d00      	cmp	r5, #0
 8017686:	f000 813d 	beq.w	8017904 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 801768a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801768e:	940f      	str	r4, [sp, #60]	; 0x3c
 8017690:	eb0a 0b01 	add.w	fp, sl, r1
 8017694:	fa1f fa85 	uxth.w	sl, r5
 8017698:	fb0a fc0c 	mul.w	ip, sl, ip
 801769c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80176a0:	fa1f fa8a 	uxth.w	sl, sl
 80176a4:	eba0 000c 	sub.w	r0, r0, ip
 80176a8:	eba3 030a 	sub.w	r3, r3, sl
 80176ac:	b280      	uxth	r0, r0
 80176ae:	fb08 f000 	mul.w	r0, r8, r0
 80176b2:	b29b      	uxth	r3, r3
 80176b4:	fb09 0303 	mla	r3, r9, r3, r0
 80176b8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80176ba:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80176be:	9410      	str	r4, [sp, #64]	; 0x40
 80176c0:	fb0a 3300 	mla	r3, sl, r0, r3
 80176c4:	fb0c 3304 	mla	r3, ip, r4, r3
 80176c8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80176cc:	2b00      	cmp	r3, #0
 80176ce:	f000 810b 	beq.w	80178e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 80176d2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80176d4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80176d6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80176da:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80176de:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80176e2:	f000 8114 	beq.w	801790e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 80176e6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80176ea:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80176ee:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80176f2:	fb09 f707 	mul.w	r7, r9, r7
 80176f6:	fb0a fc0c 	mul.w	ip, sl, ip
 80176fa:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80176fe:	f107 0b20 	add.w	fp, r7, #32
 8017702:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017706:	44cc      	add	ip, r9
 8017708:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801770c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017710:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017714:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017718:	ea4c 0909 	orr.w	r9, ip, r9
 801771c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017720:	8847      	ldrh	r7, [r0, #2]
 8017722:	d019      	beq.n	8017758 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8017724:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017728:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801772c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017730:	fb08 f807 	mul.w	r8, r8, r7
 8017734:	fb0a fc0c 	mul.w	ip, sl, ip
 8017738:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801773c:	f108 0b20 	add.w	fp, r8, #32
 8017740:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017744:	44bc      	add	ip, r7
 8017746:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801774a:	0a3f      	lsrs	r7, r7, #8
 801774c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017750:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017754:	ea4c 0707 	orr.w	r7, ip, r7
 8017758:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801775c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8017760:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017764:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017768:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801776c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8017770:	ea4c 0909 	orr.w	r9, ip, r9
 8017774:	ea4a 0707 	orr.w	r7, sl, r7
 8017778:	2d00      	cmp	r5, #0
 801777a:	f000 80ca 	beq.w	8017912 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 801777e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8017782:	3901      	subs	r1, #1
 8017784:	0049      	lsls	r1, r1, #1
 8017786:	3102      	adds	r1, #2
 8017788:	eb00 0c01 	add.w	ip, r0, r1
 801778c:	5a41      	ldrh	r1, [r0, r1]
 801778e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017790:	28ff      	cmp	r0, #255	; 0xff
 8017792:	d019      	beq.n	80177c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8017794:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017796:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801779a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801779e:	fb04 fa01 	mul.w	sl, r4, r1
 80177a2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80177a6:	fb08 f800 	mul.w	r8, r8, r0
 80177aa:	f10a 0020 	add.w	r0, sl, #32
 80177ae:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80177b2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80177b6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80177ba:	4441      	add	r1, r8
 80177bc:	0a00      	lsrs	r0, r0, #8
 80177be:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80177c2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80177c6:	4301      	orrs	r1, r0
 80177c8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80177ca:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80177ce:	2cff      	cmp	r4, #255	; 0xff
 80177d0:	d01a      	beq.n	8017808 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 80177d2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80177d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80177da:	fb04 fa00 	mul.w	sl, r4, r0
 80177de:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80177e2:	fb08 f80c 	mul.w	r8, r8, ip
 80177e6:	f10a 0c20 	add.w	ip, sl, #32
 80177ea:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80177ee:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80177f2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80177f6:	4440      	add	r0, r8
 80177f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80177fc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8017800:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017804:	ea40 000c 	orr.w	r0, r0, ip
 8017808:	fb15 fc02 	smulbb	ip, r5, r2
 801780c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8017810:	f1c5 0810 	rsb	r8, r5, #16
 8017814:	eba8 0802 	sub.w	r8, r8, r2
 8017818:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801781c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8017820:	437a      	muls	r2, r7
 8017822:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8017826:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801782a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801782e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017832:	fb09 2208 	mla	r2, r9, r8, r2
 8017836:	ea4a 0101 	orr.w	r1, sl, r1
 801783a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801783e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017842:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017846:	fb05 2201 	mla	r2, r5, r1, r2
 801784a:	ea4b 0000 	orr.w	r0, fp, r0
 801784e:	fb0c 2200 	mla	r2, ip, r0, r2
 8017852:	0d57      	lsrs	r7, r2, #21
 8017854:	0952      	lsrs	r2, r2, #5
 8017856:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801785a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801785e:	433a      	orrs	r2, r7
 8017860:	2bff      	cmp	r3, #255	; 0xff
 8017862:	b292      	uxth	r2, r2
 8017864:	d102      	bne.n	801786c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8017866:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017868:	29ff      	cmp	r1, #255	; 0xff
 801786a:	d063      	beq.n	8017934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 801786c:	980a      	ldr	r0, [sp, #40]	; 0x28
 801786e:	f8be 1000 	ldrh.w	r1, [lr]
 8017872:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017874:	4343      	muls	r3, r0
 8017876:	1c58      	adds	r0, r3, #1
 8017878:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801787c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017880:	1208      	asrs	r0, r1, #8
 8017882:	b2db      	uxtb	r3, r3
 8017884:	1215      	asrs	r5, r2, #8
 8017886:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801788a:	fb10 f003 	smulbb	r0, r0, r3
 801788e:	10cf      	asrs	r7, r1, #3
 8017890:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017894:	00c9      	lsls	r1, r1, #3
 8017896:	fb05 0504 	mla	r5, r5, r4, r0
 801789a:	b2c9      	uxtb	r1, r1
 801789c:	10d0      	asrs	r0, r2, #3
 801789e:	00d2      	lsls	r2, r2, #3
 80178a0:	fb11 f103 	smulbb	r1, r1, r3
 80178a4:	b2d2      	uxtb	r2, r2
 80178a6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80178aa:	fb02 1204 	mla	r2, r2, r4, r1
 80178ae:	fb17 f703 	smulbb	r7, r7, r3
 80178b2:	b2ad      	uxth	r5, r5
 80178b4:	b292      	uxth	r2, r2
 80178b6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80178ba:	fb00 7004 	mla	r0, r0, r4, r7
 80178be:	1c6b      	adds	r3, r5, #1
 80178c0:	1c57      	adds	r7, r2, #1
 80178c2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80178c6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80178ca:	b280      	uxth	r0, r0
 80178cc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80178d0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80178d4:	433d      	orrs	r5, r7
 80178d6:	1c47      	adds	r7, r0, #1
 80178d8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80178dc:	097f      	lsrs	r7, r7, #5
 80178de:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80178e2:	433d      	orrs	r5, r7
 80178e4:	f8ae 5000 	strh.w	r5, [lr]
 80178e8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80178ea:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80178ec:	4413      	add	r3, r2
 80178ee:	9329      	str	r3, [sp, #164]	; 0xa4
 80178f0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80178f2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80178f4:	441a      	add	r2, r3
 80178f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80178f8:	922a      	str	r2, [sp, #168]	; 0xa8
 80178fa:	3b01      	subs	r3, #1
 80178fc:	f10e 0e02 	add.w	lr, lr, #2
 8017900:	9313      	str	r3, [sp, #76]	; 0x4c
 8017902:	e61c      	b.n	801753e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8017904:	fb08 f000 	mul.w	r0, r8, r0
 8017908:	fb09 0303 	mla	r3, r9, r3, r0
 801790c:	e6dc      	b.n	80176c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 801790e:	46b9      	mov	r9, r7
 8017910:	e704      	b.n	801771c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8017912:	f1c2 0110 	rsb	r1, r2, #16
 8017916:	437a      	muls	r2, r7
 8017918:	fb09 2901 	mla	r9, r9, r1, r2
 801791c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017920:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017924:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017928:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801792c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017930:	4302      	orrs	r2, r0
 8017932:	e795      	b.n	8017860 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8017934:	f8ae 2000 	strh.w	r2, [lr]
 8017938:	e7d6      	b.n	80178e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 801793a:	b017      	add	sp, #92	; 0x5c
 801793c:	ecbd 8b08 	vpop	{d8-d11}
 8017940:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017944 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8017944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017948:	b085      	sub	sp, #20
 801794a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801794e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8017952:	9103      	str	r1, [sp, #12]
 8017954:	fb05 7106 	mla	r1, r5, r6, r7
 8017958:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 801795c:	2d00      	cmp	r5, #0
 801795e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8017962:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8017966:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801796a:	9401      	str	r4, [sp, #4]
 801796c:	eb02 0901 	add.w	r9, r2, r1
 8017970:	f2c0 80c0 	blt.w	8017af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8017974:	45a8      	cmp	r8, r5
 8017976:	f340 80bd 	ble.w	8017af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801797a:	2f00      	cmp	r7, #0
 801797c:	f2c0 80b6 	blt.w	8017aec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8017980:	42be      	cmp	r6, r7
 8017982:	f340 80b3 	ble.w	8017aec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8017986:	f812 c001 	ldrb.w	ip, [r2, r1]
 801798a:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 801798e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017992:	d019      	beq.n	80179c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8017994:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8017998:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801799c:	435a      	muls	r2, r3
 801799e:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 80179a2:	f64f 011f 	movw	r1, #63519	; 0xf81f
 80179a6:	fb0c f403 	mul.w	r4, ip, r3
 80179aa:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 80179ae:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80179b2:	441a      	add	r2, r3
 80179b4:	f104 0320 	add.w	r3, r4, #32
 80179b8:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80179bc:	0a1b      	lsrs	r3, r3, #8
 80179be:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 80179c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80179c6:	4319      	orrs	r1, r3
 80179c8:	b289      	uxth	r1, r1
 80179ca:	1c7b      	adds	r3, r7, #1
 80179cc:	f100 8097 	bmi.w	8017afe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 80179d0:	429e      	cmp	r6, r3
 80179d2:	f340 8094 	ble.w	8017afe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 80179d6:	2800      	cmp	r0, #0
 80179d8:	f000 8094 	beq.w	8017b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 80179dc:	f899 4001 	ldrb.w	r4, [r9, #1]
 80179e0:	9b01      	ldr	r3, [sp, #4]
 80179e2:	2cff      	cmp	r4, #255	; 0xff
 80179e4:	885b      	ldrh	r3, [r3, #2]
 80179e6:	d01b      	beq.n	8017a20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 80179e8:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80179ec:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80179f0:	fb0a f202 	mul.w	r2, sl, r2
 80179f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80179f8:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80179fc:	fb04 fa03 	mul.w	sl, r4, r3
 8017a00:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8017a04:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017a08:	441a      	add	r2, r3
 8017a0a:	f10a 0320 	add.w	r3, sl, #32
 8017a0e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8017a12:	0a1b      	lsrs	r3, r3, #8
 8017a14:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8017a18:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017a1c:	ea4b 0303 	orr.w	r3, fp, r3
 8017a20:	b29b      	uxth	r3, r3
 8017a22:	3501      	adds	r5, #1
 8017a24:	d474      	bmi.n	8017b10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8017a26:	45a8      	cmp	r8, r5
 8017a28:	dd72      	ble.n	8017b10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8017a2a:	f1be 0f00 	cmp.w	lr, #0
 8017a2e:	f000 8111 	beq.w	8017c54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x310>
 8017a32:	2f00      	cmp	r7, #0
 8017a34:	db69      	blt.n	8017b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8017a36:	42be      	cmp	r6, r7
 8017a38:	dd67      	ble.n	8017b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8017a3a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8017a3e:	9a01      	ldr	r2, [sp, #4]
 8017a40:	2dff      	cmp	r5, #255	; 0xff
 8017a42:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8017a46:	d01c      	beq.n	8017a82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 8017a48:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8017a4c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8017a50:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017a54:	fb05 fa0b 	mul.w	sl, r5, fp
 8017a58:	fb08 f802 	mul.w	r8, r8, r2
 8017a5c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017a60:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8017a64:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017a68:	4490      	add	r8, r2
 8017a6a:	f10a 0220 	add.w	r2, sl, #32
 8017a6e:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8017a72:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017a76:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8017a7a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017a7e:	ea4b 0b0a 	orr.w	fp, fp, sl
 8017a82:	fa1f fb8b 	uxth.w	fp, fp
 8017a86:	3701      	adds	r7, #1
 8017a88:	d447      	bmi.n	8017b1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8017a8a:	42be      	cmp	r6, r7
 8017a8c:	dd45      	ble.n	8017b1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8017a8e:	2800      	cmp	r0, #0
 8017a90:	d046      	beq.n	8017b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8017a92:	3601      	adds	r6, #1
 8017a94:	9a01      	ldr	r2, [sp, #4]
 8017a96:	f819 7006 	ldrb.w	r7, [r9, r6]
 8017a9a:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8017a9e:	2fff      	cmp	r7, #255	; 0xff
 8017aa0:	d01a      	beq.n	8017ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 8017aa2:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8017aa6:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8017aaa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017aae:	fb07 f902 	mul.w	r9, r7, r2
 8017ab2:	fb08 f806 	mul.w	r8, r8, r6
 8017ab6:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8017aba:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8017abe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017ac2:	44b0      	add	r8, r6
 8017ac4:	f109 0620 	add.w	r6, r9, #32
 8017ac8:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8017acc:	0a36      	lsrs	r6, r6, #8
 8017ace:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8017ad2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017ad6:	4332      	orrs	r2, r6
 8017ad8:	b292      	uxth	r2, r2
 8017ada:	280f      	cmp	r0, #15
 8017adc:	d922      	bls.n	8017b24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8017ade:	4b61      	ldr	r3, [pc, #388]	; (8017c64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8017ae0:	4a61      	ldr	r2, [pc, #388]	; (8017c68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 8017ae2:	4862      	ldr	r0, [pc, #392]	; (8017c6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8017ae4:	f240 210d 	movw	r1, #525	; 0x20d
 8017ae8:	f003 fc90 	bl	801b40c <__assert_func>
 8017aec:	f04f 0c00 	mov.w	ip, #0
 8017af0:	4661      	mov	r1, ip
 8017af2:	e76a      	b.n	80179ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8017af4:	2400      	movs	r4, #0
 8017af6:	46a4      	mov	ip, r4
 8017af8:	4623      	mov	r3, r4
 8017afa:	4621      	mov	r1, r4
 8017afc:	e791      	b.n	8017a22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8017afe:	2400      	movs	r4, #0
 8017b00:	4623      	mov	r3, r4
 8017b02:	e78e      	b.n	8017a22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8017b04:	4604      	mov	r4, r0
 8017b06:	4603      	mov	r3, r0
 8017b08:	e78b      	b.n	8017a22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8017b0a:	2500      	movs	r5, #0
 8017b0c:	46ab      	mov	fp, r5
 8017b0e:	e7ba      	b.n	8017a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8017b10:	2700      	movs	r7, #0
 8017b12:	463d      	mov	r5, r7
 8017b14:	463a      	mov	r2, r7
 8017b16:	46bb      	mov	fp, r7
 8017b18:	e7df      	b.n	8017ada <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8017b1a:	2700      	movs	r7, #0
 8017b1c:	463a      	mov	r2, r7
 8017b1e:	e7dc      	b.n	8017ada <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8017b20:	4607      	mov	r7, r0
 8017b22:	4602      	mov	r2, r0
 8017b24:	f1be 0f0f 	cmp.w	lr, #15
 8017b28:	d8d9      	bhi.n	8017ade <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8017b2a:	b286      	uxth	r6, r0
 8017b2c:	fa1f f98e 	uxth.w	r9, lr
 8017b30:	fb06 f809 	mul.w	r8, r6, r9
 8017b34:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017b38:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8017b3c:	0136      	lsls	r6, r6, #4
 8017b3e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017b42:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017b46:	9601      	str	r6, [sp, #4]
 8017b48:	ea4a 0101 	orr.w	r1, sl, r1
 8017b4c:	fa1f f689 	uxth.w	r6, r9
 8017b50:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8017b54:	fb10 f90e 	smulbb	r9, r0, lr
 8017b58:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8017b5c:	9602      	str	r6, [sp, #8]
 8017b5e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017b62:	460e      	mov	r6, r1
 8017b64:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017b68:	f1ce 0110 	rsb	r1, lr, #16
 8017b6c:	1a09      	subs	r1, r1, r0
 8017b6e:	ea4a 0303 	orr.w	r3, sl, r3
 8017b72:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8017b76:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017b7a:	4343      	muls	r3, r0
 8017b7c:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8017b80:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017b84:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017b88:	fb01 3106 	mla	r1, r1, r6, r3
 8017b8c:	ea4a 0202 	orr.w	r2, sl, r2
 8017b90:	fb09 1302 	mla	r3, r9, r2, r1
 8017b94:	9901      	ldr	r1, [sp, #4]
 8017b96:	9802      	ldr	r0, [sp, #8]
 8017b98:	9a03      	ldr	r2, [sp, #12]
 8017b9a:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8017b9e:	1a09      	subs	r1, r1, r0
 8017ba0:	9801      	ldr	r0, [sp, #4]
 8017ba2:	8812      	ldrh	r2, [r2, #0]
 8017ba4:	eba0 0608 	sub.w	r6, r0, r8
 8017ba8:	b2b6      	uxth	r6, r6
 8017baa:	b289      	uxth	r1, r1
 8017bac:	4374      	muls	r4, r6
 8017bae:	fb0c 4401 	mla	r4, ip, r1, r4
 8017bb2:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8017bb6:	9902      	ldr	r1, [sp, #8]
 8017bb8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017bbc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8017bc0:	fb01 4505 	mla	r5, r1, r5, r4
 8017bc4:	ea4a 0b0b 	orr.w	fp, sl, fp
 8017bc8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8017bcc:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8017bd0:	fb08 5707 	mla	r7, r8, r7, r5
 8017bd4:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8017bd8:	1211      	asrs	r1, r2, #8
 8017bda:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017bde:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8017be2:	b2ff      	uxtb	r7, r7
 8017be4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017be8:	10d0      	asrs	r0, r2, #3
 8017bea:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017bee:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017bf2:	00d2      	lsls	r2, r2, #3
 8017bf4:	4379      	muls	r1, r7
 8017bf6:	ea43 0e0e 	orr.w	lr, r3, lr
 8017bfa:	b2d2      	uxtb	r2, r2
 8017bfc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017c00:	fa1f f38e 	uxth.w	r3, lr
 8017c04:	4378      	muls	r0, r7
 8017c06:	4357      	muls	r7, r2
 8017c08:	1c4a      	adds	r2, r1, #1
 8017c0a:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8017c0e:	1219      	asrs	r1, r3, #8
 8017c10:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017c14:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8017c18:	4a15      	ldr	r2, [pc, #84]	; (8017c70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x32c>)
 8017c1a:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017c1e:	1c42      	adds	r2, r0, #1
 8017c20:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017c24:	10da      	asrs	r2, r3, #3
 8017c26:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017c2a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8017c2e:	00d2      	lsls	r2, r2, #3
 8017c30:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017c34:	430a      	orrs	r2, r1
 8017c36:	00db      	lsls	r3, r3, #3
 8017c38:	1c79      	adds	r1, r7, #1
 8017c3a:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8017c3e:	b2db      	uxtb	r3, r3
 8017c40:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8017c44:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8017c48:	4313      	orrs	r3, r2
 8017c4a:	9a03      	ldr	r2, [sp, #12]
 8017c4c:	8013      	strh	r3, [r2, #0]
 8017c4e:	b005      	add	sp, #20
 8017c50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c54:	280f      	cmp	r0, #15
 8017c56:	f63f af42 	bhi.w	8017ade <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8017c5a:	4677      	mov	r7, lr
 8017c5c:	4675      	mov	r5, lr
 8017c5e:	4672      	mov	r2, lr
 8017c60:	46f3      	mov	fp, lr
 8017c62:	e762      	b.n	8017b2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 8017c64:	0801f307 	.word	0x0801f307
 8017c68:	0801f8c5 	.word	0x0801f8c5
 8017c6c:	0801f3f0 	.word	0x0801f3f0
 8017c70:	fffff800 	.word	0xfffff800

08017c74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017c74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c78:	ed2d 8b08 	vpush	{d8-d11}
 8017c7c:	b093      	sub	sp, #76	; 0x4c
 8017c7e:	eeb0 aa40 	vmov.f32	s20, s0
 8017c82:	9210      	str	r2, [sp, #64]	; 0x40
 8017c84:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017c86:	910e      	str	r1, [sp, #56]	; 0x38
 8017c88:	9306      	str	r3, [sp, #24]
 8017c8a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8017c8e:	9011      	str	r0, [sp, #68]	; 0x44
 8017c90:	6850      	ldr	r0, [r2, #4]
 8017c92:	6812      	ldr	r2, [r2, #0]
 8017c94:	fb00 1303 	mla	r3, r0, r3, r1
 8017c98:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017c9c:	9307      	str	r3, [sp, #28]
 8017c9e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017ca0:	681b      	ldr	r3, [r3, #0]
 8017ca2:	9308      	str	r3, [sp, #32]
 8017ca4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017ca6:	685b      	ldr	r3, [r3, #4]
 8017ca8:	9309      	str	r3, [sp, #36]	; 0x24
 8017caa:	eef0 9a60 	vmov.f32	s19, s1
 8017cae:	eeb0 9a41 	vmov.f32	s18, s2
 8017cb2:	eeb0 8a62 	vmov.f32	s16, s5
 8017cb6:	eef0 8a43 	vmov.f32	s17, s6
 8017cba:	eef0 ba44 	vmov.f32	s23, s8
 8017cbe:	eeb0 ba64 	vmov.f32	s22, s9
 8017cc2:	eef0 aa45 	vmov.f32	s21, s10
 8017cc6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017cc8:	2b00      	cmp	r3, #0
 8017cca:	dc03      	bgt.n	8017cd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017ccc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017cce:	2b00      	cmp	r3, #0
 8017cd0:	f340 83b6 	ble.w	8018440 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8017cd4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017cd6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017cda:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017cde:	1e48      	subs	r0, r1, #1
 8017ce0:	1e55      	subs	r5, r2, #1
 8017ce2:	9b06      	ldr	r3, [sp, #24]
 8017ce4:	2b00      	cmp	r3, #0
 8017ce6:	f340 8199 	ble.w	801801c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 8017cea:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8017cec:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017cee:	1436      	asrs	r6, r6, #16
 8017cf0:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017cf4:	d406      	bmi.n	8017d04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017cf6:	4286      	cmp	r6, r0
 8017cf8:	da04      	bge.n	8017d04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017cfa:	2b00      	cmp	r3, #0
 8017cfc:	db02      	blt.n	8017d04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017cfe:	42ab      	cmp	r3, r5
 8017d00:	f2c0 818d 	blt.w	801801e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8017d04:	3601      	adds	r6, #1
 8017d06:	f100 817a 	bmi.w	8017ffe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017d0a:	42b1      	cmp	r1, r6
 8017d0c:	f2c0 8177 	blt.w	8017ffe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017d10:	3301      	adds	r3, #1
 8017d12:	f100 8174 	bmi.w	8017ffe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017d16:	429a      	cmp	r2, r3
 8017d18:	f2c0 8171 	blt.w	8017ffe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017d1c:	9b06      	ldr	r3, [sp, #24]
 8017d1e:	9f07      	ldr	r7, [sp, #28]
 8017d20:	930f      	str	r3, [sp, #60]	; 0x3c
 8017d22:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017d26:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017d28:	2b00      	cmp	r3, #0
 8017d2a:	f340 819a 	ble.w	8018062 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 8017d2e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017d30:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8017d32:	1418      	asrs	r0, r3, #16
 8017d34:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8017d36:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8017d3a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017d3c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017d40:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017d42:	142d      	asrs	r5, r5, #16
 8017d44:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8017d48:	f100 81ee 	bmi.w	8018128 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8017d4c:	f102 3eff 	add.w	lr, r2, #4294967295
 8017d50:	4575      	cmp	r5, lr
 8017d52:	f280 81e9 	bge.w	8018128 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8017d56:	2800      	cmp	r0, #0
 8017d58:	f2c0 81e6 	blt.w	8018128 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8017d5c:	f103 3eff 	add.w	lr, r3, #4294967295
 8017d60:	4570      	cmp	r0, lr
 8017d62:	f280 81e1 	bge.w	8018128 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8017d66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017d68:	b212      	sxth	r2, r2
 8017d6a:	fb00 5002 	mla	r0, r0, r2, r5
 8017d6e:	fa1f fe81 	uxth.w	lr, r1
 8017d72:	eb03 0a00 	add.w	sl, r3, r0
 8017d76:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8017d7a:	f813 9000 	ldrb.w	r9, [r3, r0]
 8017d7e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017d82:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8017d86:	b29b      	uxth	r3, r3
 8017d88:	f1bc 0f00 	cmp.w	ip, #0
 8017d8c:	f000 81af 	beq.w	80180ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8017d90:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017d94:	940a      	str	r4, [sp, #40]	; 0x28
 8017d96:	eb0a 0b02 	add.w	fp, sl, r2
 8017d9a:	fa1f fa8c 	uxth.w	sl, ip
 8017d9e:	fb0a fe0e 	mul.w	lr, sl, lr
 8017da2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017da6:	fa1f fa8a 	uxth.w	sl, sl
 8017daa:	eba5 050e 	sub.w	r5, r5, lr
 8017dae:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017db2:	940b      	str	r4, [sp, #44]	; 0x2c
 8017db4:	eba3 030a 	sub.w	r3, r3, sl
 8017db8:	b2ad      	uxth	r5, r5
 8017dba:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017dbc:	b29b      	uxth	r3, r3
 8017dbe:	fb08 f505 	mul.w	r5, r8, r5
 8017dc2:	fb09 5303 	mla	r3, r9, r3, r5
 8017dc6:	fb0a 3304 	mla	r3, sl, r4, r3
 8017dca:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017dcc:	fb0e 3304 	mla	r3, lr, r4, r3
 8017dd0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017dd4:	2b00      	cmp	r3, #0
 8017dd6:	f000 8105 	beq.w	8017fe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017dda:	9c08      	ldr	r4, [sp, #32]
 8017ddc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017de0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8017de4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8017de8:	f000 8186 	beq.w	80180f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8017dec:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017df0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017df4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017df8:	fb09 f000 	mul.w	r0, r9, r0
 8017dfc:	fb0a fe0e 	mul.w	lr, sl, lr
 8017e00:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8017e04:	f100 0b20 	add.w	fp, r0, #32
 8017e08:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017e0c:	44ce      	add	lr, r9
 8017e0e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8017e12:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017e16:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017e1a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017e1e:	ea4e 0909 	orr.w	r9, lr, r9
 8017e22:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017e26:	8868      	ldrh	r0, [r5, #2]
 8017e28:	d019      	beq.n	8017e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8017e2a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017e2e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017e32:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017e36:	fb08 f800 	mul.w	r8, r8, r0
 8017e3a:	fb0a fe0e 	mul.w	lr, sl, lr
 8017e3e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8017e42:	f108 0b20 	add.w	fp, r8, #32
 8017e46:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017e4a:	4486      	add	lr, r0
 8017e4c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8017e50:	0a00      	lsrs	r0, r0, #8
 8017e52:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017e56:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017e5a:	ea4e 0000 	orr.w	r0, lr, r0
 8017e5e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8017e62:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8017e66:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017e6a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017e6e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017e72:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017e76:	ea4e 0909 	orr.w	r9, lr, r9
 8017e7a:	ea4a 0000 	orr.w	r0, sl, r0
 8017e7e:	f1bc 0f00 	cmp.w	ip, #0
 8017e82:	f000 813b 	beq.w	80180fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 8017e86:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8017e8a:	3a01      	subs	r2, #1
 8017e8c:	0052      	lsls	r2, r2, #1
 8017e8e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017e90:	3202      	adds	r2, #2
 8017e92:	2cff      	cmp	r4, #255	; 0xff
 8017e94:	eb05 0e02 	add.w	lr, r5, r2
 8017e98:	5aaa      	ldrh	r2, [r5, r2]
 8017e9a:	d018      	beq.n	8017ece <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8017e9c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8017ea0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017ea4:	fb04 fa02 	mul.w	sl, r4, r2
 8017ea8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017eac:	fb08 f805 	mul.w	r8, r8, r5
 8017eb0:	f10a 0520 	add.w	r5, sl, #32
 8017eb4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8017eb8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8017ebc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017ec0:	4442      	add	r2, r8
 8017ec2:	0a2d      	lsrs	r5, r5, #8
 8017ec4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8017ec8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017ecc:	432a      	orrs	r2, r5
 8017ece:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017ed0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8017ed4:	2cff      	cmp	r4, #255	; 0xff
 8017ed6:	d01a      	beq.n	8017f0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017ed8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8017edc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017ee0:	fb04 fa05 	mul.w	sl, r4, r5
 8017ee4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017ee8:	fb08 f80e 	mul.w	r8, r8, lr
 8017eec:	f10a 0e20 	add.w	lr, sl, #32
 8017ef0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8017ef4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8017ef8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017efc:	4445      	add	r5, r8
 8017efe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017f02:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8017f06:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8017f0a:	ea45 050e 	orr.w	r5, r5, lr
 8017f0e:	fb1c fe01 	smulbb	lr, ip, r1
 8017f12:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8017f16:	f1cc 0810 	rsb	r8, ip, #16
 8017f1a:	eba8 0801 	sub.w	r8, r8, r1
 8017f1e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017f22:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8017f26:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8017f2a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8017f2e:	4341      	muls	r1, r0
 8017f30:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017f34:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017f38:	ea4a 0202 	orr.w	r2, sl, r2
 8017f3c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8017f40:	fb09 1108 	mla	r1, r9, r8, r1
 8017f44:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017f48:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8017f4c:	fb0c 1102 	mla	r1, ip, r2, r1
 8017f50:	ea4b 0505 	orr.w	r5, fp, r5
 8017f54:	fb0e 1e05 	mla	lr, lr, r5, r1
 8017f58:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8017f5c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017f60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017f64:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017f68:	ea42 0e0e 	orr.w	lr, r2, lr
 8017f6c:	fa1f f28e 	uxth.w	r2, lr
 8017f70:	2bff      	cmp	r3, #255	; 0xff
 8017f72:	f000 80d7 	beq.w	8018124 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8017f76:	f8b7 c000 	ldrh.w	ip, [r7]
 8017f7a:	43db      	mvns	r3, r3
 8017f7c:	ea4f 202c 	mov.w	r0, ip, asr #8
 8017f80:	fa5f fe83 	uxtb.w	lr, r3
 8017f84:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017f88:	fb00 f00e 	mul.w	r0, r0, lr
 8017f8c:	1c41      	adds	r1, r0, #1
 8017f8e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8017f92:	1210      	asrs	r0, r2, #8
 8017f94:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8017f98:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017f9c:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8017fa0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017fa4:	496f      	ldr	r1, [pc, #444]	; (8018164 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>)
 8017fa6:	fb05 f50e 	mul.w	r5, r5, lr
 8017faa:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8017fae:	1c69      	adds	r1, r5, #1
 8017fb0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017fb4:	10d1      	asrs	r1, r2, #3
 8017fb6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017fba:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8017fbe:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8017fc2:	b2db      	uxtb	r3, r3
 8017fc4:	00c9      	lsls	r1, r1, #3
 8017fc6:	fb03 f30e 	mul.w	r3, r3, lr
 8017fca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017fce:	4301      	orrs	r1, r0
 8017fd0:	1c58      	adds	r0, r3, #1
 8017fd2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8017fd6:	00d3      	lsls	r3, r2, #3
 8017fd8:	b2db      	uxtb	r3, r3
 8017fda:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017fde:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8017fe2:	803b      	strh	r3, [r7, #0]
 8017fe4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8017fe6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8017fe8:	4413      	add	r3, r2
 8017fea:	9325      	str	r3, [sp, #148]	; 0x94
 8017fec:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8017fee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017ff0:	441a      	add	r2, r3
 8017ff2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017ff4:	9226      	str	r2, [sp, #152]	; 0x98
 8017ff6:	3b01      	subs	r3, #1
 8017ff8:	3702      	adds	r7, #2
 8017ffa:	930f      	str	r3, [sp, #60]	; 0x3c
 8017ffc:	e693      	b.n	8017d26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017ffe:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018000:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8018002:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8018004:	4433      	add	r3, r6
 8018006:	9325      	str	r3, [sp, #148]	; 0x94
 8018008:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801800a:	441c      	add	r4, r3
 801800c:	9b06      	ldr	r3, [sp, #24]
 801800e:	9426      	str	r4, [sp, #152]	; 0x98
 8018010:	3b01      	subs	r3, #1
 8018012:	9306      	str	r3, [sp, #24]
 8018014:	9b07      	ldr	r3, [sp, #28]
 8018016:	3302      	adds	r3, #2
 8018018:	9307      	str	r3, [sp, #28]
 801801a:	e662      	b.n	8017ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801801c:	d028      	beq.n	8018070 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801801e:	9b06      	ldr	r3, [sp, #24]
 8018020:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8018022:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8018024:	3b01      	subs	r3, #1
 8018026:	fb00 5003 	mla	r0, r0, r3, r5
 801802a:	1400      	asrs	r0, r0, #16
 801802c:	f53f ae76 	bmi.w	8017d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018030:	3901      	subs	r1, #1
 8018032:	4288      	cmp	r0, r1
 8018034:	f6bf ae72 	bge.w	8017d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018038:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801803a:	9826      	ldr	r0, [sp, #152]	; 0x98
 801803c:	fb01 0303 	mla	r3, r1, r3, r0
 8018040:	141b      	asrs	r3, r3, #16
 8018042:	f53f ae6b 	bmi.w	8017d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018046:	3a01      	subs	r2, #1
 8018048:	4293      	cmp	r3, r2
 801804a:	f6bf ae67 	bge.w	8017d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801804e:	9b06      	ldr	r3, [sp, #24]
 8018050:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8018054:	930f      	str	r3, [sp, #60]	; 0x3c
 8018056:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801805a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801805c:	2b00      	cmp	r3, #0
 801805e:	f300 8083 	bgt.w	8018168 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8018062:	9b06      	ldr	r3, [sp, #24]
 8018064:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018068:	9b07      	ldr	r3, [sp, #28]
 801806a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801806e:	9307      	str	r3, [sp, #28]
 8018070:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018072:	2b00      	cmp	r3, #0
 8018074:	f340 81e4 	ble.w	8018440 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8018078:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801807c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018080:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018084:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018086:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801808a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801808e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018092:	eef0 6a48 	vmov.f32	s13, s16
 8018096:	ee69 7a27 	vmul.f32	s15, s18, s15
 801809a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801809e:	ee37 8a48 	vsub.f32	s16, s14, s16
 80180a2:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80180a6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80180aa:	eef0 6a68 	vmov.f32	s13, s17
 80180ae:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80180b2:	ee18 2a10 	vmov	r2, s16
 80180b6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80180ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80180be:	ee18 2a90 	vmov	r2, s17
 80180c2:	9327      	str	r3, [sp, #156]	; 0x9c
 80180c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80180c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80180ca:	9328      	str	r3, [sp, #160]	; 0xa0
 80180cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80180ce:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80180d0:	3b01      	subs	r3, #1
 80180d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80180d6:	930e      	str	r3, [sp, #56]	; 0x38
 80180d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80180da:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 80180de:	bf08      	it	eq
 80180e0:	4613      	moveq	r3, r2
 80180e2:	9306      	str	r3, [sp, #24]
 80180e4:	eef0 8a67 	vmov.f32	s17, s15
 80180e8:	eeb0 8a47 	vmov.f32	s16, s14
 80180ec:	e5eb      	b.n	8017cc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80180ee:	fb08 f505 	mul.w	r5, r8, r5
 80180f2:	fb09 5303 	mla	r3, r9, r3, r5
 80180f6:	e66b      	b.n	8017dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80180f8:	4681      	mov	r9, r0
 80180fa:	e692      	b.n	8017e22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80180fc:	f1c1 0210 	rsb	r2, r1, #16
 8018100:	4341      	muls	r1, r0
 8018102:	fb09 1902 	mla	r9, r9, r2, r1
 8018106:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801810a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801810e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018112:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018116:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801811a:	ea42 0909 	orr.w	r9, r2, r9
 801811e:	fa1f f289 	uxth.w	r2, r9
 8018122:	e725      	b.n	8017f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018124:	803a      	strh	r2, [r7, #0]
 8018126:	e75d      	b.n	8017fe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018128:	f115 0e01 	adds.w	lr, r5, #1
 801812c:	f53f af5a 	bmi.w	8017fe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018130:	4572      	cmp	r2, lr
 8018132:	f6ff af57 	blt.w	8017fe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018136:	f110 0e01 	adds.w	lr, r0, #1
 801813a:	f53f af53 	bmi.w	8017fe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801813e:	4573      	cmp	r3, lr
 8018140:	f6ff af50 	blt.w	8017fe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018144:	b21b      	sxth	r3, r3
 8018146:	b212      	sxth	r2, r2
 8018148:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801814c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8018150:	9301      	str	r3, [sp, #4]
 8018152:	9200      	str	r2, [sp, #0]
 8018154:	4639      	mov	r1, r7
 8018156:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801815a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801815c:	f7ff fbf2 	bl	8017944 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8018160:	e740      	b.n	8017fe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018162:	bf00      	nop
 8018164:	fffff800 	.word	0xfffff800
 8018168:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801816a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801816e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018170:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8018174:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018176:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801817a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801817c:	141f      	asrs	r7, r3, #16
 801817e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018180:	141b      	asrs	r3, r3, #16
 8018182:	fb01 3707 	mla	r7, r1, r7, r3
 8018186:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018188:	fa1f fc82 	uxth.w	ip, r2
 801818c:	eb03 0a07 	add.w	sl, r3, r7
 8018190:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8018194:	f813 9007 	ldrb.w	r9, [r3, r7]
 8018198:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801819c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80181a0:	b29b      	uxth	r3, r3
 80181a2:	2d00      	cmp	r5, #0
 80181a4:	f000 8131 	beq.w	801840a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x796>
 80181a8:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80181ac:	940c      	str	r4, [sp, #48]	; 0x30
 80181ae:	eb0a 0b01 	add.w	fp, sl, r1
 80181b2:	fa1f fa85 	uxth.w	sl, r5
 80181b6:	fb0a fc0c 	mul.w	ip, sl, ip
 80181ba:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80181be:	fa1f fa8a 	uxth.w	sl, sl
 80181c2:	eba0 000c 	sub.w	r0, r0, ip
 80181c6:	eba3 030a 	sub.w	r3, r3, sl
 80181ca:	b280      	uxth	r0, r0
 80181cc:	fb08 f000 	mul.w	r0, r8, r0
 80181d0:	b29b      	uxth	r3, r3
 80181d2:	fb09 0303 	mla	r3, r9, r3, r0
 80181d6:	980c      	ldr	r0, [sp, #48]	; 0x30
 80181d8:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80181dc:	940d      	str	r4, [sp, #52]	; 0x34
 80181de:	fb0a 3300 	mla	r3, sl, r0, r3
 80181e2:	fb0c 3304 	mla	r3, ip, r4, r3
 80181e6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80181ea:	2b00      	cmp	r3, #0
 80181ec:	f000 80ff 	beq.w	80183ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77a>
 80181f0:	9808      	ldr	r0, [sp, #32]
 80181f2:	9c08      	ldr	r4, [sp, #32]
 80181f4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80181f8:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80181fc:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8018200:	f000 8108 	beq.w	8018414 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a0>
 8018204:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018208:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801820c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018210:	fb09 f707 	mul.w	r7, r9, r7
 8018214:	fb0a fc0c 	mul.w	ip, sl, ip
 8018218:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801821c:	f107 0b20 	add.w	fp, r7, #32
 8018220:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018224:	44cc      	add	ip, r9
 8018226:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801822a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801822e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018232:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018236:	ea4c 0909 	orr.w	r9, ip, r9
 801823a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801823e:	8847      	ldrh	r7, [r0, #2]
 8018240:	d019      	beq.n	8018276 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x602>
 8018242:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018246:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801824a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801824e:	fb08 f807 	mul.w	r8, r8, r7
 8018252:	fb0a fc0c 	mul.w	ip, sl, ip
 8018256:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801825a:	f108 0b20 	add.w	fp, r8, #32
 801825e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018262:	44bc      	add	ip, r7
 8018264:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8018268:	0a3f      	lsrs	r7, r7, #8
 801826a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801826e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018272:	ea4c 0707 	orr.w	r7, ip, r7
 8018276:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801827a:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801827e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018282:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018286:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801828a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801828e:	ea4c 0909 	orr.w	r9, ip, r9
 8018292:	ea4a 0707 	orr.w	r7, sl, r7
 8018296:	2d00      	cmp	r5, #0
 8018298:	f000 80be 	beq.w	8018418 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801829c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80182a0:	3901      	subs	r1, #1
 80182a2:	0049      	lsls	r1, r1, #1
 80182a4:	3102      	adds	r1, #2
 80182a6:	eb00 0c01 	add.w	ip, r0, r1
 80182aa:	5a41      	ldrh	r1, [r0, r1]
 80182ac:	980c      	ldr	r0, [sp, #48]	; 0x30
 80182ae:	28ff      	cmp	r0, #255	; 0xff
 80182b0:	d019      	beq.n	80182e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x672>
 80182b2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80182b4:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80182b8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80182bc:	fb04 fa01 	mul.w	sl, r4, r1
 80182c0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80182c4:	fb08 f800 	mul.w	r8, r8, r0
 80182c8:	f10a 0020 	add.w	r0, sl, #32
 80182cc:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80182d0:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80182d4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80182d8:	4441      	add	r1, r8
 80182da:	0a00      	lsrs	r0, r0, #8
 80182dc:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80182e0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80182e4:	4301      	orrs	r1, r0
 80182e6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80182e8:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80182ec:	2cff      	cmp	r4, #255	; 0xff
 80182ee:	d01a      	beq.n	8018326 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b2>
 80182f0:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80182f4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80182f8:	fb04 fa00 	mul.w	sl, r4, r0
 80182fc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018300:	fb08 f80c 	mul.w	r8, r8, ip
 8018304:	f10a 0c20 	add.w	ip, sl, #32
 8018308:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801830c:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8018310:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018314:	4440      	add	r0, r8
 8018316:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801831a:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801831e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8018322:	ea40 000c 	orr.w	r0, r0, ip
 8018326:	fb15 fc02 	smulbb	ip, r5, r2
 801832a:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801832e:	f1c5 0810 	rsb	r8, r5, #16
 8018332:	eba8 0802 	sub.w	r8, r8, r2
 8018336:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801833a:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801833e:	437a      	muls	r2, r7
 8018340:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018344:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8018348:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801834c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018350:	fb09 2208 	mla	r2, r9, r8, r2
 8018354:	ea4a 0101 	orr.w	r1, sl, r1
 8018358:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801835c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018360:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018364:	fb05 2201 	mla	r2, r5, r1, r2
 8018368:	ea4b 0000 	orr.w	r0, fp, r0
 801836c:	fb0c 2200 	mla	r2, ip, r0, r2
 8018370:	0d57      	lsrs	r7, r2, #21
 8018372:	0952      	lsrs	r2, r2, #5
 8018374:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018378:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801837c:	433a      	orrs	r2, r7
 801837e:	2bff      	cmp	r3, #255	; 0xff
 8018380:	b292      	uxth	r2, r2
 8018382:	d05a      	beq.n	801843a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c6>
 8018384:	f8be 7000 	ldrh.w	r7, [lr]
 8018388:	4c30      	ldr	r4, [pc, #192]	; (801844c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>)
 801838a:	43db      	mvns	r3, r3
 801838c:	1238      	asrs	r0, r7, #8
 801838e:	fa5f fc83 	uxtb.w	ip, r3
 8018392:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018396:	10fd      	asrs	r5, r7, #3
 8018398:	fb00 f00c 	mul.w	r0, r0, ip
 801839c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80183a0:	fb05 f10c 	mul.w	r1, r5, ip
 80183a4:	1c45      	adds	r5, r0, #1
 80183a6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80183aa:	1215      	asrs	r5, r2, #8
 80183ac:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80183b0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80183b4:	1c4d      	adds	r5, r1, #1
 80183b6:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80183ba:	10d1      	asrs	r1, r2, #3
 80183bc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80183c0:	00fb      	lsls	r3, r7, #3
 80183c2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80183c6:	b2db      	uxtb	r3, r3
 80183c8:	00c9      	lsls	r1, r1, #3
 80183ca:	fb03 f30c 	mul.w	r3, r3, ip
 80183ce:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80183d2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80183d6:	4308      	orrs	r0, r1
 80183d8:	00d2      	lsls	r2, r2, #3
 80183da:	1c59      	adds	r1, r3, #1
 80183dc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80183e0:	b2d1      	uxtb	r1, r2
 80183e2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80183e6:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 80183ea:	f8ae 0000 	strh.w	r0, [lr]
 80183ee:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80183f0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80183f2:	4413      	add	r3, r2
 80183f4:	9325      	str	r3, [sp, #148]	; 0x94
 80183f6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80183f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80183fa:	441a      	add	r2, r3
 80183fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80183fe:	9226      	str	r2, [sp, #152]	; 0x98
 8018400:	3b01      	subs	r3, #1
 8018402:	f10e 0e02 	add.w	lr, lr, #2
 8018406:	930f      	str	r3, [sp, #60]	; 0x3c
 8018408:	e627      	b.n	801805a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801840a:	fb08 f000 	mul.w	r0, r8, r0
 801840e:	fb09 0303 	mla	r3, r9, r3, r0
 8018412:	e6e8      	b.n	80181e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x572>
 8018414:	46b9      	mov	r9, r7
 8018416:	e710      	b.n	801823a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 8018418:	f1c2 0110 	rsb	r1, r2, #16
 801841c:	437a      	muls	r2, r7
 801841e:	fb09 2901 	mla	r9, r9, r1, r2
 8018422:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018426:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801842a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801842e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018432:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018436:	4302      	orrs	r2, r0
 8018438:	e7a1      	b.n	801837e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 801843a:	f8ae 2000 	strh.w	r2, [lr]
 801843e:	e7d6      	b.n	80183ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77a>
 8018440:	b013      	add	sp, #76	; 0x4c
 8018442:	ecbd 8b08 	vpop	{d8-d11}
 8018446:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801844a:	bf00      	nop
 801844c:	fffff800 	.word	0xfffff800

08018450 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8018450:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018454:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8018458:	fb0c 4e03 	mla	lr, ip, r3, r4
 801845c:	f1bc 0f00 	cmp.w	ip, #0
 8018460:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8018464:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8018468:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 801846c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8018470:	8808      	ldrh	r0, [r1, #0]
 8018472:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8018476:	db2f      	blt.n	80184d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018478:	45e2      	cmp	sl, ip
 801847a:	dd2d      	ble.n	80184d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 801847c:	2c00      	cmp	r4, #0
 801847e:	db29      	blt.n	80184d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018480:	42a3      	cmp	r3, r4
 8018482:	dd27      	ble.n	80184d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018484:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8018488:	1c62      	adds	r2, r4, #1
 801848a:	d428      	bmi.n	80184de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801848c:	4293      	cmp	r3, r2
 801848e:	dd26      	ble.n	80184de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018490:	b32f      	cbz	r7, 80184de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018492:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8018496:	f11c 0c01 	adds.w	ip, ip, #1
 801849a:	d424      	bmi.n	80184e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801849c:	45e2      	cmp	sl, ip
 801849e:	dd22      	ble.n	80184e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 80184a0:	2e00      	cmp	r6, #0
 80184a2:	f000 809c 	beq.w	80185de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 80184a6:	2c00      	cmp	r4, #0
 80184a8:	db1b      	blt.n	80184e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80184aa:	42a3      	cmp	r3, r4
 80184ac:	dd19      	ble.n	80184e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80184ae:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 80184b2:	3401      	adds	r4, #1
 80184b4:	d41a      	bmi.n	80184ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80184b6:	42a3      	cmp	r3, r4
 80184b8:	dd18      	ble.n	80184ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80184ba:	b1cf      	cbz	r7, 80184f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 80184bc:	3301      	adds	r3, #1
 80184be:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 80184c2:	2f0f      	cmp	r7, #15
 80184c4:	d915      	bls.n	80184f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 80184c6:	4b49      	ldr	r3, [pc, #292]	; (80185ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 80184c8:	4a49      	ldr	r2, [pc, #292]	; (80185f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 80184ca:	484a      	ldr	r0, [pc, #296]	; (80185f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 80184cc:	f240 11ef 	movw	r1, #495	; 0x1ef
 80184d0:	f002 ff9c 	bl	801b40c <__assert_func>
 80184d4:	4681      	mov	r9, r0
 80184d6:	e7d7      	b.n	8018488 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 80184d8:	4686      	mov	lr, r0
 80184da:	4681      	mov	r9, r0
 80184dc:	e7db      	b.n	8018496 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80184de:	4686      	mov	lr, r0
 80184e0:	e7d9      	b.n	8018496 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80184e2:	4684      	mov	ip, r0
 80184e4:	e7e5      	b.n	80184b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 80184e6:	4603      	mov	r3, r0
 80184e8:	4684      	mov	ip, r0
 80184ea:	e7ea      	b.n	80184c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80184ec:	4603      	mov	r3, r0
 80184ee:	e7e8      	b.n	80184c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80184f0:	4603      	mov	r3, r0
 80184f2:	2e0f      	cmp	r6, #15
 80184f4:	d8e7      	bhi.n	80184c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80184f6:	ea4f 4409 	mov.w	r4, r9, lsl #16
 80184fa:	fb17 f806 	smulbb	r8, r7, r6
 80184fe:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018502:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8018506:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801850a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801850e:	ea44 0909 	orr.w	r9, r4, r9
 8018512:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018516:	f1c6 0410 	rsb	r4, r6, #16
 801851a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801851e:	1be4      	subs	r4, r4, r7
 8018520:	041a      	lsls	r2, r3, #16
 8018522:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8018526:	ea4a 0e0e 	orr.w	lr, sl, lr
 801852a:	fb07 fe0e 	mul.w	lr, r7, lr
 801852e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018532:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8018536:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801853a:	fb04 e409 	mla	r4, r4, r9, lr
 801853e:	4313      	orrs	r3, r2
 8018540:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8018544:	fb08 4303 	mla	r3, r8, r3, r4
 8018548:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801854c:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8018550:	4322      	orrs	r2, r4
 8018552:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8018556:	fb06 3202 	mla	r2, r6, r2, r3
 801855a:	0d53      	lsrs	r3, r2, #21
 801855c:	0952      	lsrs	r2, r2, #5
 801855e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018562:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018566:	431a      	orrs	r2, r3
 8018568:	b293      	uxth	r3, r2
 801856a:	b2af      	uxth	r7, r5
 801856c:	1202      	asrs	r2, r0, #8
 801856e:	43ed      	mvns	r5, r5
 8018570:	b2ed      	uxtb	r5, r5
 8018572:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018576:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801857a:	fb12 f205 	smulbb	r2, r2, r5
 801857e:	10c6      	asrs	r6, r0, #3
 8018580:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018584:	fb0c 2c07 	mla	ip, ip, r7, r2
 8018588:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801858c:	10da      	asrs	r2, r3, #3
 801858e:	fb16 f605 	smulbb	r6, r6, r5
 8018592:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018596:	fb02 6207 	mla	r2, r2, r7, r6
 801859a:	b296      	uxth	r6, r2
 801859c:	00c2      	lsls	r2, r0, #3
 801859e:	00dc      	lsls	r4, r3, #3
 80185a0:	b2d2      	uxtb	r2, r2
 80185a2:	b2e4      	uxtb	r4, r4
 80185a4:	fb12 f205 	smulbb	r2, r2, r5
 80185a8:	fb04 2207 	mla	r2, r4, r7, r2
 80185ac:	fa1f fc8c 	uxth.w	ip, ip
 80185b0:	b292      	uxth	r2, r2
 80185b2:	f10c 0301 	add.w	r3, ip, #1
 80185b6:	1c50      	adds	r0, r2, #1
 80185b8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80185bc:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80185c0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80185c4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80185c8:	4313      	orrs	r3, r2
 80185ca:	1c72      	adds	r2, r6, #1
 80185cc:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80185d0:	0952      	lsrs	r2, r2, #5
 80185d2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80185d6:	4313      	orrs	r3, r2
 80185d8:	800b      	strh	r3, [r1, #0]
 80185da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80185de:	2f0f      	cmp	r7, #15
 80185e0:	f63f af71 	bhi.w	80184c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80185e4:	4603      	mov	r3, r0
 80185e6:	4684      	mov	ip, r0
 80185e8:	e785      	b.n	80184f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 80185ea:	bf00      	nop
 80185ec:	0801f307 	.word	0x0801f307
 80185f0:	0801f96e 	.word	0x0801f96e
 80185f4:	0801f3f0 	.word	0x0801f3f0

080185f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80185f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80185fc:	ed2d 8b08 	vpush	{d8-d11}
 8018600:	b093      	sub	sp, #76	; 0x4c
 8018602:	461d      	mov	r5, r3
 8018604:	9210      	str	r2, [sp, #64]	; 0x40
 8018606:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018608:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 801860c:	920b      	str	r2, [sp, #44]	; 0x2c
 801860e:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8018612:	910a      	str	r1, [sp, #40]	; 0x28
 8018614:	6859      	ldr	r1, [r3, #4]
 8018616:	681b      	ldr	r3, [r3, #0]
 8018618:	9011      	str	r0, [sp, #68]	; 0x44
 801861a:	fb01 2707 	mla	r7, r1, r7, r2
 801861e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8018622:	9307      	str	r3, [sp, #28]
 8018624:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018626:	681b      	ldr	r3, [r3, #0]
 8018628:	9309      	str	r3, [sp, #36]	; 0x24
 801862a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801862c:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8018630:	43db      	mvns	r3, r3
 8018632:	b2db      	uxtb	r3, r3
 8018634:	eeb0 aa40 	vmov.f32	s20, s0
 8018638:	eef0 9a60 	vmov.f32	s19, s1
 801863c:	eeb0 9a41 	vmov.f32	s18, s2
 8018640:	eeb0 8a62 	vmov.f32	s16, s5
 8018644:	eef0 8a43 	vmov.f32	s17, s6
 8018648:	eef0 ba44 	vmov.f32	s23, s8
 801864c:	eeb0 ba64 	vmov.f32	s22, s9
 8018650:	eef0 aa45 	vmov.f32	s21, s10
 8018654:	9308      	str	r3, [sp, #32]
 8018656:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018658:	2b00      	cmp	r3, #0
 801865a:	dc03      	bgt.n	8018664 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801865c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801865e:	2b00      	cmp	r3, #0
 8018660:	f340 8203 	ble.w	8018a6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8018664:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018666:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801866a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801866e:	1e48      	subs	r0, r1, #1
 8018670:	f102 3cff 	add.w	ip, r2, #4294967295
 8018674:	2d00      	cmp	r5, #0
 8018676:	f340 80da 	ble.w	801882e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801867a:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801867e:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018682:	d406      	bmi.n	8018692 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018684:	4586      	cmp	lr, r0
 8018686:	da04      	bge.n	8018692 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018688:	2b00      	cmp	r3, #0
 801868a:	db02      	blt.n	8018692 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801868c:	4563      	cmp	r3, ip
 801868e:	f2c0 80cf 	blt.w	8018830 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8018692:	f11e 0e01 	adds.w	lr, lr, #1
 8018696:	f100 80c1 	bmi.w	801881c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801869a:	4571      	cmp	r1, lr
 801869c:	f2c0 80be 	blt.w	801881c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80186a0:	3301      	adds	r3, #1
 80186a2:	f100 80bb 	bmi.w	801881c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80186a6:	429a      	cmp	r2, r3
 80186a8:	f2c0 80b8 	blt.w	801881c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80186ac:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80186b0:	46a9      	mov	r9, r5
 80186b2:	f1b9 0f00 	cmp.w	r9, #0
 80186b6:	f340 80d8 	ble.w	801886a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80186ba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80186bc:	1421      	asrs	r1, r4, #16
 80186be:	ea4f 4026 	mov.w	r0, r6, asr #16
 80186c2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80186c6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80186ca:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80186ce:	f100 8111 	bmi.w	80188f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80186d2:	f10e 3aff 	add.w	sl, lr, #4294967295
 80186d6:	4551      	cmp	r1, sl
 80186d8:	f280 810c 	bge.w	80188f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80186dc:	2800      	cmp	r0, #0
 80186de:	f2c0 8109 	blt.w	80188f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80186e2:	f103 3aff 	add.w	sl, r3, #4294967295
 80186e6:	4550      	cmp	r0, sl
 80186e8:	f280 8104 	bge.w	80188f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80186ec:	fa0f f38e 	sxth.w	r3, lr
 80186f0:	fb00 1103 	mla	r1, r0, r3, r1
 80186f4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80186f6:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80186fa:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80186fe:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8018702:	f1bc 0f00 	cmp.w	ip, #0
 8018706:	d007      	beq.n	8018718 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8018708:	005b      	lsls	r3, r3, #1
 801870a:	eb0a 0003 	add.w	r0, sl, r3
 801870e:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8018712:	930c      	str	r3, [sp, #48]	; 0x30
 8018714:	8843      	ldrh	r3, [r0, #2]
 8018716:	930d      	str	r3, [sp, #52]	; 0x34
 8018718:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801871c:	fb12 f30c 	smulbb	r3, r2, ip
 8018720:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018724:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018728:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801872c:	10db      	asrs	r3, r3, #3
 801872e:	ea40 000e 	orr.w	r0, r0, lr
 8018732:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018736:	f1cc 0e10 	rsb	lr, ip, #16
 801873a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801873e:	ebae 0e02 	sub.w	lr, lr, r2
 8018742:	ea4a 0101 	orr.w	r1, sl, r1
 8018746:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801874a:	4351      	muls	r1, r2
 801874c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801874e:	9f08      	ldr	r7, [sp, #32]
 8018750:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8018754:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018758:	0410      	lsls	r0, r2, #16
 801875a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801875e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018762:	4310      	orrs	r0, r2
 8018764:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018766:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018768:	0412      	lsls	r2, r2, #16
 801876a:	fb03 e000 	mla	r0, r3, r0, lr
 801876e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018772:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018776:	ea42 020e 	orr.w	r2, r2, lr
 801877a:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801877e:	fb03 0302 	mla	r3, r3, r2, r0
 8018782:	0d5a      	lsrs	r2, r3, #21
 8018784:	095b      	lsrs	r3, r3, #5
 8018786:	f8b8 c000 	ldrh.w	ip, [r8]
 801878a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801878e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018792:	4313      	orrs	r3, r2
 8018794:	b29b      	uxth	r3, r3
 8018796:	ea4f 212c 	mov.w	r1, ip, asr #8
 801879a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801879e:	1218      	asrs	r0, r3, #8
 80187a0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80187a4:	fb11 f107 	smulbb	r1, r1, r7
 80187a8:	ea4f 0eec 	mov.w	lr, ip, asr #3
 80187ac:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80187b0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80187b4:	fb00 1002 	mla	r0, r0, r2, r1
 80187b8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80187bc:	10d9      	asrs	r1, r3, #3
 80187be:	fa5f fc8c 	uxtb.w	ip, ip
 80187c2:	00db      	lsls	r3, r3, #3
 80187c4:	b2db      	uxtb	r3, r3
 80187c6:	fb1c fc07 	smulbb	ip, ip, r7
 80187ca:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80187ce:	fb1e fe07 	smulbb	lr, lr, r7
 80187d2:	fb01 e102 	mla	r1, r1, r2, lr
 80187d6:	fb03 c202 	mla	r2, r3, r2, ip
 80187da:	b280      	uxth	r0, r0
 80187dc:	b292      	uxth	r2, r2
 80187de:	1c43      	adds	r3, r0, #1
 80187e0:	f102 0c01 	add.w	ip, r2, #1
 80187e4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80187e8:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80187ec:	b289      	uxth	r1, r1
 80187ee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80187f2:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80187f6:	4313      	orrs	r3, r2
 80187f8:	1c4a      	adds	r2, r1, #1
 80187fa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80187fe:	0949      	lsrs	r1, r1, #5
 8018800:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018804:	430b      	orrs	r3, r1
 8018806:	f8a8 3000 	strh.w	r3, [r8]
 801880a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801880c:	441c      	add	r4, r3
 801880e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018810:	f108 0802 	add.w	r8, r8, #2
 8018814:	441e      	add	r6, r3
 8018816:	f109 39ff 	add.w	r9, r9, #4294967295
 801881a:	e74a      	b.n	80186b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801881c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801881e:	441c      	add	r4, r3
 8018820:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018822:	441e      	add	r6, r3
 8018824:	9b07      	ldr	r3, [sp, #28]
 8018826:	3302      	adds	r3, #2
 8018828:	3d01      	subs	r5, #1
 801882a:	9307      	str	r3, [sp, #28]
 801882c:	e722      	b.n	8018674 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801882e:	d022      	beq.n	8018876 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8018830:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8018832:	1e6b      	subs	r3, r5, #1
 8018834:	fb00 4003 	mla	r0, r0, r3, r4
 8018838:	1400      	asrs	r0, r0, #16
 801883a:	f53f af37 	bmi.w	80186ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801883e:	3901      	subs	r1, #1
 8018840:	4288      	cmp	r0, r1
 8018842:	f6bf af33 	bge.w	80186ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018846:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018848:	fb01 6303 	mla	r3, r1, r3, r6
 801884c:	141b      	asrs	r3, r3, #16
 801884e:	f53f af2d 	bmi.w	80186ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018852:	3a01      	subs	r2, #1
 8018854:	4293      	cmp	r3, r2
 8018856:	f6bf af29 	bge.w	80186ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801885a:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801885e:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8018862:	46a8      	mov	r8, r5
 8018864:	f1b8 0f00 	cmp.w	r8, #0
 8018868:	dc5e      	bgt.n	8018928 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801886a:	9b07      	ldr	r3, [sp, #28]
 801886c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8018870:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018874:	9307      	str	r3, [sp, #28]
 8018876:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018878:	2b00      	cmp	r3, #0
 801887a:	f340 80f6 	ble.w	8018a6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801887e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018882:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018886:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801888a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801888c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018890:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018894:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018898:	eef0 6a48 	vmov.f32	s13, s16
 801889c:	ee69 7a27 	vmul.f32	s15, s18, s15
 80188a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80188a4:	ee37 8a48 	vsub.f32	s16, s14, s16
 80188a8:	ee16 4a90 	vmov	r4, s13
 80188ac:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80188b0:	eef0 6a68 	vmov.f32	s13, s17
 80188b4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80188b8:	ee18 2a10 	vmov	r2, s16
 80188bc:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80188c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80188c4:	ee18 2a90 	vmov	r2, s17
 80188c8:	9327      	str	r3, [sp, #156]	; 0x9c
 80188ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80188cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80188d0:	9328      	str	r3, [sp, #160]	; 0xa0
 80188d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80188d4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80188d6:	3b01      	subs	r3, #1
 80188d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80188dc:	930a      	str	r3, [sp, #40]	; 0x28
 80188de:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80188e0:	ee16 6a90 	vmov	r6, s13
 80188e4:	bf14      	ite	ne
 80188e6:	461d      	movne	r5, r3
 80188e8:	4615      	moveq	r5, r2
 80188ea:	eef0 8a67 	vmov.f32	s17, s15
 80188ee:	eeb0 8a47 	vmov.f32	s16, s14
 80188f2:	e6b0      	b.n	8018656 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80188f4:	f111 0a01 	adds.w	sl, r1, #1
 80188f8:	d487      	bmi.n	801880a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80188fa:	45d6      	cmp	lr, sl
 80188fc:	db85      	blt.n	801880a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80188fe:	f110 0a01 	adds.w	sl, r0, #1
 8018902:	d482      	bmi.n	801880a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018904:	4553      	cmp	r3, sl
 8018906:	db80      	blt.n	801880a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018908:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801890a:	9101      	str	r1, [sp, #4]
 801890c:	b21b      	sxth	r3, r3
 801890e:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8018912:	9300      	str	r3, [sp, #0]
 8018914:	e9cd c704 	strd	ip, r7, [sp, #16]
 8018918:	fa0f f38e 	sxth.w	r3, lr
 801891c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801891e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018920:	4641      	mov	r1, r8
 8018922:	f7ff fd95 	bl	8018450 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8018926:	e770      	b.n	801880a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018928:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801892a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801892c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018930:	1430      	asrs	r0, r6, #16
 8018932:	1423      	asrs	r3, r4, #16
 8018934:	fb01 3000 	mla	r0, r1, r0, r3
 8018938:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801893a:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801893e:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8018942:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018946:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801894a:	8858      	ldrh	r0, [r3, #2]
 801894c:	f1be 0f00 	cmp.w	lr, #0
 8018950:	d00b      	beq.n	801896a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8018952:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018956:	3901      	subs	r1, #1
 8018958:	0049      	lsls	r1, r1, #1
 801895a:	3102      	adds	r1, #2
 801895c:	eb03 0b01 	add.w	fp, r3, r1
 8018960:	5a5b      	ldrh	r3, [r3, r1]
 8018962:	930e      	str	r3, [sp, #56]	; 0x38
 8018964:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8018968:	930f      	str	r3, [sp, #60]	; 0x3c
 801896a:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801896e:	fb12 f30e 	smulbb	r3, r2, lr
 8018972:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018976:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801897a:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801897e:	10db      	asrs	r3, r3, #3
 8018980:	ea41 010c 	orr.w	r1, r1, ip
 8018984:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018988:	f1ce 0c10 	rsb	ip, lr, #16
 801898c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018990:	ebac 0c02 	sub.w	ip, ip, r2
 8018994:	ea4b 0000 	orr.w	r0, fp, r0
 8018998:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801899c:	4350      	muls	r0, r2
 801899e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80189a0:	9f08      	ldr	r7, [sp, #32]
 80189a2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80189a6:	fb0c 0c01 	mla	ip, ip, r1, r0
 80189aa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80189ae:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80189b2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80189b4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80189b6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80189ba:	0412      	lsls	r2, r2, #16
 80189bc:	ea4b 0101 	orr.w	r1, fp, r1
 80189c0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80189c4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80189c8:	fb03 c101 	mla	r1, r3, r1, ip
 80189cc:	4302      	orrs	r2, r0
 80189ce:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80189d2:	fb03 1202 	mla	r2, r3, r2, r1
 80189d6:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80189da:	0952      	lsrs	r2, r2, #5
 80189dc:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 80189e0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80189e4:	f8b9 2000 	ldrh.w	r2, [r9]
 80189e8:	ea4b 0303 	orr.w	r3, fp, r3
 80189ec:	b29b      	uxth	r3, r3
 80189ee:	1211      	asrs	r1, r2, #8
 80189f0:	1218      	asrs	r0, r3, #8
 80189f2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80189f6:	fb11 f107 	smulbb	r1, r1, r7
 80189fa:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80189fe:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018a02:	00d2      	lsls	r2, r2, #3
 8018a04:	fb00 100a 	mla	r0, r0, sl, r1
 8018a08:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018a0c:	10d9      	asrs	r1, r3, #3
 8018a0e:	b2d2      	uxtb	r2, r2
 8018a10:	00db      	lsls	r3, r3, #3
 8018a12:	fb1c fc07 	smulbb	ip, ip, r7
 8018a16:	fb12 f207 	smulbb	r2, r2, r7
 8018a1a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018a1e:	b2db      	uxtb	r3, r3
 8018a20:	b280      	uxth	r0, r0
 8018a22:	fb01 c10a 	mla	r1, r1, sl, ip
 8018a26:	fb03 230a 	mla	r3, r3, sl, r2
 8018a2a:	b29b      	uxth	r3, r3
 8018a2c:	b289      	uxth	r1, r1
 8018a2e:	1c42      	adds	r2, r0, #1
 8018a30:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018a34:	f101 0c01 	add.w	ip, r1, #1
 8018a38:	1c5a      	adds	r2, r3, #1
 8018a3a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018a3e:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8018a42:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018a44:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018a48:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018a4c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8018a50:	4310      	orrs	r0, r2
 8018a52:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8018a56:	441c      	add	r4, r3
 8018a58:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018a5a:	ea40 000c 	orr.w	r0, r0, ip
 8018a5e:	f829 0b02 	strh.w	r0, [r9], #2
 8018a62:	441e      	add	r6, r3
 8018a64:	f108 38ff 	add.w	r8, r8, #4294967295
 8018a68:	e6fc      	b.n	8018864 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8018a6a:	b013      	add	sp, #76	; 0x4c
 8018a6c:	ecbd 8b08 	vpop	{d8-d11}
 8018a70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018a74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8018a74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018a78:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8018a7c:	fb06 5c03 	mla	ip, r6, r3, r5
 8018a80:	2e00      	cmp	r6, #0
 8018a82:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8018a86:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8018a8a:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8018a8e:	8808      	ldrh	r0, [r1, #0]
 8018a90:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8018a94:	db2e      	blt.n	8018af4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8018a96:	45b0      	cmp	r8, r6
 8018a98:	dd2c      	ble.n	8018af4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8018a9a:	2d00      	cmp	r5, #0
 8018a9c:	db28      	blt.n	8018af0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8018a9e:	42ab      	cmp	r3, r5
 8018aa0:	dd26      	ble.n	8018af0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8018aa2:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8018aa6:	1c6a      	adds	r2, r5, #1
 8018aa8:	d427      	bmi.n	8018afa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8018aaa:	4293      	cmp	r3, r2
 8018aac:	dd25      	ble.n	8018afa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8018aae:	b324      	cbz	r4, 8018afa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8018ab0:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8018ab4:	3601      	adds	r6, #1
 8018ab6:	d424      	bmi.n	8018b02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8018ab8:	45b0      	cmp	r8, r6
 8018aba:	dd22      	ble.n	8018b02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8018abc:	b31f      	cbz	r7, 8018b06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8018abe:	2d00      	cmp	r5, #0
 8018ac0:	db1d      	blt.n	8018afe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8018ac2:	42ab      	cmp	r3, r5
 8018ac4:	dd1b      	ble.n	8018afe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8018ac6:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8018aca:	3501      	adds	r5, #1
 8018acc:	d405      	bmi.n	8018ada <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018ace:	42ab      	cmp	r3, r5
 8018ad0:	dd03      	ble.n	8018ada <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018ad2:	b124      	cbz	r4, 8018ade <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8018ad4:	3301      	adds	r3, #1
 8018ad6:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8018ada:	2c0f      	cmp	r4, #15
 8018adc:	d801      	bhi.n	8018ae2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8018ade:	2f0f      	cmp	r7, #15
 8018ae0:	d914      	bls.n	8018b0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8018ae2:	4b27      	ldr	r3, [pc, #156]	; (8018b80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8018ae4:	4a27      	ldr	r2, [pc, #156]	; (8018b84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8018ae6:	4828      	ldr	r0, [pc, #160]	; (8018b88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8018ae8:	f240 11ef 	movw	r1, #495	; 0x1ef
 8018aec:	f002 fc8e 	bl	801b40c <__assert_func>
 8018af0:	4684      	mov	ip, r0
 8018af2:	e7d8      	b.n	8018aa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8018af4:	4602      	mov	r2, r0
 8018af6:	4684      	mov	ip, r0
 8018af8:	e7dc      	b.n	8018ab4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8018afa:	4602      	mov	r2, r0
 8018afc:	e7da      	b.n	8018ab4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8018afe:	4606      	mov	r6, r0
 8018b00:	e7e3      	b.n	8018aca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8018b02:	4606      	mov	r6, r0
 8018b04:	e7e9      	b.n	8018ada <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018b06:	2c0f      	cmp	r4, #15
 8018b08:	d8eb      	bhi.n	8018ae2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8018b0a:	4606      	mov	r6, r0
 8018b0c:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8018b10:	fb14 f307 	smulbb	r3, r4, r7
 8018b14:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8018b18:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8018b1c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018b20:	10db      	asrs	r3, r3, #3
 8018b22:	ea45 0c0c 	orr.w	ip, r5, ip
 8018b26:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018b2a:	f1c7 0510 	rsb	r5, r7, #16
 8018b2e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018b32:	1b2d      	subs	r5, r5, r4
 8018b34:	ea4e 0202 	orr.w	r2, lr, r2
 8018b38:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8018b3c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8018b40:	4354      	muls	r4, r2
 8018b42:	fb05 450c 	mla	r5, r5, ip, r4
 8018b46:	0404      	lsls	r4, r0, #16
 8018b48:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018b4c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018b50:	4320      	orrs	r0, r4
 8018b52:	fb03 5400 	mla	r4, r3, r0, r5
 8018b56:	0430      	lsls	r0, r6, #16
 8018b58:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018b5c:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8018b60:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8018b64:	4330      	orrs	r0, r6
 8018b66:	fb07 4000 	mla	r0, r7, r0, r4
 8018b6a:	0d43      	lsrs	r3, r0, #21
 8018b6c:	0940      	lsrs	r0, r0, #5
 8018b6e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018b72:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018b76:	4318      	orrs	r0, r3
 8018b78:	8008      	strh	r0, [r1, #0]
 8018b7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018b7e:	bf00      	nop
 8018b80:	0801f307 	.word	0x0801f307
 8018b84:	0801f96e 	.word	0x0801f96e
 8018b88:	0801f3f0 	.word	0x0801f3f0

08018b8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018b8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b90:	ed2d 8b08 	vpush	{d8-d11}
 8018b94:	b08f      	sub	sp, #60	; 0x3c
 8018b96:	461d      	mov	r5, r3
 8018b98:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018b9a:	920c      	str	r2, [sp, #48]	; 0x30
 8018b9c:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 8018ba0:	9107      	str	r1, [sp, #28]
 8018ba2:	6859      	ldr	r1, [r3, #4]
 8018ba4:	681b      	ldr	r3, [r3, #0]
 8018ba6:	900d      	str	r0, [sp, #52]	; 0x34
 8018ba8:	fb01 2707 	mla	r7, r1, r7, r2
 8018bac:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8018bb0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018bb2:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8018bb6:	f8d3 8000 	ldr.w	r8, [r3]
 8018bba:	eeb0 aa40 	vmov.f32	s20, s0
 8018bbe:	eef0 9a60 	vmov.f32	s19, s1
 8018bc2:	eeb0 9a41 	vmov.f32	s18, s2
 8018bc6:	eeb0 8a62 	vmov.f32	s16, s5
 8018bca:	eef0 8a43 	vmov.f32	s17, s6
 8018bce:	eef0 ba44 	vmov.f32	s23, s8
 8018bd2:	eeb0 ba64 	vmov.f32	s22, s9
 8018bd6:	eef0 aa45 	vmov.f32	s21, s10
 8018bda:	9b07      	ldr	r3, [sp, #28]
 8018bdc:	2b00      	cmp	r3, #0
 8018bde:	dc03      	bgt.n	8018be8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018be0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018be2:	2b00      	cmp	r3, #0
 8018be4:	f340 8181 	ble.w	8018eea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8018be8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018bea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018bee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018bf2:	1e48      	subs	r0, r1, #1
 8018bf4:	f102 3cff 	add.w	ip, r2, #4294967295
 8018bf8:	2d00      	cmp	r5, #0
 8018bfa:	f340 809b 	ble.w	8018d34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 8018bfe:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018c02:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018c06:	d406      	bmi.n	8018c16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018c08:	4586      	cmp	lr, r0
 8018c0a:	da04      	bge.n	8018c16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018c0c:	2b00      	cmp	r3, #0
 8018c0e:	db02      	blt.n	8018c16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018c10:	4563      	cmp	r3, ip
 8018c12:	f2c0 8090 	blt.w	8018d36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018c16:	f11e 0e01 	adds.w	lr, lr, #1
 8018c1a:	f100 8084 	bmi.w	8018d26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018c1e:	4571      	cmp	r1, lr
 8018c20:	f2c0 8081 	blt.w	8018d26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018c24:	3301      	adds	r3, #1
 8018c26:	d47e      	bmi.n	8018d26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018c28:	429a      	cmp	r2, r3
 8018c2a:	db7c      	blt.n	8018d26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018c2c:	46aa      	mov	sl, r5
 8018c2e:	46b9      	mov	r9, r7
 8018c30:	f1ba 0f00 	cmp.w	sl, #0
 8018c34:	f340 8099 	ble.w	8018d6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8018c38:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018c3a:	1421      	asrs	r1, r4, #16
 8018c3c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8018c40:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018c44:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8018c48:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8018c4c:	f100 80d0 	bmi.w	8018df0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018c50:	f10e 3bff 	add.w	fp, lr, #4294967295
 8018c54:	4559      	cmp	r1, fp
 8018c56:	f280 80cb 	bge.w	8018df0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018c5a:	2800      	cmp	r0, #0
 8018c5c:	f2c0 80c8 	blt.w	8018df0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018c60:	f103 3bff 	add.w	fp, r3, #4294967295
 8018c64:	4558      	cmp	r0, fp
 8018c66:	f280 80c3 	bge.w	8018df0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018c6a:	fa0f fe8e 	sxth.w	lr, lr
 8018c6e:	fb00 110e 	mla	r1, r0, lr, r1
 8018c72:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8018c76:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8018c7a:	8841      	ldrh	r1, [r0, #2]
 8018c7c:	f1bc 0f00 	cmp.w	ip, #0
 8018c80:	d00b      	beq.n	8018c9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8018c82:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8018c86:	3b01      	subs	r3, #1
 8018c88:	005b      	lsls	r3, r3, #1
 8018c8a:	3302      	adds	r3, #2
 8018c8c:	eb00 0e03 	add.w	lr, r0, r3
 8018c90:	5ac3      	ldrh	r3, [r0, r3]
 8018c92:	9308      	str	r3, [sp, #32]
 8018c94:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8018c98:	9309      	str	r3, [sp, #36]	; 0x24
 8018c9a:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8018c9e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018ca2:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8018ca6:	ea40 000b 	orr.w	r0, r0, fp
 8018caa:	fb12 f30c 	smulbb	r3, r2, ip
 8018cae:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018cb2:	10db      	asrs	r3, r3, #3
 8018cb4:	f1cc 0e10 	rsb	lr, ip, #16
 8018cb8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018cbc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018cc0:	ebae 0e02 	sub.w	lr, lr, r2
 8018cc4:	ea4b 0101 	orr.w	r1, fp, r1
 8018cc8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018ccc:	4351      	muls	r1, r2
 8018cce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018cd0:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8018cd4:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018cd8:	0410      	lsls	r0, r2, #16
 8018cda:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018cde:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018ce2:	4310      	orrs	r0, r2
 8018ce4:	9a08      	ldr	r2, [sp, #32]
 8018ce6:	9908      	ldr	r1, [sp, #32]
 8018ce8:	0412      	lsls	r2, r2, #16
 8018cea:	fb03 e000 	mla	r0, r3, r0, lr
 8018cee:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018cf2:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018cf6:	ea42 020e 	orr.w	r2, r2, lr
 8018cfa:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8018cfe:	fb03 0302 	mla	r3, r3, r2, r0
 8018d02:	0d5a      	lsrs	r2, r3, #21
 8018d04:	095b      	lsrs	r3, r3, #5
 8018d06:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018d0a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018d0e:	4313      	orrs	r3, r2
 8018d10:	f8a9 3000 	strh.w	r3, [r9]
 8018d14:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8018d16:	441c      	add	r4, r3
 8018d18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018d1a:	f109 0902 	add.w	r9, r9, #2
 8018d1e:	441e      	add	r6, r3
 8018d20:	f10a 3aff 	add.w	sl, sl, #4294967295
 8018d24:	e784      	b.n	8018c30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8018d26:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8018d28:	441c      	add	r4, r3
 8018d2a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018d2c:	3d01      	subs	r5, #1
 8018d2e:	441e      	add	r6, r3
 8018d30:	3702      	adds	r7, #2
 8018d32:	e761      	b.n	8018bf8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018d34:	d01d      	beq.n	8018d72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8018d36:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8018d38:	1e6b      	subs	r3, r5, #1
 8018d3a:	fb00 4003 	mla	r0, r0, r3, r4
 8018d3e:	1400      	asrs	r0, r0, #16
 8018d40:	f53f af74 	bmi.w	8018c2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018d44:	3901      	subs	r1, #1
 8018d46:	4288      	cmp	r0, r1
 8018d48:	f6bf af70 	bge.w	8018c2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018d4c:	9924      	ldr	r1, [sp, #144]	; 0x90
 8018d4e:	fb01 6303 	mla	r3, r1, r3, r6
 8018d52:	141b      	asrs	r3, r3, #16
 8018d54:	f53f af6a 	bmi.w	8018c2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018d58:	3a01      	subs	r2, #1
 8018d5a:	4293      	cmp	r3, r2
 8018d5c:	f6bf af66 	bge.w	8018c2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018d60:	46a9      	mov	r9, r5
 8018d62:	46ba      	mov	sl, r7
 8018d64:	f1b9 0f00 	cmp.w	r9, #0
 8018d68:	dc5a      	bgt.n	8018e20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018d6a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8018d6e:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8018d72:	9b07      	ldr	r3, [sp, #28]
 8018d74:	2b00      	cmp	r3, #0
 8018d76:	f340 80b8 	ble.w	8018eea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8018d7a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018d7e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018d82:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018d86:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018d88:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018d8c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018d90:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018d94:	eef0 6a48 	vmov.f32	s13, s16
 8018d98:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018d9c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018da0:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018da4:	ee16 4a90 	vmov	r4, s13
 8018da8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018dac:	eef0 6a68 	vmov.f32	s13, s17
 8018db0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018db4:	ee18 2a10 	vmov	r2, s16
 8018db8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018dbc:	fb92 f3f3 	sdiv	r3, r2, r3
 8018dc0:	ee18 2a90 	vmov	r2, s17
 8018dc4:	9323      	str	r3, [sp, #140]	; 0x8c
 8018dc6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018dc8:	fb92 f3f3 	sdiv	r3, r2, r3
 8018dcc:	9324      	str	r3, [sp, #144]	; 0x90
 8018dce:	9b07      	ldr	r3, [sp, #28]
 8018dd0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018dd2:	3b01      	subs	r3, #1
 8018dd4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018dd8:	9307      	str	r3, [sp, #28]
 8018dda:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018ddc:	ee16 6a90 	vmov	r6, s13
 8018de0:	bf14      	ite	ne
 8018de2:	461d      	movne	r5, r3
 8018de4:	4615      	moveq	r5, r2
 8018de6:	eef0 8a67 	vmov.f32	s17, s15
 8018dea:	eeb0 8a47 	vmov.f32	s16, s14
 8018dee:	e6f4      	b.n	8018bda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8018df0:	f111 0b01 	adds.w	fp, r1, #1
 8018df4:	d48e      	bmi.n	8018d14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018df6:	45de      	cmp	lr, fp
 8018df8:	db8c      	blt.n	8018d14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018dfa:	f110 0b01 	adds.w	fp, r0, #1
 8018dfe:	d489      	bmi.n	8018d14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018e00:	455b      	cmp	r3, fp
 8018e02:	db87      	blt.n	8018d14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018e04:	b21b      	sxth	r3, r3
 8018e06:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8018e0a:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8018e0e:	9300      	str	r3, [sp, #0]
 8018e10:	4642      	mov	r2, r8
 8018e12:	fa0f f38e 	sxth.w	r3, lr
 8018e16:	4649      	mov	r1, r9
 8018e18:	980d      	ldr	r0, [sp, #52]	; 0x34
 8018e1a:	f7ff fe2b 	bl	8018a74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8018e1e:	e779      	b.n	8018d14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018e20:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018e22:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018e26:	1420      	asrs	r0, r4, #16
 8018e28:	1431      	asrs	r1, r6, #16
 8018e2a:	fb03 0101 	mla	r1, r3, r1, r0
 8018e2e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8018e32:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018e36:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8018e3a:	8841      	ldrh	r1, [r0, #2]
 8018e3c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018e40:	f1be 0f00 	cmp.w	lr, #0
 8018e44:	d00b      	beq.n	8018e5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 8018e46:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8018e4a:	3b01      	subs	r3, #1
 8018e4c:	005b      	lsls	r3, r3, #1
 8018e4e:	3302      	adds	r3, #2
 8018e50:	eb00 0b03 	add.w	fp, r0, r3
 8018e54:	5ac3      	ldrh	r3, [r0, r3]
 8018e56:	930a      	str	r3, [sp, #40]	; 0x28
 8018e58:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8018e5c:	930b      	str	r3, [sp, #44]	; 0x2c
 8018e5e:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8018e62:	fb12 f30e 	smulbb	r3, r2, lr
 8018e66:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018e6a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018e6e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018e72:	10db      	asrs	r3, r3, #3
 8018e74:	ea40 000c 	orr.w	r0, r0, ip
 8018e78:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018e7c:	f1ce 0c10 	rsb	ip, lr, #16
 8018e80:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018e84:	ebac 0c02 	sub.w	ip, ip, r2
 8018e88:	ea4b 0101 	orr.w	r1, fp, r1
 8018e8c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018e90:	4351      	muls	r1, r2
 8018e92:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018e94:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8018e98:	fb0c 1c00 	mla	ip, ip, r0, r1
 8018e9c:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8018ea0:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8018ea4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018ea6:	990a      	ldr	r1, [sp, #40]	; 0x28
 8018ea8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018eac:	0412      	lsls	r2, r2, #16
 8018eae:	ea4b 0000 	orr.w	r0, fp, r0
 8018eb2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018eb6:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8018eba:	fb03 c000 	mla	r0, r3, r0, ip
 8018ebe:	ea42 0b0b 	orr.w	fp, r2, fp
 8018ec2:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8018ec6:	fb03 000b 	mla	r0, r3, fp, r0
 8018eca:	0d43      	lsrs	r3, r0, #21
 8018ecc:	0940      	lsrs	r0, r0, #5
 8018ece:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018ed2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018ed6:	4318      	orrs	r0, r3
 8018ed8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8018eda:	f82a 0b02 	strh.w	r0, [sl], #2
 8018ede:	441c      	add	r4, r3
 8018ee0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018ee2:	f109 39ff 	add.w	r9, r9, #4294967295
 8018ee6:	441e      	add	r6, r3
 8018ee8:	e73c      	b.n	8018d64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8018eea:	b00f      	add	sp, #60	; 0x3c
 8018eec:	ecbd 8b08 	vpop	{d8-d11}
 8018ef0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8018ef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ef8:	880e      	ldrh	r6, [r1, #0]
 8018efa:	b085      	sub	sp, #20
 8018efc:	ea4f 2c26 	mov.w	ip, r6, asr #8
 8018f00:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 8018f04:	4690      	mov	r8, r2
 8018f06:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 8018f0a:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 8018f0e:	9200      	str	r2, [sp, #0]
 8018f10:	00f6      	lsls	r6, r6, #3
 8018f12:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 8018f16:	9201      	str	r2, [sp, #4]
 8018f18:	2c00      	cmp	r4, #0
 8018f1a:	b2f2      	uxtb	r2, r6
 8018f1c:	fb04 5603 	mla	r6, r4, r3, r5
 8018f20:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8018f24:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 8018f28:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8018f2c:	9202      	str	r2, [sp, #8]
 8018f2e:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 8018f32:	db36      	blt.n	8018fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 8018f34:	45a6      	cmp	lr, r4
 8018f36:	dd34      	ble.n	8018fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 8018f38:	2d00      	cmp	r5, #0
 8018f3a:	db30      	blt.n	8018f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 8018f3c:	42ab      	cmp	r3, r5
 8018f3e:	dd2e      	ble.n	8018f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 8018f40:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 8018f44:	1c6e      	adds	r6, r5, #1
 8018f46:	d42f      	bmi.n	8018fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8018f48:	42b3      	cmp	r3, r6
 8018f4a:	dd2d      	ble.n	8018fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8018f4c:	b370      	cbz	r0, 8018fac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb8>
 8018f4e:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8018f52:	3401      	adds	r4, #1
 8018f54:	d42e      	bmi.n	8018fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 8018f56:	45a6      	cmp	lr, r4
 8018f58:	dd2c      	ble.n	8018fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 8018f5a:	b377      	cbz	r7, 8018fba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc6>
 8018f5c:	2d00      	cmp	r5, #0
 8018f5e:	db27      	blt.n	8018fb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 8018f60:	42ab      	cmp	r3, r5
 8018f62:	dd25      	ble.n	8018fb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 8018f64:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8018f68:	3501      	adds	r5, #1
 8018f6a:	d429      	bmi.n	8018fc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8018f6c:	42ab      	cmp	r3, r5
 8018f6e:	dd27      	ble.n	8018fc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8018f70:	b340      	cbz	r0, 8018fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8018f72:	3301      	adds	r3, #1
 8018f74:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8018f78:	280f      	cmp	r0, #15
 8018f7a:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8018f7e:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8018f82:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8018f86:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8018f8a:	d801      	bhi.n	8018f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8018f8c:	2f0f      	cmp	r7, #15
 8018f8e:	d91b      	bls.n	8018fc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 8018f90:	4b84      	ldr	r3, [pc, #528]	; (80191a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b0>)
 8018f92:	4a85      	ldr	r2, [pc, #532]	; (80191a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 8018f94:	4885      	ldr	r0, [pc, #532]	; (80191ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 8018f96:	f240 210d 	movw	r1, #525	; 0x20d
 8018f9a:	f002 fa37 	bl	801b40c <__assert_func>
 8018f9e:	2200      	movs	r2, #0
 8018fa0:	e7d0      	b.n	8018f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x50>
 8018fa2:	2600      	movs	r6, #0
 8018fa4:	4632      	mov	r2, r6
 8018fa6:	e7d4      	b.n	8018f52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8018fa8:	2600      	movs	r6, #0
 8018faa:	e7d2      	b.n	8018f52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8018fac:	4606      	mov	r6, r0
 8018fae:	e7d0      	b.n	8018f52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8018fb0:	2400      	movs	r4, #0
 8018fb2:	e7d9      	b.n	8018f68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8018fb4:	2300      	movs	r3, #0
 8018fb6:	461c      	mov	r4, r3
 8018fb8:	e7de      	b.n	8018f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8018fba:	463b      	mov	r3, r7
 8018fbc:	463c      	mov	r4, r7
 8018fbe:	e7db      	b.n	8018f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8018fc0:	2300      	movs	r3, #0
 8018fc2:	e7d9      	b.n	8018f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8018fc4:	4603      	mov	r3, r0
 8018fc6:	e7d7      	b.n	8018f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8018fc8:	b280      	uxth	r0, r0
 8018fca:	b2bf      	uxth	r7, r7
 8018fcc:	fb00 fe07 	mul.w	lr, r0, r7
 8018fd0:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8018fd4:	0100      	lsls	r0, r0, #4
 8018fd6:	eba0 0c0e 	sub.w	ip, r0, lr
 8018fda:	b2bf      	uxth	r7, r7
 8018fdc:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8018fe0:	fa1f fc8c 	uxth.w	ip, ip
 8018fe4:	1bed      	subs	r5, r5, r7
 8018fe6:	b2ad      	uxth	r5, r5
 8018fe8:	fb0c f00a 	mul.w	r0, ip, sl
 8018fec:	fb05 000b 	mla	r0, r5, fp, r0
 8018ff0:	fb07 0009 	mla	r0, r7, r9, r0
 8018ff4:	fb0e 0008 	mla	r0, lr, r8, r0
 8018ff8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018ffc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019000:	9003      	str	r0, [sp, #12]
 8019002:	d018      	beq.n	8019036 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 8019004:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019008:	fb0b f000 	mul.w	r0, fp, r0
 801900c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019010:	fb0b fb02 	mul.w	fp, fp, r2
 8019014:	0a02      	lsrs	r2, r0, #8
 8019016:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801901a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801901e:	4402      	add	r2, r0
 8019020:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8019024:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8019028:	0a12      	lsrs	r2, r2, #8
 801902a:	0a00      	lsrs	r0, r0, #8
 801902c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019030:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019034:	4302      	orrs	r2, r0
 8019036:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801903a:	d019      	beq.n	8019070 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 801903c:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8019040:	fb0a fb0b 	mul.w	fp, sl, fp
 8019044:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019048:	fb0a fa06 	mul.w	sl, sl, r6
 801904c:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8019050:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019054:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019058:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801905c:	445e      	add	r6, fp
 801905e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8019062:	0a36      	lsrs	r6, r6, #8
 8019064:	0a00      	lsrs	r0, r0, #8
 8019066:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801906a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801906e:	4306      	orrs	r6, r0
 8019070:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019074:	d019      	beq.n	80190aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 8019076:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801907a:	fb09 fa0a 	mul.w	sl, r9, sl
 801907e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019082:	fb09 f904 	mul.w	r9, r9, r4
 8019086:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801908a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801908e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019092:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8019096:	4454      	add	r4, sl
 8019098:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801909c:	0a24      	lsrs	r4, r4, #8
 801909e:	0a00      	lsrs	r0, r0, #8
 80190a0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80190a4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80190a8:	4304      	orrs	r4, r0
 80190aa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80190ae:	d019      	beq.n	80190e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 80190b0:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80190b4:	fb08 f909 	mul.w	r9, r8, r9
 80190b8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80190bc:	fb08 f803 	mul.w	r8, r8, r3
 80190c0:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80190c4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80190c8:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80190cc:	f508 7080 	add.w	r0, r8, #256	; 0x100
 80190d0:	444b      	add	r3, r9
 80190d2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80190d6:	0a1b      	lsrs	r3, r3, #8
 80190d8:	0a00      	lsrs	r0, r0, #8
 80190da:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80190de:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80190e2:	4303      	orrs	r3, r0
 80190e4:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80190e8:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80190ec:	fb0c f808 	mul.w	r8, ip, r8
 80190f0:	fb05 8800 	mla	r8, r5, r0, r8
 80190f4:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 80190f8:	fb07 8800 	mla	r8, r7, r0, r8
 80190fc:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8019100:	fb0e 8000 	mla	r0, lr, r0, r8
 8019104:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019108:	fb0c f606 	mul.w	r6, ip, r6
 801910c:	0a00      	lsrs	r0, r0, #8
 801910e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019112:	fb05 6202 	mla	r2, r5, r2, r6
 8019116:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801911a:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 801911e:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8019122:	fb07 2700 	mla	r7, r7, r0, r2
 8019126:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801912a:	9b03      	ldr	r3, [sp, #12]
 801912c:	9c00      	ldr	r4, [sp, #0]
 801912e:	b2ad      	uxth	r5, r5
 8019130:	436b      	muls	r3, r5
 8019132:	fb0e 7000 	mla	r0, lr, r0, r7
 8019136:	1c5a      	adds	r2, r3, #1
 8019138:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801913c:	0a00      	lsrs	r0, r0, #8
 801913e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019142:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8019146:	ea48 0000 	orr.w	r0, r8, r0
 801914a:	b2d2      	uxtb	r2, r2
 801914c:	fb14 f602 	smulbb	r6, r4, r2
 8019150:	0c03      	lsrs	r3, r0, #16
 8019152:	fb03 6305 	mla	r3, r3, r5, r6
 8019156:	b29e      	uxth	r6, r3
 8019158:	9b01      	ldr	r3, [sp, #4]
 801915a:	f3c0 2407 	ubfx	r4, r0, #8, #8
 801915e:	fb13 f302 	smulbb	r3, r3, r2
 8019162:	fb04 3405 	mla	r4, r4, r5, r3
 8019166:	9b02      	ldr	r3, [sp, #8]
 8019168:	b2c0      	uxtb	r0, r0
 801916a:	fb13 f202 	smulbb	r2, r3, r2
 801916e:	fb00 2005 	mla	r0, r0, r5, r2
 8019172:	b280      	uxth	r0, r0
 8019174:	b2a4      	uxth	r4, r4
 8019176:	1c42      	adds	r2, r0, #1
 8019178:	1c73      	adds	r3, r6, #1
 801917a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801917e:	1c62      	adds	r2, r4, #1
 8019180:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8019184:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019188:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801918c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8019190:	0952      	lsrs	r2, r2, #5
 8019192:	4303      	orrs	r3, r0
 8019194:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019198:	4313      	orrs	r3, r2
 801919a:	800b      	strh	r3, [r1, #0]
 801919c:	b005      	add	sp, #20
 801919e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80191a2:	bf00      	nop
 80191a4:	0801f307 	.word	0x0801f307
 80191a8:	0801f8c5 	.word	0x0801f8c5
 80191ac:	0801f3f0 	.word	0x0801f3f0

080191b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80191b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191b4:	ed2d 8b08 	vpush	{d8-d11}
 80191b8:	b09d      	sub	sp, #116	; 0x74
 80191ba:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 80191be:	9219      	str	r2, [sp, #100]	; 0x64
 80191c0:	9307      	str	r3, [sp, #28]
 80191c2:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 80191c4:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 80191c8:	931a      	str	r3, [sp, #104]	; 0x68
 80191ca:	9117      	str	r1, [sp, #92]	; 0x5c
 80191cc:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 80191d0:	901b      	str	r0, [sp, #108]	; 0x6c
 80191d2:	6850      	ldr	r0, [r2, #4]
 80191d4:	6812      	ldr	r2, [r2, #0]
 80191d6:	fb00 1303 	mla	r3, r0, r3, r1
 80191da:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80191de:	930a      	str	r3, [sp, #40]	; 0x28
 80191e0:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80191e2:	681b      	ldr	r3, [r3, #0]
 80191e4:	9310      	str	r3, [sp, #64]	; 0x40
 80191e6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80191ea:	930b      	str	r3, [sp, #44]	; 0x2c
 80191ec:	eeb0 aa40 	vmov.f32	s20, s0
 80191f0:	eef0 9a60 	vmov.f32	s19, s1
 80191f4:	eeb0 9a41 	vmov.f32	s18, s2
 80191f8:	eeb0 8a62 	vmov.f32	s16, s5
 80191fc:	eef0 8a43 	vmov.f32	s17, s6
 8019200:	eef0 ba44 	vmov.f32	s23, s8
 8019204:	eeb0 ba64 	vmov.f32	s22, s9
 8019208:	eef0 aa45 	vmov.f32	s21, s10
 801920c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801920e:	2b00      	cmp	r3, #0
 8019210:	dc03      	bgt.n	801921a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019212:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019214:	2b00      	cmp	r3, #0
 8019216:	f340 837b 	ble.w	8019910 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 801921a:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801921c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019220:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019224:	1e48      	subs	r0, r1, #1
 8019226:	1e57      	subs	r7, r2, #1
 8019228:	9b07      	ldr	r3, [sp, #28]
 801922a:	2b00      	cmp	r3, #0
 801922c:	f340 8194 	ble.w	8019558 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 8019230:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019234:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019238:	d406      	bmi.n	8019248 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801923a:	4584      	cmp	ip, r0
 801923c:	da04      	bge.n	8019248 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801923e:	2b00      	cmp	r3, #0
 8019240:	db02      	blt.n	8019248 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019242:	42bb      	cmp	r3, r7
 8019244:	f2c0 8189 	blt.w	801955a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8019248:	f11c 0c01 	adds.w	ip, ip, #1
 801924c:	f100 8179 	bmi.w	8019542 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 8019250:	4561      	cmp	r1, ip
 8019252:	f2c0 8176 	blt.w	8019542 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 8019256:	3301      	adds	r3, #1
 8019258:	f100 8173 	bmi.w	8019542 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801925c:	429a      	cmp	r2, r3
 801925e:	f2c0 8170 	blt.w	8019542 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 8019262:	9b07      	ldr	r3, [sp, #28]
 8019264:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019266:	9318      	str	r3, [sp, #96]	; 0x60
 8019268:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801926a:	2b00      	cmp	r3, #0
 801926c:	f340 8192 	ble.w	8019594 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8019270:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8019272:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019274:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019278:	689b      	ldr	r3, [r3, #8]
 801927a:	1422      	asrs	r2, r4, #16
 801927c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019280:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019284:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019288:	f100 81d3 	bmi.w	8019632 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801928c:	f103 38ff 	add.w	r8, r3, #4294967295
 8019290:	4542      	cmp	r2, r8
 8019292:	f280 81ce 	bge.w	8019632 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 8019296:	f1bc 0f00 	cmp.w	ip, #0
 801929a:	f2c0 81ca 	blt.w	8019632 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801929e:	f10e 38ff 	add.w	r8, lr, #4294967295
 80192a2:	45c4      	cmp	ip, r8
 80192a4:	f280 81c5 	bge.w	8019632 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 80192a8:	b21b      	sxth	r3, r3
 80192aa:	fb0c 2203 	mla	r2, ip, r3, r2
 80192ae:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80192b0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80192b4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80192b8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80192bc:	2800      	cmp	r0, #0
 80192be:	f000 81af 	beq.w	8019620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 80192c2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80192c6:	950c      	str	r5, [sp, #48]	; 0x30
 80192c8:	0e2d      	lsrs	r5, r5, #24
 80192ca:	9513      	str	r5, [sp, #76]	; 0x4c
 80192cc:	b181      	cbz	r1, 80192f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80192ce:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80192d2:	3b01      	subs	r3, #1
 80192d4:	009b      	lsls	r3, r3, #2
 80192d6:	3304      	adds	r3, #4
 80192d8:	eb08 0c03 	add.w	ip, r8, r3
 80192dc:	f858 3003 	ldr.w	r3, [r8, r3]
 80192e0:	9308      	str	r3, [sp, #32]
 80192e2:	0e1b      	lsrs	r3, r3, #24
 80192e4:	9311      	str	r3, [sp, #68]	; 0x44
 80192e6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80192ea:	930d      	str	r3, [sp, #52]	; 0x34
 80192ec:	0e1b      	lsrs	r3, r3, #24
 80192ee:	9314      	str	r3, [sp, #80]	; 0x50
 80192f0:	b280      	uxth	r0, r0
 80192f2:	b289      	uxth	r1, r1
 80192f4:	fb00 f901 	mul.w	r9, r0, r1
 80192f8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80192fc:	0100      	lsls	r0, r0, #4
 80192fe:	eba0 0809 	sub.w	r8, r0, r9
 8019302:	b289      	uxth	r1, r1
 8019304:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8019308:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801930a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801930c:	fa1f f888 	uxth.w	r8, r8
 8019310:	1a5b      	subs	r3, r3, r1
 8019312:	b29b      	uxth	r3, r3
 8019314:	fb08 f000 	mul.w	r0, r8, r0
 8019318:	fb03 000e 	mla	r0, r3, lr, r0
 801931c:	fb01 0005 	mla	r0, r1, r5, r0
 8019320:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019322:	fb09 0005 	mla	r0, r9, r5, r0
 8019326:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801932a:	2800      	cmp	r0, #0
 801932c:	f000 8100 	beq.w	8019530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 8019330:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019334:	d01b      	beq.n	801936e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 8019336:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801933a:	fb0e fa0a 	mul.w	sl, lr, sl
 801933e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019342:	fb0e fe02 	mul.w	lr, lr, r2
 8019346:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801934a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801934e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019352:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019356:	4452      	add	r2, sl
 8019358:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801935c:	0a12      	lsrs	r2, r2, #8
 801935e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019362:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019366:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801936a:	ea42 020c 	orr.w	r2, r2, ip
 801936e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019370:	2dff      	cmp	r5, #255	; 0xff
 8019372:	d021      	beq.n	80193b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8019374:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019376:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801937a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801937c:	fb05 fb0b 	mul.w	fp, r5, fp
 8019380:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019382:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019386:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019388:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801938c:	fb05 fa0a 	mul.w	sl, r5, sl
 8019390:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019394:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019398:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801939c:	44de      	add	lr, fp
 801939e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80193a2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80193a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80193aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80193ae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80193b2:	ea4e 050a 	orr.w	r5, lr, sl
 80193b6:	950c      	str	r5, [sp, #48]	; 0x30
 80193b8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80193ba:	2dff      	cmp	r5, #255	; 0xff
 80193bc:	d021      	beq.n	8019402 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80193be:	9d08      	ldr	r5, [sp, #32]
 80193c0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80193c4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80193c6:	fb05 fb0b 	mul.w	fp, r5, fp
 80193ca:	9d08      	ldr	r5, [sp, #32]
 80193cc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80193d0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80193d2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80193d6:	fb05 fa0a 	mul.w	sl, r5, sl
 80193da:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80193de:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80193e2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80193e6:	44de      	add	lr, fp
 80193e8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80193ec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80193f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80193f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80193f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80193fc:	ea4e 050a 	orr.w	r5, lr, sl
 8019400:	9508      	str	r5, [sp, #32]
 8019402:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019404:	2dff      	cmp	r5, #255	; 0xff
 8019406:	d021      	beq.n	801944c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8019408:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801940a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801940e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019410:	fb05 fb0b 	mul.w	fp, r5, fp
 8019414:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019416:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801941a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801941c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019420:	fb05 fa0a 	mul.w	sl, r5, sl
 8019424:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019428:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801942c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019430:	44de      	add	lr, fp
 8019432:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019436:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801943a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801943e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019442:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019446:	ea4e 050a 	orr.w	r5, lr, sl
 801944a:	950d      	str	r5, [sp, #52]	; 0x34
 801944c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801944e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019452:	9d08      	ldr	r5, [sp, #32]
 8019454:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8019458:	fb08 fc0c 	mul.w	ip, r8, ip
 801945c:	fb03 cc0e 	mla	ip, r3, lr, ip
 8019460:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019464:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019466:	fb01 cc0e 	mla	ip, r1, lr, ip
 801946a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801946e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019470:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019474:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019478:	fb08 f80e 	mul.w	r8, r8, lr
 801947c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019480:	fb03 8202 	mla	r2, r3, r2, r8
 8019484:	9b08      	ldr	r3, [sp, #32]
 8019486:	f8b7 e000 	ldrh.w	lr, [r7]
 801948a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801948c:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8019490:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019492:	fb01 220a 	mla	r2, r1, sl, r2
 8019496:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801949a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801949c:	fb09 2901 	mla	r9, r9, r1, r2
 80194a0:	4343      	muls	r3, r0
 80194a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80194a6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80194aa:	1c58      	adds	r0, r3, #1
 80194ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80194b0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80194b4:	ea4c 0c09 	orr.w	ip, ip, r9
 80194b8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80194bc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80194be:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80194c2:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80194c6:	ea4f 232e 	mov.w	r3, lr, asr #8
 80194ca:	b2c0      	uxtb	r0, r0
 80194cc:	fb11 f102 	smulbb	r1, r1, r2
 80194d0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80194d4:	fb03 1300 	mla	r3, r3, r0, r1
 80194d8:	b299      	uxth	r1, r3
 80194da:	ea4f 02ee 	mov.w	r2, lr, asr #3
 80194de:	f3cc 2307 	ubfx	r3, ip, #8, #8
 80194e2:	fb13 f305 	smulbb	r3, r3, r5
 80194e6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80194ea:	fb02 3200 	mla	r2, r2, r0, r3
 80194ee:	fa5f fc8c 	uxtb.w	ip, ip
 80194f2:	ea4f 03ce 	mov.w	r3, lr, lsl #3
 80194f6:	b2db      	uxtb	r3, r3
 80194f8:	fb1c fc05 	smulbb	ip, ip, r5
 80194fc:	fb03 cc00 	mla	ip, r3, r0, ip
 8019500:	b292      	uxth	r2, r2
 8019502:	fa1f fc8c 	uxth.w	ip, ip
 8019506:	1c4b      	adds	r3, r1, #1
 8019508:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801950c:	f10c 0001 	add.w	r0, ip, #1
 8019510:	1c51      	adds	r1, r2, #1
 8019512:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8019516:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801951a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801951e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019522:	0952      	lsrs	r2, r2, #5
 8019524:	ea43 030c 	orr.w	r3, r3, ip
 8019528:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801952c:	4313      	orrs	r3, r2
 801952e:	803b      	strh	r3, [r7, #0]
 8019530:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019532:	441c      	add	r4, r3
 8019534:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019536:	441e      	add	r6, r3
 8019538:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801953a:	3b01      	subs	r3, #1
 801953c:	3702      	adds	r7, #2
 801953e:	9318      	str	r3, [sp, #96]	; 0x60
 8019540:	e692      	b.n	8019268 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8019542:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019544:	441c      	add	r4, r3
 8019546:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019548:	441e      	add	r6, r3
 801954a:	9b07      	ldr	r3, [sp, #28]
 801954c:	3b01      	subs	r3, #1
 801954e:	9307      	str	r3, [sp, #28]
 8019550:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019552:	3302      	adds	r3, #2
 8019554:	930a      	str	r3, [sp, #40]	; 0x28
 8019556:	e667      	b.n	8019228 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019558:	d023      	beq.n	80195a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801955a:	9b07      	ldr	r3, [sp, #28]
 801955c:	9831      	ldr	r0, [sp, #196]	; 0xc4
 801955e:	3b01      	subs	r3, #1
 8019560:	fb00 4003 	mla	r0, r0, r3, r4
 8019564:	1400      	asrs	r0, r0, #16
 8019566:	f53f ae7c 	bmi.w	8019262 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801956a:	3901      	subs	r1, #1
 801956c:	4288      	cmp	r0, r1
 801956e:	f6bf ae78 	bge.w	8019262 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019572:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8019574:	fb01 6303 	mla	r3, r1, r3, r6
 8019578:	141b      	asrs	r3, r3, #16
 801957a:	f53f ae72 	bmi.w	8019262 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801957e:	3a01      	subs	r2, #1
 8019580:	4293      	cmp	r3, r2
 8019582:	f6bf ae6e 	bge.w	8019262 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019586:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801958a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801958e:	f1bb 0f00 	cmp.w	fp, #0
 8019592:	dc6c      	bgt.n	801966e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 8019594:	9b07      	ldr	r3, [sp, #28]
 8019596:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801959a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801959c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80195a0:	930a      	str	r3, [sp, #40]	; 0x28
 80195a2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80195a4:	2b00      	cmp	r3, #0
 80195a6:	f340 81b3 	ble.w	8019910 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 80195aa:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80195ae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80195b2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80195b6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80195b8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80195bc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80195c0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80195c4:	eef0 6a48 	vmov.f32	s13, s16
 80195c8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80195cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80195d0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80195d4:	ee16 4a90 	vmov	r4, s13
 80195d8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80195dc:	eef0 6a68 	vmov.f32	s13, s17
 80195e0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80195e4:	ee18 2a10 	vmov	r2, s16
 80195e8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80195ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80195f0:	ee18 2a90 	vmov	r2, s17
 80195f4:	9331      	str	r3, [sp, #196]	; 0xc4
 80195f6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80195f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80195fc:	9332      	str	r3, [sp, #200]	; 0xc8
 80195fe:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019600:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8019602:	3b01      	subs	r3, #1
 8019604:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019608:	9317      	str	r3, [sp, #92]	; 0x5c
 801960a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801960c:	bf08      	it	eq
 801960e:	4613      	moveq	r3, r2
 8019610:	ee16 6a90 	vmov	r6, s13
 8019614:	9307      	str	r3, [sp, #28]
 8019616:	eef0 8a67 	vmov.f32	s17, s15
 801961a:	eeb0 8a47 	vmov.f32	s16, s14
 801961e:	e5f5      	b.n	801920c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019620:	2900      	cmp	r1, #0
 8019622:	f43f ae65 	beq.w	80192f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8019626:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801962a:	9308      	str	r3, [sp, #32]
 801962c:	0e1b      	lsrs	r3, r3, #24
 801962e:	9311      	str	r3, [sp, #68]	; 0x44
 8019630:	e65e      	b.n	80192f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8019632:	f112 0801 	adds.w	r8, r2, #1
 8019636:	f53f af7b 	bmi.w	8019530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801963a:	4543      	cmp	r3, r8
 801963c:	f6ff af78 	blt.w	8019530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 8019640:	f11c 0801 	adds.w	r8, ip, #1
 8019644:	f53f af74 	bmi.w	8019530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 8019648:	45c6      	cmp	lr, r8
 801964a:	f6ff af71 	blt.w	8019530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801964e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8019650:	9201      	str	r2, [sp, #4]
 8019652:	fa0f f28e 	sxth.w	r2, lr
 8019656:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801965a:	e9cd c002 	strd	ip, r0, [sp, #8]
 801965e:	9200      	str	r2, [sp, #0]
 8019660:	b21b      	sxth	r3, r3
 8019662:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019664:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8019666:	4639      	mov	r1, r7
 8019668:	f7ff fc44 	bl	8018ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801966c:	e760      	b.n	8019530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801966e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019670:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019672:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019676:	1427      	asrs	r7, r4, #16
 8019678:	1433      	asrs	r3, r6, #16
 801967a:	fb01 7303 	mla	r3, r1, r3, r7
 801967e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8019682:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8019686:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801968a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801968e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019692:	2a00      	cmp	r2, #0
 8019694:	f000 8133 	beq.w	80198fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74e>
 8019698:	687d      	ldr	r5, [r7, #4]
 801969a:	950e      	str	r5, [sp, #56]	; 0x38
 801969c:	0e2d      	lsrs	r5, r5, #24
 801969e:	9515      	str	r5, [sp, #84]	; 0x54
 80196a0:	b178      	cbz	r0, 80196c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 80196a2:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80196a6:	3901      	subs	r1, #1
 80196a8:	0089      	lsls	r1, r1, #2
 80196aa:	3104      	adds	r1, #4
 80196ac:	eb07 0e01 	add.w	lr, r7, r1
 80196b0:	5879      	ldr	r1, [r7, r1]
 80196b2:	9109      	str	r1, [sp, #36]	; 0x24
 80196b4:	0e09      	lsrs	r1, r1, #24
 80196b6:	9112      	str	r1, [sp, #72]	; 0x48
 80196b8:	f8de 1004 	ldr.w	r1, [lr, #4]
 80196bc:	910f      	str	r1, [sp, #60]	; 0x3c
 80196be:	0e09      	lsrs	r1, r1, #24
 80196c0:	9116      	str	r1, [sp, #88]	; 0x58
 80196c2:	b292      	uxth	r2, r2
 80196c4:	b280      	uxth	r0, r0
 80196c6:	fb02 f800 	mul.w	r8, r2, r0
 80196ca:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80196ce:	0112      	lsls	r2, r2, #4
 80196d0:	eba2 0e08 	sub.w	lr, r2, r8
 80196d4:	b280      	uxth	r0, r0
 80196d6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80196da:	9915      	ldr	r1, [sp, #84]	; 0x54
 80196dc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80196de:	fa1f fe8e 	uxth.w	lr, lr
 80196e2:	1a12      	subs	r2, r2, r0
 80196e4:	b292      	uxth	r2, r2
 80196e6:	fb0e f101 	mul.w	r1, lr, r1
 80196ea:	fb02 110c 	mla	r1, r2, ip, r1
 80196ee:	fb00 1105 	mla	r1, r0, r5, r1
 80196f2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80196f4:	fb08 1105 	mla	r1, r8, r5, r1
 80196f8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80196fc:	2900      	cmp	r1, #0
 80196fe:	f000 80f5 	beq.w	80198ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73c>
 8019702:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019706:	d019      	beq.n	801973c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
 8019708:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801970c:	fb0c fa0a 	mul.w	sl, ip, sl
 8019710:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019714:	fb0c fc03 	mul.w	ip, ip, r3
 8019718:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801971c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019720:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019724:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8019728:	4453      	add	r3, sl
 801972a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801972e:	0a1b      	lsrs	r3, r3, #8
 8019730:	0a3f      	lsrs	r7, r7, #8
 8019732:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019736:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801973a:	433b      	orrs	r3, r7
 801973c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801973e:	2dff      	cmp	r5, #255	; 0xff
 8019740:	d020      	beq.n	8019784 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
 8019742:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019744:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019748:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801974a:	436f      	muls	r7, r5
 801974c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801974e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019752:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019754:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019758:	fb05 fa0a 	mul.w	sl, r5, sl
 801975c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019760:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019764:	44bc      	add	ip, r7
 8019766:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801976a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801976e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019772:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019776:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801977a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801977e:	ea4c 050a 	orr.w	r5, ip, sl
 8019782:	950e      	str	r5, [sp, #56]	; 0x38
 8019784:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019786:	2dff      	cmp	r5, #255	; 0xff
 8019788:	d020      	beq.n	80197cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 801978a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801978c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019790:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019792:	436f      	muls	r7, r5
 8019794:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019796:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801979a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801979c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80197a0:	fb05 fa0a 	mul.w	sl, r5, sl
 80197a4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80197a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80197ac:	44bc      	add	ip, r7
 80197ae:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80197b2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80197b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80197ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80197be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80197c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80197c6:	ea4c 050a 	orr.w	r5, ip, sl
 80197ca:	9509      	str	r5, [sp, #36]	; 0x24
 80197cc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80197ce:	2dff      	cmp	r5, #255	; 0xff
 80197d0:	d020      	beq.n	8019814 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
 80197d2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80197d4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80197d8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80197da:	436f      	muls	r7, r5
 80197dc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80197de:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80197e2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80197e4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80197e8:	fb05 fa0a 	mul.w	sl, r5, sl
 80197ec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80197f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80197f4:	44bc      	add	ip, r7
 80197f6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80197fa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80197fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019802:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019806:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801980a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801980e:	ea4c 050a 	orr.w	r5, ip, sl
 8019812:	950f      	str	r5, [sp, #60]	; 0x3c
 8019814:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019816:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801981a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801981c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019820:	fb0e f707 	mul.w	r7, lr, r7
 8019824:	fb02 770c 	mla	r7, r2, ip, r7
 8019828:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801982c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801982e:	fb00 770c 	mla	r7, r0, ip, r7
 8019832:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019836:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019838:	fb08 770c 	mla	r7, r8, ip, r7
 801983c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8019840:	fb0e fe0c 	mul.w	lr, lr, ip
 8019844:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019848:	fb02 e303 	mla	r3, r2, r3, lr
 801984c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801984e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019850:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8019854:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019856:	fb00 330a 	mla	r3, r0, sl, r3
 801985a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801985e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8019862:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019864:	f8b9 0000 	ldrh.w	r0, [r9]
 8019868:	4359      	muls	r1, r3
 801986a:	0a3f      	lsrs	r7, r7, #8
 801986c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019870:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019874:	1c4b      	adds	r3, r1, #1
 8019876:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801987a:	ea47 070c 	orr.w	r7, r7, ip
 801987e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019882:	1202      	asrs	r2, r0, #8
 8019884:	0c3b      	lsrs	r3, r7, #16
 8019886:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801988a:	b2c9      	uxtb	r1, r1
 801988c:	fb13 f305 	smulbb	r3, r3, r5
 8019890:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019894:	fb02 3201 	mla	r2, r2, r1, r3
 8019898:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801989c:	10c3      	asrs	r3, r0, #3
 801989e:	b2ff      	uxtb	r7, r7
 80198a0:	00c0      	lsls	r0, r0, #3
 80198a2:	b2c0      	uxtb	r0, r0
 80198a4:	fb17 f705 	smulbb	r7, r7, r5
 80198a8:	fb00 7001 	mla	r0, r0, r1, r7
 80198ac:	b292      	uxth	r2, r2
 80198ae:	fb1c fc05 	smulbb	ip, ip, r5
 80198b2:	b280      	uxth	r0, r0
 80198b4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80198b8:	fb03 c301 	mla	r3, r3, r1, ip
 80198bc:	1c51      	adds	r1, r2, #1
 80198be:	f100 0c01 	add.w	ip, r0, #1
 80198c2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80198c6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80198ca:	b29b      	uxth	r3, r3
 80198cc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80198d0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80198d4:	ea42 020c 	orr.w	r2, r2, ip
 80198d8:	f103 0c01 	add.w	ip, r3, #1
 80198dc:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80198e0:	095b      	lsrs	r3, r3, #5
 80198e2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80198e6:	431a      	orrs	r2, r3
 80198e8:	f8a9 2000 	strh.w	r2, [r9]
 80198ec:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80198ee:	441c      	add	r4, r3
 80198f0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80198f2:	f109 0902 	add.w	r9, r9, #2
 80198f6:	441e      	add	r6, r3
 80198f8:	f10b 3bff 	add.w	fp, fp, #4294967295
 80198fc:	e647      	b.n	801958e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 80198fe:	2800      	cmp	r0, #0
 8019900:	f43f aedf 	beq.w	80196c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8019904:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8019908:	9109      	str	r1, [sp, #36]	; 0x24
 801990a:	0e09      	lsrs	r1, r1, #24
 801990c:	9112      	str	r1, [sp, #72]	; 0x48
 801990e:	e6d8      	b.n	80196c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8019910:	b01d      	add	sp, #116	; 0x74
 8019912:	ecbd 8b08 	vpop	{d8-d11}
 8019916:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801991c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801991c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019920:	880e      	ldrh	r6, [r1, #0]
 8019922:	b085      	sub	sp, #20
 8019924:	ea4f 2c26 	mov.w	ip, r6, asr #8
 8019928:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 801992c:	4690      	mov	r8, r2
 801992e:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 8019932:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 8019936:	9200      	str	r2, [sp, #0]
 8019938:	00f6      	lsls	r6, r6, #3
 801993a:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 801993e:	9201      	str	r2, [sp, #4]
 8019940:	2c00      	cmp	r4, #0
 8019942:	b2f2      	uxtb	r2, r6
 8019944:	fb04 5603 	mla	r6, r4, r3, r5
 8019948:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801994c:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 8019950:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8019954:	9202      	str	r2, [sp, #8]
 8019956:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 801995a:	db36      	blt.n	80199ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801995c:	45a6      	cmp	lr, r4
 801995e:	dd34      	ble.n	80199ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8019960:	2d00      	cmp	r5, #0
 8019962:	db30      	blt.n	80199c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
 8019964:	42ab      	cmp	r3, r5
 8019966:	dd2e      	ble.n	80199c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
 8019968:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 801996c:	1c6e      	adds	r6, r5, #1
 801996e:	d42f      	bmi.n	80199d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
 8019970:	42b3      	cmp	r3, r6
 8019972:	dd2d      	ble.n	80199d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
 8019974:	b370      	cbz	r0, 80199d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb8>
 8019976:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801997a:	3401      	adds	r4, #1
 801997c:	d42e      	bmi.n	80199dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
 801997e:	45a6      	cmp	lr, r4
 8019980:	dd2c      	ble.n	80199dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
 8019982:	b377      	cbz	r7, 80199e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc6>
 8019984:	2d00      	cmp	r5, #0
 8019986:	db27      	blt.n	80199d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
 8019988:	42ab      	cmp	r3, r5
 801998a:	dd25      	ble.n	80199d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
 801998c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8019990:	3501      	adds	r5, #1
 8019992:	d429      	bmi.n	80199e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8019994:	42ab      	cmp	r3, r5
 8019996:	dd27      	ble.n	80199e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8019998:	b340      	cbz	r0, 80199ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801999a:	3301      	adds	r3, #1
 801999c:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 80199a0:	280f      	cmp	r0, #15
 80199a2:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80199a6:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80199aa:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80199ae:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80199b2:	d801      	bhi.n	80199b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9c>
 80199b4:	2f0f      	cmp	r7, #15
 80199b6:	d91b      	bls.n	80199f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 80199b8:	4b7d      	ldr	r3, [pc, #500]	; (8019bb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>)
 80199ba:	4a7e      	ldr	r2, [pc, #504]	; (8019bb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x298>)
 80199bc:	487e      	ldr	r0, [pc, #504]	; (8019bb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 80199be:	f240 210d 	movw	r1, #525	; 0x20d
 80199c2:	f001 fd23 	bl	801b40c <__assert_func>
 80199c6:	2200      	movs	r2, #0
 80199c8:	e7d0      	b.n	801996c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x50>
 80199ca:	2600      	movs	r6, #0
 80199cc:	4632      	mov	r2, r6
 80199ce:	e7d4      	b.n	801997a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 80199d0:	2600      	movs	r6, #0
 80199d2:	e7d2      	b.n	801997a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 80199d4:	4606      	mov	r6, r0
 80199d6:	e7d0      	b.n	801997a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 80199d8:	2400      	movs	r4, #0
 80199da:	e7d9      	b.n	8019990 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x74>
 80199dc:	2300      	movs	r3, #0
 80199de:	461c      	mov	r4, r3
 80199e0:	e7de      	b.n	80199a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 80199e2:	463b      	mov	r3, r7
 80199e4:	463c      	mov	r4, r7
 80199e6:	e7db      	b.n	80199a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 80199e8:	2300      	movs	r3, #0
 80199ea:	e7d9      	b.n	80199a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 80199ec:	4603      	mov	r3, r0
 80199ee:	e7d7      	b.n	80199a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 80199f0:	b280      	uxth	r0, r0
 80199f2:	b2bf      	uxth	r7, r7
 80199f4:	fb00 fe07 	mul.w	lr, r0, r7
 80199f8:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80199fc:	0100      	lsls	r0, r0, #4
 80199fe:	eba0 0c0e 	sub.w	ip, r0, lr
 8019a02:	b2bf      	uxth	r7, r7
 8019a04:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8019a08:	fa1f fc8c 	uxth.w	ip, ip
 8019a0c:	1bed      	subs	r5, r5, r7
 8019a0e:	b2ad      	uxth	r5, r5
 8019a10:	fb0c f00a 	mul.w	r0, ip, sl
 8019a14:	fb05 000b 	mla	r0, r5, fp, r0
 8019a18:	fb07 0009 	mla	r0, r7, r9, r0
 8019a1c:	fb0e 0008 	mla	r0, lr, r8, r0
 8019a20:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019a24:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019a28:	9003      	str	r0, [sp, #12]
 8019a2a:	d018      	beq.n	8019a5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 8019a2c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019a30:	fb0b f000 	mul.w	r0, fp, r0
 8019a34:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019a38:	fb0b fb02 	mul.w	fp, fp, r2
 8019a3c:	0a02      	lsrs	r2, r0, #8
 8019a3e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019a42:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8019a46:	4402      	add	r2, r0
 8019a48:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8019a4c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8019a50:	0a12      	lsrs	r2, r2, #8
 8019a52:	0a00      	lsrs	r0, r0, #8
 8019a54:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019a58:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019a5c:	4302      	orrs	r2, r0
 8019a5e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019a62:	d019      	beq.n	8019a98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 8019a64:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8019a68:	fb0a fb0b 	mul.w	fp, sl, fp
 8019a6c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019a70:	fb0a fa06 	mul.w	sl, sl, r6
 8019a74:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8019a78:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019a7c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019a80:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8019a84:	445e      	add	r6, fp
 8019a86:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8019a8a:	0a36      	lsrs	r6, r6, #8
 8019a8c:	0a00      	lsrs	r0, r0, #8
 8019a8e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019a92:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019a96:	4306      	orrs	r6, r0
 8019a98:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019a9c:	d019      	beq.n	8019ad2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 8019a9e:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8019aa2:	fb09 fa0a 	mul.w	sl, r9, sl
 8019aa6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019aaa:	fb09 f904 	mul.w	r9, r9, r4
 8019aae:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8019ab2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019ab6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019aba:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8019abe:	4454      	add	r4, sl
 8019ac0:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8019ac4:	0a24      	lsrs	r4, r4, #8
 8019ac6:	0a00      	lsrs	r0, r0, #8
 8019ac8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019acc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019ad0:	4304      	orrs	r4, r0
 8019ad2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019ad6:	d019      	beq.n	8019b0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 8019ad8:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8019adc:	fb08 f909 	mul.w	r9, r8, r9
 8019ae0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019ae4:	fb08 f803 	mul.w	r8, r8, r3
 8019ae8:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8019aec:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019af0:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8019af4:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8019af8:	444b      	add	r3, r9
 8019afa:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019afe:	0a1b      	lsrs	r3, r3, #8
 8019b00:	0a00      	lsrs	r0, r0, #8
 8019b02:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019b06:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019b0a:	4303      	orrs	r3, r0
 8019b0c:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8019b10:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019b14:	fb0c f808 	mul.w	r8, ip, r8
 8019b18:	fb05 8800 	mla	r8, r5, r0, r8
 8019b1c:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8019b20:	fb07 8800 	mla	r8, r7, r0, r8
 8019b24:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8019b28:	fb0e 8000 	mla	r0, lr, r0, r8
 8019b2c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019b30:	0a00      	lsrs	r0, r0, #8
 8019b32:	fb0c f606 	mul.w	r6, ip, r6
 8019b36:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019b3a:	fb05 6202 	mla	r2, r5, r2, r6
 8019b3e:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8019b42:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8019b46:	fb07 2700 	mla	r7, r7, r0, r2
 8019b4a:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8019b4e:	9b03      	ldr	r3, [sp, #12]
 8019b50:	9c02      	ldr	r4, [sp, #8]
 8019b52:	9d01      	ldr	r5, [sp, #4]
 8019b54:	fb0e 7000 	mla	r0, lr, r0, r7
 8019b58:	43da      	mvns	r2, r3
 8019b5a:	9b00      	ldr	r3, [sp, #0]
 8019b5c:	b2d2      	uxtb	r2, r2
 8019b5e:	0a00      	lsrs	r0, r0, #8
 8019b60:	4353      	muls	r3, r2
 8019b62:	4354      	muls	r4, r2
 8019b64:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019b68:	ea48 0000 	orr.w	r0, r8, r0
 8019b6c:	4355      	muls	r5, r2
 8019b6e:	4622      	mov	r2, r4
 8019b70:	1c5c      	adds	r4, r3, #1
 8019b72:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 8019b76:	0c03      	lsrs	r3, r0, #16
 8019b78:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8019b7c:	4b0f      	ldr	r3, [pc, #60]	; (8019bbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 8019b7e:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 8019b82:	1c54      	adds	r4, r2, #1
 8019b84:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8019b88:	b2c2      	uxtb	r2, r0
 8019b8a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019b8e:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8019b92:	1c6a      	adds	r2, r5, #1
 8019b94:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8019b98:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019b9c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019ba0:	00c0      	lsls	r0, r0, #3
 8019ba2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019ba6:	4318      	orrs	r0, r3
 8019ba8:	8008      	strh	r0, [r1, #0]
 8019baa:	b005      	add	sp, #20
 8019bac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019bb0:	0801f307 	.word	0x0801f307
 8019bb4:	0801f8c5 	.word	0x0801f8c5
 8019bb8:	0801f3f0 	.word	0x0801f3f0
 8019bbc:	fffff800 	.word	0xfffff800

08019bc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019bc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019bc4:	ed2d 8b08 	vpush	{d8-d11}
 8019bc8:	b09b      	sub	sp, #108	; 0x6c
 8019bca:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 8019bce:	9218      	str	r2, [sp, #96]	; 0x60
 8019bd0:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8019bd2:	9116      	str	r1, [sp, #88]	; 0x58
 8019bd4:	9307      	str	r3, [sp, #28]
 8019bd6:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8019bda:	9019      	str	r0, [sp, #100]	; 0x64
 8019bdc:	6850      	ldr	r0, [r2, #4]
 8019bde:	6812      	ldr	r2, [r2, #0]
 8019be0:	fb00 1303 	mla	r3, r0, r3, r1
 8019be4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019be8:	930a      	str	r3, [sp, #40]	; 0x28
 8019bea:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019bec:	681b      	ldr	r3, [r3, #0]
 8019bee:	930f      	str	r3, [sp, #60]	; 0x3c
 8019bf0:	eeb0 aa40 	vmov.f32	s20, s0
 8019bf4:	eef0 9a60 	vmov.f32	s19, s1
 8019bf8:	eeb0 9a41 	vmov.f32	s18, s2
 8019bfc:	eeb0 8a62 	vmov.f32	s16, s5
 8019c00:	eef0 8a43 	vmov.f32	s17, s6
 8019c04:	eef0 ba44 	vmov.f32	s23, s8
 8019c08:	eeb0 ba64 	vmov.f32	s22, s9
 8019c0c:	eef0 aa45 	vmov.f32	s21, s10
 8019c10:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019c12:	2b00      	cmp	r3, #0
 8019c14:	dc03      	bgt.n	8019c1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019c16:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019c18:	2b00      	cmp	r3, #0
 8019c1a:	f340 838a 	ble.w	801a332 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x772>
 8019c1e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019c20:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019c24:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019c28:	1e48      	subs	r0, r1, #1
 8019c2a:	1e57      	subs	r7, r2, #1
 8019c2c:	9b07      	ldr	r3, [sp, #28]
 8019c2e:	2b00      	cmp	r3, #0
 8019c30:	f340 818b 	ble.w	8019f4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019c34:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019c38:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019c3c:	d406      	bmi.n	8019c4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019c3e:	4584      	cmp	ip, r0
 8019c40:	da04      	bge.n	8019c4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019c42:	2b00      	cmp	r3, #0
 8019c44:	db02      	blt.n	8019c4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019c46:	42bb      	cmp	r3, r7
 8019c48:	f2c0 8180 	blt.w	8019f4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8019c4c:	f11c 0c01 	adds.w	ip, ip, #1
 8019c50:	f100 8170 	bmi.w	8019f34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019c54:	4561      	cmp	r1, ip
 8019c56:	f2c0 816d 	blt.w	8019f34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019c5a:	3301      	adds	r3, #1
 8019c5c:	f100 816a 	bmi.w	8019f34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019c60:	429a      	cmp	r2, r3
 8019c62:	f2c0 8167 	blt.w	8019f34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019c66:	9b07      	ldr	r3, [sp, #28]
 8019c68:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019c6a:	9317      	str	r3, [sp, #92]	; 0x5c
 8019c6c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019c6e:	2b00      	cmp	r3, #0
 8019c70:	f340 8189 	ble.w	8019f86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 8019c74:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8019c76:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019c78:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019c7c:	689b      	ldr	r3, [r3, #8]
 8019c7e:	1422      	asrs	r2, r4, #16
 8019c80:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019c84:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8019c88:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019c8c:	f100 81d8 	bmi.w	801a040 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8019c90:	f103 38ff 	add.w	r8, r3, #4294967295
 8019c94:	4542      	cmp	r2, r8
 8019c96:	f280 81d3 	bge.w	801a040 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8019c9a:	f1bc 0f00 	cmp.w	ip, #0
 8019c9e:	f2c0 81cf 	blt.w	801a040 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8019ca2:	f10e 38ff 	add.w	r8, lr, #4294967295
 8019ca6:	45c4      	cmp	ip, r8
 8019ca8:	f280 81ca 	bge.w	801a040 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8019cac:	b21b      	sxth	r3, r3
 8019cae:	fb0c 2203 	mla	r2, ip, r3, r2
 8019cb2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019cb4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8019cb8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8019cbc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8019cc0:	2900      	cmp	r1, #0
 8019cc2:	f000 81a6 	beq.w	801a012 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8019cc6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8019cca:	950b      	str	r5, [sp, #44]	; 0x2c
 8019ccc:	0e2d      	lsrs	r5, r5, #24
 8019cce:	9512      	str	r5, [sp, #72]	; 0x48
 8019cd0:	b180      	cbz	r0, 8019cf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8019cd2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8019cd6:	3b01      	subs	r3, #1
 8019cd8:	009b      	lsls	r3, r3, #2
 8019cda:	3304      	adds	r3, #4
 8019cdc:	eb08 0c03 	add.w	ip, r8, r3
 8019ce0:	f858 3003 	ldr.w	r3, [r8, r3]
 8019ce4:	9308      	str	r3, [sp, #32]
 8019ce6:	0e1b      	lsrs	r3, r3, #24
 8019ce8:	9310      	str	r3, [sp, #64]	; 0x40
 8019cea:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8019cee:	930c      	str	r3, [sp, #48]	; 0x30
 8019cf0:	0e1b      	lsrs	r3, r3, #24
 8019cf2:	9313      	str	r3, [sp, #76]	; 0x4c
 8019cf4:	b289      	uxth	r1, r1
 8019cf6:	b280      	uxth	r0, r0
 8019cf8:	fb01 f900 	mul.w	r9, r1, r0
 8019cfc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8019d00:	0109      	lsls	r1, r1, #4
 8019d02:	eba1 0809 	sub.w	r8, r1, r9
 8019d06:	b280      	uxth	r0, r0
 8019d08:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8019d0c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019d0e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019d10:	fa1f f888 	uxth.w	r8, r8
 8019d14:	1a09      	subs	r1, r1, r0
 8019d16:	b289      	uxth	r1, r1
 8019d18:	fb08 f303 	mul.w	r3, r8, r3
 8019d1c:	fb01 330e 	mla	r3, r1, lr, r3
 8019d20:	fb00 3305 	mla	r3, r0, r5, r3
 8019d24:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019d26:	fb09 3305 	mla	r3, r9, r5, r3
 8019d2a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019d2e:	2b00      	cmp	r3, #0
 8019d30:	f000 80f7 	beq.w	8019f22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8019d34:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019d38:	d01b      	beq.n	8019d72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 8019d3a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8019d3e:	fb0e fa0a 	mul.w	sl, lr, sl
 8019d42:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019d46:	fb0e fe02 	mul.w	lr, lr, r2
 8019d4a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8019d4e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019d52:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019d56:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019d5a:	4452      	add	r2, sl
 8019d5c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019d60:	0a12      	lsrs	r2, r2, #8
 8019d62:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019d66:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019d6a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019d6e:	ea42 020c 	orr.w	r2, r2, ip
 8019d72:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019d74:	2dff      	cmp	r5, #255	; 0xff
 8019d76:	d021      	beq.n	8019dbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8019d78:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019d7a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019d7e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019d80:	fb05 fb0b 	mul.w	fp, r5, fp
 8019d84:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019d86:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019d8a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019d8c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019d90:	fb05 fa0a 	mul.w	sl, r5, sl
 8019d94:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019d98:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019d9c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019da0:	44de      	add	lr, fp
 8019da2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019da6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019daa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019dae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019db2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019db6:	ea4e 050a 	orr.w	r5, lr, sl
 8019dba:	950b      	str	r5, [sp, #44]	; 0x2c
 8019dbc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019dbe:	2dff      	cmp	r5, #255	; 0xff
 8019dc0:	d021      	beq.n	8019e06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8019dc2:	9d08      	ldr	r5, [sp, #32]
 8019dc4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019dc8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019dca:	fb05 fb0b 	mul.w	fp, r5, fp
 8019dce:	9d08      	ldr	r5, [sp, #32]
 8019dd0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019dd4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019dd6:	fb05 fa0e 	mul.w	sl, r5, lr
 8019dda:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019dde:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019de2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019de6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019dea:	44de      	add	lr, fp
 8019dec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019df0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019df4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019df8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019dfc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019e00:	ea4e 050a 	orr.w	r5, lr, sl
 8019e04:	9508      	str	r5, [sp, #32]
 8019e06:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019e08:	2dff      	cmp	r5, #255	; 0xff
 8019e0a:	d021      	beq.n	8019e50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8019e0c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019e0e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019e12:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019e14:	fb05 fb0b 	mul.w	fp, r5, fp
 8019e18:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019e1a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019e1e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019e20:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019e24:	fb05 fa0a 	mul.w	sl, r5, sl
 8019e28:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019e2c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019e30:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019e34:	44de      	add	lr, fp
 8019e36:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019e3a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019e3e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019e42:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019e46:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019e4a:	ea4e 050a 	orr.w	r5, lr, sl
 8019e4e:	950c      	str	r5, [sp, #48]	; 0x30
 8019e50:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019e52:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019e56:	9d08      	ldr	r5, [sp, #32]
 8019e58:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8019e5c:	fb08 fc0c 	mul.w	ip, r8, ip
 8019e60:	fb01 cc0e 	mla	ip, r1, lr, ip
 8019e64:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019e68:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019e6a:	fb00 cc0e 	mla	ip, r0, lr, ip
 8019e6e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019e72:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019e74:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019e78:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019e7c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019e80:	fb08 f80e 	mul.w	r8, r8, lr
 8019e84:	fb01 8202 	mla	r2, r1, r2, r8
 8019e88:	9908      	ldr	r1, [sp, #32]
 8019e8a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8019e8e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019e90:	fb00 220a 	mla	r2, r0, sl, r2
 8019e94:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8019e98:	fb09 2900 	mla	r9, r9, r0, r2
 8019e9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019ea0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019ea4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019ea8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019eac:	ea4c 0c09 	orr.w	ip, ip, r9
 8019eb0:	2bff      	cmp	r3, #255	; 0xff
 8019eb2:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8019eb6:	f000 80b5 	beq.w	801a024 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 8019eba:	8839      	ldrh	r1, [r7, #0]
 8019ebc:	43db      	mvns	r3, r3
 8019ebe:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8019ec2:	fa5f f883 	uxtb.w	r8, r3
 8019ec6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019eca:	fb0e fe08 	mul.w	lr, lr, r8
 8019ece:	10c8      	asrs	r0, r1, #3
 8019ed0:	00cb      	lsls	r3, r1, #3
 8019ed2:	f10e 0101 	add.w	r1, lr, #1
 8019ed6:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8019eda:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8019ede:	eb0e 2e11 	add.w	lr, lr, r1, lsr #8
 8019ee2:	b2db      	uxtb	r3, r3
 8019ee4:	4964      	ldr	r1, [pc, #400]	; (801a078 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>)
 8019ee6:	fb03 f308 	mul.w	r3, r3, r8
 8019eea:	ea01 2e0e 	and.w	lr, r1, lr, lsl #8
 8019eee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019ef2:	1c59      	adds	r1, r3, #1
 8019ef4:	fb00 f008 	mul.w	r0, r0, r8
 8019ef8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019efc:	fa5f fc8c 	uxtb.w	ip, ip
 8019f00:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8019f04:	1c43      	adds	r3, r0, #1
 8019f06:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019f0a:	b2d3      	uxtb	r3, r2
 8019f0c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019f10:	00db      	lsls	r3, r3, #3
 8019f12:	ea4e 0cdc 	orr.w	ip, lr, ip, lsr #3
 8019f16:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019f1a:	ea4c 0c03 	orr.w	ip, ip, r3
 8019f1e:	f8a7 c000 	strh.w	ip, [r7]
 8019f22:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8019f24:	441c      	add	r4, r3
 8019f26:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019f28:	441e      	add	r6, r3
 8019f2a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019f2c:	3b01      	subs	r3, #1
 8019f2e:	3702      	adds	r7, #2
 8019f30:	9317      	str	r3, [sp, #92]	; 0x5c
 8019f32:	e69b      	b.n	8019c6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8019f34:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8019f36:	441c      	add	r4, r3
 8019f38:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019f3a:	441e      	add	r6, r3
 8019f3c:	9b07      	ldr	r3, [sp, #28]
 8019f3e:	3b01      	subs	r3, #1
 8019f40:	9307      	str	r3, [sp, #28]
 8019f42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019f44:	3302      	adds	r3, #2
 8019f46:	930a      	str	r3, [sp, #40]	; 0x28
 8019f48:	e670      	b.n	8019c2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019f4a:	d023      	beq.n	8019f94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 8019f4c:	9b07      	ldr	r3, [sp, #28]
 8019f4e:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8019f50:	3b01      	subs	r3, #1
 8019f52:	fb00 4003 	mla	r0, r0, r3, r4
 8019f56:	1400      	asrs	r0, r0, #16
 8019f58:	f53f ae85 	bmi.w	8019c66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019f5c:	3901      	subs	r1, #1
 8019f5e:	4288      	cmp	r0, r1
 8019f60:	f6bf ae81 	bge.w	8019c66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019f64:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8019f66:	fb01 6303 	mla	r3, r1, r3, r6
 8019f6a:	141b      	asrs	r3, r3, #16
 8019f6c:	f53f ae7b 	bmi.w	8019c66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019f70:	3a01      	subs	r2, #1
 8019f72:	4293      	cmp	r3, r2
 8019f74:	f6bf ae77 	bge.w	8019c66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019f78:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019f7c:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8019f80:	f1bb 0f00 	cmp.w	fp, #0
 8019f84:	dc7a      	bgt.n	801a07c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8019f86:	9b07      	ldr	r3, [sp, #28]
 8019f88:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019f8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019f8e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019f92:	930a      	str	r3, [sp, #40]	; 0x28
 8019f94:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019f96:	2b00      	cmp	r3, #0
 8019f98:	f340 81cb 	ble.w	801a332 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x772>
 8019f9c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019fa0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019fa4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019fa8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019faa:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019fae:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019fb2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019fb6:	eef0 6a48 	vmov.f32	s13, s16
 8019fba:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019fbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019fc2:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019fc6:	ee16 4a90 	vmov	r4, s13
 8019fca:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019fce:	eef0 6a68 	vmov.f32	s13, s17
 8019fd2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019fd6:	ee18 2a10 	vmov	r2, s16
 8019fda:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019fde:	fb92 f3f3 	sdiv	r3, r2, r3
 8019fe2:	ee18 2a90 	vmov	r2, s17
 8019fe6:	932f      	str	r3, [sp, #188]	; 0xbc
 8019fe8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019fea:	fb92 f3f3 	sdiv	r3, r2, r3
 8019fee:	9330      	str	r3, [sp, #192]	; 0xc0
 8019ff0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019ff2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8019ff4:	3b01      	subs	r3, #1
 8019ff6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019ffa:	9316      	str	r3, [sp, #88]	; 0x58
 8019ffc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019ffe:	bf08      	it	eq
 801a000:	4613      	moveq	r3, r2
 801a002:	ee16 6a90 	vmov	r6, s13
 801a006:	9307      	str	r3, [sp, #28]
 801a008:	eef0 8a67 	vmov.f32	s17, s15
 801a00c:	eeb0 8a47 	vmov.f32	s16, s14
 801a010:	e5fe      	b.n	8019c10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a012:	2800      	cmp	r0, #0
 801a014:	f43f ae6e 	beq.w	8019cf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a018:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801a01c:	9308      	str	r3, [sp, #32]
 801a01e:	0e1b      	lsrs	r3, r3, #24
 801a020:	9310      	str	r3, [sp, #64]	; 0x40
 801a022:	e667      	b.n	8019cf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a024:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801a028:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801a02c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a030:	f022 0207 	bic.w	r2, r2, #7
 801a034:	431a      	orrs	r2, r3
 801a036:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801a03a:	ea42 0c0c 	orr.w	ip, r2, ip
 801a03e:	e76e      	b.n	8019f1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801a040:	f112 0801 	adds.w	r8, r2, #1
 801a044:	f53f af6d 	bmi.w	8019f22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a048:	4543      	cmp	r3, r8
 801a04a:	f6ff af6a 	blt.w	8019f22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a04e:	f11c 0801 	adds.w	r8, ip, #1
 801a052:	f53f af66 	bmi.w	8019f22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a056:	45c6      	cmp	lr, r8
 801a058:	f6ff af63 	blt.w	8019f22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a05c:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801a060:	fa0f f28e 	sxth.w	r2, lr
 801a064:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801a068:	9200      	str	r2, [sp, #0]
 801a06a:	b21b      	sxth	r3, r3
 801a06c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a06e:	9819      	ldr	r0, [sp, #100]	; 0x64
 801a070:	4639      	mov	r1, r7
 801a072:	f7ff fc53 	bl	801991c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801a076:	e754      	b.n	8019f22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a078:	fffff800 	.word	0xfffff800
 801a07c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a07e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a080:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801a084:	1421      	asrs	r1, r4, #16
 801a086:	1433      	asrs	r3, r6, #16
 801a088:	fb07 1303 	mla	r3, r7, r3, r1
 801a08c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a08e:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801a092:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801a096:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a09a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a09e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a0a2:	2a00      	cmp	r2, #0
 801a0a4:	f000 812e 	beq.w	801a304 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801a0a8:	684d      	ldr	r5, [r1, #4]
 801a0aa:	950d      	str	r5, [sp, #52]	; 0x34
 801a0ac:	0e2d      	lsrs	r5, r5, #24
 801a0ae:	9514      	str	r5, [sp, #80]	; 0x50
 801a0b0:	b178      	cbz	r0, 801a0d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801a0b2:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801a0b6:	3f01      	subs	r7, #1
 801a0b8:	00bf      	lsls	r7, r7, #2
 801a0ba:	3704      	adds	r7, #4
 801a0bc:	eb01 0e07 	add.w	lr, r1, r7
 801a0c0:	59c9      	ldr	r1, [r1, r7]
 801a0c2:	9109      	str	r1, [sp, #36]	; 0x24
 801a0c4:	0e09      	lsrs	r1, r1, #24
 801a0c6:	9111      	str	r1, [sp, #68]	; 0x44
 801a0c8:	f8de 1004 	ldr.w	r1, [lr, #4]
 801a0cc:	910e      	str	r1, [sp, #56]	; 0x38
 801a0ce:	0e09      	lsrs	r1, r1, #24
 801a0d0:	9115      	str	r1, [sp, #84]	; 0x54
 801a0d2:	b292      	uxth	r2, r2
 801a0d4:	b280      	uxth	r0, r0
 801a0d6:	fb02 f900 	mul.w	r9, r2, r0
 801a0da:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a0de:	0112      	lsls	r2, r2, #4
 801a0e0:	eba2 0e09 	sub.w	lr, r2, r9
 801a0e4:	b280      	uxth	r0, r0
 801a0e6:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a0ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a0ec:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a0ee:	fa1f fe8e 	uxth.w	lr, lr
 801a0f2:	1a09      	subs	r1, r1, r0
 801a0f4:	b289      	uxth	r1, r1
 801a0f6:	fb0e f202 	mul.w	r2, lr, r2
 801a0fa:	fb01 220c 	mla	r2, r1, ip, r2
 801a0fe:	fb00 2205 	mla	r2, r0, r5, r2
 801a102:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a104:	fb09 2205 	mla	r2, r9, r5, r2
 801a108:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a10c:	2a00      	cmp	r2, #0
 801a10e:	f000 80f0 	beq.w	801a2f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x732>
 801a112:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a116:	d019      	beq.n	801a14c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
 801a118:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a11c:	fb0c fa0a 	mul.w	sl, ip, sl
 801a120:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a124:	fb0c fc03 	mul.w	ip, ip, r3
 801a128:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a12c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a130:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a134:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a138:	4453      	add	r3, sl
 801a13a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a13e:	0a1b      	lsrs	r3, r3, #8
 801a140:	0a3f      	lsrs	r7, r7, #8
 801a142:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a146:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a14a:	433b      	orrs	r3, r7
 801a14c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a14e:	2dff      	cmp	r5, #255	; 0xff
 801a150:	d020      	beq.n	801a194 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
 801a152:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a154:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a158:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a15a:	436f      	muls	r7, r5
 801a15c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a15e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a162:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a164:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a168:	fb05 fa0a 	mul.w	sl, r5, sl
 801a16c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a170:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a174:	44bc      	add	ip, r7
 801a176:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a17a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a17e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a182:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a186:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a18a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a18e:	ea4c 050a 	orr.w	r5, ip, sl
 801a192:	950d      	str	r5, [sp, #52]	; 0x34
 801a194:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a196:	2dff      	cmp	r5, #255	; 0xff
 801a198:	d020      	beq.n	801a1dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 801a19a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a19c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a1a0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a1a2:	436f      	muls	r7, r5
 801a1a4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a1a6:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a1aa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a1ac:	fb05 fa0c 	mul.w	sl, r5, ip
 801a1b0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a1b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a1b8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a1bc:	44bc      	add	ip, r7
 801a1be:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a1c2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a1c6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a1ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a1ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a1d2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a1d6:	ea4c 050a 	orr.w	r5, ip, sl
 801a1da:	9509      	str	r5, [sp, #36]	; 0x24
 801a1dc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a1de:	2dff      	cmp	r5, #255	; 0xff
 801a1e0:	d020      	beq.n	801a224 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
 801a1e2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a1e4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a1e8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a1ea:	436f      	muls	r7, r5
 801a1ec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a1ee:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a1f2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a1f4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a1f8:	fb05 fa0a 	mul.w	sl, r5, sl
 801a1fc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a200:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a204:	44bc      	add	ip, r7
 801a206:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a20a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a20e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a212:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a216:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a21a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a21e:	ea4c 050a 	orr.w	r5, ip, sl
 801a222:	950e      	str	r5, [sp, #56]	; 0x38
 801a224:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a226:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a22a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a22c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a230:	fb0e f707 	mul.w	r7, lr, r7
 801a234:	fb01 770c 	mla	r7, r1, ip, r7
 801a238:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a23c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a23e:	fb00 770c 	mla	r7, r0, ip, r7
 801a242:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a246:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a248:	fb09 770c 	mla	r7, r9, ip, r7
 801a24c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a250:	fb0e fe0c 	mul.w	lr, lr, ip
 801a254:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a258:	fb01 e303 	mla	r3, r1, r3, lr
 801a25c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a25e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a262:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a264:	fb00 330a 	mla	r3, r0, sl, r3
 801a268:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801a26c:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a270:	0a3f      	lsrs	r7, r7, #8
 801a272:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a276:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a27a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a27e:	ea47 070c 	orr.w	r7, r7, ip
 801a282:	2aff      	cmp	r2, #255	; 0xff
 801a284:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801a288:	d045      	beq.n	801a316 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x756>
 801a28a:	f8b8 1000 	ldrh.w	r1, [r8]
 801a28e:	43d2      	mvns	r2, r2
 801a290:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801a294:	fa5f fe82 	uxtb.w	lr, r2
 801a298:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a29c:	fb0c fc0e 	mul.w	ip, ip, lr
 801a2a0:	10c8      	asrs	r0, r1, #3
 801a2a2:	00ca      	lsls	r2, r1, #3
 801a2a4:	f10c 0101 	add.w	r1, ip, #1
 801a2a8:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 801a2ac:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 801a2b0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801a2b4:	b2d2      	uxtb	r2, r2
 801a2b6:	4921      	ldr	r1, [pc, #132]	; (801a33c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>)
 801a2b8:	fb02 f20e 	mul.w	r2, r2, lr
 801a2bc:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801a2c0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a2c4:	1c51      	adds	r1, r2, #1
 801a2c6:	fb00 f00e 	mul.w	r0, r0, lr
 801a2ca:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a2ce:	b2ff      	uxtb	r7, r7
 801a2d0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801a2d4:	1c42      	adds	r2, r0, #1
 801a2d6:	ea4c 0cd7 	orr.w	ip, ip, r7, lsr #3
 801a2da:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a2de:	b2df      	uxtb	r7, r3
 801a2e0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801a2e4:	00ff      	lsls	r7, r7, #3
 801a2e6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a2ea:	ea4c 0c07 	orr.w	ip, ip, r7
 801a2ee:	f8a8 c000 	strh.w	ip, [r8]
 801a2f2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a2f4:	441c      	add	r4, r3
 801a2f6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a2f8:	f108 0802 	add.w	r8, r8, #2
 801a2fc:	441e      	add	r6, r3
 801a2fe:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a302:	e63d      	b.n	8019f80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801a304:	2800      	cmp	r0, #0
 801a306:	f43f aee4 	beq.w	801a0d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801a30a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801a30e:	9109      	str	r1, [sp, #36]	; 0x24
 801a310:	0e09      	lsrs	r1, r1, #24
 801a312:	9111      	str	r1, [sp, #68]	; 0x44
 801a314:	e6dd      	b.n	801a0d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801a316:	097a      	lsrs	r2, r7, #5
 801a318:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801a31c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a320:	f023 0307 	bic.w	r3, r3, #7
 801a324:	4313      	orrs	r3, r2
 801a326:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801a32a:	431f      	orrs	r7, r3
 801a32c:	f8a8 7000 	strh.w	r7, [r8]
 801a330:	e7df      	b.n	801a2f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x732>
 801a332:	b01b      	add	sp, #108	; 0x6c
 801a334:	ecbd 8b08 	vpop	{d8-d11}
 801a338:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a33c:	fffff800 	.word	0xfffff800

0801a340 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801a340:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a344:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801a348:	2c00      	cmp	r4, #0
 801a34a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801a34e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a352:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a356:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801a35a:	fb04 ce03 	mla	lr, r4, r3, ip
 801a35e:	db60      	blt.n	801a422 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a360:	45a1      	cmp	r9, r4
 801a362:	dd5e      	ble.n	801a422 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a364:	f1bc 0f00 	cmp.w	ip, #0
 801a368:	db59      	blt.n	801a41e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a36a:	45e0      	cmp	r8, ip
 801a36c:	dd57      	ble.n	801a41e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a36e:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801a372:	f01e 0f01 	tst.w	lr, #1
 801a376:	5c16      	ldrb	r6, [r2, r0]
 801a378:	bf0c      	ite	eq
 801a37a:	f006 060f 	andeq.w	r6, r6, #15
 801a37e:	1136      	asrne	r6, r6, #4
 801a380:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a384:	b2f6      	uxtb	r6, r6
 801a386:	f11c 0001 	adds.w	r0, ip, #1
 801a38a:	d44d      	bmi.n	801a428 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a38c:	4580      	cmp	r8, r0
 801a38e:	dd4b      	ble.n	801a428 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a390:	2d00      	cmp	r5, #0
 801a392:	d04b      	beq.n	801a42c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801a394:	f10e 0a01 	add.w	sl, lr, #1
 801a398:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801a39c:	f01a 0f01 	tst.w	sl, #1
 801a3a0:	5c10      	ldrb	r0, [r2, r0]
 801a3a2:	bf0c      	ite	eq
 801a3a4:	f000 000f 	andeq.w	r0, r0, #15
 801a3a8:	1100      	asrne	r0, r0, #4
 801a3aa:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a3ae:	b2c0      	uxtb	r0, r0
 801a3b0:	3401      	adds	r4, #1
 801a3b2:	d43f      	bmi.n	801a434 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a3b4:	45a1      	cmp	r9, r4
 801a3b6:	dd3d      	ble.n	801a434 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a3b8:	2f00      	cmp	r7, #0
 801a3ba:	f000 809e 	beq.w	801a4fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 801a3be:	f1bc 0f00 	cmp.w	ip, #0
 801a3c2:	db35      	blt.n	801a430 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a3c4:	45e0      	cmp	r8, ip
 801a3c6:	dd33      	ble.n	801a430 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a3c8:	eb03 090e 	add.w	r9, r3, lr
 801a3cc:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801a3d0:	f019 0f01 	tst.w	r9, #1
 801a3d4:	5d14      	ldrb	r4, [r2, r4]
 801a3d6:	bf0c      	ite	eq
 801a3d8:	f004 040f 	andeq.w	r4, r4, #15
 801a3dc:	1124      	asrne	r4, r4, #4
 801a3de:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a3e2:	b2e4      	uxtb	r4, r4
 801a3e4:	f11c 0c01 	adds.w	ip, ip, #1
 801a3e8:	d427      	bmi.n	801a43a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a3ea:	45e0      	cmp	r8, ip
 801a3ec:	dd25      	ble.n	801a43a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a3ee:	b335      	cbz	r5, 801a43e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801a3f0:	3301      	adds	r3, #1
 801a3f2:	449e      	add	lr, r3
 801a3f4:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a3f8:	f01e 0f01 	tst.w	lr, #1
 801a3fc:	5cd2      	ldrb	r2, [r2, r3]
 801a3fe:	bf0c      	ite	eq
 801a400:	f002 020f 	andeq.w	r2, r2, #15
 801a404:	1112      	asrne	r2, r2, #4
 801a406:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a40a:	b2d3      	uxtb	r3, r2
 801a40c:	2d0f      	cmp	r5, #15
 801a40e:	d917      	bls.n	801a440 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801a410:	4b3c      	ldr	r3, [pc, #240]	; (801a504 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 801a412:	4a3d      	ldr	r2, [pc, #244]	; (801a508 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801a414:	483d      	ldr	r0, [pc, #244]	; (801a50c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801a416:	f240 210d 	movw	r1, #525	; 0x20d
 801a41a:	f000 fff7 	bl	801b40c <__assert_func>
 801a41e:	2600      	movs	r6, #0
 801a420:	e7b1      	b.n	801a386 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801a422:	2000      	movs	r0, #0
 801a424:	4606      	mov	r6, r0
 801a426:	e7c3      	b.n	801a3b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a428:	2000      	movs	r0, #0
 801a42a:	e7c1      	b.n	801a3b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a42c:	4628      	mov	r0, r5
 801a42e:	e7bf      	b.n	801a3b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a430:	2400      	movs	r4, #0
 801a432:	e7d7      	b.n	801a3e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801a434:	2300      	movs	r3, #0
 801a436:	461c      	mov	r4, r3
 801a438:	e7e8      	b.n	801a40c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801a43a:	2300      	movs	r3, #0
 801a43c:	e7e6      	b.n	801a40c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801a43e:	462b      	mov	r3, r5
 801a440:	2f0f      	cmp	r7, #15
 801a442:	d8e5      	bhi.n	801a410 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801a444:	b2ad      	uxth	r5, r5
 801a446:	b2bf      	uxth	r7, r7
 801a448:	fb05 fc07 	mul.w	ip, r5, r7
 801a44c:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801a450:	012d      	lsls	r5, r5, #4
 801a452:	b2bf      	uxth	r7, r7
 801a454:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801a458:	eba5 050c 	sub.w	r5, r5, ip
 801a45c:	1bd2      	subs	r2, r2, r7
 801a45e:	b2ad      	uxth	r5, r5
 801a460:	b292      	uxth	r2, r2
 801a462:	4368      	muls	r0, r5
 801a464:	fb06 0002 	mla	r0, r6, r2, r0
 801a468:	fb07 0404 	mla	r4, r7, r4, r0
 801a46c:	fb0c 4303 	mla	r3, ip, r3, r4
 801a470:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a474:	2b00      	cmp	r3, #0
 801a476:	d03e      	beq.n	801a4f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b6>
 801a478:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 801a47c:	4a24      	ldr	r2, [pc, #144]	; (801a510 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 801a47e:	4343      	muls	r3, r0
 801a480:	1c58      	adds	r0, r3, #1
 801a482:	6816      	ldr	r6, [r2, #0]
 801a484:	880a      	ldrh	r2, [r1, #0]
 801a486:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801a48a:	1200      	asrs	r0, r0, #8
 801a48c:	b284      	uxth	r4, r0
 801a48e:	1215      	asrs	r5, r2, #8
 801a490:	43c0      	mvns	r0, r0
 801a492:	b2c3      	uxtb	r3, r0
 801a494:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a498:	0a30      	lsrs	r0, r6, #8
 801a49a:	fb15 f503 	smulbb	r5, r5, r3
 801a49e:	10d7      	asrs	r7, r2, #3
 801a4a0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a4a4:	fb00 5004 	mla	r0, r0, r4, r5
 801a4a8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a4ac:	08f5      	lsrs	r5, r6, #3
 801a4ae:	00d2      	lsls	r2, r2, #3
 801a4b0:	fb17 f703 	smulbb	r7, r7, r3
 801a4b4:	b2d2      	uxtb	r2, r2
 801a4b6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a4ba:	00f6      	lsls	r6, r6, #3
 801a4bc:	fb05 7504 	mla	r5, r5, r4, r7
 801a4c0:	fb12 f303 	smulbb	r3, r2, r3
 801a4c4:	b2f6      	uxtb	r6, r6
 801a4c6:	fb06 3304 	mla	r3, r6, r4, r3
 801a4ca:	b2ad      	uxth	r5, r5
 801a4cc:	b29a      	uxth	r2, r3
 801a4ce:	b280      	uxth	r0, r0
 801a4d0:	1c6b      	adds	r3, r5, #1
 801a4d2:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801a4d6:	1c44      	adds	r4, r0, #1
 801a4d8:	095b      	lsrs	r3, r3, #5
 801a4da:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801a4de:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a4e2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a4e6:	4303      	orrs	r3, r0
 801a4e8:	1c50      	adds	r0, r2, #1
 801a4ea:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801a4ee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a4f2:	4313      	orrs	r3, r2
 801a4f4:	800b      	strh	r3, [r1, #0]
 801a4f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a4fa:	2d0f      	cmp	r5, #15
 801a4fc:	d888      	bhi.n	801a410 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801a4fe:	463b      	mov	r3, r7
 801a500:	463c      	mov	r4, r7
 801a502:	e79f      	b.n	801a444 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801a504:	0801f307 	.word	0x0801f307
 801a508:	0801f8c5 	.word	0x0801f8c5
 801a50c:	0801f3f0 	.word	0x0801f3f0
 801a510:	2000a434 	.word	0x2000a434

0801a514 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a518:	ed2d 8b08 	vpush	{d8-d11}
 801a51c:	b097      	sub	sp, #92	; 0x5c
 801a51e:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801a522:	9214      	str	r2, [sp, #80]	; 0x50
 801a524:	9309      	str	r3, [sp, #36]	; 0x24
 801a526:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a528:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801a52c:	910d      	str	r1, [sp, #52]	; 0x34
 801a52e:	930e      	str	r3, [sp, #56]	; 0x38
 801a530:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801a534:	9015      	str	r0, [sp, #84]	; 0x54
 801a536:	6850      	ldr	r0, [r2, #4]
 801a538:	6812      	ldr	r2, [r2, #0]
 801a53a:	fb00 1303 	mla	r3, r0, r3, r1
 801a53e:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 801a542:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a544:	689b      	ldr	r3, [r3, #8]
 801a546:	3301      	adds	r3, #1
 801a548:	f023 0301 	bic.w	r3, r3, #1
 801a54c:	930a      	str	r3, [sp, #40]	; 0x28
 801a54e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a550:	681f      	ldr	r7, [r3, #0]
 801a552:	eeb0 aa40 	vmov.f32	s20, s0
 801a556:	eef0 9a60 	vmov.f32	s19, s1
 801a55a:	eeb0 9a41 	vmov.f32	s18, s2
 801a55e:	eeb0 8a62 	vmov.f32	s16, s5
 801a562:	eef0 8a43 	vmov.f32	s17, s6
 801a566:	eef0 ba44 	vmov.f32	s23, s8
 801a56a:	eeb0 ba64 	vmov.f32	s22, s9
 801a56e:	eef0 aa45 	vmov.f32	s21, s10
 801a572:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a574:	2b00      	cmp	r3, #0
 801a576:	dc03      	bgt.n	801a580 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a578:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801a57a:	2b00      	cmp	r3, #0
 801a57c:	f340 826a 	ble.w	801aa54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 801a580:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a582:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a586:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a58a:	1e48      	subs	r0, r1, #1
 801a58c:	f102 3cff 	add.w	ip, r2, #4294967295
 801a590:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a592:	2b00      	cmp	r3, #0
 801a594:	f340 80f3 	ble.w	801a77e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801a598:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a59c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a5a0:	d406      	bmi.n	801a5b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a5a2:	4586      	cmp	lr, r0
 801a5a4:	da04      	bge.n	801a5b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a5a6:	2b00      	cmp	r3, #0
 801a5a8:	db02      	blt.n	801a5b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a5aa:	4563      	cmp	r3, ip
 801a5ac:	f2c0 80e8 	blt.w	801a780 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801a5b0:	f11e 0e01 	adds.w	lr, lr, #1
 801a5b4:	f100 80d9 	bmi.w	801a76a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801a5b8:	4571      	cmp	r1, lr
 801a5ba:	f2c0 80d6 	blt.w	801a76a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801a5be:	3301      	adds	r3, #1
 801a5c0:	f100 80d3 	bmi.w	801a76a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801a5c4:	429a      	cmp	r2, r3
 801a5c6:	f2c0 80d0 	blt.w	801a76a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801a5ca:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801a5ce:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801a5d2:	930f      	str	r3, [sp, #60]	; 0x3c
 801a5d4:	46d0      	mov	r8, sl
 801a5d6:	f1b9 0f00 	cmp.w	r9, #0
 801a5da:	f340 80f0 	ble.w	801a7be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2aa>
 801a5de:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a5e0:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801a5e4:	1423      	asrs	r3, r4, #16
 801a5e6:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a5ea:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a5ee:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a5f2:	f100 8139 	bmi.w	801a868 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801a5f6:	f10c 3bff 	add.w	fp, ip, #4294967295
 801a5fa:	455b      	cmp	r3, fp
 801a5fc:	f280 8134 	bge.w	801a868 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801a600:	2800      	cmp	r0, #0
 801a602:	f2c0 8131 	blt.w	801a868 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801a606:	f10e 3bff 	add.w	fp, lr, #4294967295
 801a60a:	4558      	cmp	r0, fp
 801a60c:	f280 812c 	bge.w	801a868 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801a610:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801a612:	fb00 3305 	mla	r3, r0, r5, r3
 801a616:	0858      	lsrs	r0, r3, #1
 801a618:	07dd      	lsls	r5, r3, #31
 801a61a:	f817 c000 	ldrb.w	ip, [r7, r0]
 801a61e:	bf54      	ite	pl
 801a620:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a624:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a628:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a62c:	fa5f fc8c 	uxtb.w	ip, ip
 801a630:	2a00      	cmp	r2, #0
 801a632:	f000 8108 	beq.w	801a846 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a636:	1c58      	adds	r0, r3, #1
 801a638:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801a63c:	07c0      	lsls	r0, r0, #31
 801a63e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a642:	bf54      	ite	pl
 801a644:	f00e 0e0f 	andpl.w	lr, lr, #15
 801a648:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801a64c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801a650:	fa5f f08e 	uxtb.w	r0, lr
 801a654:	9010      	str	r0, [sp, #64]	; 0x40
 801a656:	b1d1      	cbz	r1, 801a68e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801a658:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801a65a:	4403      	add	r3, r0
 801a65c:	0858      	lsrs	r0, r3, #1
 801a65e:	07dd      	lsls	r5, r3, #31
 801a660:	5c38      	ldrb	r0, [r7, r0]
 801a662:	bf54      	ite	pl
 801a664:	f000 000f 	andpl.w	r0, r0, #15
 801a668:	1100      	asrmi	r0, r0, #4
 801a66a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a66e:	3301      	adds	r3, #1
 801a670:	b2c0      	uxtb	r0, r0
 801a672:	900b      	str	r0, [sp, #44]	; 0x2c
 801a674:	0858      	lsrs	r0, r3, #1
 801a676:	07dd      	lsls	r5, r3, #31
 801a678:	f817 e000 	ldrb.w	lr, [r7, r0]
 801a67c:	bf54      	ite	pl
 801a67e:	f00e 030f 	andpl.w	r3, lr, #15
 801a682:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801a686:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a68a:	b2db      	uxtb	r3, r3
 801a68c:	9311      	str	r3, [sp, #68]	; 0x44
 801a68e:	b292      	uxth	r2, r2
 801a690:	b289      	uxth	r1, r1
 801a692:	fb02 f301 	mul.w	r3, r2, r1
 801a696:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801a69a:	0112      	lsls	r2, r2, #4
 801a69c:	b289      	uxth	r1, r1
 801a69e:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801a6a2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a6a4:	1ad2      	subs	r2, r2, r3
 801a6a6:	1a40      	subs	r0, r0, r1
 801a6a8:	b292      	uxth	r2, r2
 801a6aa:	436a      	muls	r2, r5
 801a6ac:	b280      	uxth	r0, r0
 801a6ae:	fb0c 2c00 	mla	ip, ip, r0, r2
 801a6b2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a6b4:	fb01 c102 	mla	r1, r1, r2, ip
 801a6b8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a6ba:	fb03 1302 	mla	r3, r3, r2, r1
 801a6be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a6c2:	2b00      	cmp	r3, #0
 801a6c4:	d048      	beq.n	801a758 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801a6c6:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a6c8:	4a78      	ldr	r2, [pc, #480]	; (801a8ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>)
 801a6ca:	434b      	muls	r3, r1
 801a6cc:	1c59      	adds	r1, r3, #1
 801a6ce:	f8d2 e000 	ldr.w	lr, [r2]
 801a6d2:	f8b8 2000 	ldrh.w	r2, [r8]
 801a6d6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a6da:	121b      	asrs	r3, r3, #8
 801a6dc:	b299      	uxth	r1, r3
 801a6de:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801a6e2:	43db      	mvns	r3, r3
 801a6e4:	b2db      	uxtb	r3, r3
 801a6e6:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801a6ea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a6ee:	fb1c fc03 	smulbb	ip, ip, r3
 801a6f2:	ea4f 0be2 	mov.w	fp, r2, asr #3
 801a6f6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a6fa:	fb00 c001 	mla	r0, r0, r1, ip
 801a6fe:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a702:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 801a706:	fb1b fb03 	smulbb	fp, fp, r3
 801a70a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a70e:	00d2      	lsls	r2, r2, #3
 801a710:	fb0c bc01 	mla	ip, ip, r1, fp
 801a714:	b2d2      	uxtb	r2, r2
 801a716:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a71a:	fb12 f303 	smulbb	r3, r2, r3
 801a71e:	fa1f fc8c 	uxth.w	ip, ip
 801a722:	fa5f fe8e 	uxtb.w	lr, lr
 801a726:	b280      	uxth	r0, r0
 801a728:	fb0e 3101 	mla	r1, lr, r1, r3
 801a72c:	f10c 0201 	add.w	r2, ip, #1
 801a730:	b289      	uxth	r1, r1
 801a732:	1c43      	adds	r3, r0, #1
 801a734:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 801a738:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a73c:	0952      	lsrs	r2, r2, #5
 801a73e:	1c4b      	adds	r3, r1, #1
 801a740:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a744:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a748:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801a74c:	4310      	orrs	r0, r2
 801a74e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801a752:	4308      	orrs	r0, r1
 801a754:	f8a8 0000 	strh.w	r0, [r8]
 801a758:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a75a:	441c      	add	r4, r3
 801a75c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a75e:	f108 0802 	add.w	r8, r8, #2
 801a762:	441e      	add	r6, r3
 801a764:	f109 39ff 	add.w	r9, r9, #4294967295
 801a768:	e735      	b.n	801a5d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 801a76a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a76c:	441c      	add	r4, r3
 801a76e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a770:	441e      	add	r6, r3
 801a772:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a774:	3b01      	subs	r3, #1
 801a776:	9309      	str	r3, [sp, #36]	; 0x24
 801a778:	f10a 0a02 	add.w	sl, sl, #2
 801a77c:	e708      	b.n	801a590 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a77e:	d023      	beq.n	801a7c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801a780:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a782:	982b      	ldr	r0, [sp, #172]	; 0xac
 801a784:	3b01      	subs	r3, #1
 801a786:	fb00 4003 	mla	r0, r0, r3, r4
 801a78a:	1400      	asrs	r0, r0, #16
 801a78c:	f53f af1d 	bmi.w	801a5ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801a790:	3901      	subs	r1, #1
 801a792:	4288      	cmp	r0, r1
 801a794:	f6bf af19 	bge.w	801a5ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801a798:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801a79a:	fb01 6303 	mla	r3, r1, r3, r6
 801a79e:	141b      	asrs	r3, r3, #16
 801a7a0:	f53f af13 	bmi.w	801a5ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801a7a4:	3a01      	subs	r2, #1
 801a7a6:	4293      	cmp	r3, r2
 801a7a8:	f6bf af0f 	bge.w	801a5ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801a7ac:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801a7b0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801a7b4:	930f      	str	r3, [sp, #60]	; 0x3c
 801a7b6:	46d1      	mov	r9, sl
 801a7b8:	f1bb 0f00 	cmp.w	fp, #0
 801a7bc:	dc78      	bgt.n	801a8b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801a7be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a7c0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a7c4:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801a7c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a7ca:	2b00      	cmp	r3, #0
 801a7cc:	f340 8142 	ble.w	801aa54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 801a7d0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a7d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a7d8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a7dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a7de:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a7e2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a7e6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a7ea:	eef0 6a48 	vmov.f32	s13, s16
 801a7ee:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a7f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a7f6:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a7fa:	ee16 4a90 	vmov	r4, s13
 801a7fe:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a802:	eef0 6a68 	vmov.f32	s13, s17
 801a806:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a80a:	ee18 2a10 	vmov	r2, s16
 801a80e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a812:	fb92 f3f3 	sdiv	r3, r2, r3
 801a816:	ee18 2a90 	vmov	r2, s17
 801a81a:	932b      	str	r3, [sp, #172]	; 0xac
 801a81c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a81e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a822:	932c      	str	r3, [sp, #176]	; 0xb0
 801a824:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a826:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a828:	3b01      	subs	r3, #1
 801a82a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a82e:	930d      	str	r3, [sp, #52]	; 0x34
 801a830:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a832:	bf08      	it	eq
 801a834:	4613      	moveq	r3, r2
 801a836:	ee16 6a90 	vmov	r6, s13
 801a83a:	9309      	str	r3, [sp, #36]	; 0x24
 801a83c:	eef0 8a67 	vmov.f32	s17, s15
 801a840:	eeb0 8a47 	vmov.f32	s16, s14
 801a844:	e695      	b.n	801a572 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a846:	2900      	cmp	r1, #0
 801a848:	f43f af21 	beq.w	801a68e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801a84c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801a84e:	4418      	add	r0, r3
 801a850:	0843      	lsrs	r3, r0, #1
 801a852:	07c0      	lsls	r0, r0, #31
 801a854:	5cfb      	ldrb	r3, [r7, r3]
 801a856:	bf54      	ite	pl
 801a858:	f003 030f 	andpl.w	r3, r3, #15
 801a85c:	111b      	asrmi	r3, r3, #4
 801a85e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a862:	b2db      	uxtb	r3, r3
 801a864:	930b      	str	r3, [sp, #44]	; 0x2c
 801a866:	e712      	b.n	801a68e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801a868:	f113 0b01 	adds.w	fp, r3, #1
 801a86c:	f53f af74 	bmi.w	801a758 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801a870:	45dc      	cmp	ip, fp
 801a872:	f6ff af71 	blt.w	801a758 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801a876:	f110 0b01 	adds.w	fp, r0, #1
 801a87a:	f53f af6d 	bmi.w	801a758 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801a87e:	45de      	cmp	lr, fp
 801a880:	f6ff af6a 	blt.w	801a758 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801a884:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a886:	9302      	str	r3, [sp, #8]
 801a888:	fa0f f38e 	sxth.w	r3, lr
 801a88c:	9301      	str	r3, [sp, #4]
 801a88e:	fa0f f38c 	sxth.w	r3, ip
 801a892:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801a896:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801a89a:	9300      	str	r3, [sp, #0]
 801a89c:	463a      	mov	r2, r7
 801a89e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a8a0:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a8a2:	4641      	mov	r1, r8
 801a8a4:	f7ff fd4c 	bl	801a340 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801a8a8:	e756      	b.n	801a758 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801a8aa:	bf00      	nop
 801a8ac:	2000a434 	.word	0x2000a434
 801a8b0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801a8b2:	1422      	asrs	r2, r4, #16
 801a8b4:	1433      	asrs	r3, r6, #16
 801a8b6:	fb05 2303 	mla	r3, r5, r3, r2
 801a8ba:	085a      	lsrs	r2, r3, #1
 801a8bc:	07dd      	lsls	r5, r3, #31
 801a8be:	5cba      	ldrb	r2, [r7, r2]
 801a8c0:	bf54      	ite	pl
 801a8c2:	f002 020f 	andpl.w	r2, r2, #15
 801a8c6:	1112      	asrmi	r2, r2, #4
 801a8c8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a8cc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801a8d0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a8d4:	b2d2      	uxtb	r2, r2
 801a8d6:	2900      	cmp	r1, #0
 801a8d8:	f000 80a8 	beq.w	801aa2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801a8dc:	f103 0e01 	add.w	lr, r3, #1
 801a8e0:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801a8e4:	f01e 0f01 	tst.w	lr, #1
 801a8e8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a8ec:	bf0c      	ite	eq
 801a8ee:	f00c 0c0f 	andeq.w	ip, ip, #15
 801a8f2:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801a8f6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a8fa:	fa5f f58c 	uxtb.w	r5, ip
 801a8fe:	9512      	str	r5, [sp, #72]	; 0x48
 801a900:	b300      	cbz	r0, 801a944 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 801a902:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a904:	442b      	add	r3, r5
 801a906:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a90a:	07dd      	lsls	r5, r3, #31
 801a90c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a910:	bf54      	ite	pl
 801a912:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a916:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a91a:	3301      	adds	r3, #1
 801a91c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a920:	fa5f f58c 	uxtb.w	r5, ip
 801a924:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a928:	950c      	str	r5, [sp, #48]	; 0x30
 801a92a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a92e:	07dd      	lsls	r5, r3, #31
 801a930:	bf54      	ite	pl
 801a932:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a936:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a93a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a93e:	fa5f f38c 	uxtb.w	r3, ip
 801a942:	9313      	str	r3, [sp, #76]	; 0x4c
 801a944:	b289      	uxth	r1, r1
 801a946:	b280      	uxth	r0, r0
 801a948:	fb01 f300 	mul.w	r3, r1, r0
 801a94c:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801a950:	0109      	lsls	r1, r1, #4
 801a952:	b280      	uxth	r0, r0
 801a954:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801a958:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a95a:	1ac9      	subs	r1, r1, r3
 801a95c:	ebac 0c00 	sub.w	ip, ip, r0
 801a960:	b289      	uxth	r1, r1
 801a962:	4369      	muls	r1, r5
 801a964:	fa1f fc8c 	uxth.w	ip, ip
 801a968:	fb02 120c 	mla	r2, r2, ip, r1
 801a96c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a96e:	fb00 2001 	mla	r0, r0, r1, r2
 801a972:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a974:	fb03 0302 	mla	r3, r3, r2, r0
 801a978:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a97c:	2b00      	cmp	r3, #0
 801a97e:	d04c      	beq.n	801aa1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801a980:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a982:	4a37      	ldr	r2, [pc, #220]	; (801aa60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>)
 801a984:	434b      	muls	r3, r1
 801a986:	1c59      	adds	r1, r3, #1
 801a988:	f8d2 e000 	ldr.w	lr, [r2]
 801a98c:	f8b9 2000 	ldrh.w	r2, [r9]
 801a990:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a994:	121b      	asrs	r3, r3, #8
 801a996:	b299      	uxth	r1, r3
 801a998:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801a99c:	43db      	mvns	r3, r3
 801a99e:	b2db      	uxtb	r3, r3
 801a9a0:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801a9a4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a9a8:	fb1c fc03 	smulbb	ip, ip, r3
 801a9ac:	ea4f 08e2 	mov.w	r8, r2, asr #3
 801a9b0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a9b4:	fb00 c001 	mla	r0, r0, r1, ip
 801a9b8:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801a9bc:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 801a9c0:	fb18 f803 	smulbb	r8, r8, r3
 801a9c4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a9c8:	00d2      	lsls	r2, r2, #3
 801a9ca:	fb0c 8c01 	mla	ip, ip, r1, r8
 801a9ce:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a9d2:	b2d2      	uxtb	r2, r2
 801a9d4:	fa1f fc8c 	uxth.w	ip, ip
 801a9d8:	fa5f fe8e 	uxtb.w	lr, lr
 801a9dc:	fb12 f203 	smulbb	r2, r2, r3
 801a9e0:	b280      	uxth	r0, r0
 801a9e2:	fb0e 2201 	mla	r2, lr, r1, r2
 801a9e6:	f10c 0801 	add.w	r8, ip, #1
 801a9ea:	b292      	uxth	r2, r2
 801a9ec:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 801a9f0:	f100 0801 	add.w	r8, r0, #1
 801a9f4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a9f8:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 801a9fc:	1c51      	adds	r1, r2, #1
 801a9fe:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801aa02:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801aa06:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801aa0a:	ea4c 0c00 	orr.w	ip, ip, r0
 801aa0e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aa12:	ea4c 0c02 	orr.w	ip, ip, r2
 801aa16:	f8a9 c000 	strh.w	ip, [r9]
 801aa1a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801aa1c:	441c      	add	r4, r3
 801aa1e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801aa20:	f109 0902 	add.w	r9, r9, #2
 801aa24:	441e      	add	r6, r3
 801aa26:	f10b 3bff 	add.w	fp, fp, #4294967295
 801aa2a:	e6c5      	b.n	801a7b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801aa2c:	2800      	cmp	r0, #0
 801aa2e:	d089      	beq.n	801a944 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 801aa30:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801aa32:	442b      	add	r3, r5
 801aa34:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801aa38:	07db      	lsls	r3, r3, #31
 801aa3a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801aa3e:	bf54      	ite	pl
 801aa40:	f00c 0c0f 	andpl.w	ip, ip, #15
 801aa44:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801aa48:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801aa4c:	fa5f f38c 	uxtb.w	r3, ip
 801aa50:	930c      	str	r3, [sp, #48]	; 0x30
 801aa52:	e777      	b.n	801a944 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 801aa54:	b017      	add	sp, #92	; 0x5c
 801aa56:	ecbd 8b08 	vpop	{d8-d11}
 801aa5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aa5e:	bf00      	nop
 801aa60:	2000a434 	.word	0x2000a434

0801aa64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801aa64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801aa68:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801aa6c:	2c00      	cmp	r4, #0
 801aa6e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801aa72:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801aa76:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801aa7a:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801aa7e:	fb04 ce03 	mla	lr, r4, r3, ip
 801aa82:	db60      	blt.n	801ab46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801aa84:	45a1      	cmp	r9, r4
 801aa86:	dd5e      	ble.n	801ab46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801aa88:	f1bc 0f00 	cmp.w	ip, #0
 801aa8c:	db59      	blt.n	801ab42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801aa8e:	45e0      	cmp	r8, ip
 801aa90:	dd57      	ble.n	801ab42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801aa92:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801aa96:	f01e 0f01 	tst.w	lr, #1
 801aa9a:	5c16      	ldrb	r6, [r2, r0]
 801aa9c:	bf0c      	ite	eq
 801aa9e:	f006 060f 	andeq.w	r6, r6, #15
 801aaa2:	1136      	asrne	r6, r6, #4
 801aaa4:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801aaa8:	b2f6      	uxtb	r6, r6
 801aaaa:	f11c 0001 	adds.w	r0, ip, #1
 801aaae:	d44d      	bmi.n	801ab4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801aab0:	4580      	cmp	r8, r0
 801aab2:	dd4b      	ble.n	801ab4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801aab4:	2d00      	cmp	r5, #0
 801aab6:	d04b      	beq.n	801ab50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801aab8:	f10e 0a01 	add.w	sl, lr, #1
 801aabc:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801aac0:	f01a 0f01 	tst.w	sl, #1
 801aac4:	5c10      	ldrb	r0, [r2, r0]
 801aac6:	bf0c      	ite	eq
 801aac8:	f000 000f 	andeq.w	r0, r0, #15
 801aacc:	1100      	asrne	r0, r0, #4
 801aace:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801aad2:	b2c0      	uxtb	r0, r0
 801aad4:	3401      	adds	r4, #1
 801aad6:	d43f      	bmi.n	801ab58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801aad8:	45a1      	cmp	r9, r4
 801aada:	dd3d      	ble.n	801ab58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801aadc:	2f00      	cmp	r7, #0
 801aade:	f000 8097 	beq.w	801ac10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 801aae2:	f1bc 0f00 	cmp.w	ip, #0
 801aae6:	db35      	blt.n	801ab54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801aae8:	45e0      	cmp	r8, ip
 801aaea:	dd33      	ble.n	801ab54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801aaec:	eb03 090e 	add.w	r9, r3, lr
 801aaf0:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801aaf4:	f019 0f01 	tst.w	r9, #1
 801aaf8:	5d14      	ldrb	r4, [r2, r4]
 801aafa:	bf0c      	ite	eq
 801aafc:	f004 040f 	andeq.w	r4, r4, #15
 801ab00:	1124      	asrne	r4, r4, #4
 801ab02:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801ab06:	b2e4      	uxtb	r4, r4
 801ab08:	f11c 0c01 	adds.w	ip, ip, #1
 801ab0c:	d427      	bmi.n	801ab5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801ab0e:	45e0      	cmp	r8, ip
 801ab10:	dd25      	ble.n	801ab5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801ab12:	b335      	cbz	r5, 801ab62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801ab14:	3301      	adds	r3, #1
 801ab16:	449e      	add	lr, r3
 801ab18:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ab1c:	f01e 0f01 	tst.w	lr, #1
 801ab20:	5cd2      	ldrb	r2, [r2, r3]
 801ab22:	bf0c      	ite	eq
 801ab24:	f002 020f 	andeq.w	r2, r2, #15
 801ab28:	1112      	asrne	r2, r2, #4
 801ab2a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ab2e:	b2d3      	uxtb	r3, r2
 801ab30:	2d0f      	cmp	r5, #15
 801ab32:	d917      	bls.n	801ab64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801ab34:	4b39      	ldr	r3, [pc, #228]	; (801ac1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801ab36:	4a3a      	ldr	r2, [pc, #232]	; (801ac20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801ab38:	483a      	ldr	r0, [pc, #232]	; (801ac24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 801ab3a:	f240 210d 	movw	r1, #525	; 0x20d
 801ab3e:	f000 fc65 	bl	801b40c <__assert_func>
 801ab42:	2600      	movs	r6, #0
 801ab44:	e7b1      	b.n	801aaaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801ab46:	2000      	movs	r0, #0
 801ab48:	4606      	mov	r6, r0
 801ab4a:	e7c3      	b.n	801aad4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ab4c:	2000      	movs	r0, #0
 801ab4e:	e7c1      	b.n	801aad4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ab50:	4628      	mov	r0, r5
 801ab52:	e7bf      	b.n	801aad4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ab54:	2400      	movs	r4, #0
 801ab56:	e7d7      	b.n	801ab08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801ab58:	2300      	movs	r3, #0
 801ab5a:	461c      	mov	r4, r3
 801ab5c:	e7e8      	b.n	801ab30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801ab5e:	2300      	movs	r3, #0
 801ab60:	e7e6      	b.n	801ab30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801ab62:	462b      	mov	r3, r5
 801ab64:	2f0f      	cmp	r7, #15
 801ab66:	d8e5      	bhi.n	801ab34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801ab68:	b2ad      	uxth	r5, r5
 801ab6a:	b2bf      	uxth	r7, r7
 801ab6c:	fb05 fc07 	mul.w	ip, r5, r7
 801ab70:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801ab74:	012d      	lsls	r5, r5, #4
 801ab76:	b2bf      	uxth	r7, r7
 801ab78:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801ab7c:	eba5 050c 	sub.w	r5, r5, ip
 801ab80:	1bd2      	subs	r2, r2, r7
 801ab82:	b2ad      	uxth	r5, r5
 801ab84:	b292      	uxth	r2, r2
 801ab86:	4368      	muls	r0, r5
 801ab88:	fb06 0002 	mla	r0, r6, r2, r0
 801ab8c:	fb07 0404 	mla	r4, r7, r4, r0
 801ab90:	fb0c 4303 	mla	r3, ip, r3, r4
 801ab94:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ab98:	2b00      	cmp	r3, #0
 801ab9a:	d037      	beq.n	801ac0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>
 801ab9c:	4a22      	ldr	r2, [pc, #136]	; (801ac28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 801ab9e:	6816      	ldr	r6, [r2, #0]
 801aba0:	880a      	ldrh	r2, [r1, #0]
 801aba2:	b298      	uxth	r0, r3
 801aba4:	1215      	asrs	r5, r2, #8
 801aba6:	43db      	mvns	r3, r3
 801aba8:	b2db      	uxtb	r3, r3
 801abaa:	0a34      	lsrs	r4, r6, #8
 801abac:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801abb0:	fb15 f503 	smulbb	r5, r5, r3
 801abb4:	10d7      	asrs	r7, r2, #3
 801abb6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801abba:	fb04 5400 	mla	r4, r4, r0, r5
 801abbe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801abc2:	08f5      	lsrs	r5, r6, #3
 801abc4:	fb17 f703 	smulbb	r7, r7, r3
 801abc8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801abcc:	00d2      	lsls	r2, r2, #3
 801abce:	fb05 7500 	mla	r5, r5, r0, r7
 801abd2:	b2d2      	uxtb	r2, r2
 801abd4:	00f6      	lsls	r6, r6, #3
 801abd6:	fb12 f303 	smulbb	r3, r2, r3
 801abda:	b2ad      	uxth	r5, r5
 801abdc:	b2f6      	uxtb	r6, r6
 801abde:	b2a4      	uxth	r4, r4
 801abe0:	fb06 3000 	mla	r0, r6, r0, r3
 801abe4:	1c6b      	adds	r3, r5, #1
 801abe6:	b280      	uxth	r0, r0
 801abe8:	1c62      	adds	r2, r4, #1
 801abea:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801abee:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801abf2:	095b      	lsrs	r3, r3, #5
 801abf4:	1c42      	adds	r2, r0, #1
 801abf6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801abfa:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801abfe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ac02:	4323      	orrs	r3, r4
 801ac04:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801ac08:	4303      	orrs	r3, r0
 801ac0a:	800b      	strh	r3, [r1, #0]
 801ac0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ac10:	2d0f      	cmp	r5, #15
 801ac12:	d88f      	bhi.n	801ab34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801ac14:	463b      	mov	r3, r7
 801ac16:	463c      	mov	r4, r7
 801ac18:	e7a6      	b.n	801ab68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801ac1a:	bf00      	nop
 801ac1c:	0801f307 	.word	0x0801f307
 801ac20:	0801f8c5 	.word	0x0801f8c5
 801ac24:	0801f3f0 	.word	0x0801f3f0
 801ac28:	2000a434 	.word	0x2000a434

0801ac2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac30:	ed2d 8b08 	vpush	{d8-d11}
 801ac34:	b093      	sub	sp, #76	; 0x4c
 801ac36:	461d      	mov	r5, r3
 801ac38:	920c      	str	r2, [sp, #48]	; 0x30
 801ac3a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ac3c:	9107      	str	r1, [sp, #28]
 801ac3e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801ac42:	9011      	str	r0, [sp, #68]	; 0x44
 801ac44:	6850      	ldr	r0, [r2, #4]
 801ac46:	6812      	ldr	r2, [r2, #0]
 801ac48:	fb00 1303 	mla	r3, r0, r3, r1
 801ac4c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ac50:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ac52:	689b      	ldr	r3, [r3, #8]
 801ac54:	3301      	adds	r3, #1
 801ac56:	f023 0301 	bic.w	r3, r3, #1
 801ac5a:	9306      	str	r3, [sp, #24]
 801ac5c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ac5e:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801ac62:	681f      	ldr	r7, [r3, #0]
 801ac64:	eeb0 aa40 	vmov.f32	s20, s0
 801ac68:	eef0 9a60 	vmov.f32	s19, s1
 801ac6c:	eeb0 9a41 	vmov.f32	s18, s2
 801ac70:	eeb0 8a62 	vmov.f32	s16, s5
 801ac74:	eef0 8a43 	vmov.f32	s17, s6
 801ac78:	eef0 ba44 	vmov.f32	s23, s8
 801ac7c:	eeb0 ba64 	vmov.f32	s22, s9
 801ac80:	eef0 aa45 	vmov.f32	s21, s10
 801ac84:	9b07      	ldr	r3, [sp, #28]
 801ac86:	2b00      	cmp	r3, #0
 801ac88:	dc03      	bgt.n	801ac92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ac8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ac8c:	2b00      	cmp	r3, #0
 801ac8e:	f340 8261 	ble.w	801b154 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>
 801ac92:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ac94:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ac98:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ac9c:	1e48      	subs	r0, r1, #1
 801ac9e:	f102 3cff 	add.w	ip, r2, #4294967295
 801aca2:	2d00      	cmp	r5, #0
 801aca4:	f340 80ef 	ble.w	801ae86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801aca8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801acac:	ea4f 4326 	mov.w	r3, r6, asr #16
 801acb0:	d406      	bmi.n	801acc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801acb2:	4586      	cmp	lr, r0
 801acb4:	da04      	bge.n	801acc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801acb6:	2b00      	cmp	r3, #0
 801acb8:	db02      	blt.n	801acc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801acba:	4563      	cmp	r3, ip
 801acbc:	f2c0 80e4 	blt.w	801ae88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 801acc0:	f11e 0e01 	adds.w	lr, lr, #1
 801acc4:	f100 80d7 	bmi.w	801ae76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801acc8:	4571      	cmp	r1, lr
 801acca:	f2c0 80d4 	blt.w	801ae76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801acce:	3301      	adds	r3, #1
 801acd0:	f100 80d1 	bmi.w	801ae76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801acd4:	429a      	cmp	r2, r3
 801acd6:	f2c0 80ce 	blt.w	801ae76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801acda:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801acde:	9509      	str	r5, [sp, #36]	; 0x24
 801ace0:	46c8      	mov	r8, r9
 801ace2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ace4:	2b00      	cmp	r3, #0
 801ace6:	f340 80ec 	ble.w	801aec2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801acea:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801acee:	9308      	str	r3, [sp, #32]
 801acf0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801acf2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801acf6:	1423      	asrs	r3, r4, #16
 801acf8:	ea4f 4026 	mov.w	r0, r6, asr #16
 801acfc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ad00:	f100 813b 	bmi.w	801af7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801ad04:	f10c 3bff 	add.w	fp, ip, #4294967295
 801ad08:	455b      	cmp	r3, fp
 801ad0a:	f280 8136 	bge.w	801af7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801ad0e:	2800      	cmp	r0, #0
 801ad10:	f2c0 8133 	blt.w	801af7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801ad14:	f10e 3bff 	add.w	fp, lr, #4294967295
 801ad18:	4558      	cmp	r0, fp
 801ad1a:	f280 812e 	bge.w	801af7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801ad1e:	9a06      	ldr	r2, [sp, #24]
 801ad20:	fb00 3302 	mla	r3, r0, r2, r3
 801ad24:	0858      	lsrs	r0, r3, #1
 801ad26:	07da      	lsls	r2, r3, #31
 801ad28:	f817 c000 	ldrb.w	ip, [r7, r0]
 801ad2c:	9a08      	ldr	r2, [sp, #32]
 801ad2e:	bf54      	ite	pl
 801ad30:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ad34:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ad38:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ad3c:	fa5f fc8c 	uxtb.w	ip, ip
 801ad40:	2a00      	cmp	r2, #0
 801ad42:	f000 8101 	beq.w	801af48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ad46:	1c58      	adds	r0, r3, #1
 801ad48:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801ad4c:	07c0      	lsls	r0, r0, #31
 801ad4e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ad52:	bf54      	ite	pl
 801ad54:	f00e 0e0f 	andpl.w	lr, lr, #15
 801ad58:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801ad5c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801ad60:	fa5f fe8e 	uxtb.w	lr, lr
 801ad64:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801ad68:	b1b9      	cbz	r1, 801ad9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801ad6a:	4453      	add	r3, sl
 801ad6c:	0858      	lsrs	r0, r3, #1
 801ad6e:	07da      	lsls	r2, r3, #31
 801ad70:	5c38      	ldrb	r0, [r7, r0]
 801ad72:	bf54      	ite	pl
 801ad74:	f000 000f 	andpl.w	r0, r0, #15
 801ad78:	1100      	asrmi	r0, r0, #4
 801ad7a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ad7e:	b2c0      	uxtb	r0, r0
 801ad80:	900a      	str	r0, [sp, #40]	; 0x28
 801ad82:	1c58      	adds	r0, r3, #1
 801ad84:	0843      	lsrs	r3, r0, #1
 801ad86:	07c2      	lsls	r2, r0, #31
 801ad88:	5cfb      	ldrb	r3, [r7, r3]
 801ad8a:	bf54      	ite	pl
 801ad8c:	f003 030f 	andpl.w	r3, r3, #15
 801ad90:	111b      	asrmi	r3, r3, #4
 801ad92:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ad96:	b2db      	uxtb	r3, r3
 801ad98:	930e      	str	r3, [sp, #56]	; 0x38
 801ad9a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ad9e:	b289      	uxth	r1, r1
 801ada0:	fb02 f301 	mul.w	r3, r2, r1
 801ada4:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ada8:	0112      	lsls	r2, r2, #4
 801adaa:	b289      	uxth	r1, r1
 801adac:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801adb0:	1a40      	subs	r0, r0, r1
 801adb2:	fa1f fe80 	uxth.w	lr, r0
 801adb6:	1ad2      	subs	r2, r2, r3
 801adb8:	980d      	ldr	r0, [sp, #52]	; 0x34
 801adba:	b292      	uxth	r2, r2
 801adbc:	4342      	muls	r2, r0
 801adbe:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801adc2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801adc4:	fb01 c102 	mla	r1, r1, r2, ip
 801adc8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801adca:	fb03 1302 	mla	r3, r3, r2, r1
 801adce:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801add2:	2b00      	cmp	r3, #0
 801add4:	d045      	beq.n	801ae62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801add6:	4a79      	ldr	r2, [pc, #484]	; (801afbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>)
 801add8:	6811      	ldr	r1, [r2, #0]
 801adda:	2bff      	cmp	r3, #255	; 0xff
 801addc:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801ade0:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 801ade4:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 801ade8:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801adec:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801adf0:	b2c9      	uxtb	r1, r1
 801adf2:	f000 80ba 	beq.w	801af6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801adf6:	f8b8 c000 	ldrh.w	ip, [r8]
 801adfa:	fa1f fb83 	uxth.w	fp, r3
 801adfe:	ea4f 202c 	mov.w	r0, ip, asr #8
 801ae02:	43db      	mvns	r3, r3
 801ae04:	b2db      	uxtb	r3, r3
 801ae06:	fb1e fe0b 	smulbb	lr, lr, fp
 801ae0a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ae0e:	fb00 e003 	mla	r0, r0, r3, lr
 801ae12:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801ae16:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ae1a:	fb12 f20b 	smulbb	r2, r2, fp
 801ae1e:	fb0e 2203 	mla	r2, lr, r3, r2
 801ae22:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ae26:	b292      	uxth	r2, r2
 801ae28:	fb11 f10b 	smulbb	r1, r1, fp
 801ae2c:	fa5f fc8c 	uxtb.w	ip, ip
 801ae30:	b280      	uxth	r0, r0
 801ae32:	fb0c 1303 	mla	r3, ip, r3, r1
 801ae36:	f102 0e01 	add.w	lr, r2, #1
 801ae3a:	b29b      	uxth	r3, r3
 801ae3c:	1c41      	adds	r1, r0, #1
 801ae3e:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801ae42:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ae46:	0952      	lsrs	r2, r2, #5
 801ae48:	1c59      	adds	r1, r3, #1
 801ae4a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ae4e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ae52:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ae56:	4310      	orrs	r0, r2
 801ae58:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ae5c:	4318      	orrs	r0, r3
 801ae5e:	f8a8 0000 	strh.w	r0, [r8]
 801ae62:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ae64:	441c      	add	r4, r3
 801ae66:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ae68:	441e      	add	r6, r3
 801ae6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae6c:	3b01      	subs	r3, #1
 801ae6e:	f108 0802 	add.w	r8, r8, #2
 801ae72:	9309      	str	r3, [sp, #36]	; 0x24
 801ae74:	e735      	b.n	801ace2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801ae76:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ae78:	441c      	add	r4, r3
 801ae7a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ae7c:	3d01      	subs	r5, #1
 801ae7e:	441e      	add	r6, r3
 801ae80:	f109 0902 	add.w	r9, r9, #2
 801ae84:	e70d      	b.n	801aca2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ae86:	d020      	beq.n	801aeca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 801ae88:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801ae8a:	1e6b      	subs	r3, r5, #1
 801ae8c:	fb00 4003 	mla	r0, r0, r3, r4
 801ae90:	1400      	asrs	r0, r0, #16
 801ae92:	f53f af22 	bmi.w	801acda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801ae96:	3901      	subs	r1, #1
 801ae98:	4288      	cmp	r0, r1
 801ae9a:	f6bf af1e 	bge.w	801acda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801ae9e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801aea0:	fb01 6303 	mla	r3, r1, r3, r6
 801aea4:	141b      	asrs	r3, r3, #16
 801aea6:	f53f af18 	bmi.w	801acda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801aeaa:	3a01      	subs	r2, #1
 801aeac:	4293      	cmp	r3, r2
 801aeae:	f6bf af14 	bge.w	801acda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801aeb2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801aeb6:	9308      	str	r3, [sp, #32]
 801aeb8:	46aa      	mov	sl, r5
 801aeba:	46c8      	mov	r8, r9
 801aebc:	f1ba 0f00 	cmp.w	sl, #0
 801aec0:	dc7e      	bgt.n	801afc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801aec2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801aec6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801aeca:	9b07      	ldr	r3, [sp, #28]
 801aecc:	2b00      	cmp	r3, #0
 801aece:	f340 8141 	ble.w	801b154 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>
 801aed2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801aed6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801aeda:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801aede:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801aee0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801aee4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801aee8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801aeec:	eef0 6a48 	vmov.f32	s13, s16
 801aef0:	ee69 7a27 	vmul.f32	s15, s18, s15
 801aef4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aef8:	ee37 8a48 	vsub.f32	s16, s14, s16
 801aefc:	ee16 4a90 	vmov	r4, s13
 801af00:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801af04:	eef0 6a68 	vmov.f32	s13, s17
 801af08:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801af0c:	ee18 2a10 	vmov	r2, s16
 801af10:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801af14:	fb92 f3f3 	sdiv	r3, r2, r3
 801af18:	ee18 2a90 	vmov	r2, s17
 801af1c:	9327      	str	r3, [sp, #156]	; 0x9c
 801af1e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801af20:	fb92 f3f3 	sdiv	r3, r2, r3
 801af24:	9328      	str	r3, [sp, #160]	; 0xa0
 801af26:	9b07      	ldr	r3, [sp, #28]
 801af28:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801af2a:	3b01      	subs	r3, #1
 801af2c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801af30:	9307      	str	r3, [sp, #28]
 801af32:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801af34:	ee16 6a90 	vmov	r6, s13
 801af38:	bf14      	ite	ne
 801af3a:	461d      	movne	r5, r3
 801af3c:	4615      	moveq	r5, r2
 801af3e:	eef0 8a67 	vmov.f32	s17, s15
 801af42:	eeb0 8a47 	vmov.f32	s16, s14
 801af46:	e69d      	b.n	801ac84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801af48:	2900      	cmp	r1, #0
 801af4a:	f43f af26 	beq.w	801ad9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801af4e:	eb0a 0003 	add.w	r0, sl, r3
 801af52:	0843      	lsrs	r3, r0, #1
 801af54:	07c0      	lsls	r0, r0, #31
 801af56:	5cfb      	ldrb	r3, [r7, r3]
 801af58:	bf54      	ite	pl
 801af5a:	f003 030f 	andpl.w	r3, r3, #15
 801af5e:	111b      	asrmi	r3, r3, #4
 801af60:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801af64:	b2db      	uxtb	r3, r3
 801af66:	930a      	str	r3, [sp, #40]	; 0x28
 801af68:	e717      	b.n	801ad9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801af6a:	00d2      	lsls	r2, r2, #3
 801af6c:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801af70:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801af74:	f8a8 1000 	strh.w	r1, [r8]
 801af78:	e773      	b.n	801ae62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801af7a:	f113 0b01 	adds.w	fp, r3, #1
 801af7e:	f53f af70 	bmi.w	801ae62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801af82:	45dc      	cmp	ip, fp
 801af84:	f6ff af6d 	blt.w	801ae62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801af88:	f110 0b01 	adds.w	fp, r0, #1
 801af8c:	f53f af69 	bmi.w	801ae62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801af90:	45de      	cmp	lr, fp
 801af92:	f6ff af66 	blt.w	801ae62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801af96:	9a08      	ldr	r2, [sp, #32]
 801af98:	9302      	str	r3, [sp, #8]
 801af9a:	fa0f f38e 	sxth.w	r3, lr
 801af9e:	9301      	str	r3, [sp, #4]
 801afa0:	fa0f f38c 	sxth.w	r3, ip
 801afa4:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801afa8:	9105      	str	r1, [sp, #20]
 801afaa:	9300      	str	r3, [sp, #0]
 801afac:	463a      	mov	r2, r7
 801afae:	4653      	mov	r3, sl
 801afb0:	4641      	mov	r1, r8
 801afb2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801afb4:	f7ff fd56 	bl	801aa64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801afb8:	e753      	b.n	801ae62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801afba:	bf00      	nop
 801afbc:	2000a434 	.word	0x2000a434
 801afc0:	9906      	ldr	r1, [sp, #24]
 801afc2:	1422      	asrs	r2, r4, #16
 801afc4:	1433      	asrs	r3, r6, #16
 801afc6:	fb01 2303 	mla	r3, r1, r3, r2
 801afca:	085a      	lsrs	r2, r3, #1
 801afcc:	07d9      	lsls	r1, r3, #31
 801afce:	5cba      	ldrb	r2, [r7, r2]
 801afd0:	bf54      	ite	pl
 801afd2:	f002 020f 	andpl.w	r2, r2, #15
 801afd6:	1112      	asrmi	r2, r2, #4
 801afd8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801afdc:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801afe0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801afe4:	b2d2      	uxtb	r2, r2
 801afe6:	2800      	cmp	r0, #0
 801afe8:	f000 809b 	beq.w	801b122 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f6>
 801afec:	f103 0e01 	add.w	lr, r3, #1
 801aff0:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801aff4:	f01e 0f01 	tst.w	lr, #1
 801aff8:	5c79      	ldrb	r1, [r7, r1]
 801affa:	bf0c      	ite	eq
 801affc:	f001 010f 	andeq.w	r1, r1, #15
 801b000:	1109      	asrne	r1, r1, #4
 801b002:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b006:	b2c9      	uxtb	r1, r1
 801b008:	910f      	str	r1, [sp, #60]	; 0x3c
 801b00a:	f1bc 0f00 	cmp.w	ip, #0
 801b00e:	d019      	beq.n	801b044 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801b010:	9908      	ldr	r1, [sp, #32]
 801b012:	440b      	add	r3, r1
 801b014:	0859      	lsrs	r1, r3, #1
 801b016:	f013 0f01 	tst.w	r3, #1
 801b01a:	5c79      	ldrb	r1, [r7, r1]
 801b01c:	bf0c      	ite	eq
 801b01e:	f001 010f 	andeq.w	r1, r1, #15
 801b022:	1109      	asrne	r1, r1, #4
 801b024:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b028:	b2c9      	uxtb	r1, r1
 801b02a:	3301      	adds	r3, #1
 801b02c:	910b      	str	r1, [sp, #44]	; 0x2c
 801b02e:	0859      	lsrs	r1, r3, #1
 801b030:	07db      	lsls	r3, r3, #31
 801b032:	5c79      	ldrb	r1, [r7, r1]
 801b034:	bf54      	ite	pl
 801b036:	f001 010f 	andpl.w	r1, r1, #15
 801b03a:	1109      	asrmi	r1, r1, #4
 801b03c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b040:	b2c9      	uxtb	r1, r1
 801b042:	9110      	str	r1, [sp, #64]	; 0x40
 801b044:	b280      	uxth	r0, r0
 801b046:	fa1f fc8c 	uxth.w	ip, ip
 801b04a:	fb00 f30c 	mul.w	r3, r0, ip
 801b04e:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801b052:	0100      	lsls	r0, r0, #4
 801b054:	fa1f fc8c 	uxth.w	ip, ip
 801b058:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801b05c:	eba1 010c 	sub.w	r1, r1, ip
 801b060:	fa1f fe81 	uxth.w	lr, r1
 801b064:	1ac0      	subs	r0, r0, r3
 801b066:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b068:	b280      	uxth	r0, r0
 801b06a:	4348      	muls	r0, r1
 801b06c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b06e:	fb02 020e 	mla	r2, r2, lr, r0
 801b072:	fb0c 2c01 	mla	ip, ip, r1, r2
 801b076:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b078:	fb03 c302 	mla	r3, r3, r2, ip
 801b07c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b080:	2b00      	cmp	r3, #0
 801b082:	d045      	beq.n	801b110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801b084:	4a36      	ldr	r2, [pc, #216]	; (801b160 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>)
 801b086:	6811      	ldr	r1, [r2, #0]
 801b088:	2bff      	cmp	r3, #255	; 0xff
 801b08a:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801b08e:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 801b092:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 801b096:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b09a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b09e:	b2c9      	uxtb	r1, r1
 801b0a0:	d050      	beq.n	801b144 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801b0a2:	f8b8 c000 	ldrh.w	ip, [r8]
 801b0a6:	fa1f fb83 	uxth.w	fp, r3
 801b0aa:	ea4f 202c 	mov.w	r0, ip, asr #8
 801b0ae:	43db      	mvns	r3, r3
 801b0b0:	b2db      	uxtb	r3, r3
 801b0b2:	fb1e fe0b 	smulbb	lr, lr, fp
 801b0b6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b0ba:	fb00 e003 	mla	r0, r0, r3, lr
 801b0be:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801b0c2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b0c6:	fb12 f20b 	smulbb	r2, r2, fp
 801b0ca:	fb0e 2203 	mla	r2, lr, r3, r2
 801b0ce:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b0d2:	b292      	uxth	r2, r2
 801b0d4:	fa5f fc8c 	uxtb.w	ip, ip
 801b0d8:	fb11 f10b 	smulbb	r1, r1, fp
 801b0dc:	b280      	uxth	r0, r0
 801b0de:	fb0c 1103 	mla	r1, ip, r3, r1
 801b0e2:	f102 0e01 	add.w	lr, r2, #1
 801b0e6:	b289      	uxth	r1, r1
 801b0e8:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801b0ec:	f100 0e01 	add.w	lr, r0, #1
 801b0f0:	0952      	lsrs	r2, r2, #5
 801b0f2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801b0f6:	1c4b      	adds	r3, r1, #1
 801b0f8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b0fc:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b100:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b104:	4302      	orrs	r2, r0
 801b106:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b10a:	430a      	orrs	r2, r1
 801b10c:	f8a8 2000 	strh.w	r2, [r8]
 801b110:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b112:	441c      	add	r4, r3
 801b114:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b116:	f108 0802 	add.w	r8, r8, #2
 801b11a:	441e      	add	r6, r3
 801b11c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801b120:	e6cc      	b.n	801aebc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801b122:	f1bc 0f00 	cmp.w	ip, #0
 801b126:	d08d      	beq.n	801b044 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801b128:	9908      	ldr	r1, [sp, #32]
 801b12a:	440b      	add	r3, r1
 801b12c:	0859      	lsrs	r1, r3, #1
 801b12e:	07db      	lsls	r3, r3, #31
 801b130:	5c79      	ldrb	r1, [r7, r1]
 801b132:	bf54      	ite	pl
 801b134:	f001 010f 	andpl.w	r1, r1, #15
 801b138:	1109      	asrmi	r1, r1, #4
 801b13a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b13e:	b2c9      	uxtb	r1, r1
 801b140:	910b      	str	r1, [sp, #44]	; 0x2c
 801b142:	e77f      	b.n	801b044 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801b144:	00d2      	lsls	r2, r2, #3
 801b146:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801b14a:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801b14e:	f8a8 1000 	strh.w	r1, [r8]
 801b152:	e7dd      	b.n	801b110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801b154:	b013      	add	sp, #76	; 0x4c
 801b156:	ecbd 8b08 	vpop	{d8-d11}
 801b15a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b15e:	bf00      	nop
 801b160:	2000a434 	.word	0x2000a434

0801b164 <CRC_Lock>:
 801b164:	b530      	push	{r4, r5, lr}
 801b166:	4a1d      	ldr	r2, [pc, #116]	; (801b1dc <CRC_Lock+0x78>)
 801b168:	6813      	ldr	r3, [r2, #0]
 801b16a:	f023 0301 	bic.w	r3, r3, #1
 801b16e:	6013      	str	r3, [r2, #0]
 801b170:	4b1b      	ldr	r3, [pc, #108]	; (801b1e0 <CRC_Lock+0x7c>)
 801b172:	681a      	ldr	r2, [r3, #0]
 801b174:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801b178:	4022      	ands	r2, r4
 801b17a:	f24c 2540 	movw	r5, #49728	; 0xc240
 801b17e:	42aa      	cmp	r2, r5
 801b180:	d005      	beq.n	801b18e <CRC_Lock+0x2a>
 801b182:	681b      	ldr	r3, [r3, #0]
 801b184:	f24c 2270 	movw	r2, #49776	; 0xc270
 801b188:	4023      	ands	r3, r4
 801b18a:	4293      	cmp	r3, r2
 801b18c:	d11d      	bne.n	801b1ca <CRC_Lock+0x66>
 801b18e:	4b15      	ldr	r3, [pc, #84]	; (801b1e4 <CRC_Lock+0x80>)
 801b190:	681b      	ldr	r3, [r3, #0]
 801b192:	b9d3      	cbnz	r3, 801b1ca <CRC_Lock+0x66>
 801b194:	4a14      	ldr	r2, [pc, #80]	; (801b1e8 <CRC_Lock+0x84>)
 801b196:	6813      	ldr	r3, [r2, #0]
 801b198:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b19c:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 801b1a0:	d006      	beq.n	801b1b0 <CRC_Lock+0x4c>
 801b1a2:	6813      	ldr	r3, [r2, #0]
 801b1a4:	f240 4283 	movw	r2, #1155	; 0x483
 801b1a8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b1ac:	4293      	cmp	r3, r2
 801b1ae:	d10c      	bne.n	801b1ca <CRC_Lock+0x66>
 801b1b0:	4b0e      	ldr	r3, [pc, #56]	; (801b1ec <CRC_Lock+0x88>)
 801b1b2:	2201      	movs	r2, #1
 801b1b4:	601a      	str	r2, [r3, #0]
 801b1b6:	681a      	ldr	r2, [r3, #0]
 801b1b8:	2a00      	cmp	r2, #0
 801b1ba:	d1fc      	bne.n	801b1b6 <CRC_Lock+0x52>
 801b1bc:	4b0c      	ldr	r3, [pc, #48]	; (801b1f0 <CRC_Lock+0x8c>)
 801b1be:	6018      	str	r0, [r3, #0]
 801b1c0:	6818      	ldr	r0, [r3, #0]
 801b1c2:	1a43      	subs	r3, r0, r1
 801b1c4:	4258      	negs	r0, r3
 801b1c6:	4158      	adcs	r0, r3
 801b1c8:	bd30      	pop	{r4, r5, pc}
 801b1ca:	4b0a      	ldr	r3, [pc, #40]	; (801b1f4 <CRC_Lock+0x90>)
 801b1cc:	2201      	movs	r2, #1
 801b1ce:	601a      	str	r2, [r3, #0]
 801b1d0:	681a      	ldr	r2, [r3, #0]
 801b1d2:	2a00      	cmp	r2, #0
 801b1d4:	d1fc      	bne.n	801b1d0 <CRC_Lock+0x6c>
 801b1d6:	4b08      	ldr	r3, [pc, #32]	; (801b1f8 <CRC_Lock+0x94>)
 801b1d8:	e7f1      	b.n	801b1be <CRC_Lock+0x5a>
 801b1da:	bf00      	nop
 801b1dc:	e0002000 	.word	0xe0002000
 801b1e0:	e000ed00 	.word	0xe000ed00
 801b1e4:	e0042000 	.word	0xe0042000
 801b1e8:	5c001000 	.word	0x5c001000
 801b1ec:	58024c08 	.word	0x58024c08
 801b1f0:	58024c00 	.word	0x58024c00
 801b1f4:	40023008 	.word	0x40023008
 801b1f8:	40023000 	.word	0x40023000

0801b1fc <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801b1fc:	6101      	str	r1, [r0, #16]
 801b1fe:	4770      	bx	lr

0801b200 <_ZN8touchgfx8Gestures4tickEv>:
 801b200:	7b83      	ldrb	r3, [r0, #14]
 801b202:	b14b      	cbz	r3, 801b218 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801b204:	8903      	ldrh	r3, [r0, #8]
 801b206:	3301      	adds	r3, #1
 801b208:	b29b      	uxth	r3, r3
 801b20a:	2b07      	cmp	r3, #7
 801b20c:	8103      	strh	r3, [r0, #8]
 801b20e:	bf81      	itttt	hi
 801b210:	2300      	movhi	r3, #0
 801b212:	8143      	strhhi	r3, [r0, #10]
 801b214:	8183      	strhhi	r3, [r0, #12]
 801b216:	7383      	strbhi	r3, [r0, #14]
 801b218:	4770      	bx	lr
	...

0801b21c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801b21c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801b220:	4604      	mov	r4, r0
 801b222:	8880      	ldrh	r0, [r0, #4]
 801b224:	f8ad 0006 	strh.w	r0, [sp, #6]
 801b228:	4698      	mov	r8, r3
 801b22a:	eba8 0000 	sub.w	r0, r8, r0
 801b22e:	4b1c      	ldr	r3, [pc, #112]	; (801b2a0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801b230:	9300      	str	r3, [sp, #0]
 801b232:	b280      	uxth	r0, r0
 801b234:	2300      	movs	r3, #0
 801b236:	f88d 3004 	strb.w	r3, [sp, #4]
 801b23a:	b203      	sxth	r3, r0
 801b23c:	2b00      	cmp	r3, #0
 801b23e:	bfb8      	it	lt
 801b240:	4240      	neglt	r0, r0
 801b242:	4617      	mov	r7, r2
 801b244:	8aa2      	ldrh	r2, [r4, #20]
 801b246:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801b24a:	f8ad 800a 	strh.w	r8, [sp, #10]
 801b24e:	bfb8      	it	lt
 801b250:	b203      	sxthlt	r3, r0
 801b252:	460e      	mov	r6, r1
 801b254:	4293      	cmp	r3, r2
 801b256:	88e1      	ldrh	r1, [r4, #6]
 801b258:	f8ad 1008 	strh.w	r1, [sp, #8]
 801b25c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b260:	dc08      	bgt.n	801b274 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801b262:	1a69      	subs	r1, r5, r1
 801b264:	b289      	uxth	r1, r1
 801b266:	b20b      	sxth	r3, r1
 801b268:	2b00      	cmp	r3, #0
 801b26a:	bfbc      	itt	lt
 801b26c:	4249      	neglt	r1, r1
 801b26e:	b20b      	sxthlt	r3, r1
 801b270:	429a      	cmp	r2, r3
 801b272:	da13      	bge.n	801b29c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801b274:	6920      	ldr	r0, [r4, #16]
 801b276:	6803      	ldr	r3, [r0, #0]
 801b278:	4669      	mov	r1, sp
 801b27a:	685b      	ldr	r3, [r3, #4]
 801b27c:	4798      	blx	r3
 801b27e:	eba8 0606 	sub.w	r6, r8, r6
 801b282:	2300      	movs	r3, #0
 801b284:	1bef      	subs	r7, r5, r7
 801b286:	2001      	movs	r0, #1
 801b288:	8123      	strh	r3, [r4, #8]
 801b28a:	8166      	strh	r6, [r4, #10]
 801b28c:	81a7      	strh	r7, [r4, #12]
 801b28e:	f8a4 8004 	strh.w	r8, [r4, #4]
 801b292:	80e5      	strh	r5, [r4, #6]
 801b294:	73a0      	strb	r0, [r4, #14]
 801b296:	b004      	add	sp, #16
 801b298:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b29c:	2000      	movs	r0, #0
 801b29e:	e7fa      	b.n	801b296 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801b2a0:	0801e7c8 	.word	0x0801e7c8

0801b2a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801b2a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b2a6:	461e      	mov	r6, r3
 801b2a8:	1e4b      	subs	r3, r1, #1
 801b2aa:	2b01      	cmp	r3, #1
 801b2ac:	b085      	sub	sp, #20
 801b2ae:	4604      	mov	r4, r0
 801b2b0:	460d      	mov	r5, r1
 801b2b2:	4617      	mov	r7, r2
 801b2b4:	d84b      	bhi.n	801b34e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801b2b6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801b2ba:	1cd3      	adds	r3, r2, #3
 801b2bc:	b29b      	uxth	r3, r3
 801b2be:	2b06      	cmp	r3, #6
 801b2c0:	d916      	bls.n	801b2f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801b2c2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801b364 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b2c6:	f8cd c004 	str.w	ip, [sp, #4]
 801b2ca:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b2ce:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b2d2:	6900      	ldr	r0, [r0, #16]
 801b2d4:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b2d8:	f04f 0c00 	mov.w	ip, #0
 801b2dc:	f88d c008 	strb.w	ip, [sp, #8]
 801b2e0:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b2e4:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b2e8:	6803      	ldr	r3, [r0, #0]
 801b2ea:	a901      	add	r1, sp, #4
 801b2ec:	689b      	ldr	r3, [r3, #8]
 801b2ee:	4798      	blx	r3
 801b2f0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b2f4:	1cd3      	adds	r3, r2, #3
 801b2f6:	b29b      	uxth	r3, r3
 801b2f8:	2b06      	cmp	r3, #6
 801b2fa:	d916      	bls.n	801b32a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b2fc:	f8df c064 	ldr.w	ip, [pc, #100]	; 801b364 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b300:	f8cd c004 	str.w	ip, [sp, #4]
 801b304:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b308:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b30c:	6920      	ldr	r0, [r4, #16]
 801b30e:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b312:	f04f 0c01 	mov.w	ip, #1
 801b316:	f88d c008 	strb.w	ip, [sp, #8]
 801b31a:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b31e:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b322:	6803      	ldr	r3, [r0, #0]
 801b324:	a901      	add	r1, sp, #4
 801b326:	689b      	ldr	r3, [r3, #8]
 801b328:	4798      	blx	r3
 801b32a:	4b0d      	ldr	r3, [pc, #52]	; (801b360 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801b32c:	9301      	str	r3, [sp, #4]
 801b32e:	6920      	ldr	r0, [r4, #16]
 801b330:	f88d 5008 	strb.w	r5, [sp, #8]
 801b334:	2300      	movs	r3, #0
 801b336:	f8ad 700a 	strh.w	r7, [sp, #10]
 801b33a:	f8ad 600c 	strh.w	r6, [sp, #12]
 801b33e:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b342:	6803      	ldr	r3, [r0, #0]
 801b344:	a901      	add	r1, sp, #4
 801b346:	681b      	ldr	r3, [r3, #0]
 801b348:	4798      	blx	r3
 801b34a:	b005      	add	sp, #20
 801b34c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b34e:	2900      	cmp	r1, #0
 801b350:	d1eb      	bne.n	801b32a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b352:	80a2      	strh	r2, [r4, #4]
 801b354:	80c6      	strh	r6, [r0, #6]
 801b356:	60a1      	str	r1, [r4, #8]
 801b358:	81a1      	strh	r1, [r4, #12]
 801b35a:	73a1      	strb	r1, [r4, #14]
 801b35c:	e7e5      	b.n	801b32a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b35e:	bf00      	nop
 801b360:	0801e7b4 	.word	0x0801e7b4
 801b364:	0801e7dc 	.word	0x0801e7dc

0801b368 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801b368:	b570      	push	{r4, r5, r6, lr}
 801b36a:	790b      	ldrb	r3, [r1, #4]
 801b36c:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801b370:	2b00      	cmp	r3, #0
 801b372:	bf0c      	ite	eq
 801b374:	2301      	moveq	r3, #1
 801b376:	2300      	movne	r3, #0
 801b378:	4604      	mov	r4, r0
 801b37a:	460e      	mov	r6, r1
 801b37c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801b380:	d109      	bne.n	801b396 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801b382:	b14d      	cbz	r5, 801b398 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801b384:	7933      	ldrb	r3, [r6, #4]
 801b386:	2b01      	cmp	r3, #1
 801b388:	d10c      	bne.n	801b3a4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801b38a:	6823      	ldr	r3, [r4, #0]
 801b38c:	4620      	mov	r0, r4
 801b38e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801b390:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801b394:	4718      	bx	r3
 801b396:	b12d      	cbz	r5, 801b3a4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801b398:	6823      	ldr	r3, [r4, #0]
 801b39a:	4620      	mov	r0, r4
 801b39c:	695b      	ldr	r3, [r3, #20]
 801b39e:	4798      	blx	r3
 801b3a0:	2d00      	cmp	r5, #0
 801b3a2:	d1ef      	bne.n	801b384 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801b3a4:	bd70      	pop	{r4, r5, r6, pc}

0801b3a6 <__aeabi_atexit>:
 801b3a6:	460b      	mov	r3, r1
 801b3a8:	4601      	mov	r1, r0
 801b3aa:	4618      	mov	r0, r3
 801b3ac:	f000 b852 	b.w	801b454 <__cxa_atexit>

0801b3b0 <_ZdlPvj>:
 801b3b0:	f000 b812 	b.w	801b3d8 <_ZdlPv>

0801b3b4 <__cxa_guard_acquire>:
 801b3b4:	6803      	ldr	r3, [r0, #0]
 801b3b6:	07db      	lsls	r3, r3, #31
 801b3b8:	d406      	bmi.n	801b3c8 <__cxa_guard_acquire+0x14>
 801b3ba:	7843      	ldrb	r3, [r0, #1]
 801b3bc:	b103      	cbz	r3, 801b3c0 <__cxa_guard_acquire+0xc>
 801b3be:	deff      	udf	#255	; 0xff
 801b3c0:	2301      	movs	r3, #1
 801b3c2:	7043      	strb	r3, [r0, #1]
 801b3c4:	4618      	mov	r0, r3
 801b3c6:	4770      	bx	lr
 801b3c8:	2000      	movs	r0, #0
 801b3ca:	4770      	bx	lr

0801b3cc <__cxa_guard_release>:
 801b3cc:	2301      	movs	r3, #1
 801b3ce:	6003      	str	r3, [r0, #0]
 801b3d0:	4770      	bx	lr

0801b3d2 <__cxa_pure_virtual>:
 801b3d2:	b508      	push	{r3, lr}
 801b3d4:	f000 f80e 	bl	801b3f4 <_ZSt9terminatev>

0801b3d8 <_ZdlPv>:
 801b3d8:	f000 b88e 	b.w	801b4f8 <free>

0801b3dc <_ZN10__cxxabiv111__terminateEPFvvE>:
 801b3dc:	b508      	push	{r3, lr}
 801b3de:	4780      	blx	r0
 801b3e0:	f000 f80d 	bl	801b3fe <abort>

0801b3e4 <_ZSt13get_terminatev>:
 801b3e4:	4b02      	ldr	r3, [pc, #8]	; (801b3f0 <_ZSt13get_terminatev+0xc>)
 801b3e6:	6818      	ldr	r0, [r3, #0]
 801b3e8:	f3bf 8f5b 	dmb	ish
 801b3ec:	4770      	bx	lr
 801b3ee:	bf00      	nop
 801b3f0:	200000d4 	.word	0x200000d4

0801b3f4 <_ZSt9terminatev>:
 801b3f4:	b508      	push	{r3, lr}
 801b3f6:	f7ff fff5 	bl	801b3e4 <_ZSt13get_terminatev>
 801b3fa:	f7ff ffef 	bl	801b3dc <_ZN10__cxxabiv111__terminateEPFvvE>

0801b3fe <abort>:
 801b3fe:	b508      	push	{r3, lr}
 801b400:	2006      	movs	r0, #6
 801b402:	f000 fc9d 	bl	801bd40 <raise>
 801b406:	2001      	movs	r0, #1
 801b408:	f7e6 fda8 	bl	8001f5c <_exit>

0801b40c <__assert_func>:
 801b40c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801b40e:	4614      	mov	r4, r2
 801b410:	461a      	mov	r2, r3
 801b412:	4b09      	ldr	r3, [pc, #36]	; (801b438 <__assert_func+0x2c>)
 801b414:	681b      	ldr	r3, [r3, #0]
 801b416:	4605      	mov	r5, r0
 801b418:	68d8      	ldr	r0, [r3, #12]
 801b41a:	b14c      	cbz	r4, 801b430 <__assert_func+0x24>
 801b41c:	4b07      	ldr	r3, [pc, #28]	; (801b43c <__assert_func+0x30>)
 801b41e:	9100      	str	r1, [sp, #0]
 801b420:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801b424:	4906      	ldr	r1, [pc, #24]	; (801b440 <__assert_func+0x34>)
 801b426:	462b      	mov	r3, r5
 801b428:	f000 f828 	bl	801b47c <fiprintf>
 801b42c:	f7ff ffe7 	bl	801b3fe <abort>
 801b430:	4b04      	ldr	r3, [pc, #16]	; (801b444 <__assert_func+0x38>)
 801b432:	461c      	mov	r4, r3
 801b434:	e7f3      	b.n	801b41e <__assert_func+0x12>
 801b436:	bf00      	nop
 801b438:	200000d8 	.word	0x200000d8
 801b43c:	0801fb5f 	.word	0x0801fb5f
 801b440:	0801fb6c 	.word	0x0801fb6c
 801b444:	0801fb9a 	.word	0x0801fb9a

0801b448 <atexit>:
 801b448:	2300      	movs	r3, #0
 801b44a:	4601      	mov	r1, r0
 801b44c:	461a      	mov	r2, r3
 801b44e:	4618      	mov	r0, r3
 801b450:	f000 bd52 	b.w	801bef8 <__register_exitproc>

0801b454 <__cxa_atexit>:
 801b454:	b510      	push	{r4, lr}
 801b456:	4c05      	ldr	r4, [pc, #20]	; (801b46c <__cxa_atexit+0x18>)
 801b458:	4613      	mov	r3, r2
 801b45a:	b12c      	cbz	r4, 801b468 <__cxa_atexit+0x14>
 801b45c:	460a      	mov	r2, r1
 801b45e:	4601      	mov	r1, r0
 801b460:	2002      	movs	r0, #2
 801b462:	f000 fd49 	bl	801bef8 <__register_exitproc>
 801b466:	bd10      	pop	{r4, pc}
 801b468:	4620      	mov	r0, r4
 801b46a:	e7fc      	b.n	801b466 <__cxa_atexit+0x12>
 801b46c:	0801bef9 	.word	0x0801bef9

0801b470 <__errno>:
 801b470:	4b01      	ldr	r3, [pc, #4]	; (801b478 <__errno+0x8>)
 801b472:	6818      	ldr	r0, [r3, #0]
 801b474:	4770      	bx	lr
 801b476:	bf00      	nop
 801b478:	200000d8 	.word	0x200000d8

0801b47c <fiprintf>:
 801b47c:	b40e      	push	{r1, r2, r3}
 801b47e:	b503      	push	{r0, r1, lr}
 801b480:	4601      	mov	r1, r0
 801b482:	ab03      	add	r3, sp, #12
 801b484:	4805      	ldr	r0, [pc, #20]	; (801b49c <fiprintf+0x20>)
 801b486:	f853 2b04 	ldr.w	r2, [r3], #4
 801b48a:	6800      	ldr	r0, [r0, #0]
 801b48c:	9301      	str	r3, [sp, #4]
 801b48e:	f000 f95b 	bl	801b748 <_vfiprintf_r>
 801b492:	b002      	add	sp, #8
 801b494:	f85d eb04 	ldr.w	lr, [sp], #4
 801b498:	b003      	add	sp, #12
 801b49a:	4770      	bx	lr
 801b49c:	200000d8 	.word	0x200000d8

0801b4a0 <__libc_init_array>:
 801b4a0:	b570      	push	{r4, r5, r6, lr}
 801b4a2:	4d0d      	ldr	r5, [pc, #52]	; (801b4d8 <__libc_init_array+0x38>)
 801b4a4:	4c0d      	ldr	r4, [pc, #52]	; (801b4dc <__libc_init_array+0x3c>)
 801b4a6:	1b64      	subs	r4, r4, r5
 801b4a8:	10a4      	asrs	r4, r4, #2
 801b4aa:	2600      	movs	r6, #0
 801b4ac:	42a6      	cmp	r6, r4
 801b4ae:	d109      	bne.n	801b4c4 <__libc_init_array+0x24>
 801b4b0:	4d0b      	ldr	r5, [pc, #44]	; (801b4e0 <__libc_init_array+0x40>)
 801b4b2:	4c0c      	ldr	r4, [pc, #48]	; (801b4e4 <__libc_init_array+0x44>)
 801b4b4:	f001 f85a 	bl	801c56c <_init>
 801b4b8:	1b64      	subs	r4, r4, r5
 801b4ba:	10a4      	asrs	r4, r4, #2
 801b4bc:	2600      	movs	r6, #0
 801b4be:	42a6      	cmp	r6, r4
 801b4c0:	d105      	bne.n	801b4ce <__libc_init_array+0x2e>
 801b4c2:	bd70      	pop	{r4, r5, r6, pc}
 801b4c4:	f855 3b04 	ldr.w	r3, [r5], #4
 801b4c8:	4798      	blx	r3
 801b4ca:	3601      	adds	r6, #1
 801b4cc:	e7ee      	b.n	801b4ac <__libc_init_array+0xc>
 801b4ce:	f855 3b04 	ldr.w	r3, [r5], #4
 801b4d2:	4798      	blx	r3
 801b4d4:	3601      	adds	r6, #1
 801b4d6:	e7f2      	b.n	801b4be <__libc_init_array+0x1e>
 801b4d8:	0801fc58 	.word	0x0801fc58
 801b4dc:	0801fc58 	.word	0x0801fc58
 801b4e0:	0801fc58 	.word	0x0801fc58
 801b4e4:	0801fc70 	.word	0x0801fc70

0801b4e8 <malloc>:
 801b4e8:	4b02      	ldr	r3, [pc, #8]	; (801b4f4 <malloc+0xc>)
 801b4ea:	4601      	mov	r1, r0
 801b4ec:	6818      	ldr	r0, [r3, #0]
 801b4ee:	f000 b88d 	b.w	801b60c <_malloc_r>
 801b4f2:	bf00      	nop
 801b4f4:	200000d8 	.word	0x200000d8

0801b4f8 <free>:
 801b4f8:	4b02      	ldr	r3, [pc, #8]	; (801b504 <free+0xc>)
 801b4fa:	4601      	mov	r1, r0
 801b4fc:	6818      	ldr	r0, [r3, #0]
 801b4fe:	f000 b819 	b.w	801b534 <_free_r>
 801b502:	bf00      	nop
 801b504:	200000d8 	.word	0x200000d8

0801b508 <memcpy>:
 801b508:	440a      	add	r2, r1
 801b50a:	4291      	cmp	r1, r2
 801b50c:	f100 33ff 	add.w	r3, r0, #4294967295
 801b510:	d100      	bne.n	801b514 <memcpy+0xc>
 801b512:	4770      	bx	lr
 801b514:	b510      	push	{r4, lr}
 801b516:	f811 4b01 	ldrb.w	r4, [r1], #1
 801b51a:	f803 4f01 	strb.w	r4, [r3, #1]!
 801b51e:	4291      	cmp	r1, r2
 801b520:	d1f9      	bne.n	801b516 <memcpy+0xe>
 801b522:	bd10      	pop	{r4, pc}

0801b524 <memset>:
 801b524:	4402      	add	r2, r0
 801b526:	4603      	mov	r3, r0
 801b528:	4293      	cmp	r3, r2
 801b52a:	d100      	bne.n	801b52e <memset+0xa>
 801b52c:	4770      	bx	lr
 801b52e:	f803 1b01 	strb.w	r1, [r3], #1
 801b532:	e7f9      	b.n	801b528 <memset+0x4>

0801b534 <_free_r>:
 801b534:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801b536:	2900      	cmp	r1, #0
 801b538:	d044      	beq.n	801b5c4 <_free_r+0x90>
 801b53a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801b53e:	9001      	str	r0, [sp, #4]
 801b540:	2b00      	cmp	r3, #0
 801b542:	f1a1 0404 	sub.w	r4, r1, #4
 801b546:	bfb8      	it	lt
 801b548:	18e4      	addlt	r4, r4, r3
 801b54a:	f000 ff57 	bl	801c3fc <__malloc_lock>
 801b54e:	4a1e      	ldr	r2, [pc, #120]	; (801b5c8 <_free_r+0x94>)
 801b550:	9801      	ldr	r0, [sp, #4]
 801b552:	6813      	ldr	r3, [r2, #0]
 801b554:	b933      	cbnz	r3, 801b564 <_free_r+0x30>
 801b556:	6063      	str	r3, [r4, #4]
 801b558:	6014      	str	r4, [r2, #0]
 801b55a:	b003      	add	sp, #12
 801b55c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801b560:	f000 bf52 	b.w	801c408 <__malloc_unlock>
 801b564:	42a3      	cmp	r3, r4
 801b566:	d908      	bls.n	801b57a <_free_r+0x46>
 801b568:	6825      	ldr	r5, [r4, #0]
 801b56a:	1961      	adds	r1, r4, r5
 801b56c:	428b      	cmp	r3, r1
 801b56e:	bf01      	itttt	eq
 801b570:	6819      	ldreq	r1, [r3, #0]
 801b572:	685b      	ldreq	r3, [r3, #4]
 801b574:	1949      	addeq	r1, r1, r5
 801b576:	6021      	streq	r1, [r4, #0]
 801b578:	e7ed      	b.n	801b556 <_free_r+0x22>
 801b57a:	461a      	mov	r2, r3
 801b57c:	685b      	ldr	r3, [r3, #4]
 801b57e:	b10b      	cbz	r3, 801b584 <_free_r+0x50>
 801b580:	42a3      	cmp	r3, r4
 801b582:	d9fa      	bls.n	801b57a <_free_r+0x46>
 801b584:	6811      	ldr	r1, [r2, #0]
 801b586:	1855      	adds	r5, r2, r1
 801b588:	42a5      	cmp	r5, r4
 801b58a:	d10b      	bne.n	801b5a4 <_free_r+0x70>
 801b58c:	6824      	ldr	r4, [r4, #0]
 801b58e:	4421      	add	r1, r4
 801b590:	1854      	adds	r4, r2, r1
 801b592:	42a3      	cmp	r3, r4
 801b594:	6011      	str	r1, [r2, #0]
 801b596:	d1e0      	bne.n	801b55a <_free_r+0x26>
 801b598:	681c      	ldr	r4, [r3, #0]
 801b59a:	685b      	ldr	r3, [r3, #4]
 801b59c:	6053      	str	r3, [r2, #4]
 801b59e:	4421      	add	r1, r4
 801b5a0:	6011      	str	r1, [r2, #0]
 801b5a2:	e7da      	b.n	801b55a <_free_r+0x26>
 801b5a4:	d902      	bls.n	801b5ac <_free_r+0x78>
 801b5a6:	230c      	movs	r3, #12
 801b5a8:	6003      	str	r3, [r0, #0]
 801b5aa:	e7d6      	b.n	801b55a <_free_r+0x26>
 801b5ac:	6825      	ldr	r5, [r4, #0]
 801b5ae:	1961      	adds	r1, r4, r5
 801b5b0:	428b      	cmp	r3, r1
 801b5b2:	bf04      	itt	eq
 801b5b4:	6819      	ldreq	r1, [r3, #0]
 801b5b6:	685b      	ldreq	r3, [r3, #4]
 801b5b8:	6063      	str	r3, [r4, #4]
 801b5ba:	bf04      	itt	eq
 801b5bc:	1949      	addeq	r1, r1, r5
 801b5be:	6021      	streq	r1, [r4, #0]
 801b5c0:	6054      	str	r4, [r2, #4]
 801b5c2:	e7ca      	b.n	801b55a <_free_r+0x26>
 801b5c4:	b003      	add	sp, #12
 801b5c6:	bd30      	pop	{r4, r5, pc}
 801b5c8:	2000a528 	.word	0x2000a528

0801b5cc <sbrk_aligned>:
 801b5cc:	b570      	push	{r4, r5, r6, lr}
 801b5ce:	4e0e      	ldr	r6, [pc, #56]	; (801b608 <sbrk_aligned+0x3c>)
 801b5d0:	460c      	mov	r4, r1
 801b5d2:	6831      	ldr	r1, [r6, #0]
 801b5d4:	4605      	mov	r5, r0
 801b5d6:	b911      	cbnz	r1, 801b5de <sbrk_aligned+0x12>
 801b5d8:	f000 fb7a 	bl	801bcd0 <_sbrk_r>
 801b5dc:	6030      	str	r0, [r6, #0]
 801b5de:	4621      	mov	r1, r4
 801b5e0:	4628      	mov	r0, r5
 801b5e2:	f000 fb75 	bl	801bcd0 <_sbrk_r>
 801b5e6:	1c43      	adds	r3, r0, #1
 801b5e8:	d00a      	beq.n	801b600 <sbrk_aligned+0x34>
 801b5ea:	1cc4      	adds	r4, r0, #3
 801b5ec:	f024 0403 	bic.w	r4, r4, #3
 801b5f0:	42a0      	cmp	r0, r4
 801b5f2:	d007      	beq.n	801b604 <sbrk_aligned+0x38>
 801b5f4:	1a21      	subs	r1, r4, r0
 801b5f6:	4628      	mov	r0, r5
 801b5f8:	f000 fb6a 	bl	801bcd0 <_sbrk_r>
 801b5fc:	3001      	adds	r0, #1
 801b5fe:	d101      	bne.n	801b604 <sbrk_aligned+0x38>
 801b600:	f04f 34ff 	mov.w	r4, #4294967295
 801b604:	4620      	mov	r0, r4
 801b606:	bd70      	pop	{r4, r5, r6, pc}
 801b608:	2000a52c 	.word	0x2000a52c

0801b60c <_malloc_r>:
 801b60c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b610:	1ccd      	adds	r5, r1, #3
 801b612:	f025 0503 	bic.w	r5, r5, #3
 801b616:	3508      	adds	r5, #8
 801b618:	2d0c      	cmp	r5, #12
 801b61a:	bf38      	it	cc
 801b61c:	250c      	movcc	r5, #12
 801b61e:	2d00      	cmp	r5, #0
 801b620:	4607      	mov	r7, r0
 801b622:	db01      	blt.n	801b628 <_malloc_r+0x1c>
 801b624:	42a9      	cmp	r1, r5
 801b626:	d905      	bls.n	801b634 <_malloc_r+0x28>
 801b628:	230c      	movs	r3, #12
 801b62a:	603b      	str	r3, [r7, #0]
 801b62c:	2600      	movs	r6, #0
 801b62e:	4630      	mov	r0, r6
 801b630:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b634:	4e2e      	ldr	r6, [pc, #184]	; (801b6f0 <_malloc_r+0xe4>)
 801b636:	f000 fee1 	bl	801c3fc <__malloc_lock>
 801b63a:	6833      	ldr	r3, [r6, #0]
 801b63c:	461c      	mov	r4, r3
 801b63e:	bb34      	cbnz	r4, 801b68e <_malloc_r+0x82>
 801b640:	4629      	mov	r1, r5
 801b642:	4638      	mov	r0, r7
 801b644:	f7ff ffc2 	bl	801b5cc <sbrk_aligned>
 801b648:	1c43      	adds	r3, r0, #1
 801b64a:	4604      	mov	r4, r0
 801b64c:	d14d      	bne.n	801b6ea <_malloc_r+0xde>
 801b64e:	6834      	ldr	r4, [r6, #0]
 801b650:	4626      	mov	r6, r4
 801b652:	2e00      	cmp	r6, #0
 801b654:	d140      	bne.n	801b6d8 <_malloc_r+0xcc>
 801b656:	6823      	ldr	r3, [r4, #0]
 801b658:	4631      	mov	r1, r6
 801b65a:	4638      	mov	r0, r7
 801b65c:	eb04 0803 	add.w	r8, r4, r3
 801b660:	f000 fb36 	bl	801bcd0 <_sbrk_r>
 801b664:	4580      	cmp	r8, r0
 801b666:	d13a      	bne.n	801b6de <_malloc_r+0xd2>
 801b668:	6821      	ldr	r1, [r4, #0]
 801b66a:	3503      	adds	r5, #3
 801b66c:	1a6d      	subs	r5, r5, r1
 801b66e:	f025 0503 	bic.w	r5, r5, #3
 801b672:	3508      	adds	r5, #8
 801b674:	2d0c      	cmp	r5, #12
 801b676:	bf38      	it	cc
 801b678:	250c      	movcc	r5, #12
 801b67a:	4629      	mov	r1, r5
 801b67c:	4638      	mov	r0, r7
 801b67e:	f7ff ffa5 	bl	801b5cc <sbrk_aligned>
 801b682:	3001      	adds	r0, #1
 801b684:	d02b      	beq.n	801b6de <_malloc_r+0xd2>
 801b686:	6823      	ldr	r3, [r4, #0]
 801b688:	442b      	add	r3, r5
 801b68a:	6023      	str	r3, [r4, #0]
 801b68c:	e00e      	b.n	801b6ac <_malloc_r+0xa0>
 801b68e:	6822      	ldr	r2, [r4, #0]
 801b690:	1b52      	subs	r2, r2, r5
 801b692:	d41e      	bmi.n	801b6d2 <_malloc_r+0xc6>
 801b694:	2a0b      	cmp	r2, #11
 801b696:	d916      	bls.n	801b6c6 <_malloc_r+0xba>
 801b698:	1961      	adds	r1, r4, r5
 801b69a:	42a3      	cmp	r3, r4
 801b69c:	6025      	str	r5, [r4, #0]
 801b69e:	bf18      	it	ne
 801b6a0:	6059      	strne	r1, [r3, #4]
 801b6a2:	6863      	ldr	r3, [r4, #4]
 801b6a4:	bf08      	it	eq
 801b6a6:	6031      	streq	r1, [r6, #0]
 801b6a8:	5162      	str	r2, [r4, r5]
 801b6aa:	604b      	str	r3, [r1, #4]
 801b6ac:	4638      	mov	r0, r7
 801b6ae:	f104 060b 	add.w	r6, r4, #11
 801b6b2:	f000 fea9 	bl	801c408 <__malloc_unlock>
 801b6b6:	f026 0607 	bic.w	r6, r6, #7
 801b6ba:	1d23      	adds	r3, r4, #4
 801b6bc:	1af2      	subs	r2, r6, r3
 801b6be:	d0b6      	beq.n	801b62e <_malloc_r+0x22>
 801b6c0:	1b9b      	subs	r3, r3, r6
 801b6c2:	50a3      	str	r3, [r4, r2]
 801b6c4:	e7b3      	b.n	801b62e <_malloc_r+0x22>
 801b6c6:	6862      	ldr	r2, [r4, #4]
 801b6c8:	42a3      	cmp	r3, r4
 801b6ca:	bf0c      	ite	eq
 801b6cc:	6032      	streq	r2, [r6, #0]
 801b6ce:	605a      	strne	r2, [r3, #4]
 801b6d0:	e7ec      	b.n	801b6ac <_malloc_r+0xa0>
 801b6d2:	4623      	mov	r3, r4
 801b6d4:	6864      	ldr	r4, [r4, #4]
 801b6d6:	e7b2      	b.n	801b63e <_malloc_r+0x32>
 801b6d8:	4634      	mov	r4, r6
 801b6da:	6876      	ldr	r6, [r6, #4]
 801b6dc:	e7b9      	b.n	801b652 <_malloc_r+0x46>
 801b6de:	230c      	movs	r3, #12
 801b6e0:	603b      	str	r3, [r7, #0]
 801b6e2:	4638      	mov	r0, r7
 801b6e4:	f000 fe90 	bl	801c408 <__malloc_unlock>
 801b6e8:	e7a1      	b.n	801b62e <_malloc_r+0x22>
 801b6ea:	6025      	str	r5, [r4, #0]
 801b6ec:	e7de      	b.n	801b6ac <_malloc_r+0xa0>
 801b6ee:	bf00      	nop
 801b6f0:	2000a528 	.word	0x2000a528

0801b6f4 <__sfputc_r>:
 801b6f4:	6893      	ldr	r3, [r2, #8]
 801b6f6:	3b01      	subs	r3, #1
 801b6f8:	2b00      	cmp	r3, #0
 801b6fa:	b410      	push	{r4}
 801b6fc:	6093      	str	r3, [r2, #8]
 801b6fe:	da08      	bge.n	801b712 <__sfputc_r+0x1e>
 801b700:	6994      	ldr	r4, [r2, #24]
 801b702:	42a3      	cmp	r3, r4
 801b704:	db01      	blt.n	801b70a <__sfputc_r+0x16>
 801b706:	290a      	cmp	r1, #10
 801b708:	d103      	bne.n	801b712 <__sfputc_r+0x1e>
 801b70a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b70e:	f000 bb33 	b.w	801bd78 <__swbuf_r>
 801b712:	6813      	ldr	r3, [r2, #0]
 801b714:	1c58      	adds	r0, r3, #1
 801b716:	6010      	str	r0, [r2, #0]
 801b718:	7019      	strb	r1, [r3, #0]
 801b71a:	4608      	mov	r0, r1
 801b71c:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b720:	4770      	bx	lr

0801b722 <__sfputs_r>:
 801b722:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b724:	4606      	mov	r6, r0
 801b726:	460f      	mov	r7, r1
 801b728:	4614      	mov	r4, r2
 801b72a:	18d5      	adds	r5, r2, r3
 801b72c:	42ac      	cmp	r4, r5
 801b72e:	d101      	bne.n	801b734 <__sfputs_r+0x12>
 801b730:	2000      	movs	r0, #0
 801b732:	e007      	b.n	801b744 <__sfputs_r+0x22>
 801b734:	f814 1b01 	ldrb.w	r1, [r4], #1
 801b738:	463a      	mov	r2, r7
 801b73a:	4630      	mov	r0, r6
 801b73c:	f7ff ffda 	bl	801b6f4 <__sfputc_r>
 801b740:	1c43      	adds	r3, r0, #1
 801b742:	d1f3      	bne.n	801b72c <__sfputs_r+0xa>
 801b744:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801b748 <_vfiprintf_r>:
 801b748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b74c:	460d      	mov	r5, r1
 801b74e:	b09d      	sub	sp, #116	; 0x74
 801b750:	4614      	mov	r4, r2
 801b752:	4698      	mov	r8, r3
 801b754:	4606      	mov	r6, r0
 801b756:	b118      	cbz	r0, 801b760 <_vfiprintf_r+0x18>
 801b758:	6983      	ldr	r3, [r0, #24]
 801b75a:	b90b      	cbnz	r3, 801b760 <_vfiprintf_r+0x18>
 801b75c:	f000 fd48 	bl	801c1f0 <__sinit>
 801b760:	4b89      	ldr	r3, [pc, #548]	; (801b988 <_vfiprintf_r+0x240>)
 801b762:	429d      	cmp	r5, r3
 801b764:	d11b      	bne.n	801b79e <_vfiprintf_r+0x56>
 801b766:	6875      	ldr	r5, [r6, #4]
 801b768:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801b76a:	07d9      	lsls	r1, r3, #31
 801b76c:	d405      	bmi.n	801b77a <_vfiprintf_r+0x32>
 801b76e:	89ab      	ldrh	r3, [r5, #12]
 801b770:	059a      	lsls	r2, r3, #22
 801b772:	d402      	bmi.n	801b77a <_vfiprintf_r+0x32>
 801b774:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801b776:	f000 fdd9 	bl	801c32c <__retarget_lock_acquire_recursive>
 801b77a:	89ab      	ldrh	r3, [r5, #12]
 801b77c:	071b      	lsls	r3, r3, #28
 801b77e:	d501      	bpl.n	801b784 <_vfiprintf_r+0x3c>
 801b780:	692b      	ldr	r3, [r5, #16]
 801b782:	b9eb      	cbnz	r3, 801b7c0 <_vfiprintf_r+0x78>
 801b784:	4629      	mov	r1, r5
 801b786:	4630      	mov	r0, r6
 801b788:	f000 fb48 	bl	801be1c <__swsetup_r>
 801b78c:	b1c0      	cbz	r0, 801b7c0 <_vfiprintf_r+0x78>
 801b78e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801b790:	07dc      	lsls	r4, r3, #31
 801b792:	d50e      	bpl.n	801b7b2 <_vfiprintf_r+0x6a>
 801b794:	f04f 30ff 	mov.w	r0, #4294967295
 801b798:	b01d      	add	sp, #116	; 0x74
 801b79a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b79e:	4b7b      	ldr	r3, [pc, #492]	; (801b98c <_vfiprintf_r+0x244>)
 801b7a0:	429d      	cmp	r5, r3
 801b7a2:	d101      	bne.n	801b7a8 <_vfiprintf_r+0x60>
 801b7a4:	68b5      	ldr	r5, [r6, #8]
 801b7a6:	e7df      	b.n	801b768 <_vfiprintf_r+0x20>
 801b7a8:	4b79      	ldr	r3, [pc, #484]	; (801b990 <_vfiprintf_r+0x248>)
 801b7aa:	429d      	cmp	r5, r3
 801b7ac:	bf08      	it	eq
 801b7ae:	68f5      	ldreq	r5, [r6, #12]
 801b7b0:	e7da      	b.n	801b768 <_vfiprintf_r+0x20>
 801b7b2:	89ab      	ldrh	r3, [r5, #12]
 801b7b4:	0598      	lsls	r0, r3, #22
 801b7b6:	d4ed      	bmi.n	801b794 <_vfiprintf_r+0x4c>
 801b7b8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801b7ba:	f000 fdb9 	bl	801c330 <__retarget_lock_release_recursive>
 801b7be:	e7e9      	b.n	801b794 <_vfiprintf_r+0x4c>
 801b7c0:	2300      	movs	r3, #0
 801b7c2:	9309      	str	r3, [sp, #36]	; 0x24
 801b7c4:	2320      	movs	r3, #32
 801b7c6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801b7ca:	f8cd 800c 	str.w	r8, [sp, #12]
 801b7ce:	2330      	movs	r3, #48	; 0x30
 801b7d0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801b994 <_vfiprintf_r+0x24c>
 801b7d4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801b7d8:	f04f 0901 	mov.w	r9, #1
 801b7dc:	4623      	mov	r3, r4
 801b7de:	469a      	mov	sl, r3
 801b7e0:	f813 2b01 	ldrb.w	r2, [r3], #1
 801b7e4:	b10a      	cbz	r2, 801b7ea <_vfiprintf_r+0xa2>
 801b7e6:	2a25      	cmp	r2, #37	; 0x25
 801b7e8:	d1f9      	bne.n	801b7de <_vfiprintf_r+0x96>
 801b7ea:	ebba 0b04 	subs.w	fp, sl, r4
 801b7ee:	d00b      	beq.n	801b808 <_vfiprintf_r+0xc0>
 801b7f0:	465b      	mov	r3, fp
 801b7f2:	4622      	mov	r2, r4
 801b7f4:	4629      	mov	r1, r5
 801b7f6:	4630      	mov	r0, r6
 801b7f8:	f7ff ff93 	bl	801b722 <__sfputs_r>
 801b7fc:	3001      	adds	r0, #1
 801b7fe:	f000 80aa 	beq.w	801b956 <_vfiprintf_r+0x20e>
 801b802:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b804:	445a      	add	r2, fp
 801b806:	9209      	str	r2, [sp, #36]	; 0x24
 801b808:	f89a 3000 	ldrb.w	r3, [sl]
 801b80c:	2b00      	cmp	r3, #0
 801b80e:	f000 80a2 	beq.w	801b956 <_vfiprintf_r+0x20e>
 801b812:	2300      	movs	r3, #0
 801b814:	f04f 32ff 	mov.w	r2, #4294967295
 801b818:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801b81c:	f10a 0a01 	add.w	sl, sl, #1
 801b820:	9304      	str	r3, [sp, #16]
 801b822:	9307      	str	r3, [sp, #28]
 801b824:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801b828:	931a      	str	r3, [sp, #104]	; 0x68
 801b82a:	4654      	mov	r4, sl
 801b82c:	2205      	movs	r2, #5
 801b82e:	f814 1b01 	ldrb.w	r1, [r4], #1
 801b832:	4858      	ldr	r0, [pc, #352]	; (801b994 <_vfiprintf_r+0x24c>)
 801b834:	f7e4 fce4 	bl	8000200 <memchr>
 801b838:	9a04      	ldr	r2, [sp, #16]
 801b83a:	b9d8      	cbnz	r0, 801b874 <_vfiprintf_r+0x12c>
 801b83c:	06d1      	lsls	r1, r2, #27
 801b83e:	bf44      	itt	mi
 801b840:	2320      	movmi	r3, #32
 801b842:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801b846:	0713      	lsls	r3, r2, #28
 801b848:	bf44      	itt	mi
 801b84a:	232b      	movmi	r3, #43	; 0x2b
 801b84c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801b850:	f89a 3000 	ldrb.w	r3, [sl]
 801b854:	2b2a      	cmp	r3, #42	; 0x2a
 801b856:	d015      	beq.n	801b884 <_vfiprintf_r+0x13c>
 801b858:	9a07      	ldr	r2, [sp, #28]
 801b85a:	4654      	mov	r4, sl
 801b85c:	2000      	movs	r0, #0
 801b85e:	f04f 0c0a 	mov.w	ip, #10
 801b862:	4621      	mov	r1, r4
 801b864:	f811 3b01 	ldrb.w	r3, [r1], #1
 801b868:	3b30      	subs	r3, #48	; 0x30
 801b86a:	2b09      	cmp	r3, #9
 801b86c:	d94e      	bls.n	801b90c <_vfiprintf_r+0x1c4>
 801b86e:	b1b0      	cbz	r0, 801b89e <_vfiprintf_r+0x156>
 801b870:	9207      	str	r2, [sp, #28]
 801b872:	e014      	b.n	801b89e <_vfiprintf_r+0x156>
 801b874:	eba0 0308 	sub.w	r3, r0, r8
 801b878:	fa09 f303 	lsl.w	r3, r9, r3
 801b87c:	4313      	orrs	r3, r2
 801b87e:	9304      	str	r3, [sp, #16]
 801b880:	46a2      	mov	sl, r4
 801b882:	e7d2      	b.n	801b82a <_vfiprintf_r+0xe2>
 801b884:	9b03      	ldr	r3, [sp, #12]
 801b886:	1d19      	adds	r1, r3, #4
 801b888:	681b      	ldr	r3, [r3, #0]
 801b88a:	9103      	str	r1, [sp, #12]
 801b88c:	2b00      	cmp	r3, #0
 801b88e:	bfbb      	ittet	lt
 801b890:	425b      	neglt	r3, r3
 801b892:	f042 0202 	orrlt.w	r2, r2, #2
 801b896:	9307      	strge	r3, [sp, #28]
 801b898:	9307      	strlt	r3, [sp, #28]
 801b89a:	bfb8      	it	lt
 801b89c:	9204      	strlt	r2, [sp, #16]
 801b89e:	7823      	ldrb	r3, [r4, #0]
 801b8a0:	2b2e      	cmp	r3, #46	; 0x2e
 801b8a2:	d10c      	bne.n	801b8be <_vfiprintf_r+0x176>
 801b8a4:	7863      	ldrb	r3, [r4, #1]
 801b8a6:	2b2a      	cmp	r3, #42	; 0x2a
 801b8a8:	d135      	bne.n	801b916 <_vfiprintf_r+0x1ce>
 801b8aa:	9b03      	ldr	r3, [sp, #12]
 801b8ac:	1d1a      	adds	r2, r3, #4
 801b8ae:	681b      	ldr	r3, [r3, #0]
 801b8b0:	9203      	str	r2, [sp, #12]
 801b8b2:	2b00      	cmp	r3, #0
 801b8b4:	bfb8      	it	lt
 801b8b6:	f04f 33ff 	movlt.w	r3, #4294967295
 801b8ba:	3402      	adds	r4, #2
 801b8bc:	9305      	str	r3, [sp, #20]
 801b8be:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801b9a4 <_vfiprintf_r+0x25c>
 801b8c2:	7821      	ldrb	r1, [r4, #0]
 801b8c4:	2203      	movs	r2, #3
 801b8c6:	4650      	mov	r0, sl
 801b8c8:	f7e4 fc9a 	bl	8000200 <memchr>
 801b8cc:	b140      	cbz	r0, 801b8e0 <_vfiprintf_r+0x198>
 801b8ce:	2340      	movs	r3, #64	; 0x40
 801b8d0:	eba0 000a 	sub.w	r0, r0, sl
 801b8d4:	fa03 f000 	lsl.w	r0, r3, r0
 801b8d8:	9b04      	ldr	r3, [sp, #16]
 801b8da:	4303      	orrs	r3, r0
 801b8dc:	3401      	adds	r4, #1
 801b8de:	9304      	str	r3, [sp, #16]
 801b8e0:	f814 1b01 	ldrb.w	r1, [r4], #1
 801b8e4:	482c      	ldr	r0, [pc, #176]	; (801b998 <_vfiprintf_r+0x250>)
 801b8e6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801b8ea:	2206      	movs	r2, #6
 801b8ec:	f7e4 fc88 	bl	8000200 <memchr>
 801b8f0:	2800      	cmp	r0, #0
 801b8f2:	d03f      	beq.n	801b974 <_vfiprintf_r+0x22c>
 801b8f4:	4b29      	ldr	r3, [pc, #164]	; (801b99c <_vfiprintf_r+0x254>)
 801b8f6:	bb1b      	cbnz	r3, 801b940 <_vfiprintf_r+0x1f8>
 801b8f8:	9b03      	ldr	r3, [sp, #12]
 801b8fa:	3307      	adds	r3, #7
 801b8fc:	f023 0307 	bic.w	r3, r3, #7
 801b900:	3308      	adds	r3, #8
 801b902:	9303      	str	r3, [sp, #12]
 801b904:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b906:	443b      	add	r3, r7
 801b908:	9309      	str	r3, [sp, #36]	; 0x24
 801b90a:	e767      	b.n	801b7dc <_vfiprintf_r+0x94>
 801b90c:	fb0c 3202 	mla	r2, ip, r2, r3
 801b910:	460c      	mov	r4, r1
 801b912:	2001      	movs	r0, #1
 801b914:	e7a5      	b.n	801b862 <_vfiprintf_r+0x11a>
 801b916:	2300      	movs	r3, #0
 801b918:	3401      	adds	r4, #1
 801b91a:	9305      	str	r3, [sp, #20]
 801b91c:	4619      	mov	r1, r3
 801b91e:	f04f 0c0a 	mov.w	ip, #10
 801b922:	4620      	mov	r0, r4
 801b924:	f810 2b01 	ldrb.w	r2, [r0], #1
 801b928:	3a30      	subs	r2, #48	; 0x30
 801b92a:	2a09      	cmp	r2, #9
 801b92c:	d903      	bls.n	801b936 <_vfiprintf_r+0x1ee>
 801b92e:	2b00      	cmp	r3, #0
 801b930:	d0c5      	beq.n	801b8be <_vfiprintf_r+0x176>
 801b932:	9105      	str	r1, [sp, #20]
 801b934:	e7c3      	b.n	801b8be <_vfiprintf_r+0x176>
 801b936:	fb0c 2101 	mla	r1, ip, r1, r2
 801b93a:	4604      	mov	r4, r0
 801b93c:	2301      	movs	r3, #1
 801b93e:	e7f0      	b.n	801b922 <_vfiprintf_r+0x1da>
 801b940:	ab03      	add	r3, sp, #12
 801b942:	9300      	str	r3, [sp, #0]
 801b944:	462a      	mov	r2, r5
 801b946:	4b16      	ldr	r3, [pc, #88]	; (801b9a0 <_vfiprintf_r+0x258>)
 801b948:	a904      	add	r1, sp, #16
 801b94a:	4630      	mov	r0, r6
 801b94c:	f3af 8000 	nop.w
 801b950:	4607      	mov	r7, r0
 801b952:	1c78      	adds	r0, r7, #1
 801b954:	d1d6      	bne.n	801b904 <_vfiprintf_r+0x1bc>
 801b956:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801b958:	07d9      	lsls	r1, r3, #31
 801b95a:	d405      	bmi.n	801b968 <_vfiprintf_r+0x220>
 801b95c:	89ab      	ldrh	r3, [r5, #12]
 801b95e:	059a      	lsls	r2, r3, #22
 801b960:	d402      	bmi.n	801b968 <_vfiprintf_r+0x220>
 801b962:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801b964:	f000 fce4 	bl	801c330 <__retarget_lock_release_recursive>
 801b968:	89ab      	ldrh	r3, [r5, #12]
 801b96a:	065b      	lsls	r3, r3, #25
 801b96c:	f53f af12 	bmi.w	801b794 <_vfiprintf_r+0x4c>
 801b970:	9809      	ldr	r0, [sp, #36]	; 0x24
 801b972:	e711      	b.n	801b798 <_vfiprintf_r+0x50>
 801b974:	ab03      	add	r3, sp, #12
 801b976:	9300      	str	r3, [sp, #0]
 801b978:	462a      	mov	r2, r5
 801b97a:	4b09      	ldr	r3, [pc, #36]	; (801b9a0 <_vfiprintf_r+0x258>)
 801b97c:	a904      	add	r1, sp, #16
 801b97e:	4630      	mov	r0, r6
 801b980:	f000 f880 	bl	801ba84 <_printf_i>
 801b984:	e7e4      	b.n	801b950 <_vfiprintf_r+0x208>
 801b986:	bf00      	nop
 801b988:	0801fbf8 	.word	0x0801fbf8
 801b98c:	0801fc18 	.word	0x0801fc18
 801b990:	0801fbd8 	.word	0x0801fbd8
 801b994:	0801fba0 	.word	0x0801fba0
 801b998:	0801fbaa 	.word	0x0801fbaa
 801b99c:	00000000 	.word	0x00000000
 801b9a0:	0801b723 	.word	0x0801b723
 801b9a4:	0801fba6 	.word	0x0801fba6

0801b9a8 <_printf_common>:
 801b9a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b9ac:	4616      	mov	r6, r2
 801b9ae:	4699      	mov	r9, r3
 801b9b0:	688a      	ldr	r2, [r1, #8]
 801b9b2:	690b      	ldr	r3, [r1, #16]
 801b9b4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801b9b8:	4293      	cmp	r3, r2
 801b9ba:	bfb8      	it	lt
 801b9bc:	4613      	movlt	r3, r2
 801b9be:	6033      	str	r3, [r6, #0]
 801b9c0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801b9c4:	4607      	mov	r7, r0
 801b9c6:	460c      	mov	r4, r1
 801b9c8:	b10a      	cbz	r2, 801b9ce <_printf_common+0x26>
 801b9ca:	3301      	adds	r3, #1
 801b9cc:	6033      	str	r3, [r6, #0]
 801b9ce:	6823      	ldr	r3, [r4, #0]
 801b9d0:	0699      	lsls	r1, r3, #26
 801b9d2:	bf42      	ittt	mi
 801b9d4:	6833      	ldrmi	r3, [r6, #0]
 801b9d6:	3302      	addmi	r3, #2
 801b9d8:	6033      	strmi	r3, [r6, #0]
 801b9da:	6825      	ldr	r5, [r4, #0]
 801b9dc:	f015 0506 	ands.w	r5, r5, #6
 801b9e0:	d106      	bne.n	801b9f0 <_printf_common+0x48>
 801b9e2:	f104 0a19 	add.w	sl, r4, #25
 801b9e6:	68e3      	ldr	r3, [r4, #12]
 801b9e8:	6832      	ldr	r2, [r6, #0]
 801b9ea:	1a9b      	subs	r3, r3, r2
 801b9ec:	42ab      	cmp	r3, r5
 801b9ee:	dc26      	bgt.n	801ba3e <_printf_common+0x96>
 801b9f0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801b9f4:	1e13      	subs	r3, r2, #0
 801b9f6:	6822      	ldr	r2, [r4, #0]
 801b9f8:	bf18      	it	ne
 801b9fa:	2301      	movne	r3, #1
 801b9fc:	0692      	lsls	r2, r2, #26
 801b9fe:	d42b      	bmi.n	801ba58 <_printf_common+0xb0>
 801ba00:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801ba04:	4649      	mov	r1, r9
 801ba06:	4638      	mov	r0, r7
 801ba08:	47c0      	blx	r8
 801ba0a:	3001      	adds	r0, #1
 801ba0c:	d01e      	beq.n	801ba4c <_printf_common+0xa4>
 801ba0e:	6823      	ldr	r3, [r4, #0]
 801ba10:	68e5      	ldr	r5, [r4, #12]
 801ba12:	6832      	ldr	r2, [r6, #0]
 801ba14:	f003 0306 	and.w	r3, r3, #6
 801ba18:	2b04      	cmp	r3, #4
 801ba1a:	bf08      	it	eq
 801ba1c:	1aad      	subeq	r5, r5, r2
 801ba1e:	68a3      	ldr	r3, [r4, #8]
 801ba20:	6922      	ldr	r2, [r4, #16]
 801ba22:	bf0c      	ite	eq
 801ba24:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801ba28:	2500      	movne	r5, #0
 801ba2a:	4293      	cmp	r3, r2
 801ba2c:	bfc4      	itt	gt
 801ba2e:	1a9b      	subgt	r3, r3, r2
 801ba30:	18ed      	addgt	r5, r5, r3
 801ba32:	2600      	movs	r6, #0
 801ba34:	341a      	adds	r4, #26
 801ba36:	42b5      	cmp	r5, r6
 801ba38:	d11a      	bne.n	801ba70 <_printf_common+0xc8>
 801ba3a:	2000      	movs	r0, #0
 801ba3c:	e008      	b.n	801ba50 <_printf_common+0xa8>
 801ba3e:	2301      	movs	r3, #1
 801ba40:	4652      	mov	r2, sl
 801ba42:	4649      	mov	r1, r9
 801ba44:	4638      	mov	r0, r7
 801ba46:	47c0      	blx	r8
 801ba48:	3001      	adds	r0, #1
 801ba4a:	d103      	bne.n	801ba54 <_printf_common+0xac>
 801ba4c:	f04f 30ff 	mov.w	r0, #4294967295
 801ba50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ba54:	3501      	adds	r5, #1
 801ba56:	e7c6      	b.n	801b9e6 <_printf_common+0x3e>
 801ba58:	18e1      	adds	r1, r4, r3
 801ba5a:	1c5a      	adds	r2, r3, #1
 801ba5c:	2030      	movs	r0, #48	; 0x30
 801ba5e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801ba62:	4422      	add	r2, r4
 801ba64:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801ba68:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801ba6c:	3302      	adds	r3, #2
 801ba6e:	e7c7      	b.n	801ba00 <_printf_common+0x58>
 801ba70:	2301      	movs	r3, #1
 801ba72:	4622      	mov	r2, r4
 801ba74:	4649      	mov	r1, r9
 801ba76:	4638      	mov	r0, r7
 801ba78:	47c0      	blx	r8
 801ba7a:	3001      	adds	r0, #1
 801ba7c:	d0e6      	beq.n	801ba4c <_printf_common+0xa4>
 801ba7e:	3601      	adds	r6, #1
 801ba80:	e7d9      	b.n	801ba36 <_printf_common+0x8e>
	...

0801ba84 <_printf_i>:
 801ba84:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801ba88:	7e0f      	ldrb	r7, [r1, #24]
 801ba8a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ba8c:	2f78      	cmp	r7, #120	; 0x78
 801ba8e:	4691      	mov	r9, r2
 801ba90:	4680      	mov	r8, r0
 801ba92:	460c      	mov	r4, r1
 801ba94:	469a      	mov	sl, r3
 801ba96:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801ba9a:	d807      	bhi.n	801baac <_printf_i+0x28>
 801ba9c:	2f62      	cmp	r7, #98	; 0x62
 801ba9e:	d80a      	bhi.n	801bab6 <_printf_i+0x32>
 801baa0:	2f00      	cmp	r7, #0
 801baa2:	f000 80d8 	beq.w	801bc56 <_printf_i+0x1d2>
 801baa6:	2f58      	cmp	r7, #88	; 0x58
 801baa8:	f000 80a3 	beq.w	801bbf2 <_printf_i+0x16e>
 801baac:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801bab0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801bab4:	e03a      	b.n	801bb2c <_printf_i+0xa8>
 801bab6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801baba:	2b15      	cmp	r3, #21
 801babc:	d8f6      	bhi.n	801baac <_printf_i+0x28>
 801babe:	a101      	add	r1, pc, #4	; (adr r1, 801bac4 <_printf_i+0x40>)
 801bac0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801bac4:	0801bb1d 	.word	0x0801bb1d
 801bac8:	0801bb31 	.word	0x0801bb31
 801bacc:	0801baad 	.word	0x0801baad
 801bad0:	0801baad 	.word	0x0801baad
 801bad4:	0801baad 	.word	0x0801baad
 801bad8:	0801baad 	.word	0x0801baad
 801badc:	0801bb31 	.word	0x0801bb31
 801bae0:	0801baad 	.word	0x0801baad
 801bae4:	0801baad 	.word	0x0801baad
 801bae8:	0801baad 	.word	0x0801baad
 801baec:	0801baad 	.word	0x0801baad
 801baf0:	0801bc3d 	.word	0x0801bc3d
 801baf4:	0801bb61 	.word	0x0801bb61
 801baf8:	0801bc1f 	.word	0x0801bc1f
 801bafc:	0801baad 	.word	0x0801baad
 801bb00:	0801baad 	.word	0x0801baad
 801bb04:	0801bc5f 	.word	0x0801bc5f
 801bb08:	0801baad 	.word	0x0801baad
 801bb0c:	0801bb61 	.word	0x0801bb61
 801bb10:	0801baad 	.word	0x0801baad
 801bb14:	0801baad 	.word	0x0801baad
 801bb18:	0801bc27 	.word	0x0801bc27
 801bb1c:	682b      	ldr	r3, [r5, #0]
 801bb1e:	1d1a      	adds	r2, r3, #4
 801bb20:	681b      	ldr	r3, [r3, #0]
 801bb22:	602a      	str	r2, [r5, #0]
 801bb24:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801bb28:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801bb2c:	2301      	movs	r3, #1
 801bb2e:	e0a3      	b.n	801bc78 <_printf_i+0x1f4>
 801bb30:	6820      	ldr	r0, [r4, #0]
 801bb32:	6829      	ldr	r1, [r5, #0]
 801bb34:	0606      	lsls	r6, r0, #24
 801bb36:	f101 0304 	add.w	r3, r1, #4
 801bb3a:	d50a      	bpl.n	801bb52 <_printf_i+0xce>
 801bb3c:	680e      	ldr	r6, [r1, #0]
 801bb3e:	602b      	str	r3, [r5, #0]
 801bb40:	2e00      	cmp	r6, #0
 801bb42:	da03      	bge.n	801bb4c <_printf_i+0xc8>
 801bb44:	232d      	movs	r3, #45	; 0x2d
 801bb46:	4276      	negs	r6, r6
 801bb48:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801bb4c:	485e      	ldr	r0, [pc, #376]	; (801bcc8 <_printf_i+0x244>)
 801bb4e:	230a      	movs	r3, #10
 801bb50:	e019      	b.n	801bb86 <_printf_i+0x102>
 801bb52:	680e      	ldr	r6, [r1, #0]
 801bb54:	602b      	str	r3, [r5, #0]
 801bb56:	f010 0f40 	tst.w	r0, #64	; 0x40
 801bb5a:	bf18      	it	ne
 801bb5c:	b236      	sxthne	r6, r6
 801bb5e:	e7ef      	b.n	801bb40 <_printf_i+0xbc>
 801bb60:	682b      	ldr	r3, [r5, #0]
 801bb62:	6820      	ldr	r0, [r4, #0]
 801bb64:	1d19      	adds	r1, r3, #4
 801bb66:	6029      	str	r1, [r5, #0]
 801bb68:	0601      	lsls	r1, r0, #24
 801bb6a:	d501      	bpl.n	801bb70 <_printf_i+0xec>
 801bb6c:	681e      	ldr	r6, [r3, #0]
 801bb6e:	e002      	b.n	801bb76 <_printf_i+0xf2>
 801bb70:	0646      	lsls	r6, r0, #25
 801bb72:	d5fb      	bpl.n	801bb6c <_printf_i+0xe8>
 801bb74:	881e      	ldrh	r6, [r3, #0]
 801bb76:	4854      	ldr	r0, [pc, #336]	; (801bcc8 <_printf_i+0x244>)
 801bb78:	2f6f      	cmp	r7, #111	; 0x6f
 801bb7a:	bf0c      	ite	eq
 801bb7c:	2308      	moveq	r3, #8
 801bb7e:	230a      	movne	r3, #10
 801bb80:	2100      	movs	r1, #0
 801bb82:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801bb86:	6865      	ldr	r5, [r4, #4]
 801bb88:	60a5      	str	r5, [r4, #8]
 801bb8a:	2d00      	cmp	r5, #0
 801bb8c:	bfa2      	ittt	ge
 801bb8e:	6821      	ldrge	r1, [r4, #0]
 801bb90:	f021 0104 	bicge.w	r1, r1, #4
 801bb94:	6021      	strge	r1, [r4, #0]
 801bb96:	b90e      	cbnz	r6, 801bb9c <_printf_i+0x118>
 801bb98:	2d00      	cmp	r5, #0
 801bb9a:	d04d      	beq.n	801bc38 <_printf_i+0x1b4>
 801bb9c:	4615      	mov	r5, r2
 801bb9e:	fbb6 f1f3 	udiv	r1, r6, r3
 801bba2:	fb03 6711 	mls	r7, r3, r1, r6
 801bba6:	5dc7      	ldrb	r7, [r0, r7]
 801bba8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801bbac:	4637      	mov	r7, r6
 801bbae:	42bb      	cmp	r3, r7
 801bbb0:	460e      	mov	r6, r1
 801bbb2:	d9f4      	bls.n	801bb9e <_printf_i+0x11a>
 801bbb4:	2b08      	cmp	r3, #8
 801bbb6:	d10b      	bne.n	801bbd0 <_printf_i+0x14c>
 801bbb8:	6823      	ldr	r3, [r4, #0]
 801bbba:	07de      	lsls	r6, r3, #31
 801bbbc:	d508      	bpl.n	801bbd0 <_printf_i+0x14c>
 801bbbe:	6923      	ldr	r3, [r4, #16]
 801bbc0:	6861      	ldr	r1, [r4, #4]
 801bbc2:	4299      	cmp	r1, r3
 801bbc4:	bfde      	ittt	le
 801bbc6:	2330      	movle	r3, #48	; 0x30
 801bbc8:	f805 3c01 	strble.w	r3, [r5, #-1]
 801bbcc:	f105 35ff 	addle.w	r5, r5, #4294967295
 801bbd0:	1b52      	subs	r2, r2, r5
 801bbd2:	6122      	str	r2, [r4, #16]
 801bbd4:	f8cd a000 	str.w	sl, [sp]
 801bbd8:	464b      	mov	r3, r9
 801bbda:	aa03      	add	r2, sp, #12
 801bbdc:	4621      	mov	r1, r4
 801bbde:	4640      	mov	r0, r8
 801bbe0:	f7ff fee2 	bl	801b9a8 <_printf_common>
 801bbe4:	3001      	adds	r0, #1
 801bbe6:	d14c      	bne.n	801bc82 <_printf_i+0x1fe>
 801bbe8:	f04f 30ff 	mov.w	r0, #4294967295
 801bbec:	b004      	add	sp, #16
 801bbee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bbf2:	4835      	ldr	r0, [pc, #212]	; (801bcc8 <_printf_i+0x244>)
 801bbf4:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801bbf8:	6829      	ldr	r1, [r5, #0]
 801bbfa:	6823      	ldr	r3, [r4, #0]
 801bbfc:	f851 6b04 	ldr.w	r6, [r1], #4
 801bc00:	6029      	str	r1, [r5, #0]
 801bc02:	061d      	lsls	r5, r3, #24
 801bc04:	d514      	bpl.n	801bc30 <_printf_i+0x1ac>
 801bc06:	07df      	lsls	r7, r3, #31
 801bc08:	bf44      	itt	mi
 801bc0a:	f043 0320 	orrmi.w	r3, r3, #32
 801bc0e:	6023      	strmi	r3, [r4, #0]
 801bc10:	b91e      	cbnz	r6, 801bc1a <_printf_i+0x196>
 801bc12:	6823      	ldr	r3, [r4, #0]
 801bc14:	f023 0320 	bic.w	r3, r3, #32
 801bc18:	6023      	str	r3, [r4, #0]
 801bc1a:	2310      	movs	r3, #16
 801bc1c:	e7b0      	b.n	801bb80 <_printf_i+0xfc>
 801bc1e:	6823      	ldr	r3, [r4, #0]
 801bc20:	f043 0320 	orr.w	r3, r3, #32
 801bc24:	6023      	str	r3, [r4, #0]
 801bc26:	2378      	movs	r3, #120	; 0x78
 801bc28:	4828      	ldr	r0, [pc, #160]	; (801bccc <_printf_i+0x248>)
 801bc2a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801bc2e:	e7e3      	b.n	801bbf8 <_printf_i+0x174>
 801bc30:	0659      	lsls	r1, r3, #25
 801bc32:	bf48      	it	mi
 801bc34:	b2b6      	uxthmi	r6, r6
 801bc36:	e7e6      	b.n	801bc06 <_printf_i+0x182>
 801bc38:	4615      	mov	r5, r2
 801bc3a:	e7bb      	b.n	801bbb4 <_printf_i+0x130>
 801bc3c:	682b      	ldr	r3, [r5, #0]
 801bc3e:	6826      	ldr	r6, [r4, #0]
 801bc40:	6961      	ldr	r1, [r4, #20]
 801bc42:	1d18      	adds	r0, r3, #4
 801bc44:	6028      	str	r0, [r5, #0]
 801bc46:	0635      	lsls	r5, r6, #24
 801bc48:	681b      	ldr	r3, [r3, #0]
 801bc4a:	d501      	bpl.n	801bc50 <_printf_i+0x1cc>
 801bc4c:	6019      	str	r1, [r3, #0]
 801bc4e:	e002      	b.n	801bc56 <_printf_i+0x1d2>
 801bc50:	0670      	lsls	r0, r6, #25
 801bc52:	d5fb      	bpl.n	801bc4c <_printf_i+0x1c8>
 801bc54:	8019      	strh	r1, [r3, #0]
 801bc56:	2300      	movs	r3, #0
 801bc58:	6123      	str	r3, [r4, #16]
 801bc5a:	4615      	mov	r5, r2
 801bc5c:	e7ba      	b.n	801bbd4 <_printf_i+0x150>
 801bc5e:	682b      	ldr	r3, [r5, #0]
 801bc60:	1d1a      	adds	r2, r3, #4
 801bc62:	602a      	str	r2, [r5, #0]
 801bc64:	681d      	ldr	r5, [r3, #0]
 801bc66:	6862      	ldr	r2, [r4, #4]
 801bc68:	2100      	movs	r1, #0
 801bc6a:	4628      	mov	r0, r5
 801bc6c:	f7e4 fac8 	bl	8000200 <memchr>
 801bc70:	b108      	cbz	r0, 801bc76 <_printf_i+0x1f2>
 801bc72:	1b40      	subs	r0, r0, r5
 801bc74:	6060      	str	r0, [r4, #4]
 801bc76:	6863      	ldr	r3, [r4, #4]
 801bc78:	6123      	str	r3, [r4, #16]
 801bc7a:	2300      	movs	r3, #0
 801bc7c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801bc80:	e7a8      	b.n	801bbd4 <_printf_i+0x150>
 801bc82:	6923      	ldr	r3, [r4, #16]
 801bc84:	462a      	mov	r2, r5
 801bc86:	4649      	mov	r1, r9
 801bc88:	4640      	mov	r0, r8
 801bc8a:	47d0      	blx	sl
 801bc8c:	3001      	adds	r0, #1
 801bc8e:	d0ab      	beq.n	801bbe8 <_printf_i+0x164>
 801bc90:	6823      	ldr	r3, [r4, #0]
 801bc92:	079b      	lsls	r3, r3, #30
 801bc94:	d413      	bmi.n	801bcbe <_printf_i+0x23a>
 801bc96:	68e0      	ldr	r0, [r4, #12]
 801bc98:	9b03      	ldr	r3, [sp, #12]
 801bc9a:	4298      	cmp	r0, r3
 801bc9c:	bfb8      	it	lt
 801bc9e:	4618      	movlt	r0, r3
 801bca0:	e7a4      	b.n	801bbec <_printf_i+0x168>
 801bca2:	2301      	movs	r3, #1
 801bca4:	4632      	mov	r2, r6
 801bca6:	4649      	mov	r1, r9
 801bca8:	4640      	mov	r0, r8
 801bcaa:	47d0      	blx	sl
 801bcac:	3001      	adds	r0, #1
 801bcae:	d09b      	beq.n	801bbe8 <_printf_i+0x164>
 801bcb0:	3501      	adds	r5, #1
 801bcb2:	68e3      	ldr	r3, [r4, #12]
 801bcb4:	9903      	ldr	r1, [sp, #12]
 801bcb6:	1a5b      	subs	r3, r3, r1
 801bcb8:	42ab      	cmp	r3, r5
 801bcba:	dcf2      	bgt.n	801bca2 <_printf_i+0x21e>
 801bcbc:	e7eb      	b.n	801bc96 <_printf_i+0x212>
 801bcbe:	2500      	movs	r5, #0
 801bcc0:	f104 0619 	add.w	r6, r4, #25
 801bcc4:	e7f5      	b.n	801bcb2 <_printf_i+0x22e>
 801bcc6:	bf00      	nop
 801bcc8:	0801fbb1 	.word	0x0801fbb1
 801bccc:	0801fbc2 	.word	0x0801fbc2

0801bcd0 <_sbrk_r>:
 801bcd0:	b538      	push	{r3, r4, r5, lr}
 801bcd2:	4d06      	ldr	r5, [pc, #24]	; (801bcec <_sbrk_r+0x1c>)
 801bcd4:	2300      	movs	r3, #0
 801bcd6:	4604      	mov	r4, r0
 801bcd8:	4608      	mov	r0, r1
 801bcda:	602b      	str	r3, [r5, #0]
 801bcdc:	f7e6 f96c 	bl	8001fb8 <_sbrk>
 801bce0:	1c43      	adds	r3, r0, #1
 801bce2:	d102      	bne.n	801bcea <_sbrk_r+0x1a>
 801bce4:	682b      	ldr	r3, [r5, #0]
 801bce6:	b103      	cbz	r3, 801bcea <_sbrk_r+0x1a>
 801bce8:	6023      	str	r3, [r4, #0]
 801bcea:	bd38      	pop	{r3, r4, r5, pc}
 801bcec:	2000a6cc 	.word	0x2000a6cc

0801bcf0 <_raise_r>:
 801bcf0:	291f      	cmp	r1, #31
 801bcf2:	b538      	push	{r3, r4, r5, lr}
 801bcf4:	4604      	mov	r4, r0
 801bcf6:	460d      	mov	r5, r1
 801bcf8:	d904      	bls.n	801bd04 <_raise_r+0x14>
 801bcfa:	2316      	movs	r3, #22
 801bcfc:	6003      	str	r3, [r0, #0]
 801bcfe:	f04f 30ff 	mov.w	r0, #4294967295
 801bd02:	bd38      	pop	{r3, r4, r5, pc}
 801bd04:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801bd06:	b112      	cbz	r2, 801bd0e <_raise_r+0x1e>
 801bd08:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801bd0c:	b94b      	cbnz	r3, 801bd22 <_raise_r+0x32>
 801bd0e:	4620      	mov	r0, r4
 801bd10:	f000 f830 	bl	801bd74 <_getpid_r>
 801bd14:	462a      	mov	r2, r5
 801bd16:	4601      	mov	r1, r0
 801bd18:	4620      	mov	r0, r4
 801bd1a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801bd1e:	f000 b817 	b.w	801bd50 <_kill_r>
 801bd22:	2b01      	cmp	r3, #1
 801bd24:	d00a      	beq.n	801bd3c <_raise_r+0x4c>
 801bd26:	1c59      	adds	r1, r3, #1
 801bd28:	d103      	bne.n	801bd32 <_raise_r+0x42>
 801bd2a:	2316      	movs	r3, #22
 801bd2c:	6003      	str	r3, [r0, #0]
 801bd2e:	2001      	movs	r0, #1
 801bd30:	e7e7      	b.n	801bd02 <_raise_r+0x12>
 801bd32:	2400      	movs	r4, #0
 801bd34:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801bd38:	4628      	mov	r0, r5
 801bd3a:	4798      	blx	r3
 801bd3c:	2000      	movs	r0, #0
 801bd3e:	e7e0      	b.n	801bd02 <_raise_r+0x12>

0801bd40 <raise>:
 801bd40:	4b02      	ldr	r3, [pc, #8]	; (801bd4c <raise+0xc>)
 801bd42:	4601      	mov	r1, r0
 801bd44:	6818      	ldr	r0, [r3, #0]
 801bd46:	f7ff bfd3 	b.w	801bcf0 <_raise_r>
 801bd4a:	bf00      	nop
 801bd4c:	200000d8 	.word	0x200000d8

0801bd50 <_kill_r>:
 801bd50:	b538      	push	{r3, r4, r5, lr}
 801bd52:	4d07      	ldr	r5, [pc, #28]	; (801bd70 <_kill_r+0x20>)
 801bd54:	2300      	movs	r3, #0
 801bd56:	4604      	mov	r4, r0
 801bd58:	4608      	mov	r0, r1
 801bd5a:	4611      	mov	r1, r2
 801bd5c:	602b      	str	r3, [r5, #0]
 801bd5e:	f7e6 f8f5 	bl	8001f4c <_kill>
 801bd62:	1c43      	adds	r3, r0, #1
 801bd64:	d102      	bne.n	801bd6c <_kill_r+0x1c>
 801bd66:	682b      	ldr	r3, [r5, #0]
 801bd68:	b103      	cbz	r3, 801bd6c <_kill_r+0x1c>
 801bd6a:	6023      	str	r3, [r4, #0]
 801bd6c:	bd38      	pop	{r3, r4, r5, pc}
 801bd6e:	bf00      	nop
 801bd70:	2000a6cc 	.word	0x2000a6cc

0801bd74 <_getpid_r>:
 801bd74:	f7e6 b8e8 	b.w	8001f48 <_getpid>

0801bd78 <__swbuf_r>:
 801bd78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bd7a:	460e      	mov	r6, r1
 801bd7c:	4614      	mov	r4, r2
 801bd7e:	4605      	mov	r5, r0
 801bd80:	b118      	cbz	r0, 801bd8a <__swbuf_r+0x12>
 801bd82:	6983      	ldr	r3, [r0, #24]
 801bd84:	b90b      	cbnz	r3, 801bd8a <__swbuf_r+0x12>
 801bd86:	f000 fa33 	bl	801c1f0 <__sinit>
 801bd8a:	4b21      	ldr	r3, [pc, #132]	; (801be10 <__swbuf_r+0x98>)
 801bd8c:	429c      	cmp	r4, r3
 801bd8e:	d12b      	bne.n	801bde8 <__swbuf_r+0x70>
 801bd90:	686c      	ldr	r4, [r5, #4]
 801bd92:	69a3      	ldr	r3, [r4, #24]
 801bd94:	60a3      	str	r3, [r4, #8]
 801bd96:	89a3      	ldrh	r3, [r4, #12]
 801bd98:	071a      	lsls	r2, r3, #28
 801bd9a:	d52f      	bpl.n	801bdfc <__swbuf_r+0x84>
 801bd9c:	6923      	ldr	r3, [r4, #16]
 801bd9e:	b36b      	cbz	r3, 801bdfc <__swbuf_r+0x84>
 801bda0:	6923      	ldr	r3, [r4, #16]
 801bda2:	6820      	ldr	r0, [r4, #0]
 801bda4:	1ac0      	subs	r0, r0, r3
 801bda6:	6963      	ldr	r3, [r4, #20]
 801bda8:	b2f6      	uxtb	r6, r6
 801bdaa:	4283      	cmp	r3, r0
 801bdac:	4637      	mov	r7, r6
 801bdae:	dc04      	bgt.n	801bdba <__swbuf_r+0x42>
 801bdb0:	4621      	mov	r1, r4
 801bdb2:	4628      	mov	r0, r5
 801bdb4:	f000 f988 	bl	801c0c8 <_fflush_r>
 801bdb8:	bb30      	cbnz	r0, 801be08 <__swbuf_r+0x90>
 801bdba:	68a3      	ldr	r3, [r4, #8]
 801bdbc:	3b01      	subs	r3, #1
 801bdbe:	60a3      	str	r3, [r4, #8]
 801bdc0:	6823      	ldr	r3, [r4, #0]
 801bdc2:	1c5a      	adds	r2, r3, #1
 801bdc4:	6022      	str	r2, [r4, #0]
 801bdc6:	701e      	strb	r6, [r3, #0]
 801bdc8:	6963      	ldr	r3, [r4, #20]
 801bdca:	3001      	adds	r0, #1
 801bdcc:	4283      	cmp	r3, r0
 801bdce:	d004      	beq.n	801bdda <__swbuf_r+0x62>
 801bdd0:	89a3      	ldrh	r3, [r4, #12]
 801bdd2:	07db      	lsls	r3, r3, #31
 801bdd4:	d506      	bpl.n	801bde4 <__swbuf_r+0x6c>
 801bdd6:	2e0a      	cmp	r6, #10
 801bdd8:	d104      	bne.n	801bde4 <__swbuf_r+0x6c>
 801bdda:	4621      	mov	r1, r4
 801bddc:	4628      	mov	r0, r5
 801bdde:	f000 f973 	bl	801c0c8 <_fflush_r>
 801bde2:	b988      	cbnz	r0, 801be08 <__swbuf_r+0x90>
 801bde4:	4638      	mov	r0, r7
 801bde6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801bde8:	4b0a      	ldr	r3, [pc, #40]	; (801be14 <__swbuf_r+0x9c>)
 801bdea:	429c      	cmp	r4, r3
 801bdec:	d101      	bne.n	801bdf2 <__swbuf_r+0x7a>
 801bdee:	68ac      	ldr	r4, [r5, #8]
 801bdf0:	e7cf      	b.n	801bd92 <__swbuf_r+0x1a>
 801bdf2:	4b09      	ldr	r3, [pc, #36]	; (801be18 <__swbuf_r+0xa0>)
 801bdf4:	429c      	cmp	r4, r3
 801bdf6:	bf08      	it	eq
 801bdf8:	68ec      	ldreq	r4, [r5, #12]
 801bdfa:	e7ca      	b.n	801bd92 <__swbuf_r+0x1a>
 801bdfc:	4621      	mov	r1, r4
 801bdfe:	4628      	mov	r0, r5
 801be00:	f000 f80c 	bl	801be1c <__swsetup_r>
 801be04:	2800      	cmp	r0, #0
 801be06:	d0cb      	beq.n	801bda0 <__swbuf_r+0x28>
 801be08:	f04f 37ff 	mov.w	r7, #4294967295
 801be0c:	e7ea      	b.n	801bde4 <__swbuf_r+0x6c>
 801be0e:	bf00      	nop
 801be10:	0801fbf8 	.word	0x0801fbf8
 801be14:	0801fc18 	.word	0x0801fc18
 801be18:	0801fbd8 	.word	0x0801fbd8

0801be1c <__swsetup_r>:
 801be1c:	4b32      	ldr	r3, [pc, #200]	; (801bee8 <__swsetup_r+0xcc>)
 801be1e:	b570      	push	{r4, r5, r6, lr}
 801be20:	681d      	ldr	r5, [r3, #0]
 801be22:	4606      	mov	r6, r0
 801be24:	460c      	mov	r4, r1
 801be26:	b125      	cbz	r5, 801be32 <__swsetup_r+0x16>
 801be28:	69ab      	ldr	r3, [r5, #24]
 801be2a:	b913      	cbnz	r3, 801be32 <__swsetup_r+0x16>
 801be2c:	4628      	mov	r0, r5
 801be2e:	f000 f9df 	bl	801c1f0 <__sinit>
 801be32:	4b2e      	ldr	r3, [pc, #184]	; (801beec <__swsetup_r+0xd0>)
 801be34:	429c      	cmp	r4, r3
 801be36:	d10f      	bne.n	801be58 <__swsetup_r+0x3c>
 801be38:	686c      	ldr	r4, [r5, #4]
 801be3a:	89a3      	ldrh	r3, [r4, #12]
 801be3c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801be40:	0719      	lsls	r1, r3, #28
 801be42:	d42c      	bmi.n	801be9e <__swsetup_r+0x82>
 801be44:	06dd      	lsls	r5, r3, #27
 801be46:	d411      	bmi.n	801be6c <__swsetup_r+0x50>
 801be48:	2309      	movs	r3, #9
 801be4a:	6033      	str	r3, [r6, #0]
 801be4c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801be50:	81a3      	strh	r3, [r4, #12]
 801be52:	f04f 30ff 	mov.w	r0, #4294967295
 801be56:	e03e      	b.n	801bed6 <__swsetup_r+0xba>
 801be58:	4b25      	ldr	r3, [pc, #148]	; (801bef0 <__swsetup_r+0xd4>)
 801be5a:	429c      	cmp	r4, r3
 801be5c:	d101      	bne.n	801be62 <__swsetup_r+0x46>
 801be5e:	68ac      	ldr	r4, [r5, #8]
 801be60:	e7eb      	b.n	801be3a <__swsetup_r+0x1e>
 801be62:	4b24      	ldr	r3, [pc, #144]	; (801bef4 <__swsetup_r+0xd8>)
 801be64:	429c      	cmp	r4, r3
 801be66:	bf08      	it	eq
 801be68:	68ec      	ldreq	r4, [r5, #12]
 801be6a:	e7e6      	b.n	801be3a <__swsetup_r+0x1e>
 801be6c:	0758      	lsls	r0, r3, #29
 801be6e:	d512      	bpl.n	801be96 <__swsetup_r+0x7a>
 801be70:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801be72:	b141      	cbz	r1, 801be86 <__swsetup_r+0x6a>
 801be74:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801be78:	4299      	cmp	r1, r3
 801be7a:	d002      	beq.n	801be82 <__swsetup_r+0x66>
 801be7c:	4630      	mov	r0, r6
 801be7e:	f7ff fb59 	bl	801b534 <_free_r>
 801be82:	2300      	movs	r3, #0
 801be84:	6363      	str	r3, [r4, #52]	; 0x34
 801be86:	89a3      	ldrh	r3, [r4, #12]
 801be88:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801be8c:	81a3      	strh	r3, [r4, #12]
 801be8e:	2300      	movs	r3, #0
 801be90:	6063      	str	r3, [r4, #4]
 801be92:	6923      	ldr	r3, [r4, #16]
 801be94:	6023      	str	r3, [r4, #0]
 801be96:	89a3      	ldrh	r3, [r4, #12]
 801be98:	f043 0308 	orr.w	r3, r3, #8
 801be9c:	81a3      	strh	r3, [r4, #12]
 801be9e:	6923      	ldr	r3, [r4, #16]
 801bea0:	b94b      	cbnz	r3, 801beb6 <__swsetup_r+0x9a>
 801bea2:	89a3      	ldrh	r3, [r4, #12]
 801bea4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801bea8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801beac:	d003      	beq.n	801beb6 <__swsetup_r+0x9a>
 801beae:	4621      	mov	r1, r4
 801beb0:	4630      	mov	r0, r6
 801beb2:	f000 fa63 	bl	801c37c <__smakebuf_r>
 801beb6:	89a0      	ldrh	r0, [r4, #12]
 801beb8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801bebc:	f010 0301 	ands.w	r3, r0, #1
 801bec0:	d00a      	beq.n	801bed8 <__swsetup_r+0xbc>
 801bec2:	2300      	movs	r3, #0
 801bec4:	60a3      	str	r3, [r4, #8]
 801bec6:	6963      	ldr	r3, [r4, #20]
 801bec8:	425b      	negs	r3, r3
 801beca:	61a3      	str	r3, [r4, #24]
 801becc:	6923      	ldr	r3, [r4, #16]
 801bece:	b943      	cbnz	r3, 801bee2 <__swsetup_r+0xc6>
 801bed0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801bed4:	d1ba      	bne.n	801be4c <__swsetup_r+0x30>
 801bed6:	bd70      	pop	{r4, r5, r6, pc}
 801bed8:	0781      	lsls	r1, r0, #30
 801beda:	bf58      	it	pl
 801bedc:	6963      	ldrpl	r3, [r4, #20]
 801bede:	60a3      	str	r3, [r4, #8]
 801bee0:	e7f4      	b.n	801becc <__swsetup_r+0xb0>
 801bee2:	2000      	movs	r0, #0
 801bee4:	e7f7      	b.n	801bed6 <__swsetup_r+0xba>
 801bee6:	bf00      	nop
 801bee8:	200000d8 	.word	0x200000d8
 801beec:	0801fbf8 	.word	0x0801fbf8
 801bef0:	0801fc18 	.word	0x0801fc18
 801bef4:	0801fbd8 	.word	0x0801fbd8

0801bef8 <__register_exitproc>:
 801bef8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801befc:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801bfb8 <__register_exitproc+0xc0>
 801bf00:	4606      	mov	r6, r0
 801bf02:	f8d8 0000 	ldr.w	r0, [r8]
 801bf06:	461f      	mov	r7, r3
 801bf08:	460d      	mov	r5, r1
 801bf0a:	4691      	mov	r9, r2
 801bf0c:	f000 fa0e 	bl	801c32c <__retarget_lock_acquire_recursive>
 801bf10:	4b25      	ldr	r3, [pc, #148]	; (801bfa8 <__register_exitproc+0xb0>)
 801bf12:	681c      	ldr	r4, [r3, #0]
 801bf14:	b934      	cbnz	r4, 801bf24 <__register_exitproc+0x2c>
 801bf16:	4c25      	ldr	r4, [pc, #148]	; (801bfac <__register_exitproc+0xb4>)
 801bf18:	601c      	str	r4, [r3, #0]
 801bf1a:	4b25      	ldr	r3, [pc, #148]	; (801bfb0 <__register_exitproc+0xb8>)
 801bf1c:	b113      	cbz	r3, 801bf24 <__register_exitproc+0x2c>
 801bf1e:	681b      	ldr	r3, [r3, #0]
 801bf20:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801bf24:	6863      	ldr	r3, [r4, #4]
 801bf26:	2b1f      	cmp	r3, #31
 801bf28:	dd07      	ble.n	801bf3a <__register_exitproc+0x42>
 801bf2a:	f8d8 0000 	ldr.w	r0, [r8]
 801bf2e:	f000 f9ff 	bl	801c330 <__retarget_lock_release_recursive>
 801bf32:	f04f 30ff 	mov.w	r0, #4294967295
 801bf36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801bf3a:	b34e      	cbz	r6, 801bf90 <__register_exitproc+0x98>
 801bf3c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801bf40:	b988      	cbnz	r0, 801bf66 <__register_exitproc+0x6e>
 801bf42:	4b1c      	ldr	r3, [pc, #112]	; (801bfb4 <__register_exitproc+0xbc>)
 801bf44:	b923      	cbnz	r3, 801bf50 <__register_exitproc+0x58>
 801bf46:	f8d8 0000 	ldr.w	r0, [r8]
 801bf4a:	f000 f9f0 	bl	801c32e <__retarget_lock_release>
 801bf4e:	e7f0      	b.n	801bf32 <__register_exitproc+0x3a>
 801bf50:	f44f 7084 	mov.w	r0, #264	; 0x108
 801bf54:	f7ff fac8 	bl	801b4e8 <malloc>
 801bf58:	2800      	cmp	r0, #0
 801bf5a:	d0f4      	beq.n	801bf46 <__register_exitproc+0x4e>
 801bf5c:	2300      	movs	r3, #0
 801bf5e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801bf62:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801bf66:	6863      	ldr	r3, [r4, #4]
 801bf68:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801bf6c:	2201      	movs	r2, #1
 801bf6e:	409a      	lsls	r2, r3
 801bf70:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801bf74:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801bf78:	4313      	orrs	r3, r2
 801bf7a:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801bf7e:	2e02      	cmp	r6, #2
 801bf80:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801bf84:	bf02      	ittt	eq
 801bf86:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801bf8a:	4313      	orreq	r3, r2
 801bf8c:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801bf90:	6863      	ldr	r3, [r4, #4]
 801bf92:	f8d8 0000 	ldr.w	r0, [r8]
 801bf96:	1c5a      	adds	r2, r3, #1
 801bf98:	3302      	adds	r3, #2
 801bf9a:	6062      	str	r2, [r4, #4]
 801bf9c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801bfa0:	f000 f9c6 	bl	801c330 <__retarget_lock_release_recursive>
 801bfa4:	2000      	movs	r0, #0
 801bfa6:	e7c6      	b.n	801bf36 <__register_exitproc+0x3e>
 801bfa8:	2000a6c4 	.word	0x2000a6c4
 801bfac:	2000a638 	.word	0x2000a638
 801bfb0:	0801fbd4 	.word	0x0801fbd4
 801bfb4:	0801b4e9 	.word	0x0801b4e9
 801bfb8:	2000013c 	.word	0x2000013c

0801bfbc <__sflush_r>:
 801bfbc:	898a      	ldrh	r2, [r1, #12]
 801bfbe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801bfc2:	4605      	mov	r5, r0
 801bfc4:	0710      	lsls	r0, r2, #28
 801bfc6:	460c      	mov	r4, r1
 801bfc8:	d458      	bmi.n	801c07c <__sflush_r+0xc0>
 801bfca:	684b      	ldr	r3, [r1, #4]
 801bfcc:	2b00      	cmp	r3, #0
 801bfce:	dc05      	bgt.n	801bfdc <__sflush_r+0x20>
 801bfd0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801bfd2:	2b00      	cmp	r3, #0
 801bfd4:	dc02      	bgt.n	801bfdc <__sflush_r+0x20>
 801bfd6:	2000      	movs	r0, #0
 801bfd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801bfdc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801bfde:	2e00      	cmp	r6, #0
 801bfe0:	d0f9      	beq.n	801bfd6 <__sflush_r+0x1a>
 801bfe2:	2300      	movs	r3, #0
 801bfe4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801bfe8:	682f      	ldr	r7, [r5, #0]
 801bfea:	602b      	str	r3, [r5, #0]
 801bfec:	d032      	beq.n	801c054 <__sflush_r+0x98>
 801bfee:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801bff0:	89a3      	ldrh	r3, [r4, #12]
 801bff2:	075a      	lsls	r2, r3, #29
 801bff4:	d505      	bpl.n	801c002 <__sflush_r+0x46>
 801bff6:	6863      	ldr	r3, [r4, #4]
 801bff8:	1ac0      	subs	r0, r0, r3
 801bffa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801bffc:	b10b      	cbz	r3, 801c002 <__sflush_r+0x46>
 801bffe:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801c000:	1ac0      	subs	r0, r0, r3
 801c002:	2300      	movs	r3, #0
 801c004:	4602      	mov	r2, r0
 801c006:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c008:	6a21      	ldr	r1, [r4, #32]
 801c00a:	4628      	mov	r0, r5
 801c00c:	47b0      	blx	r6
 801c00e:	1c43      	adds	r3, r0, #1
 801c010:	89a3      	ldrh	r3, [r4, #12]
 801c012:	d106      	bne.n	801c022 <__sflush_r+0x66>
 801c014:	6829      	ldr	r1, [r5, #0]
 801c016:	291d      	cmp	r1, #29
 801c018:	d82c      	bhi.n	801c074 <__sflush_r+0xb8>
 801c01a:	4a2a      	ldr	r2, [pc, #168]	; (801c0c4 <__sflush_r+0x108>)
 801c01c:	40ca      	lsrs	r2, r1
 801c01e:	07d6      	lsls	r6, r2, #31
 801c020:	d528      	bpl.n	801c074 <__sflush_r+0xb8>
 801c022:	2200      	movs	r2, #0
 801c024:	6062      	str	r2, [r4, #4]
 801c026:	04d9      	lsls	r1, r3, #19
 801c028:	6922      	ldr	r2, [r4, #16]
 801c02a:	6022      	str	r2, [r4, #0]
 801c02c:	d504      	bpl.n	801c038 <__sflush_r+0x7c>
 801c02e:	1c42      	adds	r2, r0, #1
 801c030:	d101      	bne.n	801c036 <__sflush_r+0x7a>
 801c032:	682b      	ldr	r3, [r5, #0]
 801c034:	b903      	cbnz	r3, 801c038 <__sflush_r+0x7c>
 801c036:	6560      	str	r0, [r4, #84]	; 0x54
 801c038:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c03a:	602f      	str	r7, [r5, #0]
 801c03c:	2900      	cmp	r1, #0
 801c03e:	d0ca      	beq.n	801bfd6 <__sflush_r+0x1a>
 801c040:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c044:	4299      	cmp	r1, r3
 801c046:	d002      	beq.n	801c04e <__sflush_r+0x92>
 801c048:	4628      	mov	r0, r5
 801c04a:	f7ff fa73 	bl	801b534 <_free_r>
 801c04e:	2000      	movs	r0, #0
 801c050:	6360      	str	r0, [r4, #52]	; 0x34
 801c052:	e7c1      	b.n	801bfd8 <__sflush_r+0x1c>
 801c054:	6a21      	ldr	r1, [r4, #32]
 801c056:	2301      	movs	r3, #1
 801c058:	4628      	mov	r0, r5
 801c05a:	47b0      	blx	r6
 801c05c:	1c41      	adds	r1, r0, #1
 801c05e:	d1c7      	bne.n	801bff0 <__sflush_r+0x34>
 801c060:	682b      	ldr	r3, [r5, #0]
 801c062:	2b00      	cmp	r3, #0
 801c064:	d0c4      	beq.n	801bff0 <__sflush_r+0x34>
 801c066:	2b1d      	cmp	r3, #29
 801c068:	d001      	beq.n	801c06e <__sflush_r+0xb2>
 801c06a:	2b16      	cmp	r3, #22
 801c06c:	d101      	bne.n	801c072 <__sflush_r+0xb6>
 801c06e:	602f      	str	r7, [r5, #0]
 801c070:	e7b1      	b.n	801bfd6 <__sflush_r+0x1a>
 801c072:	89a3      	ldrh	r3, [r4, #12]
 801c074:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c078:	81a3      	strh	r3, [r4, #12]
 801c07a:	e7ad      	b.n	801bfd8 <__sflush_r+0x1c>
 801c07c:	690f      	ldr	r7, [r1, #16]
 801c07e:	2f00      	cmp	r7, #0
 801c080:	d0a9      	beq.n	801bfd6 <__sflush_r+0x1a>
 801c082:	0793      	lsls	r3, r2, #30
 801c084:	680e      	ldr	r6, [r1, #0]
 801c086:	bf08      	it	eq
 801c088:	694b      	ldreq	r3, [r1, #20]
 801c08a:	600f      	str	r7, [r1, #0]
 801c08c:	bf18      	it	ne
 801c08e:	2300      	movne	r3, #0
 801c090:	eba6 0807 	sub.w	r8, r6, r7
 801c094:	608b      	str	r3, [r1, #8]
 801c096:	f1b8 0f00 	cmp.w	r8, #0
 801c09a:	dd9c      	ble.n	801bfd6 <__sflush_r+0x1a>
 801c09c:	6a21      	ldr	r1, [r4, #32]
 801c09e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801c0a0:	4643      	mov	r3, r8
 801c0a2:	463a      	mov	r2, r7
 801c0a4:	4628      	mov	r0, r5
 801c0a6:	47b0      	blx	r6
 801c0a8:	2800      	cmp	r0, #0
 801c0aa:	dc06      	bgt.n	801c0ba <__sflush_r+0xfe>
 801c0ac:	89a3      	ldrh	r3, [r4, #12]
 801c0ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c0b2:	81a3      	strh	r3, [r4, #12]
 801c0b4:	f04f 30ff 	mov.w	r0, #4294967295
 801c0b8:	e78e      	b.n	801bfd8 <__sflush_r+0x1c>
 801c0ba:	4407      	add	r7, r0
 801c0bc:	eba8 0800 	sub.w	r8, r8, r0
 801c0c0:	e7e9      	b.n	801c096 <__sflush_r+0xda>
 801c0c2:	bf00      	nop
 801c0c4:	20400001 	.word	0x20400001

0801c0c8 <_fflush_r>:
 801c0c8:	b538      	push	{r3, r4, r5, lr}
 801c0ca:	690b      	ldr	r3, [r1, #16]
 801c0cc:	4605      	mov	r5, r0
 801c0ce:	460c      	mov	r4, r1
 801c0d0:	b913      	cbnz	r3, 801c0d8 <_fflush_r+0x10>
 801c0d2:	2500      	movs	r5, #0
 801c0d4:	4628      	mov	r0, r5
 801c0d6:	bd38      	pop	{r3, r4, r5, pc}
 801c0d8:	b118      	cbz	r0, 801c0e2 <_fflush_r+0x1a>
 801c0da:	6983      	ldr	r3, [r0, #24]
 801c0dc:	b90b      	cbnz	r3, 801c0e2 <_fflush_r+0x1a>
 801c0de:	f000 f887 	bl	801c1f0 <__sinit>
 801c0e2:	4b14      	ldr	r3, [pc, #80]	; (801c134 <_fflush_r+0x6c>)
 801c0e4:	429c      	cmp	r4, r3
 801c0e6:	d11b      	bne.n	801c120 <_fflush_r+0x58>
 801c0e8:	686c      	ldr	r4, [r5, #4]
 801c0ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c0ee:	2b00      	cmp	r3, #0
 801c0f0:	d0ef      	beq.n	801c0d2 <_fflush_r+0xa>
 801c0f2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801c0f4:	07d0      	lsls	r0, r2, #31
 801c0f6:	d404      	bmi.n	801c102 <_fflush_r+0x3a>
 801c0f8:	0599      	lsls	r1, r3, #22
 801c0fa:	d402      	bmi.n	801c102 <_fflush_r+0x3a>
 801c0fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c0fe:	f000 f915 	bl	801c32c <__retarget_lock_acquire_recursive>
 801c102:	4628      	mov	r0, r5
 801c104:	4621      	mov	r1, r4
 801c106:	f7ff ff59 	bl	801bfbc <__sflush_r>
 801c10a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801c10c:	07da      	lsls	r2, r3, #31
 801c10e:	4605      	mov	r5, r0
 801c110:	d4e0      	bmi.n	801c0d4 <_fflush_r+0xc>
 801c112:	89a3      	ldrh	r3, [r4, #12]
 801c114:	059b      	lsls	r3, r3, #22
 801c116:	d4dd      	bmi.n	801c0d4 <_fflush_r+0xc>
 801c118:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c11a:	f000 f909 	bl	801c330 <__retarget_lock_release_recursive>
 801c11e:	e7d9      	b.n	801c0d4 <_fflush_r+0xc>
 801c120:	4b05      	ldr	r3, [pc, #20]	; (801c138 <_fflush_r+0x70>)
 801c122:	429c      	cmp	r4, r3
 801c124:	d101      	bne.n	801c12a <_fflush_r+0x62>
 801c126:	68ac      	ldr	r4, [r5, #8]
 801c128:	e7df      	b.n	801c0ea <_fflush_r+0x22>
 801c12a:	4b04      	ldr	r3, [pc, #16]	; (801c13c <_fflush_r+0x74>)
 801c12c:	429c      	cmp	r4, r3
 801c12e:	bf08      	it	eq
 801c130:	68ec      	ldreq	r4, [r5, #12]
 801c132:	e7da      	b.n	801c0ea <_fflush_r+0x22>
 801c134:	0801fbf8 	.word	0x0801fbf8
 801c138:	0801fc18 	.word	0x0801fc18
 801c13c:	0801fbd8 	.word	0x0801fbd8

0801c140 <std>:
 801c140:	2300      	movs	r3, #0
 801c142:	b510      	push	{r4, lr}
 801c144:	4604      	mov	r4, r0
 801c146:	e9c0 3300 	strd	r3, r3, [r0]
 801c14a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801c14e:	6083      	str	r3, [r0, #8]
 801c150:	8181      	strh	r1, [r0, #12]
 801c152:	6643      	str	r3, [r0, #100]	; 0x64
 801c154:	81c2      	strh	r2, [r0, #14]
 801c156:	6183      	str	r3, [r0, #24]
 801c158:	4619      	mov	r1, r3
 801c15a:	2208      	movs	r2, #8
 801c15c:	305c      	adds	r0, #92	; 0x5c
 801c15e:	f7ff f9e1 	bl	801b524 <memset>
 801c162:	4b05      	ldr	r3, [pc, #20]	; (801c178 <std+0x38>)
 801c164:	6263      	str	r3, [r4, #36]	; 0x24
 801c166:	4b05      	ldr	r3, [pc, #20]	; (801c17c <std+0x3c>)
 801c168:	62a3      	str	r3, [r4, #40]	; 0x28
 801c16a:	4b05      	ldr	r3, [pc, #20]	; (801c180 <std+0x40>)
 801c16c:	62e3      	str	r3, [r4, #44]	; 0x2c
 801c16e:	4b05      	ldr	r3, [pc, #20]	; (801c184 <std+0x44>)
 801c170:	6224      	str	r4, [r4, #32]
 801c172:	6323      	str	r3, [r4, #48]	; 0x30
 801c174:	bd10      	pop	{r4, pc}
 801c176:	bf00      	nop
 801c178:	0801c415 	.word	0x0801c415
 801c17c:	0801c437 	.word	0x0801c437
 801c180:	0801c46f 	.word	0x0801c46f
 801c184:	0801c493 	.word	0x0801c493

0801c188 <_cleanup_r>:
 801c188:	4901      	ldr	r1, [pc, #4]	; (801c190 <_cleanup_r+0x8>)
 801c18a:	f000 b8af 	b.w	801c2ec <_fwalk_reent>
 801c18e:	bf00      	nop
 801c190:	0801c0c9 	.word	0x0801c0c9

0801c194 <__sfmoreglue>:
 801c194:	b570      	push	{r4, r5, r6, lr}
 801c196:	2268      	movs	r2, #104	; 0x68
 801c198:	1e4d      	subs	r5, r1, #1
 801c19a:	4355      	muls	r5, r2
 801c19c:	460e      	mov	r6, r1
 801c19e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801c1a2:	f7ff fa33 	bl	801b60c <_malloc_r>
 801c1a6:	4604      	mov	r4, r0
 801c1a8:	b140      	cbz	r0, 801c1bc <__sfmoreglue+0x28>
 801c1aa:	2100      	movs	r1, #0
 801c1ac:	e9c0 1600 	strd	r1, r6, [r0]
 801c1b0:	300c      	adds	r0, #12
 801c1b2:	60a0      	str	r0, [r4, #8]
 801c1b4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801c1b8:	f7ff f9b4 	bl	801b524 <memset>
 801c1bc:	4620      	mov	r0, r4
 801c1be:	bd70      	pop	{r4, r5, r6, pc}

0801c1c0 <__sfp_lock_acquire>:
 801c1c0:	4801      	ldr	r0, [pc, #4]	; (801c1c8 <__sfp_lock_acquire+0x8>)
 801c1c2:	f000 b8b3 	b.w	801c32c <__retarget_lock_acquire_recursive>
 801c1c6:	bf00      	nop
 801c1c8:	2000a6ca 	.word	0x2000a6ca

0801c1cc <__sfp_lock_release>:
 801c1cc:	4801      	ldr	r0, [pc, #4]	; (801c1d4 <__sfp_lock_release+0x8>)
 801c1ce:	f000 b8af 	b.w	801c330 <__retarget_lock_release_recursive>
 801c1d2:	bf00      	nop
 801c1d4:	2000a6ca 	.word	0x2000a6ca

0801c1d8 <__sinit_lock_acquire>:
 801c1d8:	4801      	ldr	r0, [pc, #4]	; (801c1e0 <__sinit_lock_acquire+0x8>)
 801c1da:	f000 b8a7 	b.w	801c32c <__retarget_lock_acquire_recursive>
 801c1de:	bf00      	nop
 801c1e0:	2000a6cb 	.word	0x2000a6cb

0801c1e4 <__sinit_lock_release>:
 801c1e4:	4801      	ldr	r0, [pc, #4]	; (801c1ec <__sinit_lock_release+0x8>)
 801c1e6:	f000 b8a3 	b.w	801c330 <__retarget_lock_release_recursive>
 801c1ea:	bf00      	nop
 801c1ec:	2000a6cb 	.word	0x2000a6cb

0801c1f0 <__sinit>:
 801c1f0:	b510      	push	{r4, lr}
 801c1f2:	4604      	mov	r4, r0
 801c1f4:	f7ff fff0 	bl	801c1d8 <__sinit_lock_acquire>
 801c1f8:	69a3      	ldr	r3, [r4, #24]
 801c1fa:	b11b      	cbz	r3, 801c204 <__sinit+0x14>
 801c1fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c200:	f7ff bff0 	b.w	801c1e4 <__sinit_lock_release>
 801c204:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801c208:	6523      	str	r3, [r4, #80]	; 0x50
 801c20a:	4b13      	ldr	r3, [pc, #76]	; (801c258 <__sinit+0x68>)
 801c20c:	4a13      	ldr	r2, [pc, #76]	; (801c25c <__sinit+0x6c>)
 801c20e:	681b      	ldr	r3, [r3, #0]
 801c210:	62a2      	str	r2, [r4, #40]	; 0x28
 801c212:	42a3      	cmp	r3, r4
 801c214:	bf04      	itt	eq
 801c216:	2301      	moveq	r3, #1
 801c218:	61a3      	streq	r3, [r4, #24]
 801c21a:	4620      	mov	r0, r4
 801c21c:	f000 f820 	bl	801c260 <__sfp>
 801c220:	6060      	str	r0, [r4, #4]
 801c222:	4620      	mov	r0, r4
 801c224:	f000 f81c 	bl	801c260 <__sfp>
 801c228:	60a0      	str	r0, [r4, #8]
 801c22a:	4620      	mov	r0, r4
 801c22c:	f000 f818 	bl	801c260 <__sfp>
 801c230:	2200      	movs	r2, #0
 801c232:	60e0      	str	r0, [r4, #12]
 801c234:	2104      	movs	r1, #4
 801c236:	6860      	ldr	r0, [r4, #4]
 801c238:	f7ff ff82 	bl	801c140 <std>
 801c23c:	68a0      	ldr	r0, [r4, #8]
 801c23e:	2201      	movs	r2, #1
 801c240:	2109      	movs	r1, #9
 801c242:	f7ff ff7d 	bl	801c140 <std>
 801c246:	68e0      	ldr	r0, [r4, #12]
 801c248:	2202      	movs	r2, #2
 801c24a:	2112      	movs	r1, #18
 801c24c:	f7ff ff78 	bl	801c140 <std>
 801c250:	2301      	movs	r3, #1
 801c252:	61a3      	str	r3, [r4, #24]
 801c254:	e7d2      	b.n	801c1fc <__sinit+0xc>
 801c256:	bf00      	nop
 801c258:	0801fb9c 	.word	0x0801fb9c
 801c25c:	0801c189 	.word	0x0801c189

0801c260 <__sfp>:
 801c260:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c262:	4607      	mov	r7, r0
 801c264:	f7ff ffac 	bl	801c1c0 <__sfp_lock_acquire>
 801c268:	4b1e      	ldr	r3, [pc, #120]	; (801c2e4 <__sfp+0x84>)
 801c26a:	681e      	ldr	r6, [r3, #0]
 801c26c:	69b3      	ldr	r3, [r6, #24]
 801c26e:	b913      	cbnz	r3, 801c276 <__sfp+0x16>
 801c270:	4630      	mov	r0, r6
 801c272:	f7ff ffbd 	bl	801c1f0 <__sinit>
 801c276:	3648      	adds	r6, #72	; 0x48
 801c278:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801c27c:	3b01      	subs	r3, #1
 801c27e:	d503      	bpl.n	801c288 <__sfp+0x28>
 801c280:	6833      	ldr	r3, [r6, #0]
 801c282:	b30b      	cbz	r3, 801c2c8 <__sfp+0x68>
 801c284:	6836      	ldr	r6, [r6, #0]
 801c286:	e7f7      	b.n	801c278 <__sfp+0x18>
 801c288:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801c28c:	b9d5      	cbnz	r5, 801c2c4 <__sfp+0x64>
 801c28e:	4b16      	ldr	r3, [pc, #88]	; (801c2e8 <__sfp+0x88>)
 801c290:	60e3      	str	r3, [r4, #12]
 801c292:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801c296:	6665      	str	r5, [r4, #100]	; 0x64
 801c298:	f000 f847 	bl	801c32a <__retarget_lock_init_recursive>
 801c29c:	f7ff ff96 	bl	801c1cc <__sfp_lock_release>
 801c2a0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801c2a4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801c2a8:	6025      	str	r5, [r4, #0]
 801c2aa:	61a5      	str	r5, [r4, #24]
 801c2ac:	2208      	movs	r2, #8
 801c2ae:	4629      	mov	r1, r5
 801c2b0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801c2b4:	f7ff f936 	bl	801b524 <memset>
 801c2b8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801c2bc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801c2c0:	4620      	mov	r0, r4
 801c2c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c2c4:	3468      	adds	r4, #104	; 0x68
 801c2c6:	e7d9      	b.n	801c27c <__sfp+0x1c>
 801c2c8:	2104      	movs	r1, #4
 801c2ca:	4638      	mov	r0, r7
 801c2cc:	f7ff ff62 	bl	801c194 <__sfmoreglue>
 801c2d0:	4604      	mov	r4, r0
 801c2d2:	6030      	str	r0, [r6, #0]
 801c2d4:	2800      	cmp	r0, #0
 801c2d6:	d1d5      	bne.n	801c284 <__sfp+0x24>
 801c2d8:	f7ff ff78 	bl	801c1cc <__sfp_lock_release>
 801c2dc:	230c      	movs	r3, #12
 801c2de:	603b      	str	r3, [r7, #0]
 801c2e0:	e7ee      	b.n	801c2c0 <__sfp+0x60>
 801c2e2:	bf00      	nop
 801c2e4:	0801fb9c 	.word	0x0801fb9c
 801c2e8:	ffff0001 	.word	0xffff0001

0801c2ec <_fwalk_reent>:
 801c2ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c2f0:	4606      	mov	r6, r0
 801c2f2:	4688      	mov	r8, r1
 801c2f4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801c2f8:	2700      	movs	r7, #0
 801c2fa:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801c2fe:	f1b9 0901 	subs.w	r9, r9, #1
 801c302:	d505      	bpl.n	801c310 <_fwalk_reent+0x24>
 801c304:	6824      	ldr	r4, [r4, #0]
 801c306:	2c00      	cmp	r4, #0
 801c308:	d1f7      	bne.n	801c2fa <_fwalk_reent+0xe>
 801c30a:	4638      	mov	r0, r7
 801c30c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c310:	89ab      	ldrh	r3, [r5, #12]
 801c312:	2b01      	cmp	r3, #1
 801c314:	d907      	bls.n	801c326 <_fwalk_reent+0x3a>
 801c316:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801c31a:	3301      	adds	r3, #1
 801c31c:	d003      	beq.n	801c326 <_fwalk_reent+0x3a>
 801c31e:	4629      	mov	r1, r5
 801c320:	4630      	mov	r0, r6
 801c322:	47c0      	blx	r8
 801c324:	4307      	orrs	r7, r0
 801c326:	3568      	adds	r5, #104	; 0x68
 801c328:	e7e9      	b.n	801c2fe <_fwalk_reent+0x12>

0801c32a <__retarget_lock_init_recursive>:
 801c32a:	4770      	bx	lr

0801c32c <__retarget_lock_acquire_recursive>:
 801c32c:	4770      	bx	lr

0801c32e <__retarget_lock_release>:
 801c32e:	4770      	bx	lr

0801c330 <__retarget_lock_release_recursive>:
 801c330:	4770      	bx	lr

0801c332 <__swhatbuf_r>:
 801c332:	b570      	push	{r4, r5, r6, lr}
 801c334:	460e      	mov	r6, r1
 801c336:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c33a:	2900      	cmp	r1, #0
 801c33c:	b096      	sub	sp, #88	; 0x58
 801c33e:	4614      	mov	r4, r2
 801c340:	461d      	mov	r5, r3
 801c342:	da08      	bge.n	801c356 <__swhatbuf_r+0x24>
 801c344:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801c348:	2200      	movs	r2, #0
 801c34a:	602a      	str	r2, [r5, #0]
 801c34c:	061a      	lsls	r2, r3, #24
 801c34e:	d410      	bmi.n	801c372 <__swhatbuf_r+0x40>
 801c350:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801c354:	e00e      	b.n	801c374 <__swhatbuf_r+0x42>
 801c356:	466a      	mov	r2, sp
 801c358:	f000 f8c2 	bl	801c4e0 <_fstat_r>
 801c35c:	2800      	cmp	r0, #0
 801c35e:	dbf1      	blt.n	801c344 <__swhatbuf_r+0x12>
 801c360:	9a01      	ldr	r2, [sp, #4]
 801c362:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801c366:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801c36a:	425a      	negs	r2, r3
 801c36c:	415a      	adcs	r2, r3
 801c36e:	602a      	str	r2, [r5, #0]
 801c370:	e7ee      	b.n	801c350 <__swhatbuf_r+0x1e>
 801c372:	2340      	movs	r3, #64	; 0x40
 801c374:	2000      	movs	r0, #0
 801c376:	6023      	str	r3, [r4, #0]
 801c378:	b016      	add	sp, #88	; 0x58
 801c37a:	bd70      	pop	{r4, r5, r6, pc}

0801c37c <__smakebuf_r>:
 801c37c:	898b      	ldrh	r3, [r1, #12]
 801c37e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801c380:	079d      	lsls	r5, r3, #30
 801c382:	4606      	mov	r6, r0
 801c384:	460c      	mov	r4, r1
 801c386:	d507      	bpl.n	801c398 <__smakebuf_r+0x1c>
 801c388:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801c38c:	6023      	str	r3, [r4, #0]
 801c38e:	6123      	str	r3, [r4, #16]
 801c390:	2301      	movs	r3, #1
 801c392:	6163      	str	r3, [r4, #20]
 801c394:	b002      	add	sp, #8
 801c396:	bd70      	pop	{r4, r5, r6, pc}
 801c398:	ab01      	add	r3, sp, #4
 801c39a:	466a      	mov	r2, sp
 801c39c:	f7ff ffc9 	bl	801c332 <__swhatbuf_r>
 801c3a0:	9900      	ldr	r1, [sp, #0]
 801c3a2:	4605      	mov	r5, r0
 801c3a4:	4630      	mov	r0, r6
 801c3a6:	f7ff f931 	bl	801b60c <_malloc_r>
 801c3aa:	b948      	cbnz	r0, 801c3c0 <__smakebuf_r+0x44>
 801c3ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c3b0:	059a      	lsls	r2, r3, #22
 801c3b2:	d4ef      	bmi.n	801c394 <__smakebuf_r+0x18>
 801c3b4:	f023 0303 	bic.w	r3, r3, #3
 801c3b8:	f043 0302 	orr.w	r3, r3, #2
 801c3bc:	81a3      	strh	r3, [r4, #12]
 801c3be:	e7e3      	b.n	801c388 <__smakebuf_r+0xc>
 801c3c0:	4b0d      	ldr	r3, [pc, #52]	; (801c3f8 <__smakebuf_r+0x7c>)
 801c3c2:	62b3      	str	r3, [r6, #40]	; 0x28
 801c3c4:	89a3      	ldrh	r3, [r4, #12]
 801c3c6:	6020      	str	r0, [r4, #0]
 801c3c8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801c3cc:	81a3      	strh	r3, [r4, #12]
 801c3ce:	9b00      	ldr	r3, [sp, #0]
 801c3d0:	6163      	str	r3, [r4, #20]
 801c3d2:	9b01      	ldr	r3, [sp, #4]
 801c3d4:	6120      	str	r0, [r4, #16]
 801c3d6:	b15b      	cbz	r3, 801c3f0 <__smakebuf_r+0x74>
 801c3d8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c3dc:	4630      	mov	r0, r6
 801c3de:	f000 f891 	bl	801c504 <_isatty_r>
 801c3e2:	b128      	cbz	r0, 801c3f0 <__smakebuf_r+0x74>
 801c3e4:	89a3      	ldrh	r3, [r4, #12]
 801c3e6:	f023 0303 	bic.w	r3, r3, #3
 801c3ea:	f043 0301 	orr.w	r3, r3, #1
 801c3ee:	81a3      	strh	r3, [r4, #12]
 801c3f0:	89a0      	ldrh	r0, [r4, #12]
 801c3f2:	4305      	orrs	r5, r0
 801c3f4:	81a5      	strh	r5, [r4, #12]
 801c3f6:	e7cd      	b.n	801c394 <__smakebuf_r+0x18>
 801c3f8:	0801c189 	.word	0x0801c189

0801c3fc <__malloc_lock>:
 801c3fc:	4801      	ldr	r0, [pc, #4]	; (801c404 <__malloc_lock+0x8>)
 801c3fe:	f7ff bf95 	b.w	801c32c <__retarget_lock_acquire_recursive>
 801c402:	bf00      	nop
 801c404:	2000a6c9 	.word	0x2000a6c9

0801c408 <__malloc_unlock>:
 801c408:	4801      	ldr	r0, [pc, #4]	; (801c410 <__malloc_unlock+0x8>)
 801c40a:	f7ff bf91 	b.w	801c330 <__retarget_lock_release_recursive>
 801c40e:	bf00      	nop
 801c410:	2000a6c9 	.word	0x2000a6c9

0801c414 <__sread>:
 801c414:	b510      	push	{r4, lr}
 801c416:	460c      	mov	r4, r1
 801c418:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c41c:	f000 f894 	bl	801c548 <_read_r>
 801c420:	2800      	cmp	r0, #0
 801c422:	bfab      	itete	ge
 801c424:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801c426:	89a3      	ldrhlt	r3, [r4, #12]
 801c428:	181b      	addge	r3, r3, r0
 801c42a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801c42e:	bfac      	ite	ge
 801c430:	6563      	strge	r3, [r4, #84]	; 0x54
 801c432:	81a3      	strhlt	r3, [r4, #12]
 801c434:	bd10      	pop	{r4, pc}

0801c436 <__swrite>:
 801c436:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c43a:	461f      	mov	r7, r3
 801c43c:	898b      	ldrh	r3, [r1, #12]
 801c43e:	05db      	lsls	r3, r3, #23
 801c440:	4605      	mov	r5, r0
 801c442:	460c      	mov	r4, r1
 801c444:	4616      	mov	r6, r2
 801c446:	d505      	bpl.n	801c454 <__swrite+0x1e>
 801c448:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c44c:	2302      	movs	r3, #2
 801c44e:	2200      	movs	r2, #0
 801c450:	f000 f868 	bl	801c524 <_lseek_r>
 801c454:	89a3      	ldrh	r3, [r4, #12]
 801c456:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c45a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801c45e:	81a3      	strh	r3, [r4, #12]
 801c460:	4632      	mov	r2, r6
 801c462:	463b      	mov	r3, r7
 801c464:	4628      	mov	r0, r5
 801c466:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801c46a:	f000 b817 	b.w	801c49c <_write_r>

0801c46e <__sseek>:
 801c46e:	b510      	push	{r4, lr}
 801c470:	460c      	mov	r4, r1
 801c472:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c476:	f000 f855 	bl	801c524 <_lseek_r>
 801c47a:	1c43      	adds	r3, r0, #1
 801c47c:	89a3      	ldrh	r3, [r4, #12]
 801c47e:	bf15      	itete	ne
 801c480:	6560      	strne	r0, [r4, #84]	; 0x54
 801c482:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801c486:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801c48a:	81a3      	strheq	r3, [r4, #12]
 801c48c:	bf18      	it	ne
 801c48e:	81a3      	strhne	r3, [r4, #12]
 801c490:	bd10      	pop	{r4, pc}

0801c492 <__sclose>:
 801c492:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c496:	f000 b813 	b.w	801c4c0 <_close_r>
	...

0801c49c <_write_r>:
 801c49c:	b538      	push	{r3, r4, r5, lr}
 801c49e:	4d07      	ldr	r5, [pc, #28]	; (801c4bc <_write_r+0x20>)
 801c4a0:	4604      	mov	r4, r0
 801c4a2:	4608      	mov	r0, r1
 801c4a4:	4611      	mov	r1, r2
 801c4a6:	2200      	movs	r2, #0
 801c4a8:	602a      	str	r2, [r5, #0]
 801c4aa:	461a      	mov	r2, r3
 801c4ac:	f7e5 fd6a 	bl	8001f84 <_write>
 801c4b0:	1c43      	adds	r3, r0, #1
 801c4b2:	d102      	bne.n	801c4ba <_write_r+0x1e>
 801c4b4:	682b      	ldr	r3, [r5, #0]
 801c4b6:	b103      	cbz	r3, 801c4ba <_write_r+0x1e>
 801c4b8:	6023      	str	r3, [r4, #0]
 801c4ba:	bd38      	pop	{r3, r4, r5, pc}
 801c4bc:	2000a6cc 	.word	0x2000a6cc

0801c4c0 <_close_r>:
 801c4c0:	b538      	push	{r3, r4, r5, lr}
 801c4c2:	4d06      	ldr	r5, [pc, #24]	; (801c4dc <_close_r+0x1c>)
 801c4c4:	2300      	movs	r3, #0
 801c4c6:	4604      	mov	r4, r0
 801c4c8:	4608      	mov	r0, r1
 801c4ca:	602b      	str	r3, [r5, #0]
 801c4cc:	f7e5 fd68 	bl	8001fa0 <_close>
 801c4d0:	1c43      	adds	r3, r0, #1
 801c4d2:	d102      	bne.n	801c4da <_close_r+0x1a>
 801c4d4:	682b      	ldr	r3, [r5, #0]
 801c4d6:	b103      	cbz	r3, 801c4da <_close_r+0x1a>
 801c4d8:	6023      	str	r3, [r4, #0]
 801c4da:	bd38      	pop	{r3, r4, r5, pc}
 801c4dc:	2000a6cc 	.word	0x2000a6cc

0801c4e0 <_fstat_r>:
 801c4e0:	b538      	push	{r3, r4, r5, lr}
 801c4e2:	4d07      	ldr	r5, [pc, #28]	; (801c500 <_fstat_r+0x20>)
 801c4e4:	2300      	movs	r3, #0
 801c4e6:	4604      	mov	r4, r0
 801c4e8:	4608      	mov	r0, r1
 801c4ea:	4611      	mov	r1, r2
 801c4ec:	602b      	str	r3, [r5, #0]
 801c4ee:	f7e5 fd5a 	bl	8001fa6 <_fstat>
 801c4f2:	1c43      	adds	r3, r0, #1
 801c4f4:	d102      	bne.n	801c4fc <_fstat_r+0x1c>
 801c4f6:	682b      	ldr	r3, [r5, #0]
 801c4f8:	b103      	cbz	r3, 801c4fc <_fstat_r+0x1c>
 801c4fa:	6023      	str	r3, [r4, #0]
 801c4fc:	bd38      	pop	{r3, r4, r5, pc}
 801c4fe:	bf00      	nop
 801c500:	2000a6cc 	.word	0x2000a6cc

0801c504 <_isatty_r>:
 801c504:	b538      	push	{r3, r4, r5, lr}
 801c506:	4d06      	ldr	r5, [pc, #24]	; (801c520 <_isatty_r+0x1c>)
 801c508:	2300      	movs	r3, #0
 801c50a:	4604      	mov	r4, r0
 801c50c:	4608      	mov	r0, r1
 801c50e:	602b      	str	r3, [r5, #0]
 801c510:	f7e5 fd4e 	bl	8001fb0 <_isatty>
 801c514:	1c43      	adds	r3, r0, #1
 801c516:	d102      	bne.n	801c51e <_isatty_r+0x1a>
 801c518:	682b      	ldr	r3, [r5, #0]
 801c51a:	b103      	cbz	r3, 801c51e <_isatty_r+0x1a>
 801c51c:	6023      	str	r3, [r4, #0]
 801c51e:	bd38      	pop	{r3, r4, r5, pc}
 801c520:	2000a6cc 	.word	0x2000a6cc

0801c524 <_lseek_r>:
 801c524:	b538      	push	{r3, r4, r5, lr}
 801c526:	4d07      	ldr	r5, [pc, #28]	; (801c544 <_lseek_r+0x20>)
 801c528:	4604      	mov	r4, r0
 801c52a:	4608      	mov	r0, r1
 801c52c:	4611      	mov	r1, r2
 801c52e:	2200      	movs	r2, #0
 801c530:	602a      	str	r2, [r5, #0]
 801c532:	461a      	mov	r2, r3
 801c534:	f7e5 fd3e 	bl	8001fb4 <_lseek>
 801c538:	1c43      	adds	r3, r0, #1
 801c53a:	d102      	bne.n	801c542 <_lseek_r+0x1e>
 801c53c:	682b      	ldr	r3, [r5, #0]
 801c53e:	b103      	cbz	r3, 801c542 <_lseek_r+0x1e>
 801c540:	6023      	str	r3, [r4, #0]
 801c542:	bd38      	pop	{r3, r4, r5, pc}
 801c544:	2000a6cc 	.word	0x2000a6cc

0801c548 <_read_r>:
 801c548:	b538      	push	{r3, r4, r5, lr}
 801c54a:	4d07      	ldr	r5, [pc, #28]	; (801c568 <_read_r+0x20>)
 801c54c:	4604      	mov	r4, r0
 801c54e:	4608      	mov	r0, r1
 801c550:	4611      	mov	r1, r2
 801c552:	2200      	movs	r2, #0
 801c554:	602a      	str	r2, [r5, #0]
 801c556:	461a      	mov	r2, r3
 801c558:	f7e5 fd06 	bl	8001f68 <_read>
 801c55c:	1c43      	adds	r3, r0, #1
 801c55e:	d102      	bne.n	801c566 <_read_r+0x1e>
 801c560:	682b      	ldr	r3, [r5, #0]
 801c562:	b103      	cbz	r3, 801c566 <_read_r+0x1e>
 801c564:	6023      	str	r3, [r4, #0]
 801c566:	bd38      	pop	{r3, r4, r5, pc}
 801c568:	2000a6cc 	.word	0x2000a6cc

0801c56c <_init>:
 801c56c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c56e:	bf00      	nop
 801c570:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801c572:	bc08      	pop	{r3}
 801c574:	469e      	mov	lr, r3
 801c576:	4770      	bx	lr

0801c578 <_fini>:
 801c578:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c57a:	bf00      	nop
 801c57c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801c57e:	bc08      	pop	{r3}
 801c580:	469e      	mov	lr, r3
 801c582:	4770      	bx	lr
